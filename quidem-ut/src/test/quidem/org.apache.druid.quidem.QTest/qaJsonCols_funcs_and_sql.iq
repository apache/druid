!set useApproximateCountDistinct false
!use druidtest://?componentSupplier=StandardComponentSupplier&datasets=sql/src/test/quidem/qatests/qaJsonCols/funcs_and_sql
!set outputformat mysql
SELECT count(*) cnt
FROM test_json_cols;
+-----+
| cnt |
+-----+
|   4 |
+-----+
(1 row)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_datatype_comp_ops TEST_ID: A001 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT (c1 = c1) c
FROM test_json_cols;
+------+
| c    |
+------+
| true |
| true |
| true |
| true |
+------+
(4 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_datatype_comp_ops TEST_ID: A002 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT count(*) c
FROM test_json_cols
WHERE c1 = c1;
+---+
| c |
+---+
| 4 |
+---+
(1 row)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_datatype_comp_ops TEST_ID: A003 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT (c1 <> c1) c
FROM test_json_cols;
+-------+
| c     |
+-------+
| false |
| false |
| false |
| false |
+-------+
(4 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_datatype_comp_ops TEST_ID: A004 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT count(*) c
FROM test_json_cols
WHERE c1 <> c1;
+---+
| c |
+---+
| 0 |
+---+
(1 row)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_datatype_comp_ops TEST_ID: A005 TYPE: NEGATIVE TEST
#-------------------------------------------------------------------------
SELECT (c1 > c2) c
FROM test_json_cols;
Cannot apply
!error

#-------------------------------------------------------------------------
# TESTCASE: test_datatype_comp_ops TEST_ID: A006 TYPE: NEGATIVE TEST
#-------------------------------------------------------------------------
SELECT count(*) c
FROM test_json_cols
WHERE c1 > c2;
Cannot apply
!error

#-------------------------------------------------------------------------
# TESTCASE: test_datatype_comp_ops TEST_ID: A007 TYPE: NEGATIVE TEST
#-------------------------------------------------------------------------
SELECT (c1 >= c2) c
FROM test_json_cols;
Cannot apply
!error

#-------------------------------------------------------------------------
# TESTCASE: test_datatype_comp_ops TEST_ID: A008 TYPE: NEGATIVE TEST
#-------------------------------------------------------------------------
SELECT count(*) c
FROM test_json_cols
WHERE c1 >= c2;
Cannot apply
!error

#-------------------------------------------------------------------------
# TESTCASE: test_datatype_comp_ops TEST_ID: A009 TYPE: NEGATIVE TEST
#-------------------------------------------------------------------------
SELECT (c1 < c2) c
FROM test_json_cols;
Cannot apply
!error

#-------------------------------------------------------------------------
# TESTCASE: test_datatype_comp_ops TEST_ID: A010 TYPE: NEGATIVE TEST
#-------------------------------------------------------------------------
SELECT count(*) c
FROM test_json_cols
WHERE c1 < c2;
Cannot apply
!error

#-------------------------------------------------------------------------
# TESTCASE: test_datatype_comp_ops TEST_ID: A011 TYPE: NEGATIVE TEST
#-------------------------------------------------------------------------
SELECT (c1 <= c2) c
FROM test_json_cols;
Cannot apply
!error

#-------------------------------------------------------------------------
# TESTCASE: test_datatype_comp_ops TEST_ID: A012 TYPE: NEGATIVE TEST
#-------------------------------------------------------------------------
SELECT count(*) c
FROM test_json_cols
WHERE c1 <= c2;
Cannot apply
!error

#-------------------------------------------------------------------------
# TESTCASE: test_datatype_comp_ops TEST_ID: A013 TYPE: NEGATIVE TEST
#-------------------------------------------------------------------------
SELECT (c1 BETWEEN c1 AND c2) c
FROM test_json_cols;
Cannot apply
!error

#-------------------------------------------------------------------------
# TESTCASE: test_datatype_comp_ops TEST_ID: A014 TYPE: NEGATIVE TEST
#-------------------------------------------------------------------------
SELECT count(*) c
FROM test_json_cols
WHERE c1 BETWEEN c1 AND c2;
Cannot apply
!error

#-------------------------------------------------------------------------
# TESTCASE: test_datatype_comp_ops TEST_ID: A015 TYPE: NEGATIVE TEST
#-------------------------------------------------------------------------
SELECT (c1 NOT BETWEEN c1 AND c2) c
FROM test_json_cols;
Cannot apply
!error

#-------------------------------------------------------------------------
# TESTCASE: test_datatype_comp_ops TEST_ID: A016 TYPE: NEGATIVE TEST
#-------------------------------------------------------------------------
SELECT count(*) c
FROM test_json_cols
WHERE c1 NOT BETWEEN c1 AND c2;
Cannot apply
!error

#-------------------------------------------------------------------------
# TESTCASE: test_datatype_comp_ops TEST_ID: A017 TYPE: NEGATIVE TEST
#-------------------------------------------------------------------------
SELECT (c1 like c2) c
FROM test_json_cols;
Cannot apply
!error

#-------------------------------------------------------------------------
# TESTCASE: test_datatype_comp_ops TEST_ID: A018 TYPE: NEGATIVE TEST
#-------------------------------------------------------------------------
SELECT count(*) c
FROM test_json_cols
WHERE c1 like c2;
Cannot apply
!error

#-------------------------------------------------------------------------
# TESTCASE: test_datatype_comp_ops TEST_ID: A019 TYPE: NEGATIVE TEST
#-------------------------------------------------------------------------
SELECT (c1 not like c2) c
FROM test_json_cols;
Cannot apply
!error

#-------------------------------------------------------------------------
# TESTCASE: test_datatype_comp_ops TEST_ID: A020 TYPE: NEGATIVE TEST
#-------------------------------------------------------------------------
SELECT count(*) c
FROM test_json_cols
WHERE c1 not like c2;
Cannot apply
!error

#-------------------------------------------------------------------------
# TESTCASE: test_datatype_comp_ops TEST_ID: A021 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT (c1 IS NULL) c
FROM test_json_cols;
+-------+
| c     |
+-------+
| false |
| false |
| false |
| false |
+-------+
(4 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_datatype_comp_ops TEST_ID: A022 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT count(*) c
FROM test_json_cols
WHERE c1 IS NULL;
+---+
| c |
+---+
| 0 |
+---+
(1 row)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_datatype_comp_ops TEST_ID: A023 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT (c1 IS NOT NULL) c
FROM test_json_cols;
+------+
| c    |
+------+
| true |
| true |
| true |
| true |
+------+
(4 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_datatype_comp_ops TEST_ID: A024 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT count(*) c
FROM test_json_cols
WHERE c1 IS NOT NULL;
+---+
| c |
+---+
| 4 |
+---+
(1 row)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_datatype_comp_ops TEST_ID: A025 TYPE: NEGATIVE TEST
#-------------------------------------------------------------------------
SELECT (c1 IS TRUE) c
FROM test_json_cols;
Cannot apply
!error

#-------------------------------------------------------------------------
# TESTCASE: test_datatype_comp_ops TEST_ID: A026 TYPE: NEGATIVE TEST
#-------------------------------------------------------------------------
SELECT count(*) c
FROM test_json_cols
WHERE c1 IS TRUE;
Cannot apply
!error

#-------------------------------------------------------------------------
# TESTCASE: test_datatype_comp_ops TEST_ID: A027 TYPE: NEGATIVE TEST
#-------------------------------------------------------------------------
SELECT (c1 IS NOT TRUE) c
FROM test_json_cols;
Cannot apply
!error

#-------------------------------------------------------------------------
# TESTCASE: test_datatype_comp_ops TEST_ID: A028 TYPE: NEGATIVE TEST
#-------------------------------------------------------------------------
SELECT count(*) c
FROM test_json_cols
WHERE c1 IS NOT TRUE;
Cannot apply
!error

#-------------------------------------------------------------------------
# TESTCASE: test_datatype_comp_ops TEST_ID: A029 TYPE: NEGATIVE TEST
#-------------------------------------------------------------------------
SELECT (c1 IS FALSE) c
FROM test_json_cols;
Cannot apply
!error

#-------------------------------------------------------------------------
# TESTCASE: test_datatype_comp_ops TEST_ID: A030 TYPE: NEGATIVE TEST
#-------------------------------------------------------------------------
SELECT count(*) c
FROM test_json_cols
WHERE c1 IS FALSE;
Cannot apply
!error

#-------------------------------------------------------------------------
# TESTCASE: test_datatype_comp_ops TEST_ID: A031 TYPE: NEGATIVE TEST
#-------------------------------------------------------------------------
SELECT (c1 IS NOT FALSE) c
FROM test_json_cols;
Cannot apply
!error

#-------------------------------------------------------------------------
# TESTCASE: test_datatype_comp_ops TEST_ID: A032 TYPE: NEGATIVE TEST
#-------------------------------------------------------------------------
SELECT count(*) c
FROM test_json_cols
WHERE c1 IS NOT FALSE;
Cannot apply
!error

#-------------------------------------------------------------------------
# TESTCASE: test_datatype_comp_ops TEST_ID: A033 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT (c1 IN (json_object(KEY 'a1' VALUE 'A', KEY 'a2' VALUE 1))) c
FROM test_json_cols;
+---+
| c |
+---+
|   |
|   |
|   |
|   |
+---+
(4 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_datatype_comp_ops TEST_ID: A034 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT count(*) c
FROM test_json_cols
WHERE c1 IN (json_object(KEY 'a1' VALUE 'A', KEY 'a2' VALUE 1));
+---+
| c |
+---+
| 0 |
+---+
(1 row)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_datatype_comp_ops TEST_ID: A035 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT (c1 NOT IN (json_object(KEY 'a1' VALUE 'A', KEY 'a2' VALUE 1))) c
FROM test_json_cols;
+---+
| c |
+---+
|   |
|   |
|   |
|   |
+---+
(4 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_datatype_comp_ops TEST_ID: A036 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT count(*) c
FROM test_json_cols
WHERE c1 NOT IN (json_object(KEY 'a1' VALUE 'A', KEY 'a2' VALUE 1));
+---+
| c |
+---+
| 4 |
+---+
(1 row)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_datatype_comp_ops TEST_ID: A037 TYPE: NEGATIVE TEST
#-------------------------------------------------------------------------
SELECT (c1 IN
          (SELECT c1
           FROM test_json_cols)) c
FROM test_json_cols;
QueryInterruptedException
!error

#-------------------------------------------------------------------------
# TESTCASE: test_datatype_comp_ops TEST_ID: A038 TYPE: NEGATIVE TEST
#-------------------------------------------------------------------------
SELECT count(*) c
FROM test_json_cols
WHERE c1 IN
    (SELECT c1
     FROM test_json_cols);
QueryInterruptedException
!error

#-------------------------------------------------------------------------
# TESTCASE: test_datatype_comp_ops TEST_ID: A039 TYPE: NEGATIVE TEST
#-------------------------------------------------------------------------
SELECT (c1 NOT IN
          (SELECT c1
           FROM test_json_cols)) c
FROM test_json_cols;
QueryInterruptedException
!error

#-------------------------------------------------------------------------
# TESTCASE: test_datatype_comp_ops TEST_ID: A040 TYPE: NEGATIVE TEST
#-------------------------------------------------------------------------
SELECT count(*) c
FROM test_json_cols
WHERE c1 NOT IN
    (SELECT c1
     FROM test_json_cols);
QueryInterruptedException
!error

#-------------------------------------------------------------------------
# TESTCASE: test_datatype_comp_ops TEST_ID: A041 TYPE: NEGATIVE TEST
#-------------------------------------------------------------------------
SELECT (c1
        AND c2) c
FROM test_json_cols;
Cannot apply
!error

#-------------------------------------------------------------------------
# TESTCASE: test_datatype_comp_ops TEST_ID: A042 TYPE: NEGATIVE TEST
#-------------------------------------------------------------------------
SELECT count(*) c
FROM test_json_cols
WHERE c1
  AND c2;
Cannot apply
!error

#-------------------------------------------------------------------------
# TESTCASE: test_datatype_comp_ops TEST_ID: A043 TYPE: NEGATIVE TEST
#-------------------------------------------------------------------------
SELECT (c1
        OR c2) c
FROM test_json_cols;
Cannot apply
!error

#-------------------------------------------------------------------------
# TESTCASE: test_datatype_comp_ops TEST_ID: A044 TYPE: NEGATIVE TEST
#-------------------------------------------------------------------------
SELECT count(*) c
FROM test_json_cols
WHERE c1
  OR c2;
Cannot apply
!error

#-------------------------------------------------------------------------
# TESTCASE: test_datatype_comp_ops TEST_ID: A045 TYPE: NEGATIVE TEST
#-------------------------------------------------------------------------
SELECT (NOT c1) c
FROM test_json_cols;
Cannot apply
!error

#-------------------------------------------------------------------------
# TESTCASE: test_datatype_comp_ops TEST_ID: A046 TYPE: NEGATIVE TEST
#-------------------------------------------------------------------------
SELECT count(*) c
FROM test_json_cols
WHERE NOT c1;
Cannot apply
!error

#-------------------------------------------------------------------------
# TESTCASE: test_datatype_sql TEST_ID: A001 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT count(*) c
FROM test_json_cols
WHERE c1 IS NULL;
+---+
| c |
+---+
| 0 |
+---+
(1 row)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_datatype_sql TEST_ID: A002 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT count(*) c
FROM test_json_cols
WHERE c1 IS NOT NULL;
+---+
| c |
+---+
| 4 |
+---+
(1 row)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_datatype_sql TEST_ID: A003 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT count(*) c
FROM
  (SELECT c1
   FROM test_json_cols);
+---+
| c |
+---+
| 4 |
+---+
(1 row)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_datatype_sql TEST_ID: A004 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT count(*) c
FROM
  (SELECT ALL c1
   FROM test_json_cols);
+---+
| c |
+---+
| 4 |
+---+
(1 row)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_datatype_sql TEST_ID: A005 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT count(*) c
FROM
  (SELECT *
   FROM test_json_cols);
+---+
| c |
+---+
| 4 |
+---+
(1 row)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_datatype_sql TEST_ID: A006 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT count(*) c
FROM
  (SELECT ALL *
   FROM test_json_cols);
+---+
| c |
+---+
| 4 |
+---+
(1 row)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_datatype_sql TEST_ID: A007 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT count(c1) c
FROM test_json_cols;
+---+
| c |
+---+
| 4 |
+---+
(1 row)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_datatype_sql TEST_ID: A008 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT count(*) c
FROM
  (SELECT DISTINCT c1
   FROM test_json_cols);
+---+
| c |
+---+
| 2 |
+---+
(1 row)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_datatype_sql TEST_ID: A009 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT count(c1) c
FROM test_json_cols
GROUP BY c1;
+---+
| c |
+---+
| 2 |
| 2 |
+---+
(2 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_datatype_sql TEST_ID: A010 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT count(c1) c
FROM test_json_cols
GROUP BY c1
HAVING count(c1) >= 2;
+---+
| c |
+---+
| 2 |
| 2 |
+---+
(2 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_datatype_sql TEST_ID: A011 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT *
FROM test_json_cols
WHERE c1 = c2;
+--------+-------+-----------+-------------+--------+--------+-------------+---------------+--------------------+----------------------+----+----+-------+---------+--------+------------+--------------+---------+---------+-------------+---------------+--------+------------+--------------+---------+---------+-------+-----+
| __time | s_str | s_num_int | s_num_float | s_bool | s_null | c_empty_obj | c_empty_array | c_empty_obj_nested | c_empty_array_nested | c1 | c2 | t_obj | t_array | t_str1 | t_num_int1 | t_num_float1 | t_bool1 | t_null1 | t_empty_obj | t_empty_array | t_str2 | t_num_int2 | t_num_float2 | t_bool2 | t_null2 | t_new | cnt |
+--------+-------+-----------+-------------+--------+--------+-------------+---------------+--------------------+----------------------+----+----+-------+---------+--------+------------+--------------+---------+---------+-------------+---------------+--------+------------+--------------+---------+---------+-------+-----+
+--------+-------+-----------+-------------+--------+--------+-------------+---------------+--------------------+----------------------+----+----+-------+---------+--------+------------+--------------+---------+---------+-------------+---------------+--------+------------+--------------+---------+---------+-------+-----+
(0 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_datatype_sql TEST_ID: A012 TYPE: NEGATIVE TEST
#-------------------------------------------------------------------------
SELECT *
FROM test_json_cols t1
INNER JOIN test_json_cols t2 ON t1.c1=t2.c1;
Cannot join
!error

#-------------------------------------------------------------------------
# TESTCASE: test_datatype_sql TEST_ID: A013 TYPE: NEGATIVE TEST
#-------------------------------------------------------------------------
SELECT *
FROM test_json_cols t1
LEFT JOIN test_json_cols t2 ON t1.c1=t2.c1;
Cannot join
!error

#-------------------------------------------------------------------------
# TESTCASE: test_datatype_sql TEST_ID: A014 TYPE: NEGATIVE TEST
#-------------------------------------------------------------------------
SELECT *
FROM test_json_cols t1,
     test_json_cols t2
WHERE t1.c1=t2.c1;
Cannot join
!error

#-------------------------------------------------------------------------
# TESTCASE: test_datatype_sql TEST_ID: A015 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT *
FROM test_json_cols
ORDER BY __time;

| __time                  | s_str | s_num_int | s_num_float | s_bool | s_null | c_empty_obj | c_empty_array | c_empty_obj_nested          | c_empty_array_nested | c| c| t_obj | t_array | t_str1 | t_num_int1 | t_num_float1 | t_bool1 | t_null1 | t_empty_obj | t_empty_array | t_str2 | t_num_int2 | t_num_float2 | t_bool2 | t_null2 | t_new | cnt |
+-------------------------+-------+-----------+-------------+--------+--------+-------------+---------------+-----------------------------+----------------------+------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+-------+---------+--------+------------+--------------+---------+---------+-------------+---------------+--------+------------+--------------+---------+---------+-------+-----+
| 2022-01-01 00:00:00.000 | A     |         1 |         0.1 |      1 |        | {}          | []            | {"o1":{},"o2":[],"o3":null} | [{},[],null]         | {"a_str":"A","a_num_int":1,"a_num_float":0.1,"a_bool":true,"a_null":null,"a_empty_obj":{},"a_empty_array":[],"a_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"a_empty_array_nested":[{},[],null],"a_obj":{"a_str":"A","a_num_int":1,"a_num_float":0.1,"a_bool":true,"a_null":null,"a_empty_obj":{},"a_empty_array":[],"a_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"a_empty_array_nested":[{},[],null],"a_obj":{"a_str":"A","a_num_int":1,"a_num_float":0.1,"a_bool":true,"a_null":null,"a_empty_obj":{},"a_empty_array":[],"a_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"a_empty_array_nested":[{},[],null]},"a_array":[{"a_str":"A","a_num_int":1,"a_num_float":0.1,"a_bool":true,"a_null":null,"a_empty_obj":{},"a_empty_array":[],"a_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"a_empty_array_nested":[{},[],null]},{"a_str":"A","a_num_int":1,"a_num_float":0.1,"a_bool":true,"a_null":null,"a_empty_obj":{},"a_empty_array":[],"a_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"a_empty_array_nested":[{},[],null]}]},"a_array":[{"a_str":"A","a_num_int":1,"a_num_float":0.1,"a_bool":true,"a_null":null,"a_empty_obj":{},"a_empty_array":[],"a_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"a_empty_array_nested":[{},[],null],"a_obj":{"a_str":"A","a_num_int":1,"a_num_float":0.1,"a_bool":true,"a_null":null,"a_empty_obj":{},"a_empty_array":[],"a_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"a_empty_array_nested":[{},[],null]},"a_array":[{"a_str":"A","a_num_int":1,"a_num_float":0.1,"a_bool":true,"a_null":null,"a_empty_obj":{},"a_empty_array":[],"a_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"a_empty_array_nested":[{},[],null]},{"a_str":"A","a_num_int":1,"a_num_float":0.1,"a_bool":true,"a_null":null,"a_empty_obj":{},"a_empty_array":[],"a_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"a_empty_array_nested":[{},[],null]}]},{"a_str":"A","a_num_int":1,"a_num_float":0.1,"a_bool":true,"a_null":null,"a_empty_obj":{},"a_empty_array":[],"a_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"a_empty_array_nested":[{},[],null],"a_obj":{"a_str":"A","a_num_int":1,"a_num_float":0.1,"a_bool":true,"a_null":null,"a_empty_obj":{},"a_empty_array":[],"a_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"a_empty_array_nested":[{},[],null]},"a_array":[{"a_str":"A","a_num_int":1,"a_num_float":0.1,"a_bool":true,"a_null":null,"a_empty_obj":{},"a_empty_array":[],"a_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"a_empty_array_nested":[{},[],null]},{"a_str":"A","a_num_int":1,"a_num_float":0.1,"a_bool":true,"a_null":null,"a_empty_obj":{},"a_empty_array":[],"a_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"a_empty_array_nested":[{},[],null]}]}]} | {"a_str":"A","a_num_int":1,"a_num_float":0.1,"a_bool":true,"a_null":null,"a_empty_obj":{},"a_empty_array":[],"a_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"a_empty_array_nested":[{},[],null],"a_obj":{"a_str":"A","a_num_int":1,"a_num_float":0.1,"a_bool":true,"a_null":null,"a_empty_obj":{},"a_empty_array":[],"a_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"a_empty_array_nested":[{},[],null],"a_obj":{"a_str":"A","a_num_int":1,"a_num_float":0.1,"a_bool":true,"a_null":null,"a_empty_obj":{},"a_empty_array":[],"a_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"a_empty_array_nested":[{},[],null]},"a_array":[{"a_str":"A","a_num_int":1,"a_num_float":0.1,"a_bool":true,"a_null":null,"a_empty_obj":{},"a_empty_array":[],"a_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"a_empty_array_nested":[{},[],null]},{"a_str":"A","a_num_int":1,"a_num_float":0.1,"a_bool":true,"a_null":null,"a_empty_obj":{},"a_empty_array":[],"a_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"a_empty_array_nested":[{},[],null]}]},"a_array":[{"a_str":"A","a_num_int":1,"a_num_float":0.1,"a_bool":true,"a_null":null,"a_empty_obj":{},"a_empty_array":[],"a_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"a_empty_array_nested":[{},[],null],"a_obj":{"a_str":"A","a_num_int":1,"a_num_float":0.1,"a_bool":true,"a_null":null,"a_empty_obj":{},"a_empty_array":[],"a_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"a_empty_array_nested":[{},[],null]},"a_array":[{"a_str":"A","a_num_int":1,"a_num_float":0.1,"a_bool":true,"a_null":null,"a_empty_obj":{},"a_empty_array":[],"a_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"a_empty_array_nested":[{},[],null]},{"a_str":"A","a_num_int":1,"a_num_float":0.1,"a_bool":true,"a_null":null,"a_empty_obj":{},"a_empty_array":[],"a_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"a_empty_array_nested":[{},[],null]}]},{"a_str":"A","a_num_int":1,"a_num_float":0.1,"a_bool":true,"a_null":null,"a_empty_obj":{},"a_empty_array":[],"a_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"a_empty_array_nested":[{},[],null],"a_obj":{"a_str":"A","a_num_int":1,"a_num_float":0.1,"a_bool":true,"a_null":null,"a_empty_obj":{},"a_empty_array":[],"a_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"a_empty_array_nested":[{},[],null]},"a_array":[{"a_str":"A","a_num_int":1,"a_num_float":0.1,"a_bool":true,"a_null":null,"a_empty_obj":{},"a_empty_array":[],"a_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"a_empty_array_nested":[{},[],null]},{"a_str":"A","a_num_int":1,"a_num_float":0.1,"a_bool":true,"a_null":null,"a_empty_obj":{},"a_empty_array":[],"a_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"a_empty_array_nested":[{},[],null]}]}]} |       |         |        |            |              |         |         |             |               |        |            |              |         |         |       |   1 |
| 2022-01-01 00:00:00.000 | A     |         1 |         0.1 |      1 |        | {}          | []            | {"o1":{},"o2":[],"o3":null} | [{},[],null]         | {"a_str":"A","a_num_int":1,"a_num_float":0.1,"a_bool":true,"a_null":null,"a_empty_obj":{},"a_empty_array":[],"a_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"a_empty_array_nested":[{},[],null],"a_obj":{"a_str":"A","a_num_int":1,"a_num_float":0.1,"a_bool":true,"a_null":null,"a_empty_obj":{},"a_empty_array":[],"a_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"a_empty_array_nested":[{},[],null],"a_obj":{"a_str":"A","a_num_int":1,"a_num_float":0.1,"a_bool":true,"a_null":null,"a_empty_obj":{},"a_empty_array":[],"a_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"a_empty_array_nested":[{},[],null]},"a_array":[{"a_str":"A","a_num_int":1,"a_num_float":0.1,"a_bool":true,"a_null":null,"a_empty_obj":{},"a_empty_array":[],"a_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"a_empty_array_nested":[{},[],null]},{"a_str":"A","a_num_int":1,"a_num_float":0.1,"a_bool":true,"a_null":null,"a_empty_obj":{},"a_empty_array":[],"a_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"a_empty_array_nested":[{},[],null]}]},"a_array":[{"a_str":"A","a_num_int":1,"a_num_float":0.1,"a_bool":true,"a_null":null,"a_empty_obj":{},"a_empty_array":[],"a_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"a_empty_array_nested":[{},[],null],"a_obj":{"a_str":"A","a_num_int":1,"a_num_float":0.1,"a_bool":true,"a_null":null,"a_empty_obj":{},"a_empty_array":[],"a_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"a_empty_array_nested":[{},[],null]},"a_array":[{"a_str":"A","a_num_int":1,"a_num_float":0.1,"a_bool":true,"a_null":null,"a_empty_obj":{},"a_empty_array":[],"a_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"a_empty_array_nested":[{},[],null]},{"a_str":"A","a_num_int":1,"a_num_float":0.1,"a_bool":true,"a_null":null,"a_empty_obj":{},"a_empty_array":[],"a_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"a_empty_array_nested":[{},[],null]}]},{"a_str":"A","a_num_int":1,"a_num_float":0.1,"a_bool":true,"a_null":null,"a_empty_obj":{},"a_empty_array":[],"a_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"a_empty_array_nested":[{},[],null],"a_obj":{"a_str":"A","a_num_int":1,"a_num_float":0.1,"a_bool":true,"a_null":null,"a_empty_obj":{},"a_empty_array":[],"a_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"a_empty_array_nested":[{},[],null]},"a_array":[{"a_str":"A","a_num_int":1,"a_num_float":0.1,"a_bool":true,"a_null":null,"a_empty_obj":{},"a_empty_array":[],"a_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"a_empty_array_nested":[{},[],null]},{"a_str":"A","a_num_int":1,"a_num_float":0.1,"a_bool":true,"a_null":null,"a_empty_obj":{},"a_empty_array":[],"a_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"a_empty_array_nested":[{},[],null]}]}]} | {"a_str":"A","a_num_int":1,"a_num_float":0.1,"a_bool":true,"a_null":null,"a_empty_obj":{},"a_empty_array":[],"a_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"a_empty_array_nested":[{},[],null],"a_obj":{"a_str":"A","a_num_int":1,"a_num_float":0.1,"a_bool":true,"a_null":null,"a_empty_obj":{},"a_empty_array":[],"a_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"a_empty_array_nested":[{},[],null],"a_obj":{"a_str":"A","a_num_int":1,"a_num_float":0.1,"a_bool":true,"a_null":null,"a_empty_obj":{},"a_empty_array":[],"a_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"a_empty_array_nested":[{},[],null]},"a_array":[{"a_str":"A","a_num_int":1,"a_num_float":0.1,"a_bool":true,"a_null":null,"a_empty_obj":{},"a_empty_array":[],"a_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"a_empty_array_nested":[{},[],null]},{"a_str":"A","a_num_int":1,"a_num_float":0.1,"a_bool":true,"a_null":null,"a_empty_obj":{},"a_empty_array":[],"a_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"a_empty_array_nested":[{},[],null]}]},"a_array":[{"a_str":"A","a_num_int":1,"a_num_float":0.1,"a_bool":true,"a_null":null,"a_empty_obj":{},"a_empty_array":[],"a_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"a_empty_array_nested":[{},[],null],"a_obj":{"a_str":"A","a_num_int":1,"a_num_float":0.1,"a_bool":true,"a_null":null,"a_empty_obj":{},"a_empty_array":[],"a_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"a_empty_array_nested":[{},[],null]},"a_array":[{"a_str":"A","a_num_int":1,"a_num_float":0.1,"a_bool":true,"a_null":null,"a_empty_obj":{},"a_empty_array":[],"a_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"a_empty_array_nested":[{},[],null]},{"a_str":"A","a_num_int":1,"a_num_float":0.1,"a_bool":true,"a_null":null,"a_empty_obj":{},"a_empty_array":[],"a_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"a_empty_array_nested":[{},[],null]}]},{"a_str":"A","a_num_int":1,"a_num_float":0.1,"a_bool":true,"a_null":null,"a_empty_obj":{},"a_empty_array":[],"a_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"a_empty_array_nested":[{},[],null],"a_obj":{"a_str":"A","a_num_int":1,"a_num_float":0.1,"a_bool":true,"a_null":null,"a_empty_obj":{},"a_empty_array":[],"a_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"a_empty_array_nested":[{},[],null]},"a_array":[{"a_str":"A","a_num_int":1,"a_num_float":0.1,"a_bool":true,"a_null":null,"a_empty_obj":{},"a_empty_array":[],"a_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"a_empty_array_nested":[{},[],null]},{"a_str":"A","a_num_int":1,"a_num_float":0.1,"a_bool":true,"a_null":null,"a_empty_obj":{},"a_empty_array":[],"a_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"a_empty_array_nested":[{},[],null]}]}]} |       |         |        |            |              |         |         |             |               |        |            |              |         |         |       |   1 |
| 2022-02-01 00:00:00.000 |       |           |             |        |        |             |               |                             |                      | {"b_str":"A","b_num_int":1,"b_num_float":0.1,"b_bool":true,"b_null":null,"b_empty_obj":{},"b_empty_array":[],"b_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"b_empty_array_nested":[{},[],null],"b_obj":{"b_str":"A","b_num_int":1,"b_num_float":0.1,"b_bool":true,"b_null":null,"b_empty_obj":{},"b_empty_array":[],"b_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"b_empty_array_nested":[{},[],null],"b_obj":{"b_str":"A","b_num_int":1,"b_num_float":0.1,"b_bool":true,"b_null":null,"b_empty_obj":{},"b_empty_array":[],"b_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"b_empty_array_nested":[{},[],null]},"b_array":[{"b_str":"A","b_num_int":1,"b_num_float":0.1,"b_bool":true,"b_null":null,"b_empty_obj":{},"b_empty_array":[],"b_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"b_empty_array_nested":[{},[],null]},{"b_str":"A","b_num_int":1,"b_num_float":0.1,"b_bool":true,"b_null":null,"b_empty_obj":{},"b_empty_array":[],"b_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"b_empty_array_nested":[{},[],null]}]},"b_array":[{"b_str":"A","b_num_int":1,"b_num_float":0.1,"b_bool":true,"b_null":null,"b_empty_obj":{},"b_empty_array":[],"b_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"b_empty_array_nested":[{},[],null],"b_obj":{"b_str":"A","b_num_int":1,"b_num_float":0.1,"b_bool":true,"b_null":null,"b_empty_obj":{},"b_empty_array":[],"b_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"b_empty_array_nested":[{},[],null]},"b_array":[{"b_str":"A","b_num_int":1,"b_num_float":0.1,"b_bool":true,"b_null":null,"b_empty_obj":{},"b_empty_array":[],"b_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"b_empty_array_nested":[{},[],null]},{"b_str":"A","b_num_int":1,"b_num_float":0.1,"b_bool":true,"b_null":null,"b_empty_obj":{},"b_empty_array":[],"b_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"b_empty_array_nested":[{},[],null]}]},{"b_str":"A","b_num_int":1,"b_num_float":0.1,"b_bool":true,"b_null":null,"b_empty_obj":{},"b_empty_array":[],"b_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"b_empty_array_nested":[{},[],null],"b_obj":{"b_str":"A","b_num_int":1,"b_num_float":0.1,"b_bool":true,"b_null":null,"b_empty_obj":{},"b_empty_array":[],"b_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"b_empty_array_nested":[{},[],null]},"b_array":[{"b_str":"A","b_num_int":1,"b_num_float":0.1,"b_bool":true,"b_null":null,"b_empty_obj":{},"b_empty_array":[],"b_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"b_empty_array_nested":[{},[],null]},{"b_str":"A","b_num_int":1,"b_num_float":0.1,"b_bool":true,"b_null":null,"b_empty_obj":{},"b_empty_array":[],"b_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"b_empty_array_nested":[{},[],null]}]}]} | {"b_str":"A","b_num_int":1,"b_num_float":0.1,"b_bool":true,"b_null":null,"b_empty_obj":{},"b_empty_array":[],"b_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"b_empty_array_nested":[{},[],null],"b_obj":{"b_str":"A","b_num_int":1,"b_num_float":0.1,"b_bool":true,"b_null":null,"b_empty_obj":{},"b_empty_array":[],"b_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"b_empty_array_nested":[{},[],null],"b_obj":{"b_str":"A","b_num_int":1,"b_num_float":0.1,"b_bool":true,"b_null":null,"b_empty_obj":{},"b_empty_array":[],"b_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"b_empty_array_nested":[{},[],null]},"b_array":[{"b_str":"A","b_num_int":1,"b_num_float":0.1,"b_bool":true,"b_null":null,"b_empty_obj":{},"b_empty_array":[],"b_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"b_empty_array_nested":[{},[],null]},{"b_str":"A","b_num_int":1,"b_num_float":0.1,"b_bool":true,"b_null":null,"b_empty_obj":{},"b_empty_array":[],"b_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"b_empty_array_nested":[{},[],null]}]},"b_array":[{"b_str":"A","b_num_int":1,"b_num_float":0.1,"b_bool":true,"b_null":null,"b_empty_obj":{},"b_empty_array":[],"b_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"b_empty_array_nested":[{},[],null],"b_obj":{"b_str":"A","b_num_int":1,"b_num_float":0.1,"b_bool":true,"b_null":null,"b_empty_obj":{},"b_empty_array":[],"b_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"b_empty_array_nested":[{},[],null]},"b_array":[{"b_str":"A","b_num_int":1,"b_num_float":0.1,"b_bool":true,"b_null":null,"b_empty_obj":{},"b_empty_array":[],"b_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"b_empty_array_nested":[{},[],null]},{"b_str":"A","b_num_int":1,"b_num_float":0.1,"b_bool":true,"b_null":null,"b_empty_obj":{},"b_empty_array":[],"b_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"b_empty_array_nested":[{},[],null]}]},{"b_str":"A","b_num_int":1,"b_num_float":0.1,"b_bool":true,"b_null":null,"b_empty_obj":{},"b_empty_array":[],"b_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"b_empty_array_nested":[{},[],null],"b_obj":{"b_str":"A","b_num_int":1,"b_num_float":0.1,"b_bool":true,"b_null":null,"b_empty_obj":{},"b_empty_array":[],"b_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"b_empty_array_nested":[{},[],null]},"b_array":[{"b_str":"A","b_num_int":1,"b_num_float":0.1,"b_bool":true,"b_null":null,"b_empty_obj":{},"b_empty_array":[],"b_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"b_empty_array_nested":[{},[],null]},{"b_str":"A","b_num_int":1,"b_num_float":0.1,"b_bool":true,"b_null":null,"b_empty_obj":{},"b_empty_array":[],"b_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"b_empty_array_nested":[{},[],null]}]}]} |       |         |        |            |              |         |         |             |               |        |            |              |         |         |       |   1 |
| 2022-02-01 00:00:00.000 |       |           |             |        |        |             |               |                             |                      | {"b_str":"A","b_num_int":1,"b_num_float":0.1,"b_bool":true,"b_null":null,"b_empty_obj":{},"b_empty_array":[],"b_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"b_empty_array_nested":[{},[],null],"b_obj":{"b_str":"A","b_num_int":1,"b_num_float":0.1,"b_bool":true,"b_null":null,"b_empty_obj":{},"b_empty_array":[],"b_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"b_empty_array_nested":[{},[],null],"b_obj":{"b_str":"A","b_num_int":1,"b_num_float":0.1,"b_bool":true,"b_null":null,"b_empty_obj":{},"b_empty_array":[],"b_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"b_empty_array_nested":[{},[],null]},"b_array":[{"b_str":"A","b_num_int":1,"b_num_float":0.1,"b_bool":true,"b_null":null,"b_empty_obj":{},"b_empty_array":[],"b_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"b_empty_array_nested":[{},[],null]},{"b_str":"A","b_num_int":1,"b_num_float":0.1,"b_bool":true,"b_null":null,"b_empty_obj":{},"b_empty_array":[],"b_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"b_empty_array_nested":[{},[],null]}]},"b_array":[{"b_str":"A","b_num_int":1,"b_num_float":0.1,"b_bool":true,"b_null":null,"b_empty_obj":{},"b_empty_array":[],"b_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"b_empty_array_nested":[{},[],null],"b_obj":{"b_str":"A","b_num_int":1,"b_num_float":0.1,"b_bool":true,"b_null":null,"b_empty_obj":{},"b_empty_array":[],"b_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"b_empty_array_nested":[{},[],null]},"b_array":[{"b_str":"A","b_num_int":1,"b_num_float":0.1,"b_bool":true,"b_null":null,"b_empty_obj":{},"b_empty_array":[],"b_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"b_empty_array_nested":[{},[],null]},{"b_str":"A","b_num_int":1,"b_num_float":0.1,"b_bool":true,"b_null":null,"b_empty_obj":{},"b_empty_array":[],"b_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"b_empty_array_nested":[{},[],null]}]},{"b_str":"A","b_num_int":1,"b_num_float":0.1,"b_bool":true,"b_null":null,"b_empty_obj":{},"b_empty_array":[],"b_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"b_empty_array_nested":[{},[],null],"b_obj":{"b_str":"A","b_num_int":1,"b_num_float":0.1,"b_bool":true,"b_null":null,"b_empty_obj":{},"b_empty_array":[],"b_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"b_empty_array_nested":[{},[],null]},"b_array":[{"b_str":"A","b_num_int":1,"b_num_float":0.1,"b_bool":true,"b_null":null,"b_empty_obj":{},"b_empty_array":[],"b_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"b_empty_array_nested":[{},[],null]},{"b_str":"A","b_num_int":1,"b_num_float":0.1,"b_bool":true,"b_null":null,"b_empty_obj":{},"b_empty_array":[],"b_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"b_empty_array_nested":[{},[],null]}]}]} | {"b_str":"A","b_num_int":1,"b_num_float":0.1,"b_bool":true,"b_null":null,"b_empty_obj":{},"b_empty_array":[],"b_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"b_empty_array_nested":[{},[],null],"b_obj":{"b_str":"A","b_num_int":1,"b_num_float":0.1,"b_bool":true,"b_null":null,"b_empty_obj":{},"b_empty_array":[],"b_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"b_empty_array_nested":[{},[],null],"b_obj":{"b_str":"A","b_num_int":1,"b_num_float":0.1,"b_bool":true,"b_null":null,"b_empty_obj":{},"b_empty_array":[],"b_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"b_empty_array_nested":[{},[],null]},"b_array":[{"b_str":"A","b_num_int":1,"b_num_float":0.1,"b_bool":true,"b_null":null,"b_empty_obj":{},"b_empty_array":[],"b_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"b_empty_array_nested":[{},[],null]},{"b_str":"A","b_num_int":1,"b_num_float":0.1,"b_bool":true,"b_null":null,"b_empty_obj":{},"b_empty_array":[],"b_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"b_empty_array_nested":[{},[],null]}]},"b_array":[{"b_str":"A","b_num_int":1,"b_num_float":0.1,"b_bool":true,"b_null":null,"b_empty_obj":{},"b_empty_array":[],"b_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"b_empty_array_nested":[{},[],null],"b_obj":{"b_str":"A","b_num_int":1,"b_num_float":0.1,"b_bool":true,"b_null":null,"b_empty_obj":{},"b_empty_array":[],"b_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"b_empty_array_nested":[{},[],null]},"b_array":[{"b_str":"A","b_num_int":1,"b_num_float":0.1,"b_bool":true,"b_null":null,"b_empty_obj":{},"b_empty_array":[],"b_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"b_empty_array_nested":[{},[],null]},{"b_str":"A","b_num_int":1,"b_num_float":0.1,"b_bool":true,"b_null":null,"b_empty_obj":{},"b_empty_array":[],"b_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"b_empty_array_nested":[{},[],null]}]},{"b_str":"A","b_num_int":1,"b_num_float":0.1,"b_bool":true,"b_null":null,"b_empty_obj":{},"b_empty_array":[],"b_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"b_empty_array_nested":[{},[],null],"b_obj":{"b_str":"A","b_num_int":1,"b_num_float":0.1,"b_bool":true,"b_null":null,"b_empty_obj":{},"b_empty_array":[],"b_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"b_empty_array_nested":[{},[],null]},"b_array":[{"b_str":"A","b_num_int":1,"b_num_float":0.1,"b_bool":true,"b_null":null,"b_empty_obj":{},"b_empty_array":[],"b_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"b_empty_array_nested":[{},[],null]},{"b_str":"A","b_num_int":1,"b_num_float":0.1,"b_bool":true,"b_null":null,"b_empty_obj":{},"b_empty_array":[],"b_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"b_empty_array_nested":[{},[],null]}]}]} |       |         |        |            |              |         |         |             |               |        |            |              |         |         |       |   1 |

(4 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_datatype_sql TEST_ID: A016 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT *
FROM test_json_cols
LIMIT 1;
+-------------------------+-------+-----------+-------------+--------+--------+-------------+---------------+-----------------------------+----------------------+------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+-------+---------+--------+------------+--------------+---------+---------+-------------+---------------+--------+------------+--------------+---------+---------+-------+-----+
| __time                  | s_str | s_num_int | s_num_float | s_bool | s_null | c_empty_obj | c_empty_array | c_empty_obj_nested          | c_empty_array_nested | c| c| t_obj | t_array | t_str1 | t_num_int1 | t_num_float1 | t_bool1 | t_null1 | t_empty_obj | t_empty_array | t_str2 | t_num_int2 | t_num_float2 | t_bool2 | t_null2 | t_new | cnt |

| 2022-01-01 00:00:00.000 | A     |         1 |         0.1 |      1 |        | {}          | []            | {"o1":{},"o2":[],"o3":null} | [{},[],null]         | {"a_str":"A","a_num_int":1,"a_num_float":0.1,"a_bool":true,"a_null":null,"a_empty_obj":{},"a_empty_array":[],"a_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"a_empty_array_nested":[{},[],null],"a_obj":{"a_str":"A","a_num_int":1,"a_num_float":0.1,"a_bool":true,"a_null":null,"a_empty_obj":{},"a_empty_array":[],"a_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"a_empty_array_nested":[{},[],null],"a_obj":{"a_str":"A","a_num_int":1,"a_num_float":0.1,"a_bool":true,"a_null":null,"a_empty_obj":{},"a_empty_array":[],"a_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"a_empty_array_nested":[{},[],null]},"a_array":[{"a_str":"A","a_num_int":1,"a_num_float":0.1,"a_bool":true,"a_null":null,"a_empty_obj":{},"a_empty_array":[],"a_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"a_empty_array_nested":[{},[],null]},{"a_str":"A","a_num_int":1,"a_num_float":0.1,"a_bool":true,"a_null":null,"a_empty_obj":{},"a_empty_array":[],"a_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"a_empty_array_nested":[{},[],null]}]},"a_array":[{"a_str":"A","a_num_int":1,"a_num_float":0.1,"a_bool":true,"a_null":null,"a_empty_obj":{},"a_empty_array":[],"a_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"a_empty_array_nested":[{},[],null],"a_obj":{"a_str":"A","a_num_int":1,"a_num_float":0.1,"a_bool":true,"a_null":null,"a_empty_obj":{},"a_empty_array":[],"a_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"a_empty_array_nested":[{},[],null]},"a_array":[{"a_str":"A","a_num_int":1,"a_num_float":0.1,"a_bool":true,"a_null":null,"a_empty_obj":{},"a_empty_array":[],"a_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"a_empty_array_nested":[{},[],null]},{"a_str":"A","a_num_int":1,"a_num_float":0.1,"a_bool":true,"a_null":null,"a_empty_obj":{},"a_empty_array":[],"a_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"a_empty_array_nested":[{},[],null]}]},{"a_str":"A","a_num_int":1,"a_num_float":0.1,"a_bool":true,"a_null":null,"a_empty_obj":{},"a_empty_array":[],"a_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"a_empty_array_nested":[{},[],null],"a_obj":{"a_str":"A","a_num_int":1,"a_num_float":0.1,"a_bool":true,"a_null":null,"a_empty_obj":{},"a_empty_array":[],"a_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"a_empty_array_nested":[{},[],null]},"a_array":[{"a_str":"A","a_num_int":1,"a_num_float":0.1,"a_bool":true,"a_null":null,"a_empty_obj":{},"a_empty_array":[],"a_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"a_empty_array_nested":[{},[],null]},{"a_str":"A","a_num_int":1,"a_num_float":0.1,"a_bool":true,"a_null":null,"a_empty_obj":{},"a_empty_array":[],"a_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"a_empty_array_nested":[{},[],null]}]}]} | {"a_str":"A","a_num_int":1,"a_num_float":0.1,"a_bool":true,"a_null":null,"a_empty_obj":{},"a_empty_array":[],"a_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"a_empty_array_nested":[{},[],null],"a_obj":{"a_str":"A","a_num_int":1,"a_num_float":0.1,"a_bool":true,"a_null":null,"a_empty_obj":{},"a_empty_array":[],"a_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"a_empty_array_nested":[{},[],null],"a_obj":{"a_str":"A","a_num_int":1,"a_num_float":0.1,"a_bool":true,"a_null":null,"a_empty_obj":{},"a_empty_array":[],"a_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"a_empty_array_nested":[{},[],null]},"a_array":[{"a_str":"A","a_num_int":1,"a_num_float":0.1,"a_bool":true,"a_null":null,"a_empty_obj":{},"a_empty_array":[],"a_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"a_empty_array_nested":[{},[],null]},{"a_str":"A","a_num_int":1,"a_num_float":0.1,"a_bool":true,"a_null":null,"a_empty_obj":{},"a_empty_array":[],"a_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"a_empty_array_nested":[{},[],null]}]},"a_array":[{"a_str":"A","a_num_int":1,"a_num_float":0.1,"a_bool":true,"a_null":null,"a_empty_obj":{},"a_empty_array":[],"a_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"a_empty_array_nested":[{},[],null],"a_obj":{"a_str":"A","a_num_int":1,"a_num_float":0.1,"a_bool":true,"a_null":null,"a_empty_obj":{},"a_empty_array":[],"a_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"a_empty_array_nested":[{},[],null]},"a_array":[{"a_str":"A","a_num_int":1,"a_num_float":0.1,"a_bool":true,"a_null":null,"a_empty_obj":{},"a_empty_array":[],"a_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"a_empty_array_nested":[{},[],null]},{"a_str":"A","a_num_int":1,"a_num_float":0.1,"a_bool":true,"a_null":null,"a_empty_obj":{},"a_empty_array":[],"a_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"a_empty_array_nested":[{},[],null]}]},{"a_str":"A","a_num_int":1,"a_num_float":0.1,"a_bool":true,"a_null":null,"a_empty_obj":{},"a_empty_array":[],"a_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"a_empty_array_nested":[{},[],null],"a_obj":{"a_str":"A","a_num_int":1,"a_num_float":0.1,"a_bool":true,"a_null":null,"a_empty_obj":{},"a_empty_array":[],"a_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"a_empty_array_nested":[{},[],null]},"a_array":[{"a_str":"A","a_num_int":1,"a_num_float":0.1,"a_bool":true,"a_null":null,"a_empty_obj":{},"a_empty_array":[],"a_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"a_empty_array_nested":[{},[],null]},{"a_str":"A","a_num_int":1,"a_num_float":0.1,"a_bool":true,"a_null":null,"a_empty_obj":{},"a_empty_array":[],"a_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"a_empty_array_nested":[{},[],null]}]}]} |       |         |        |            |              |         |         |             |               |        |            |              |         |         |       |   1 |

(1 row)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_datatype_sql TEST_ID: A017 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT *
FROM test_json_cols
OFFSET 1;

| __time                  | s_str | s_num_int | s_num_float | s_bool | s_null | c_empty_obj | c_empty_array | c_empty_obj_nested          | c_empty_array_nested | c| c| t_obj | t_array | t_str1 | t_num_int1 | t_num_float1 | t_bool1 | t_null1 | t_empty_obj | t_empty_array | t_str2 | t_num_int2 | t_num_float2 | t_bool2 | t_null2 | t_new | cnt |
+-------------------------+-------+-----------+-------------+--------+--------+-------------+---------------+-----------------------------+----------------------+------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+-------+---------+--------+------------+--------------+---------+---------+-------------+---------------+--------+------------+--------------+---------+---------+-------+-----+
| 2022-01-01 00:00:00.000 | A     |         1 |         0.1 |      1 |        | {}          | []            | {"o1":{},"o2":[],"o3":null} | [{},[],null]         | {"a_str":"A","a_num_int":1,"a_num_float":0.1,"a_bool":true,"a_null":null,"a_empty_obj":{},"a_empty_array":[],"a_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"a_empty_array_nested":[{},[],null],"a_obj":{"a_str":"A","a_num_int":1,"a_num_float":0.1,"a_bool":true,"a_null":null,"a_empty_obj":{},"a_empty_array":[],"a_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"a_empty_array_nested":[{},[],null],"a_obj":{"a_str":"A","a_num_int":1,"a_num_float":0.1,"a_bool":true,"a_null":null,"a_empty_obj":{},"a_empty_array":[],"a_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"a_empty_array_nested":[{},[],null]},"a_array":[{"a_str":"A","a_num_int":1,"a_num_float":0.1,"a_bool":true,"a_null":null,"a_empty_obj":{},"a_empty_array":[],"a_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"a_empty_array_nested":[{},[],null]},{"a_str":"A","a_num_int":1,"a_num_float":0.1,"a_bool":true,"a_null":null,"a_empty_obj":{},"a_empty_array":[],"a_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"a_empty_array_nested":[{},[],null]}]},"a_array":[{"a_str":"A","a_num_int":1,"a_num_float":0.1,"a_bool":true,"a_null":null,"a_empty_obj":{},"a_empty_array":[],"a_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"a_empty_array_nested":[{},[],null],"a_obj":{"a_str":"A","a_num_int":1,"a_num_float":0.1,"a_bool":true,"a_null":null,"a_empty_obj":{},"a_empty_array":[],"a_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"a_empty_array_nested":[{},[],null]},"a_array":[{"a_str":"A","a_num_int":1,"a_num_float":0.1,"a_bool":true,"a_null":null,"a_empty_obj":{},"a_empty_array":[],"a_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"a_empty_array_nested":[{},[],null]},{"a_str":"A","a_num_int":1,"a_num_float":0.1,"a_bool":true,"a_null":null,"a_empty_obj":{},"a_empty_array":[],"a_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"a_empty_array_nested":[{},[],null]}]},{"a_str":"A","a_num_int":1,"a_num_float":0.1,"a_bool":true,"a_null":null,"a_empty_obj":{},"a_empty_array":[],"a_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"a_empty_array_nested":[{},[],null],"a_obj":{"a_str":"A","a_num_int":1,"a_num_float":0.1,"a_bool":true,"a_null":null,"a_empty_obj":{},"a_empty_array":[],"a_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"a_empty_array_nested":[{},[],null]},"a_array":[{"a_str":"A","a_num_int":1,"a_num_float":0.1,"a_bool":true,"a_null":null,"a_empty_obj":{},"a_empty_array":[],"a_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"a_empty_array_nested":[{},[],null]},{"a_str":"A","a_num_int":1,"a_num_float":0.1,"a_bool":true,"a_null":null,"a_empty_obj":{},"a_empty_array":[],"a_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"a_empty_array_nested":[{},[],null]}]}]} | {"a_str":"A","a_num_int":1,"a_num_float":0.1,"a_bool":true,"a_null":null,"a_empty_obj":{},"a_empty_array":[],"a_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"a_empty_array_nested":[{},[],null],"a_obj":{"a_str":"A","a_num_int":1,"a_num_float":0.1,"a_bool":true,"a_null":null,"a_empty_obj":{},"a_empty_array":[],"a_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"a_empty_array_nested":[{},[],null],"a_obj":{"a_str":"A","a_num_int":1,"a_num_float":0.1,"a_bool":true,"a_null":null,"a_empty_obj":{},"a_empty_array":[],"a_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"a_empty_array_nested":[{},[],null]},"a_array":[{"a_str":"A","a_num_int":1,"a_num_float":0.1,"a_bool":true,"a_null":null,"a_empty_obj":{},"a_empty_array":[],"a_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"a_empty_array_nested":[{},[],null]},{"a_str":"A","a_num_int":1,"a_num_float":0.1,"a_bool":true,"a_null":null,"a_empty_obj":{},"a_empty_array":[],"a_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"a_empty_array_nested":[{},[],null]}]},"a_array":[{"a_str":"A","a_num_int":1,"a_num_float":0.1,"a_bool":true,"a_null":null,"a_empty_obj":{},"a_empty_array":[],"a_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"a_empty_array_nested":[{},[],null],"a_obj":{"a_str":"A","a_num_int":1,"a_num_float":0.1,"a_bool":true,"a_null":null,"a_empty_obj":{},"a_empty_array":[],"a_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"a_empty_array_nested":[{},[],null]},"a_array":[{"a_str":"A","a_num_int":1,"a_num_float":0.1,"a_bool":true,"a_null":null,"a_empty_obj":{},"a_empty_array":[],"a_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"a_empty_array_nested":[{},[],null]},{"a_str":"A","a_num_int":1,"a_num_float":0.1,"a_bool":true,"a_null":null,"a_empty_obj":{},"a_empty_array":[],"a_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"a_empty_array_nested":[{},[],null]}]},{"a_str":"A","a_num_int":1,"a_num_float":0.1,"a_bool":true,"a_null":null,"a_empty_obj":{},"a_empty_array":[],"a_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"a_empty_array_nested":[{},[],null],"a_obj":{"a_str":"A","a_num_int":1,"a_num_float":0.1,"a_bool":true,"a_null":null,"a_empty_obj":{},"a_empty_array":[],"a_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"a_empty_array_nested":[{},[],null]},"a_array":[{"a_str":"A","a_num_int":1,"a_num_float":0.1,"a_bool":true,"a_null":null,"a_empty_obj":{},"a_empty_array":[],"a_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"a_empty_array_nested":[{},[],null]},{"a_str":"A","a_num_int":1,"a_num_float":0.1,"a_bool":true,"a_null":null,"a_empty_obj":{},"a_empty_array":[],"a_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"a_empty_array_nested":[{},[],null]}]}]} |       |         |        |            |              |         |         |             |               |        |            |              |         |         |       |   1 |
| 2022-02-01 00:00:00.000 |       |           |             |        |        |             |               |                             |                      | {"b_str":"A","b_num_int":1,"b_num_float":0.1,"b_bool":true,"b_null":null,"b_empty_obj":{},"b_empty_array":[],"b_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"b_empty_array_nested":[{},[],null],"b_obj":{"b_str":"A","b_num_int":1,"b_num_float":0.1,"b_bool":true,"b_null":null,"b_empty_obj":{},"b_empty_array":[],"b_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"b_empty_array_nested":[{},[],null],"b_obj":{"b_str":"A","b_num_int":1,"b_num_float":0.1,"b_bool":true,"b_null":null,"b_empty_obj":{},"b_empty_array":[],"b_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"b_empty_array_nested":[{},[],null]},"b_array":[{"b_str":"A","b_num_int":1,"b_num_float":0.1,"b_bool":true,"b_null":null,"b_empty_obj":{},"b_empty_array":[],"b_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"b_empty_array_nested":[{},[],null]},{"b_str":"A","b_num_int":1,"b_num_float":0.1,"b_bool":true,"b_null":null,"b_empty_obj":{},"b_empty_array":[],"b_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"b_empty_array_nested":[{},[],null]}]},"b_array":[{"b_str":"A","b_num_int":1,"b_num_float":0.1,"b_bool":true,"b_null":null,"b_empty_obj":{},"b_empty_array":[],"b_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"b_empty_array_nested":[{},[],null],"b_obj":{"b_str":"A","b_num_int":1,"b_num_float":0.1,"b_bool":true,"b_null":null,"b_empty_obj":{},"b_empty_array":[],"b_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"b_empty_array_nested":[{},[],null]},"b_array":[{"b_str":"A","b_num_int":1,"b_num_float":0.1,"b_bool":true,"b_null":null,"b_empty_obj":{},"b_empty_array":[],"b_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"b_empty_array_nested":[{},[],null]},{"b_str":"A","b_num_int":1,"b_num_float":0.1,"b_bool":true,"b_null":null,"b_empty_obj":{},"b_empty_array":[],"b_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"b_empty_array_nested":[{},[],null]}]},{"b_str":"A","b_num_int":1,"b_num_float":0.1,"b_bool":true,"b_null":null,"b_empty_obj":{},"b_empty_array":[],"b_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"b_empty_array_nested":[{},[],null],"b_obj":{"b_str":"A","b_num_int":1,"b_num_float":0.1,"b_bool":true,"b_null":null,"b_empty_obj":{},"b_empty_array":[],"b_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"b_empty_array_nested":[{},[],null]},"b_array":[{"b_str":"A","b_num_int":1,"b_num_float":0.1,"b_bool":true,"b_null":null,"b_empty_obj":{},"b_empty_array":[],"b_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"b_empty_array_nested":[{},[],null]},{"b_str":"A","b_num_int":1,"b_num_float":0.1,"b_bool":true,"b_null":null,"b_empty_obj":{},"b_empty_array":[],"b_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"b_empty_array_nested":[{},[],null]}]}]} | {"b_str":"A","b_num_int":1,"b_num_float":0.1,"b_bool":true,"b_null":null,"b_empty_obj":{},"b_empty_array":[],"b_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"b_empty_array_nested":[{},[],null],"b_obj":{"b_str":"A","b_num_int":1,"b_num_float":0.1,"b_bool":true,"b_null":null,"b_empty_obj":{},"b_empty_array":[],"b_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"b_empty_array_nested":[{},[],null],"b_obj":{"b_str":"A","b_num_int":1,"b_num_float":0.1,"b_bool":true,"b_null":null,"b_empty_obj":{},"b_empty_array":[],"b_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"b_empty_array_nested":[{},[],null]},"b_array":[{"b_str":"A","b_num_int":1,"b_num_float":0.1,"b_bool":true,"b_null":null,"b_empty_obj":{},"b_empty_array":[],"b_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"b_empty_array_nested":[{},[],null]},{"b_str":"A","b_num_int":1,"b_num_float":0.1,"b_bool":true,"b_null":null,"b_empty_obj":{},"b_empty_array":[],"b_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"b_empty_array_nested":[{},[],null]}]},"b_array":[{"b_str":"A","b_num_int":1,"b_num_float":0.1,"b_bool":true,"b_null":null,"b_empty_obj":{},"b_empty_array":[],"b_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"b_empty_array_nested":[{},[],null],"b_obj":{"b_str":"A","b_num_int":1,"b_num_float":0.1,"b_bool":true,"b_null":null,"b_empty_obj":{},"b_empty_array":[],"b_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"b_empty_array_nested":[{},[],null]},"b_array":[{"b_str":"A","b_num_int":1,"b_num_float":0.1,"b_bool":true,"b_null":null,"b_empty_obj":{},"b_empty_array":[],"b_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"b_empty_array_nested":[{},[],null]},{"b_str":"A","b_num_int":1,"b_num_float":0.1,"b_bool":true,"b_null":null,"b_empty_obj":{},"b_empty_array":[],"b_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"b_empty_array_nested":[{},[],null]}]},{"b_str":"A","b_num_int":1,"b_num_float":0.1,"b_bool":true,"b_null":null,"b_empty_obj":{},"b_empty_array":[],"b_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"b_empty_array_nested":[{},[],null],"b_obj":{"b_str":"A","b_num_int":1,"b_num_float":0.1,"b_bool":true,"b_null":null,"b_empty_obj":{},"b_empty_array":[],"b_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"b_empty_array_nested":[{},[],null]},"b_array":[{"b_str":"A","b_num_int":1,"b_num_float":0.1,"b_bool":true,"b_null":null,"b_empty_obj":{},"b_empty_array":[],"b_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"b_empty_array_nested":[{},[],null]},{"b_str":"A","b_num_int":1,"b_num_float":0.1,"b_bool":true,"b_null":null,"b_empty_obj":{},"b_empty_array":[],"b_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"b_empty_array_nested":[{},[],null]}]}]} |       |         |        |            |              |         |         |             |               |        |            |              |         |         |       |   1 |
| 2022-02-01 00:00:00.000 |       |           |             |        |        |             |               |                             |                      | {"b_str":"A","b_num_int":1,"b_num_float":0.1,"b_bool":true,"b_null":null,"b_empty_obj":{},"b_empty_array":[],"b_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"b_empty_array_nested":[{},[],null],"b_obj":{"b_str":"A","b_num_int":1,"b_num_float":0.1,"b_bool":true,"b_null":null,"b_empty_obj":{},"b_empty_array":[],"b_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"b_empty_array_nested":[{},[],null],"b_obj":{"b_str":"A","b_num_int":1,"b_num_float":0.1,"b_bool":true,"b_null":null,"b_empty_obj":{},"b_empty_array":[],"b_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"b_empty_array_nested":[{},[],null]},"b_array":[{"b_str":"A","b_num_int":1,"b_num_float":0.1,"b_bool":true,"b_null":null,"b_empty_obj":{},"b_empty_array":[],"b_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"b_empty_array_nested":[{},[],null]},{"b_str":"A","b_num_int":1,"b_num_float":0.1,"b_bool":true,"b_null":null,"b_empty_obj":{},"b_empty_array":[],"b_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"b_empty_array_nested":[{},[],null]}]},"b_array":[{"b_str":"A","b_num_int":1,"b_num_float":0.1,"b_bool":true,"b_null":null,"b_empty_obj":{},"b_empty_array":[],"b_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"b_empty_array_nested":[{},[],null],"b_obj":{"b_str":"A","b_num_int":1,"b_num_float":0.1,"b_bool":true,"b_null":null,"b_empty_obj":{},"b_empty_array":[],"b_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"b_empty_array_nested":[{},[],null]},"b_array":[{"b_str":"A","b_num_int":1,"b_num_float":0.1,"b_bool":true,"b_null":null,"b_empty_obj":{},"b_empty_array":[],"b_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"b_empty_array_nested":[{},[],null]},{"b_str":"A","b_num_int":1,"b_num_float":0.1,"b_bool":true,"b_null":null,"b_empty_obj":{},"b_empty_array":[],"b_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"b_empty_array_nested":[{},[],null]}]},{"b_str":"A","b_num_int":1,"b_num_float":0.1,"b_bool":true,"b_null":null,"b_empty_obj":{},"b_empty_array":[],"b_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"b_empty_array_nested":[{},[],null],"b_obj":{"b_str":"A","b_num_int":1,"b_num_float":0.1,"b_bool":true,"b_null":null,"b_empty_obj":{},"b_empty_array":[],"b_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"b_empty_array_nested":[{},[],null]},"b_array":[{"b_str":"A","b_num_int":1,"b_num_float":0.1,"b_bool":true,"b_null":null,"b_empty_obj":{},"b_empty_array":[],"b_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"b_empty_array_nested":[{},[],null]},{"b_str":"A","b_num_int":1,"b_num_float":0.1,"b_bool":true,"b_null":null,"b_empty_obj":{},"b_empty_array":[],"b_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"b_empty_array_nested":[{},[],null]}]}]} | {"b_str":"A","b_num_int":1,"b_num_float":0.1,"b_bool":true,"b_null":null,"b_empty_obj":{},"b_empty_array":[],"b_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"b_empty_array_nested":[{},[],null],"b_obj":{"b_str":"A","b_num_int":1,"b_num_float":0.1,"b_bool":true,"b_null":null,"b_empty_obj":{},"b_empty_array":[],"b_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"b_empty_array_nested":[{},[],null],"b_obj":{"b_str":"A","b_num_int":1,"b_num_float":0.1,"b_bool":true,"b_null":null,"b_empty_obj":{},"b_empty_array":[],"b_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"b_empty_array_nested":[{},[],null]},"b_array":[{"b_str":"A","b_num_int":1,"b_num_float":0.1,"b_bool":true,"b_null":null,"b_empty_obj":{},"b_empty_array":[],"b_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"b_empty_array_nested":[{},[],null]},{"b_str":"A","b_num_int":1,"b_num_float":0.1,"b_bool":true,"b_null":null,"b_empty_obj":{},"b_empty_array":[],"b_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"b_empty_array_nested":[{},[],null]}]},"b_array":[{"b_str":"A","b_num_int":1,"b_num_float":0.1,"b_bool":true,"b_null":null,"b_empty_obj":{},"b_empty_array":[],"b_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"b_empty_array_nested":[{},[],null],"b_obj":{"b_str":"A","b_num_int":1,"b_num_float":0.1,"b_bool":true,"b_null":null,"b_empty_obj":{},"b_empty_array":[],"b_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"b_empty_array_nested":[{},[],null]},"b_array":[{"b_str":"A","b_num_int":1,"b_num_float":0.1,"b_bool":true,"b_null":null,"b_empty_obj":{},"b_empty_array":[],"b_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"b_empty_array_nested":[{},[],null]},{"b_str":"A","b_num_int":1,"b_num_float":0.1,"b_bool":true,"b_null":null,"b_empty_obj":{},"b_empty_array":[],"b_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"b_empty_array_nested":[{},[],null]}]},{"b_str":"A","b_num_int":1,"b_num_float":0.1,"b_bool":true,"b_null":null,"b_empty_obj":{},"b_empty_array":[],"b_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"b_empty_array_nested":[{},[],null],"b_obj":{"b_str":"A","b_num_int":1,"b_num_float":0.1,"b_bool":true,"b_null":null,"b_empty_obj":{},"b_empty_array":[],"b_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"b_empty_array_nested":[{},[],null]},"b_array":[{"b_str":"A","b_num_int":1,"b_num_float":0.1,"b_bool":true,"b_null":null,"b_empty_obj":{},"b_empty_array":[],"b_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"b_empty_array_nested":[{},[],null]},{"b_str":"A","b_num_int":1,"b_num_float":0.1,"b_bool":true,"b_null":null,"b_empty_obj":{},"b_empty_array":[],"b_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"b_empty_array_nested":[{},[],null]}]}]} |       |         |        |            |              |         |         |             |               |        |            |              |         |         |       |   1 |

(3 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_datatype_sql TEST_ID: A018 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT *
FROM test_json_cols
UNION ALL
SELECT *
FROM test_json_cols;

| __time                  | s_str | s_num_int | s_num_float | s_bool | s_null | c_empty_obj | c_empty_array | c_empty_obj_nested          | c_empty_array_nested | c| c| t_obj | t_array | t_str1 | t_num_int1 | t_num_float1 | t_bool1 | t_null1 | t_empty_obj | t_empty_array | t_str2 | t_num_int2 | t_num_float2 | t_bool2 | t_null2 | t_new | cnt |

| 2022-01-01 00:00:00.000 | A     |         1 |         0.1 |      1 |        | {}          | []            | {"o1":{},"o2":[],"o3":null} | [{},[],null]         | {"a_str":"A","a_num_int":1,"a_num_float":0.1,"a_bool":true,"a_null":null,"a_empty_obj":{},"a_empty_array":[],"a_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"a_empty_array_nested":[{},[],null],"a_obj":{"a_str":"A","a_num_int":1,"a_num_float":0.1,"a_bool":true,"a_null":null,"a_empty_obj":{},"a_empty_array":[],"a_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"a_empty_array_nested":[{},[],null],"a_obj":{"a_str":"A","a_num_int":1,"a_num_float":0.1,"a_bool":true,"a_null":null,"a_empty_obj":{},"a_empty_array":[],"a_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"a_empty_array_nested":[{},[],null]},"a_array":[{"a_str":"A","a_num_int":1,"a_num_float":0.1,"a_bool":true,"a_null":null,"a_empty_obj":{},"a_empty_array":[],"a_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"a_empty_array_nested":[{},[],null]},{"a_str":"A","a_num_int":1,"a_num_float":0.1,"a_bool":true,"a_null":null,"a_empty_obj":{},"a_empty_array":[],"a_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"a_empty_array_nested":[{},[],null]}]},"a_array":[{"a_str":"A","a_num_int":1,"a_num_float":0.1,"a_bool":true,"a_null":null,"a_empty_obj":{},"a_empty_array":[],"a_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"a_empty_array_nested":[{},[],null],"a_obj":{"a_str":"A","a_num_int":1,"a_num_float":0.1,"a_bool":true,"a_null":null,"a_empty_obj":{},"a_empty_array":[],"a_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"a_empty_array_nested":[{},[],null]},"a_array":[{"a_str":"A","a_num_int":1,"a_num_float":0.1,"a_bool":true,"a_null":null,"a_empty_obj":{},"a_empty_array":[],"a_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"a_empty_array_nested":[{},[],null]},{"a_str":"A","a_num_int":1,"a_num_float":0.1,"a_bool":true,"a_null":null,"a_empty_obj":{},"a_empty_array":[],"a_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"a_empty_array_nested":[{},[],null]}]},{"a_str":"A","a_num_int":1,"a_num_float":0.1,"a_bool":true,"a_null":null,"a_empty_obj":{},"a_empty_array":[],"a_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"a_empty_array_nested":[{},[],null],"a_obj":{"a_str":"A","a_num_int":1,"a_num_float":0.1,"a_bool":true,"a_null":null,"a_empty_obj":{},"a_empty_array":[],"a_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"a_empty_array_nested":[{},[],null]},"a_array":[{"a_str":"A","a_num_int":1,"a_num_float":0.1,"a_bool":true,"a_null":null,"a_empty_obj":{},"a_empty_array":[],"a_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"a_empty_array_nested":[{},[],null]},{"a_str":"A","a_num_int":1,"a_num_float":0.1,"a_bool":true,"a_null":null,"a_empty_obj":{},"a_empty_array":[],"a_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"a_empty_array_nested":[{},[],null]}]}]} | {"a_str":"A","a_num_int":1,"a_num_float":0.1,"a_bool":true,"a_null":null,"a_empty_obj":{},"a_empty_array":[],"a_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"a_empty_array_nested":[{},[],null],"a_obj":{"a_str":"A","a_num_int":1,"a_num_float":0.1,"a_bool":true,"a_null":null,"a_empty_obj":{},"a_empty_array":[],"a_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"a_empty_array_nested":[{},[],null],"a_obj":{"a_str":"A","a_num_int":1,"a_num_float":0.1,"a_bool":true,"a_null":null,"a_empty_obj":{},"a_empty_array":[],"a_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"a_empty_array_nested":[{},[],null]},"a_array":[{"a_str":"A","a_num_int":1,"a_num_float":0.1,"a_bool":true,"a_null":null,"a_empty_obj":{},"a_empty_array":[],"a_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"a_empty_array_nested":[{},[],null]},{"a_str":"A","a_num_int":1,"a_num_float":0.1,"a_bool":true,"a_null":null,"a_empty_obj":{},"a_empty_array":[],"a_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"a_empty_array_nested":[{},[],null]}]},"a_array":[{"a_str":"A","a_num_int":1,"a_num_float":0.1,"a_bool":true,"a_null":null,"a_empty_obj":{},"a_empty_array":[],"a_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"a_empty_array_nested":[{},[],null],"a_obj":{"a_str":"A","a_num_int":1,"a_num_float":0.1,"a_bool":true,"a_null":null,"a_empty_obj":{},"a_empty_array":[],"a_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"a_empty_array_nested":[{},[],null]},"a_array":[{"a_str":"A","a_num_int":1,"a_num_float":0.1,"a_bool":true,"a_null":null,"a_empty_obj":{},"a_empty_array":[],"a_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"a_empty_array_nested":[{},[],null]},{"a_str":"A","a_num_int":1,"a_num_float":0.1,"a_bool":true,"a_null":null,"a_empty_obj":{},"a_empty_array":[],"a_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"a_empty_array_nested":[{},[],null]}]},{"a_str":"A","a_num_int":1,"a_num_float":0.1,"a_bool":true,"a_null":null,"a_empty_obj":{},"a_empty_array":[],"a_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"a_empty_array_nested":[{},[],null],"a_obj":{"a_str":"A","a_num_int":1,"a_num_float":0.1,"a_bool":true,"a_null":null,"a_empty_obj":{},"a_empty_array":[],"a_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"a_empty_array_nested":[{},[],null]},"a_array":[{"a_str":"A","a_num_int":1,"a_num_float":0.1,"a_bool":true,"a_null":null,"a_empty_obj":{},"a_empty_array":[],"a_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"a_empty_array_nested":[{},[],null]},{"a_str":"A","a_num_int":1,"a_num_float":0.1,"a_bool":true,"a_null":null,"a_empty_obj":{},"a_empty_array":[],"a_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"a_empty_array_nested":[{},[],null]}]}]} |       |         |        |            |              |         |         |             |               |        |            |              |         |         |       |   1 |
| 2022-01-01 00:00:00.000 | A     |         1 |         0.1 |      1 |        | {}          | []            | {"o1":{},"o2":[],"o3":null} | [{},[],null]         | {"a_str":"A","a_num_int":1,"a_num_float":0.1,"a_bool":true,"a_null":null,"a_empty_obj":{},"a_empty_array":[],"a_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"a_empty_array_nested":[{},[],null],"a_obj":{"a_str":"A","a_num_int":1,"a_num_float":0.1,"a_bool":true,"a_null":null,"a_empty_obj":{},"a_empty_array":[],"a_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"a_empty_array_nested":[{},[],null],"a_obj":{"a_str":"A","a_num_int":1,"a_num_float":0.1,"a_bool":true,"a_null":null,"a_empty_obj":{},"a_empty_array":[],"a_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"a_empty_array_nested":[{},[],null]},"a_array":[{"a_str":"A","a_num_int":1,"a_num_float":0.1,"a_bool":true,"a_null":null,"a_empty_obj":{},"a_empty_array":[],"a_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"a_empty_array_nested":[{},[],null]},{"a_str":"A","a_num_int":1,"a_num_float":0.1,"a_bool":true,"a_null":null,"a_empty_obj":{},"a_empty_array":[],"a_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"a_empty_array_nested":[{},[],null]}]},"a_array":[{"a_str":"A","a_num_int":1,"a_num_float":0.1,"a_bool":true,"a_null":null,"a_empty_obj":{},"a_empty_array":[],"a_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"a_empty_array_nested":[{},[],null],"a_obj":{"a_str":"A","a_num_int":1,"a_num_float":0.1,"a_bool":true,"a_null":null,"a_empty_obj":{},"a_empty_array":[],"a_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"a_empty_array_nested":[{},[],null]},"a_array":[{"a_str":"A","a_num_int":1,"a_num_float":0.1,"a_bool":true,"a_null":null,"a_empty_obj":{},"a_empty_array":[],"a_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"a_empty_array_nested":[{},[],null]},{"a_str":"A","a_num_int":1,"a_num_float":0.1,"a_bool":true,"a_null":null,"a_empty_obj":{},"a_empty_array":[],"a_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"a_empty_array_nested":[{},[],null]}]},{"a_str":"A","a_num_int":1,"a_num_float":0.1,"a_bool":true,"a_null":null,"a_empty_obj":{},"a_empty_array":[],"a_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"a_empty_array_nested":[{},[],null],"a_obj":{"a_str":"A","a_num_int":1,"a_num_float":0.1,"a_bool":true,"a_null":null,"a_empty_obj":{},"a_empty_array":[],"a_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"a_empty_array_nested":[{},[],null]},"a_array":[{"a_str":"A","a_num_int":1,"a_num_float":0.1,"a_bool":true,"a_null":null,"a_empty_obj":{},"a_empty_array":[],"a_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"a_empty_array_nested":[{},[],null]},{"a_str":"A","a_num_int":1,"a_num_float":0.1,"a_bool":true,"a_null":null,"a_empty_obj":{},"a_empty_array":[],"a_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"a_empty_array_nested":[{},[],null]}]}]} | {"a_str":"A","a_num_int":1,"a_num_float":0.1,"a_bool":true,"a_null":null,"a_empty_obj":{},"a_empty_array":[],"a_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"a_empty_array_nested":[{},[],null],"a_obj":{"a_str":"A","a_num_int":1,"a_num_float":0.1,"a_bool":true,"a_null":null,"a_empty_obj":{},"a_empty_array":[],"a_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"a_empty_array_nested":[{},[],null],"a_obj":{"a_str":"A","a_num_int":1,"a_num_float":0.1,"a_bool":true,"a_null":null,"a_empty_obj":{},"a_empty_array":[],"a_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"a_empty_array_nested":[{},[],null]},"a_array":[{"a_str":"A","a_num_int":1,"a_num_float":0.1,"a_bool":true,"a_null":null,"a_empty_obj":{},"a_empty_array":[],"a_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"a_empty_array_nested":[{},[],null]},{"a_str":"A","a_num_int":1,"a_num_float":0.1,"a_bool":true,"a_null":null,"a_empty_obj":{},"a_empty_array":[],"a_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"a_empty_array_nested":[{},[],null]}]},"a_array":[{"a_str":"A","a_num_int":1,"a_num_float":0.1,"a_bool":true,"a_null":null,"a_empty_obj":{},"a_empty_array":[],"a_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"a_empty_array_nested":[{},[],null],"a_obj":{"a_str":"A","a_num_int":1,"a_num_float":0.1,"a_bool":true,"a_null":null,"a_empty_obj":{},"a_empty_array":[],"a_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"a_empty_array_nested":[{},[],null]},"a_array":[{"a_str":"A","a_num_int":1,"a_num_float":0.1,"a_bool":true,"a_null":null,"a_empty_obj":{},"a_empty_array":[],"a_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"a_empty_array_nested":[{},[],null]},{"a_str":"A","a_num_int":1,"a_num_float":0.1,"a_bool":true,"a_null":null,"a_empty_obj":{},"a_empty_array":[],"a_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"a_empty_array_nested":[{},[],null]}]},{"a_str":"A","a_num_int":1,"a_num_float":0.1,"a_bool":true,"a_null":null,"a_empty_obj":{},"a_empty_array":[],"a_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"a_empty_array_nested":[{},[],null],"a_obj":{"a_str":"A","a_num_int":1,"a_num_float":0.1,"a_bool":true,"a_null":null,"a_empty_obj":{},"a_empty_array":[],"a_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"a_empty_array_nested":[{},[],null]},"a_array":[{"a_str":"A","a_num_int":1,"a_num_float":0.1,"a_bool":true,"a_null":null,"a_empty_obj":{},"a_empty_array":[],"a_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"a_empty_array_nested":[{},[],null]},{"a_str":"A","a_num_int":1,"a_num_float":0.1,"a_bool":true,"a_null":null,"a_empty_obj":{},"a_empty_array":[],"a_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"a_empty_array_nested":[{},[],null]}]}]} |       |         |        |            |              |         |         |             |               |        |            |              |         |         |       |   1 |
| 2022-01-01 00:00:00.000 | A     |         1 |         0.1 |      1 |        | {}          | []            | {"o1":{},"o2":[],"o3":null} | [{},[],null]         | {"a_str":"A","a_num_int":1,"a_num_float":0.1,"a_bool":true,"a_null":null,"a_empty_obj":{},"a_empty_array":[],"a_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"a_empty_array_nested":[{},[],null],"a_obj":{"a_str":"A","a_num_int":1,"a_num_float":0.1,"a_bool":true,"a_null":null,"a_empty_obj":{},"a_empty_array":[],"a_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"a_empty_array_nested":[{},[],null],"a_obj":{"a_str":"A","a_num_int":1,"a_num_float":0.1,"a_bool":true,"a_null":null,"a_empty_obj":{},"a_empty_array":[],"a_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"a_empty_array_nested":[{},[],null]},"a_array":[{"a_str":"A","a_num_int":1,"a_num_float":0.1,"a_bool":true,"a_null":null,"a_empty_obj":{},"a_empty_array":[],"a_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"a_empty_array_nested":[{},[],null]},{"a_str":"A","a_num_int":1,"a_num_float":0.1,"a_bool":true,"a_null":null,"a_empty_obj":{},"a_empty_array":[],"a_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"a_empty_array_nested":[{},[],null]}]},"a_array":[{"a_str":"A","a_num_int":1,"a_num_float":0.1,"a_bool":true,"a_null":null,"a_empty_obj":{},"a_empty_array":[],"a_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"a_empty_array_nested":[{},[],null],"a_obj":{"a_str":"A","a_num_int":1,"a_num_float":0.1,"a_bool":true,"a_null":null,"a_empty_obj":{},"a_empty_array":[],"a_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"a_empty_array_nested":[{},[],null]},"a_array":[{"a_str":"A","a_num_int":1,"a_num_float":0.1,"a_bool":true,"a_null":null,"a_empty_obj":{},"a_empty_array":[],"a_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"a_empty_array_nested":[{},[],null]},{"a_str":"A","a_num_int":1,"a_num_float":0.1,"a_bool":true,"a_null":null,"a_empty_obj":{},"a_empty_array":[],"a_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"a_empty_array_nested":[{},[],null]}]},{"a_str":"A","a_num_int":1,"a_num_float":0.1,"a_bool":true,"a_null":null,"a_empty_obj":{},"a_empty_array":[],"a_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"a_empty_array_nested":[{},[],null],"a_obj":{"a_str":"A","a_num_int":1,"a_num_float":0.1,"a_bool":true,"a_null":null,"a_empty_obj":{},"a_empty_array":[],"a_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"a_empty_array_nested":[{},[],null]},"a_array":[{"a_str":"A","a_num_int":1,"a_num_float":0.1,"a_bool":true,"a_null":null,"a_empty_obj":{},"a_empty_array":[],"a_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"a_empty_array_nested":[{},[],null]},{"a_str":"A","a_num_int":1,"a_num_float":0.1,"a_bool":true,"a_null":null,"a_empty_obj":{},"a_empty_array":[],"a_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"a_empty_array_nested":[{},[],null]}]}]} | {"a_str":"A","a_num_int":1,"a_num_float":0.1,"a_bool":true,"a_null":null,"a_empty_obj":{},"a_empty_array":[],"a_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"a_empty_array_nested":[{},[],null],"a_obj":{"a_str":"A","a_num_int":1,"a_num_float":0.1,"a_bool":true,"a_null":null,"a_empty_obj":{},"a_empty_array":[],"a_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"a_empty_array_nested":[{},[],null],"a_obj":{"a_str":"A","a_num_int":1,"a_num_float":0.1,"a_bool":true,"a_null":null,"a_empty_obj":{},"a_empty_array":[],"a_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"a_empty_array_nested":[{},[],null]},"a_array":[{"a_str":"A","a_num_int":1,"a_num_float":0.1,"a_bool":true,"a_null":null,"a_empty_obj":{},"a_empty_array":[],"a_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"a_empty_array_nested":[{},[],null]},{"a_str":"A","a_num_int":1,"a_num_float":0.1,"a_bool":true,"a_null":null,"a_empty_obj":{},"a_empty_array":[],"a_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"a_empty_array_nested":[{},[],null]}]},"a_array":[{"a_str":"A","a_num_int":1,"a_num_float":0.1,"a_bool":true,"a_null":null,"a_empty_obj":{},"a_empty_array":[],"a_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"a_empty_array_nested":[{},[],null],"a_obj":{"a_str":"A","a_num_int":1,"a_num_float":0.1,"a_bool":true,"a_null":null,"a_empty_obj":{},"a_empty_array":[],"a_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"a_empty_array_nested":[{},[],null]},"a_array":[{"a_str":"A","a_num_int":1,"a_num_float":0.1,"a_bool":true,"a_null":null,"a_empty_obj":{},"a_empty_array":[],"a_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"a_empty_array_nested":[{},[],null]},{"a_str":"A","a_num_int":1,"a_num_float":0.1,"a_bool":true,"a_null":null,"a_empty_obj":{},"a_empty_array":[],"a_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"a_empty_array_nested":[{},[],null]}]},{"a_str":"A","a_num_int":1,"a_num_float":0.1,"a_bool":true,"a_null":null,"a_empty_obj":{},"a_empty_array":[],"a_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"a_empty_array_nested":[{},[],null],"a_obj":{"a_str":"A","a_num_int":1,"a_num_float":0.1,"a_bool":true,"a_null":null,"a_empty_obj":{},"a_empty_array":[],"a_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"a_empty_array_nested":[{},[],null]},"a_array":[{"a_str":"A","a_num_int":1,"a_num_float":0.1,"a_bool":true,"a_null":null,"a_empty_obj":{},"a_empty_array":[],"a_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"a_empty_array_nested":[{},[],null]},{"a_str":"A","a_num_int":1,"a_num_float":0.1,"a_bool":true,"a_null":null,"a_empty_obj":{},"a_empty_array":[],"a_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"a_empty_array_nested":[{},[],null]}]}]} |       |         |        |            |              |         |         |             |               |        |            |              |         |         |       |   1 |
| 2022-01-01 00:00:00.000 | A     |         1 |         0.1 |      1 |        | {}          | []            | {"o1":{},"o2":[],"o3":null} | [{},[],null]         | {"a_str":"A","a_num_int":1,"a_num_float":0.1,"a_bool":true,"a_null":null,"a_empty_obj":{},"a_empty_array":[],"a_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"a_empty_array_nested":[{},[],null],"a_obj":{"a_str":"A","a_num_int":1,"a_num_float":0.1,"a_bool":true,"a_null":null,"a_empty_obj":{},"a_empty_array":[],"a_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"a_empty_array_nested":[{},[],null],"a_obj":{"a_str":"A","a_num_int":1,"a_num_float":0.1,"a_bool":true,"a_null":null,"a_empty_obj":{},"a_empty_array":[],"a_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"a_empty_array_nested":[{},[],null]},"a_array":[{"a_str":"A","a_num_int":1,"a_num_float":0.1,"a_bool":true,"a_null":null,"a_empty_obj":{},"a_empty_array":[],"a_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"a_empty_array_nested":[{},[],null]},{"a_str":"A","a_num_int":1,"a_num_float":0.1,"a_bool":true,"a_null":null,"a_empty_obj":{},"a_empty_array":[],"a_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"a_empty_array_nested":[{},[],null]}]},"a_array":[{"a_str":"A","a_num_int":1,"a_num_float":0.1,"a_bool":true,"a_null":null,"a_empty_obj":{},"a_empty_array":[],"a_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"a_empty_array_nested":[{},[],null],"a_obj":{"a_str":"A","a_num_int":1,"a_num_float":0.1,"a_bool":true,"a_null":null,"a_empty_obj":{},"a_empty_array":[],"a_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"a_empty_array_nested":[{},[],null]},"a_array":[{"a_str":"A","a_num_int":1,"a_num_float":0.1,"a_bool":true,"a_null":null,"a_empty_obj":{},"a_empty_array":[],"a_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"a_empty_array_nested":[{},[],null]},{"a_str":"A","a_num_int":1,"a_num_float":0.1,"a_bool":true,"a_null":null,"a_empty_obj":{},"a_empty_array":[],"a_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"a_empty_array_nested":[{},[],null]}]},{"a_str":"A","a_num_int":1,"a_num_float":0.1,"a_bool":true,"a_null":null,"a_empty_obj":{},"a_empty_array":[],"a_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"a_empty_array_nested":[{},[],null],"a_obj":{"a_str":"A","a_num_int":1,"a_num_float":0.1,"a_bool":true,"a_null":null,"a_empty_obj":{},"a_empty_array":[],"a_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"a_empty_array_nested":[{},[],null]},"a_array":[{"a_str":"A","a_num_int":1,"a_num_float":0.1,"a_bool":true,"a_null":null,"a_empty_obj":{},"a_empty_array":[],"a_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"a_empty_array_nested":[{},[],null]},{"a_str":"A","a_num_int":1,"a_num_float":0.1,"a_bool":true,"a_null":null,"a_empty_obj":{},"a_empty_array":[],"a_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"a_empty_array_nested":[{},[],null]}]}]} | {"a_str":"A","a_num_int":1,"a_num_float":0.1,"a_bool":true,"a_null":null,"a_empty_obj":{},"a_empty_array":[],"a_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"a_empty_array_nested":[{},[],null],"a_obj":{"a_str":"A","a_num_int":1,"a_num_float":0.1,"a_bool":true,"a_null":null,"a_empty_obj":{},"a_empty_array":[],"a_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"a_empty_array_nested":[{},[],null],"a_obj":{"a_str":"A","a_num_int":1,"a_num_float":0.1,"a_bool":true,"a_null":null,"a_empty_obj":{},"a_empty_array":[],"a_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"a_empty_array_nested":[{},[],null]},"a_array":[{"a_str":"A","a_num_int":1,"a_num_float":0.1,"a_bool":true,"a_null":null,"a_empty_obj":{},"a_empty_array":[],"a_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"a_empty_array_nested":[{},[],null]},{"a_str":"A","a_num_int":1,"a_num_float":0.1,"a_bool":true,"a_null":null,"a_empty_obj":{},"a_empty_array":[],"a_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"a_empty_array_nested":[{},[],null]}]},"a_array":[{"a_str":"A","a_num_int":1,"a_num_float":0.1,"a_bool":true,"a_null":null,"a_empty_obj":{},"a_empty_array":[],"a_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"a_empty_array_nested":[{},[],null],"a_obj":{"a_str":"A","a_num_int":1,"a_num_float":0.1,"a_bool":true,"a_null":null,"a_empty_obj":{},"a_empty_array":[],"a_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"a_empty_array_nested":[{},[],null]},"a_array":[{"a_str":"A","a_num_int":1,"a_num_float":0.1,"a_bool":true,"a_null":null,"a_empty_obj":{},"a_empty_array":[],"a_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"a_empty_array_nested":[{},[],null]},{"a_str":"A","a_num_int":1,"a_num_float":0.1,"a_bool":true,"a_null":null,"a_empty_obj":{},"a_empty_array":[],"a_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"a_empty_array_nested":[{},[],null]}]},{"a_str":"A","a_num_int":1,"a_num_float":0.1,"a_bool":true,"a_null":null,"a_empty_obj":{},"a_empty_array":[],"a_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"a_empty_array_nested":[{},[],null],"a_obj":{"a_str":"A","a_num_int":1,"a_num_float":0.1,"a_bool":true,"a_null":null,"a_empty_obj":{},"a_empty_array":[],"a_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"a_empty_array_nested":[{},[],null]},"a_array":[{"a_str":"A","a_num_int":1,"a_num_float":0.1,"a_bool":true,"a_null":null,"a_empty_obj":{},"a_empty_array":[],"a_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"a_empty_array_nested":[{},[],null]},{"a_str":"A","a_num_int":1,"a_num_float":0.1,"a_bool":true,"a_null":null,"a_empty_obj":{},"a_empty_array":[],"a_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"a_empty_array_nested":[{},[],null]}]}]} |       |         |        |            |              |         |         |             |               |        |            |              |         |         |       |   1 |
| 2022-02-01 00:00:00.000 |       |           |             |        |        |             |               |                             |                      | {"b_str":"A","b_num_int":1,"b_num_float":0.1,"b_bool":true,"b_null":null,"b_empty_obj":{},"b_empty_array":[],"b_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"b_empty_array_nested":[{},[],null],"b_obj":{"b_str":"A","b_num_int":1,"b_num_float":0.1,"b_bool":true,"b_null":null,"b_empty_obj":{},"b_empty_array":[],"b_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"b_empty_array_nested":[{},[],null],"b_obj":{"b_str":"A","b_num_int":1,"b_num_float":0.1,"b_bool":true,"b_null":null,"b_empty_obj":{},"b_empty_array":[],"b_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"b_empty_array_nested":[{},[],null]},"b_array":[{"b_str":"A","b_num_int":1,"b_num_float":0.1,"b_bool":true,"b_null":null,"b_empty_obj":{},"b_empty_array":[],"b_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"b_empty_array_nested":[{},[],null]},{"b_str":"A","b_num_int":1,"b_num_float":0.1,"b_bool":true,"b_null":null,"b_empty_obj":{},"b_empty_array":[],"b_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"b_empty_array_nested":[{},[],null]}]},"b_array":[{"b_str":"A","b_num_int":1,"b_num_float":0.1,"b_bool":true,"b_null":null,"b_empty_obj":{},"b_empty_array":[],"b_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"b_empty_array_nested":[{},[],null],"b_obj":{"b_str":"A","b_num_int":1,"b_num_float":0.1,"b_bool":true,"b_null":null,"b_empty_obj":{},"b_empty_array":[],"b_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"b_empty_array_nested":[{},[],null]},"b_array":[{"b_str":"A","b_num_int":1,"b_num_float":0.1,"b_bool":true,"b_null":null,"b_empty_obj":{},"b_empty_array":[],"b_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"b_empty_array_nested":[{},[],null]},{"b_str":"A","b_num_int":1,"b_num_float":0.1,"b_bool":true,"b_null":null,"b_empty_obj":{},"b_empty_array":[],"b_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"b_empty_array_nested":[{},[],null]}]},{"b_str":"A","b_num_int":1,"b_num_float":0.1,"b_bool":true,"b_null":null,"b_empty_obj":{},"b_empty_array":[],"b_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"b_empty_array_nested":[{},[],null],"b_obj":{"b_str":"A","b_num_int":1,"b_num_float":0.1,"b_bool":true,"b_null":null,"b_empty_obj":{},"b_empty_array":[],"b_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"b_empty_array_nested":[{},[],null]},"b_array":[{"b_str":"A","b_num_int":1,"b_num_float":0.1,"b_bool":true,"b_null":null,"b_empty_obj":{},"b_empty_array":[],"b_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"b_empty_array_nested":[{},[],null]},{"b_str":"A","b_num_int":1,"b_num_float":0.1,"b_bool":true,"b_null":null,"b_empty_obj":{},"b_empty_array":[],"b_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"b_empty_array_nested":[{},[],null]}]}]} | {"b_str":"A","b_num_int":1,"b_num_float":0.1,"b_bool":true,"b_null":null,"b_empty_obj":{},"b_empty_array":[],"b_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"b_empty_array_nested":[{},[],null],"b_obj":{"b_str":"A","b_num_int":1,"b_num_float":0.1,"b_bool":true,"b_null":null,"b_empty_obj":{},"b_empty_array":[],"b_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"b_empty_array_nested":[{},[],null],"b_obj":{"b_str":"A","b_num_int":1,"b_num_float":0.1,"b_bool":true,"b_null":null,"b_empty_obj":{},"b_empty_array":[],"b_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"b_empty_array_nested":[{},[],null]},"b_array":[{"b_str":"A","b_num_int":1,"b_num_float":0.1,"b_bool":true,"b_null":null,"b_empty_obj":{},"b_empty_array":[],"b_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"b_empty_array_nested":[{},[],null]},{"b_str":"A","b_num_int":1,"b_num_float":0.1,"b_bool":true,"b_null":null,"b_empty_obj":{},"b_empty_array":[],"b_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"b_empty_array_nested":[{},[],null]}]},"b_array":[{"b_str":"A","b_num_int":1,"b_num_float":0.1,"b_bool":true,"b_null":null,"b_empty_obj":{},"b_empty_array":[],"b_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"b_empty_array_nested":[{},[],null],"b_obj":{"b_str":"A","b_num_int":1,"b_num_float":0.1,"b_bool":true,"b_null":null,"b_empty_obj":{},"b_empty_array":[],"b_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"b_empty_array_nested":[{},[],null]},"b_array":[{"b_str":"A","b_num_int":1,"b_num_float":0.1,"b_bool":true,"b_null":null,"b_empty_obj":{},"b_empty_array":[],"b_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"b_empty_array_nested":[{},[],null]},{"b_str":"A","b_num_int":1,"b_num_float":0.1,"b_bool":true,"b_null":null,"b_empty_obj":{},"b_empty_array":[],"b_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"b_empty_array_nested":[{},[],null]}]},{"b_str":"A","b_num_int":1,"b_num_float":0.1,"b_bool":true,"b_null":null,"b_empty_obj":{},"b_empty_array":[],"b_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"b_empty_array_nested":[{},[],null],"b_obj":{"b_str":"A","b_num_int":1,"b_num_float":0.1,"b_bool":true,"b_null":null,"b_empty_obj":{},"b_empty_array":[],"b_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"b_empty_array_nested":[{},[],null]},"b_array":[{"b_str":"A","b_num_int":1,"b_num_float":0.1,"b_bool":true,"b_null":null,"b_empty_obj":{},"b_empty_array":[],"b_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"b_empty_array_nested":[{},[],null]},{"b_str":"A","b_num_int":1,"b_num_float":0.1,"b_bool":true,"b_null":null,"b_empty_obj":{},"b_empty_array":[],"b_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"b_empty_array_nested":[{},[],null]}]}]} |       |         |        |            |              |         |         |             |               |        |            |              |         |         |       |   1 |
| 2022-02-01 00:00:00.000 |       |           |             |        |        |             |               |                             |                      | {"b_str":"A","b_num_int":1,"b_num_float":0.1,"b_bool":true,"b_null":null,"b_empty_obj":{},"b_empty_array":[],"b_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"b_empty_array_nested":[{},[],null],"b_obj":{"b_str":"A","b_num_int":1,"b_num_float":0.1,"b_bool":true,"b_null":null,"b_empty_obj":{},"b_empty_array":[],"b_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"b_empty_array_nested":[{},[],null],"b_obj":{"b_str":"A","b_num_int":1,"b_num_float":0.1,"b_bool":true,"b_null":null,"b_empty_obj":{},"b_empty_array":[],"b_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"b_empty_array_nested":[{},[],null]},"b_array":[{"b_str":"A","b_num_int":1,"b_num_float":0.1,"b_bool":true,"b_null":null,"b_empty_obj":{},"b_empty_array":[],"b_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"b_empty_array_nested":[{},[],null]},{"b_str":"A","b_num_int":1,"b_num_float":0.1,"b_bool":true,"b_null":null,"b_empty_obj":{},"b_empty_array":[],"b_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"b_empty_array_nested":[{},[],null]}]},"b_array":[{"b_str":"A","b_num_int":1,"b_num_float":0.1,"b_bool":true,"b_null":null,"b_empty_obj":{},"b_empty_array":[],"b_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"b_empty_array_nested":[{},[],null],"b_obj":{"b_str":"A","b_num_int":1,"b_num_float":0.1,"b_bool":true,"b_null":null,"b_empty_obj":{},"b_empty_array":[],"b_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"b_empty_array_nested":[{},[],null]},"b_array":[{"b_str":"A","b_num_int":1,"b_num_float":0.1,"b_bool":true,"b_null":null,"b_empty_obj":{},"b_empty_array":[],"b_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"b_empty_array_nested":[{},[],null]},{"b_str":"A","b_num_int":1,"b_num_float":0.1,"b_bool":true,"b_null":null,"b_empty_obj":{},"b_empty_array":[],"b_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"b_empty_array_nested":[{},[],null]}]},{"b_str":"A","b_num_int":1,"b_num_float":0.1,"b_bool":true,"b_null":null,"b_empty_obj":{},"b_empty_array":[],"b_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"b_empty_array_nested":[{},[],null],"b_obj":{"b_str":"A","b_num_int":1,"b_num_float":0.1,"b_bool":true,"b_null":null,"b_empty_obj":{},"b_empty_array":[],"b_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"b_empty_array_nested":[{},[],null]},"b_array":[{"b_str":"A","b_num_int":1,"b_num_float":0.1,"b_bool":true,"b_null":null,"b_empty_obj":{},"b_empty_array":[],"b_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"b_empty_array_nested":[{},[],null]},{"b_str":"A","b_num_int":1,"b_num_float":0.1,"b_bool":true,"b_null":null,"b_empty_obj":{},"b_empty_array":[],"b_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"b_empty_array_nested":[{},[],null]}]}]} | {"b_str":"A","b_num_int":1,"b_num_float":0.1,"b_bool":true,"b_null":null,"b_empty_obj":{},"b_empty_array":[],"b_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"b_empty_array_nested":[{},[],null],"b_obj":{"b_str":"A","b_num_int":1,"b_num_float":0.1,"b_bool":true,"b_null":null,"b_empty_obj":{},"b_empty_array":[],"b_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"b_empty_array_nested":[{},[],null],"b_obj":{"b_str":"A","b_num_int":1,"b_num_float":0.1,"b_bool":true,"b_null":null,"b_empty_obj":{},"b_empty_array":[],"b_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"b_empty_array_nested":[{},[],null]},"b_array":[{"b_str":"A","b_num_int":1,"b_num_float":0.1,"b_bool":true,"b_null":null,"b_empty_obj":{},"b_empty_array":[],"b_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"b_empty_array_nested":[{},[],null]},{"b_str":"A","b_num_int":1,"b_num_float":0.1,"b_bool":true,"b_null":null,"b_empty_obj":{},"b_empty_array":[],"b_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"b_empty_array_nested":[{},[],null]}]},"b_array":[{"b_str":"A","b_num_int":1,"b_num_float":0.1,"b_bool":true,"b_null":null,"b_empty_obj":{},"b_empty_array":[],"b_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"b_empty_array_nested":[{},[],null],"b_obj":{"b_str":"A","b_num_int":1,"b_num_float":0.1,"b_bool":true,"b_null":null,"b_empty_obj":{},"b_empty_array":[],"b_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"b_empty_array_nested":[{},[],null]},"b_array":[{"b_str":"A","b_num_int":1,"b_num_float":0.1,"b_bool":true,"b_null":null,"b_empty_obj":{},"b_empty_array":[],"b_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"b_empty_array_nested":[{},[],null]},{"b_str":"A","b_num_int":1,"b_num_float":0.1,"b_bool":true,"b_null":null,"b_empty_obj":{},"b_empty_array":[],"b_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"b_empty_array_nested":[{},[],null]}]},{"b_str":"A","b_num_int":1,"b_num_float":0.1,"b_bool":true,"b_null":null,"b_empty_obj":{},"b_empty_array":[],"b_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"b_empty_array_nested":[{},[],null],"b_obj":{"b_str":"A","b_num_int":1,"b_num_float":0.1,"b_bool":true,"b_null":null,"b_empty_obj":{},"b_empty_array":[],"b_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"b_empty_array_nested":[{},[],null]},"b_array":[{"b_str":"A","b_num_int":1,"b_num_float":0.1,"b_bool":true,"b_null":null,"b_empty_obj":{},"b_empty_array":[],"b_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"b_empty_array_nested":[{},[],null]},{"b_str":"A","b_num_int":1,"b_num_float":0.1,"b_bool":true,"b_null":null,"b_empty_obj":{},"b_empty_array":[],"b_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"b_empty_array_nested":[{},[],null]}]}]} |       |         |        |            |              |         |         |             |               |        |            |              |         |         |       |   1 |
| 2022-02-01 00:00:00.000 |       |           |             |        |        |             |               |                             |                      | {"b_str":"A","b_num_int":1,"b_num_float":0.1,"b_bool":true,"b_null":null,"b_empty_obj":{},"b_empty_array":[],"b_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"b_empty_array_nested":[{},[],null],"b_obj":{"b_str":"A","b_num_int":1,"b_num_float":0.1,"b_bool":true,"b_null":null,"b_empty_obj":{},"b_empty_array":[],"b_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"b_empty_array_nested":[{},[],null],"b_obj":{"b_str":"A","b_num_int":1,"b_num_float":0.1,"b_bool":true,"b_null":null,"b_empty_obj":{},"b_empty_array":[],"b_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"b_empty_array_nested":[{},[],null]},"b_array":[{"b_str":"A","b_num_int":1,"b_num_float":0.1,"b_bool":true,"b_null":null,"b_empty_obj":{},"b_empty_array":[],"b_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"b_empty_array_nested":[{},[],null]},{"b_str":"A","b_num_int":1,"b_num_float":0.1,"b_bool":true,"b_null":null,"b_empty_obj":{},"b_empty_array":[],"b_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"b_empty_array_nested":[{},[],null]}]},"b_array":[{"b_str":"A","b_num_int":1,"b_num_float":0.1,"b_bool":true,"b_null":null,"b_empty_obj":{},"b_empty_array":[],"b_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"b_empty_array_nested":[{},[],null],"b_obj":{"b_str":"A","b_num_int":1,"b_num_float":0.1,"b_bool":true,"b_null":null,"b_empty_obj":{},"b_empty_array":[],"b_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"b_empty_array_nested":[{},[],null]},"b_array":[{"b_str":"A","b_num_int":1,"b_num_float":0.1,"b_bool":true,"b_null":null,"b_empty_obj":{},"b_empty_array":[],"b_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"b_empty_array_nested":[{},[],null]},{"b_str":"A","b_num_int":1,"b_num_float":0.1,"b_bool":true,"b_null":null,"b_empty_obj":{},"b_empty_array":[],"b_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"b_empty_array_nested":[{},[],null]}]},{"b_str":"A","b_num_int":1,"b_num_float":0.1,"b_bool":true,"b_null":null,"b_empty_obj":{},"b_empty_array":[],"b_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"b_empty_array_nested":[{},[],null],"b_obj":{"b_str":"A","b_num_int":1,"b_num_float":0.1,"b_bool":true,"b_null":null,"b_empty_obj":{},"b_empty_array":[],"b_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"b_empty_array_nested":[{},[],null]},"b_array":[{"b_str":"A","b_num_int":1,"b_num_float":0.1,"b_bool":true,"b_null":null,"b_empty_obj":{},"b_empty_array":[],"b_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"b_empty_array_nested":[{},[],null]},{"b_str":"A","b_num_int":1,"b_num_float":0.1,"b_bool":true,"b_null":null,"b_empty_obj":{},"b_empty_array":[],"b_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"b_empty_array_nested":[{},[],null]}]}]} | {"b_str":"A","b_num_int":1,"b_num_float":0.1,"b_bool":true,"b_null":null,"b_empty_obj":{},"b_empty_array":[],"b_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"b_empty_array_nested":[{},[],null],"b_obj":{"b_str":"A","b_num_int":1,"b_num_float":0.1,"b_bool":true,"b_null":null,"b_empty_obj":{},"b_empty_array":[],"b_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"b_empty_array_nested":[{},[],null],"b_obj":{"b_str":"A","b_num_int":1,"b_num_float":0.1,"b_bool":true,"b_null":null,"b_empty_obj":{},"b_empty_array":[],"b_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"b_empty_array_nested":[{},[],null]},"b_array":[{"b_str":"A","b_num_int":1,"b_num_float":0.1,"b_bool":true,"b_null":null,"b_empty_obj":{},"b_empty_array":[],"b_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"b_empty_array_nested":[{},[],null]},{"b_str":"A","b_num_int":1,"b_num_float":0.1,"b_bool":true,"b_null":null,"b_empty_obj":{},"b_empty_array":[],"b_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"b_empty_array_nested":[{},[],null]}]},"b_array":[{"b_str":"A","b_num_int":1,"b_num_float":0.1,"b_bool":true,"b_null":null,"b_empty_obj":{},"b_empty_array":[],"b_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"b_empty_array_nested":[{},[],null],"b_obj":{"b_str":"A","b_num_int":1,"b_num_float":0.1,"b_bool":true,"b_null":null,"b_empty_obj":{},"b_empty_array":[],"b_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"b_empty_array_nested":[{},[],null]},"b_array":[{"b_str":"A","b_num_int":1,"b_num_float":0.1,"b_bool":true,"b_null":null,"b_empty_obj":{},"b_empty_array":[],"b_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"b_empty_array_nested":[{},[],null]},{"b_str":"A","b_num_int":1,"b_num_float":0.1,"b_bool":true,"b_null":null,"b_empty_obj":{},"b_empty_array":[],"b_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"b_empty_array_nested":[{},[],null]}]},{"b_str":"A","b_num_int":1,"b_num_float":0.1,"b_bool":true,"b_null":null,"b_empty_obj":{},"b_empty_array":[],"b_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"b_empty_array_nested":[{},[],null],"b_obj":{"b_str":"A","b_num_int":1,"b_num_float":0.1,"b_bool":true,"b_null":null,"b_empty_obj":{},"b_empty_array":[],"b_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"b_empty_array_nested":[{},[],null]},"b_array":[{"b_str":"A","b_num_int":1,"b_num_float":0.1,"b_bool":true,"b_null":null,"b_empty_obj":{},"b_empty_array":[],"b_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"b_empty_array_nested":[{},[],null]},{"b_str":"A","b_num_int":1,"b_num_float":0.1,"b_bool":true,"b_null":null,"b_empty_obj":{},"b_empty_array":[],"b_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"b_empty_array_nested":[{},[],null]}]}]} |       |         |        |            |              |         |         |             |               |        |            |              |         |         |       |   1 |
| 2022-02-01 00:00:00.000 |       |           |             |        |        |             |               |                             |                      | {"b_str":"A","b_num_int":1,"b_num_float":0.1,"b_bool":true,"b_null":null,"b_empty_obj":{},"b_empty_array":[],"b_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"b_empty_array_nested":[{},[],null],"b_obj":{"b_str":"A","b_num_int":1,"b_num_float":0.1,"b_bool":true,"b_null":null,"b_empty_obj":{},"b_empty_array":[],"b_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"b_empty_array_nested":[{},[],null],"b_obj":{"b_str":"A","b_num_int":1,"b_num_float":0.1,"b_bool":true,"b_null":null,"b_empty_obj":{},"b_empty_array":[],"b_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"b_empty_array_nested":[{},[],null]},"b_array":[{"b_str":"A","b_num_int":1,"b_num_float":0.1,"b_bool":true,"b_null":null,"b_empty_obj":{},"b_empty_array":[],"b_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"b_empty_array_nested":[{},[],null]},{"b_str":"A","b_num_int":1,"b_num_float":0.1,"b_bool":true,"b_null":null,"b_empty_obj":{},"b_empty_array":[],"b_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"b_empty_array_nested":[{},[],null]}]},"b_array":[{"b_str":"A","b_num_int":1,"b_num_float":0.1,"b_bool":true,"b_null":null,"b_empty_obj":{},"b_empty_array":[],"b_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"b_empty_array_nested":[{},[],null],"b_obj":{"b_str":"A","b_num_int":1,"b_num_float":0.1,"b_bool":true,"b_null":null,"b_empty_obj":{},"b_empty_array":[],"b_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"b_empty_array_nested":[{},[],null]},"b_array":[{"b_str":"A","b_num_int":1,"b_num_float":0.1,"b_bool":true,"b_null":null,"b_empty_obj":{},"b_empty_array":[],"b_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"b_empty_array_nested":[{},[],null]},{"b_str":"A","b_num_int":1,"b_num_float":0.1,"b_bool":true,"b_null":null,"b_empty_obj":{},"b_empty_array":[],"b_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"b_empty_array_nested":[{},[],null]}]},{"b_str":"A","b_num_int":1,"b_num_float":0.1,"b_bool":true,"b_null":null,"b_empty_obj":{},"b_empty_array":[],"b_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"b_empty_array_nested":[{},[],null],"b_obj":{"b_str":"A","b_num_int":1,"b_num_float":0.1,"b_bool":true,"b_null":null,"b_empty_obj":{},"b_empty_array":[],"b_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"b_empty_array_nested":[{},[],null]},"b_array":[{"b_str":"A","b_num_int":1,"b_num_float":0.1,"b_bool":true,"b_null":null,"b_empty_obj":{},"b_empty_array":[],"b_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"b_empty_array_nested":[{},[],null]},{"b_str":"A","b_num_int":1,"b_num_float":0.1,"b_bool":true,"b_null":null,"b_empty_obj":{},"b_empty_array":[],"b_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"b_empty_array_nested":[{},[],null]}]}]} | {"b_str":"A","b_num_int":1,"b_num_float":0.1,"b_bool":true,"b_null":null,"b_empty_obj":{},"b_empty_array":[],"b_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"b_empty_array_nested":[{},[],null],"b_obj":{"b_str":"A","b_num_int":1,"b_num_float":0.1,"b_bool":true,"b_null":null,"b_empty_obj":{},"b_empty_array":[],"b_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"b_empty_array_nested":[{},[],null],"b_obj":{"b_str":"A","b_num_int":1,"b_num_float":0.1,"b_bool":true,"b_null":null,"b_empty_obj":{},"b_empty_array":[],"b_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"b_empty_array_nested":[{},[],null]},"b_array":[{"b_str":"A","b_num_int":1,"b_num_float":0.1,"b_bool":true,"b_null":null,"b_empty_obj":{},"b_empty_array":[],"b_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"b_empty_array_nested":[{},[],null]},{"b_str":"A","b_num_int":1,"b_num_float":0.1,"b_bool":true,"b_null":null,"b_empty_obj":{},"b_empty_array":[],"b_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"b_empty_array_nested":[{},[],null]}]},"b_array":[{"b_str":"A","b_num_int":1,"b_num_float":0.1,"b_bool":true,"b_null":null,"b_empty_obj":{},"b_empty_array":[],"b_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"b_empty_array_nested":[{},[],null],"b_obj":{"b_str":"A","b_num_int":1,"b_num_float":0.1,"b_bool":true,"b_null":null,"b_empty_obj":{},"b_empty_array":[],"b_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"b_empty_array_nested":[{},[],null]},"b_array":[{"b_str":"A","b_num_int":1,"b_num_float":0.1,"b_bool":true,"b_null":null,"b_empty_obj":{},"b_empty_array":[],"b_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"b_empty_array_nested":[{},[],null]},{"b_str":"A","b_num_int":1,"b_num_float":0.1,"b_bool":true,"b_null":null,"b_empty_obj":{},"b_empty_array":[],"b_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"b_empty_array_nested":[{},[],null]}]},{"b_str":"A","b_num_int":1,"b_num_float":0.1,"b_bool":true,"b_null":null,"b_empty_obj":{},"b_empty_array":[],"b_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"b_empty_array_nested":[{},[],null],"b_obj":{"b_str":"A","b_num_int":1,"b_num_float":0.1,"b_bool":true,"b_null":null,"b_empty_obj":{},"b_empty_array":[],"b_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"b_empty_array_nested":[{},[],null]},"b_array":[{"b_str":"A","b_num_int":1,"b_num_float":0.1,"b_bool":true,"b_null":null,"b_empty_obj":{},"b_empty_array":[],"b_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"b_empty_array_nested":[{},[],null]},{"b_str":"A","b_num_int":1,"b_num_float":0.1,"b_bool":true,"b_null":null,"b_empty_obj":{},"b_empty_array":[],"b_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"b_empty_array_nested":[{},[],null]}]}]} |       |         |        |            |              |         |         |             |               |        |            |              |         |         |       |   1 |

(8 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_datatype_sql TEST_ID: A019 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------

SELECT *
FROM test_json_cols;

| __time                  | s_str | s_num_int | s_num_float | s_bool | s_null | c_empty_obj | c_empty_array | c_empty_obj_nested          | c_empty_array_nested | c| c| t_obj | t_array | t_str1 | t_num_int1 | t_num_float1 | t_bool1 | t_null1 | t_empty_obj | t_empty_array | t_str2 | t_num_int2 | t_num_float2 | t_bool2 | t_null2 | t_new | cnt |

| 2022-01-01 00:00:00.000 | A     |         1 |         0.1 |      1 |        | {}          | []            | {"o1":{},"o2":[],"o3":null} | [{},[],null]         | {"a_str":"A","a_num_int":1,"a_num_float":0.1,"a_bool":true,"a_null":null,"a_empty_obj":{},"a_empty_array":[],"a_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"a_empty_array_nested":[{},[],null],"a_obj":{"a_str":"A","a_num_int":1,"a_num_float":0.1,"a_bool":true,"a_null":null,"a_empty_obj":{},"a_empty_array":[],"a_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"a_empty_array_nested":[{},[],null],"a_obj":{"a_str":"A","a_num_int":1,"a_num_float":0.1,"a_bool":true,"a_null":null,"a_empty_obj":{},"a_empty_array":[],"a_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"a_empty_array_nested":[{},[],null]},"a_array":[{"a_str":"A","a_num_int":1,"a_num_float":0.1,"a_bool":true,"a_null":null,"a_empty_obj":{},"a_empty_array":[],"a_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"a_empty_array_nested":[{},[],null]},{"a_str":"A","a_num_int":1,"a_num_float":0.1,"a_bool":true,"a_null":null,"a_empty_obj":{},"a_empty_array":[],"a_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"a_empty_array_nested":[{},[],null]}]},"a_array":[{"a_str":"A","a_num_int":1,"a_num_float":0.1,"a_bool":true,"a_null":null,"a_empty_obj":{},"a_empty_array":[],"a_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"a_empty_array_nested":[{},[],null],"a_obj":{"a_str":"A","a_num_int":1,"a_num_float":0.1,"a_bool":true,"a_null":null,"a_empty_obj":{},"a_empty_array":[],"a_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"a_empty_array_nested":[{},[],null]},"a_array":[{"a_str":"A","a_num_int":1,"a_num_float":0.1,"a_bool":true,"a_null":null,"a_empty_obj":{},"a_empty_array":[],"a_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"a_empty_array_nested":[{},[],null]},{"a_str":"A","a_num_int":1,"a_num_float":0.1,"a_bool":true,"a_null":null,"a_empty_obj":{},"a_empty_array":[],"a_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"a_empty_array_nested":[{},[],null]}]},{"a_str":"A","a_num_int":1,"a_num_float":0.1,"a_bool":true,"a_null":null,"a_empty_obj":{},"a_empty_array":[],"a_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"a_empty_array_nested":[{},[],null],"a_obj":{"a_str":"A","a_num_int":1,"a_num_float":0.1,"a_bool":true,"a_null":null,"a_empty_obj":{},"a_empty_array":[],"a_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"a_empty_array_nested":[{},[],null]},"a_array":[{"a_str":"A","a_num_int":1,"a_num_float":0.1,"a_bool":true,"a_null":null,"a_empty_obj":{},"a_empty_array":[],"a_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"a_empty_array_nested":[{},[],null]},{"a_str":"A","a_num_int":1,"a_num_float":0.1,"a_bool":true,"a_null":null,"a_empty_obj":{},"a_empty_array":[],"a_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"a_empty_array_nested":[{},[],null]}]}]} | {"a_str":"A","a_num_int":1,"a_num_float":0.1,"a_bool":true,"a_null":null,"a_empty_obj":{},"a_empty_array":[],"a_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"a_empty_array_nested":[{},[],null],"a_obj":{"a_str":"A","a_num_int":1,"a_num_float":0.1,"a_bool":true,"a_null":null,"a_empty_obj":{},"a_empty_array":[],"a_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"a_empty_array_nested":[{},[],null],"a_obj":{"a_str":"A","a_num_int":1,"a_num_float":0.1,"a_bool":true,"a_null":null,"a_empty_obj":{},"a_empty_array":[],"a_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"a_empty_array_nested":[{},[],null]},"a_array":[{"a_str":"A","a_num_int":1,"a_num_float":0.1,"a_bool":true,"a_null":null,"a_empty_obj":{},"a_empty_array":[],"a_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"a_empty_array_nested":[{},[],null]},{"a_str":"A","a_num_int":1,"a_num_float":0.1,"a_bool":true,"a_null":null,"a_empty_obj":{},"a_empty_array":[],"a_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"a_empty_array_nested":[{},[],null]}]},"a_array":[{"a_str":"A","a_num_int":1,"a_num_float":0.1,"a_bool":true,"a_null":null,"a_empty_obj":{},"a_empty_array":[],"a_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"a_empty_array_nested":[{},[],null],"a_obj":{"a_str":"A","a_num_int":1,"a_num_float":0.1,"a_bool":true,"a_null":null,"a_empty_obj":{},"a_empty_array":[],"a_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"a_empty_array_nested":[{},[],null]},"a_array":[{"a_str":"A","a_num_int":1,"a_num_float":0.1,"a_bool":true,"a_null":null,"a_empty_obj":{},"a_empty_array":[],"a_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"a_empty_array_nested":[{},[],null]},{"a_str":"A","a_num_int":1,"a_num_float":0.1,"a_bool":true,"a_null":null,"a_empty_obj":{},"a_empty_array":[],"a_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"a_empty_array_nested":[{},[],null]}]},{"a_str":"A","a_num_int":1,"a_num_float":0.1,"a_bool":true,"a_null":null,"a_empty_obj":{},"a_empty_array":[],"a_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"a_empty_array_nested":[{},[],null],"a_obj":{"a_str":"A","a_num_int":1,"a_num_float":0.1,"a_bool":true,"a_null":null,"a_empty_obj":{},"a_empty_array":[],"a_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"a_empty_array_nested":[{},[],null]},"a_array":[{"a_str":"A","a_num_int":1,"a_num_float":0.1,"a_bool":true,"a_null":null,"a_empty_obj":{},"a_empty_array":[],"a_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"a_empty_array_nested":[{},[],null]},{"a_str":"A","a_num_int":1,"a_num_float":0.1,"a_bool":true,"a_null":null,"a_empty_obj":{},"a_empty_array":[],"a_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"a_empty_array_nested":[{},[],null]}]}]} |       |         |        |            |              |         |         |             |               |        |            |              |         |         |       |   1 |
| 2022-01-01 00:00:00.000 | A     |         1 |         0.1 |      1 |        | {}          | []            | {"o1":{},"o2":[],"o3":null} | [{},[],null]         | {"a_str":"A","a_num_int":1,"a_num_float":0.1,"a_bool":true,"a_null":null,"a_empty_obj":{},"a_empty_array":[],"a_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"a_empty_array_nested":[{},[],null],"a_obj":{"a_str":"A","a_num_int":1,"a_num_float":0.1,"a_bool":true,"a_null":null,"a_empty_obj":{},"a_empty_array":[],"a_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"a_empty_array_nested":[{},[],null],"a_obj":{"a_str":"A","a_num_int":1,"a_num_float":0.1,"a_bool":true,"a_null":null,"a_empty_obj":{},"a_empty_array":[],"a_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"a_empty_array_nested":[{},[],null]},"a_array":[{"a_str":"A","a_num_int":1,"a_num_float":0.1,"a_bool":true,"a_null":null,"a_empty_obj":{},"a_empty_array":[],"a_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"a_empty_array_nested":[{},[],null]},{"a_str":"A","a_num_int":1,"a_num_float":0.1,"a_bool":true,"a_null":null,"a_empty_obj":{},"a_empty_array":[],"a_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"a_empty_array_nested":[{},[],null]}]},"a_array":[{"a_str":"A","a_num_int":1,"a_num_float":0.1,"a_bool":true,"a_null":null,"a_empty_obj":{},"a_empty_array":[],"a_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"a_empty_array_nested":[{},[],null],"a_obj":{"a_str":"A","a_num_int":1,"a_num_float":0.1,"a_bool":true,"a_null":null,"a_empty_obj":{},"a_empty_array":[],"a_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"a_empty_array_nested":[{},[],null]},"a_array":[{"a_str":"A","a_num_int":1,"a_num_float":0.1,"a_bool":true,"a_null":null,"a_empty_obj":{},"a_empty_array":[],"a_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"a_empty_array_nested":[{},[],null]},{"a_str":"A","a_num_int":1,"a_num_float":0.1,"a_bool":true,"a_null":null,"a_empty_obj":{},"a_empty_array":[],"a_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"a_empty_array_nested":[{},[],null]}]},{"a_str":"A","a_num_int":1,"a_num_float":0.1,"a_bool":true,"a_null":null,"a_empty_obj":{},"a_empty_array":[],"a_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"a_empty_array_nested":[{},[],null],"a_obj":{"a_str":"A","a_num_int":1,"a_num_float":0.1,"a_bool":true,"a_null":null,"a_empty_obj":{},"a_empty_array":[],"a_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"a_empty_array_nested":[{},[],null]},"a_array":[{"a_str":"A","a_num_int":1,"a_num_float":0.1,"a_bool":true,"a_null":null,"a_empty_obj":{},"a_empty_array":[],"a_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"a_empty_array_nested":[{},[],null]},{"a_str":"A","a_num_int":1,"a_num_float":0.1,"a_bool":true,"a_null":null,"a_empty_obj":{},"a_empty_array":[],"a_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"a_empty_array_nested":[{},[],null]}]}]} | {"a_str":"A","a_num_int":1,"a_num_float":0.1,"a_bool":true,"a_null":null,"a_empty_obj":{},"a_empty_array":[],"a_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"a_empty_array_nested":[{},[],null],"a_obj":{"a_str":"A","a_num_int":1,"a_num_float":0.1,"a_bool":true,"a_null":null,"a_empty_obj":{},"a_empty_array":[],"a_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"a_empty_array_nested":[{},[],null],"a_obj":{"a_str":"A","a_num_int":1,"a_num_float":0.1,"a_bool":true,"a_null":null,"a_empty_obj":{},"a_empty_array":[],"a_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"a_empty_array_nested":[{},[],null]},"a_array":[{"a_str":"A","a_num_int":1,"a_num_float":0.1,"a_bool":true,"a_null":null,"a_empty_obj":{},"a_empty_array":[],"a_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"a_empty_array_nested":[{},[],null]},{"a_str":"A","a_num_int":1,"a_num_float":0.1,"a_bool":true,"a_null":null,"a_empty_obj":{},"a_empty_array":[],"a_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"a_empty_array_nested":[{},[],null]}]},"a_array":[{"a_str":"A","a_num_int":1,"a_num_float":0.1,"a_bool":true,"a_null":null,"a_empty_obj":{},"a_empty_array":[],"a_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"a_empty_array_nested":[{},[],null],"a_obj":{"a_str":"A","a_num_int":1,"a_num_float":0.1,"a_bool":true,"a_null":null,"a_empty_obj":{},"a_empty_array":[],"a_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"a_empty_array_nested":[{},[],null]},"a_array":[{"a_str":"A","a_num_int":1,"a_num_float":0.1,"a_bool":true,"a_null":null,"a_empty_obj":{},"a_empty_array":[],"a_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"a_empty_array_nested":[{},[],null]},{"a_str":"A","a_num_int":1,"a_num_float":0.1,"a_bool":true,"a_null":null,"a_empty_obj":{},"a_empty_array":[],"a_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"a_empty_array_nested":[{},[],null]}]},{"a_str":"A","a_num_int":1,"a_num_float":0.1,"a_bool":true,"a_null":null,"a_empty_obj":{},"a_empty_array":[],"a_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"a_empty_array_nested":[{},[],null],"a_obj":{"a_str":"A","a_num_int":1,"a_num_float":0.1,"a_bool":true,"a_null":null,"a_empty_obj":{},"a_empty_array":[],"a_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"a_empty_array_nested":[{},[],null]},"a_array":[{"a_str":"A","a_num_int":1,"a_num_float":0.1,"a_bool":true,"a_null":null,"a_empty_obj":{},"a_empty_array":[],"a_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"a_empty_array_nested":[{},[],null]},{"a_str":"A","a_num_int":1,"a_num_float":0.1,"a_bool":true,"a_null":null,"a_empty_obj":{},"a_empty_array":[],"a_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"a_empty_array_nested":[{},[],null]}]}]} |       |         |        |            |              |         |         |             |               |        |            |              |         |         |       |   1 |
| 2022-02-01 00:00:00.000 |       |           |             |        |        |             |               |                             |                      | {"b_str":"A","b_num_int":1,"b_num_float":0.1,"b_bool":true,"b_null":null,"b_empty_obj":{},"b_empty_array":[],"b_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"b_empty_array_nested":[{},[],null],"b_obj":{"b_str":"A","b_num_int":1,"b_num_float":0.1,"b_bool":true,"b_null":null,"b_empty_obj":{},"b_empty_array":[],"b_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"b_empty_array_nested":[{},[],null],"b_obj":{"b_str":"A","b_num_int":1,"b_num_float":0.1,"b_bool":true,"b_null":null,"b_empty_obj":{},"b_empty_array":[],"b_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"b_empty_array_nested":[{},[],null]},"b_array":[{"b_str":"A","b_num_int":1,"b_num_float":0.1,"b_bool":true,"b_null":null,"b_empty_obj":{},"b_empty_array":[],"b_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"b_empty_array_nested":[{},[],null]},{"b_str":"A","b_num_int":1,"b_num_float":0.1,"b_bool":true,"b_null":null,"b_empty_obj":{},"b_empty_array":[],"b_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"b_empty_array_nested":[{},[],null]}]},"b_array":[{"b_str":"A","b_num_int":1,"b_num_float":0.1,"b_bool":true,"b_null":null,"b_empty_obj":{},"b_empty_array":[],"b_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"b_empty_array_nested":[{},[],null],"b_obj":{"b_str":"A","b_num_int":1,"b_num_float":0.1,"b_bool":true,"b_null":null,"b_empty_obj":{},"b_empty_array":[],"b_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"b_empty_array_nested":[{},[],null]},"b_array":[{"b_str":"A","b_num_int":1,"b_num_float":0.1,"b_bool":true,"b_null":null,"b_empty_obj":{},"b_empty_array":[],"b_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"b_empty_array_nested":[{},[],null]},{"b_str":"A","b_num_int":1,"b_num_float":0.1,"b_bool":true,"b_null":null,"b_empty_obj":{},"b_empty_array":[],"b_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"b_empty_array_nested":[{},[],null]}]},{"b_str":"A","b_num_int":1,"b_num_float":0.1,"b_bool":true,"b_null":null,"b_empty_obj":{},"b_empty_array":[],"b_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"b_empty_array_nested":[{},[],null],"b_obj":{"b_str":"A","b_num_int":1,"b_num_float":0.1,"b_bool":true,"b_null":null,"b_empty_obj":{},"b_empty_array":[],"b_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"b_empty_array_nested":[{},[],null]},"b_array":[{"b_str":"A","b_num_int":1,"b_num_float":0.1,"b_bool":true,"b_null":null,"b_empty_obj":{},"b_empty_array":[],"b_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"b_empty_array_nested":[{},[],null]},{"b_str":"A","b_num_int":1,"b_num_float":0.1,"b_bool":true,"b_null":null,"b_empty_obj":{},"b_empty_array":[],"b_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"b_empty_array_nested":[{},[],null]}]}]} | {"b_str":"A","b_num_int":1,"b_num_float":0.1,"b_bool":true,"b_null":null,"b_empty_obj":{},"b_empty_array":[],"b_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"b_empty_array_nested":[{},[],null],"b_obj":{"b_str":"A","b_num_int":1,"b_num_float":0.1,"b_bool":true,"b_null":null,"b_empty_obj":{},"b_empty_array":[],"b_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"b_empty_array_nested":[{},[],null],"b_obj":{"b_str":"A","b_num_int":1,"b_num_float":0.1,"b_bool":true,"b_null":null,"b_empty_obj":{},"b_empty_array":[],"b_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"b_empty_array_nested":[{},[],null]},"b_array":[{"b_str":"A","b_num_int":1,"b_num_float":0.1,"b_bool":true,"b_null":null,"b_empty_obj":{},"b_empty_array":[],"b_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"b_empty_array_nested":[{},[],null]},{"b_str":"A","b_num_int":1,"b_num_float":0.1,"b_bool":true,"b_null":null,"b_empty_obj":{},"b_empty_array":[],"b_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"b_empty_array_nested":[{},[],null]}]},"b_array":[{"b_str":"A","b_num_int":1,"b_num_float":0.1,"b_bool":true,"b_null":null,"b_empty_obj":{},"b_empty_array":[],"b_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"b_empty_array_nested":[{},[],null],"b_obj":{"b_str":"A","b_num_int":1,"b_num_float":0.1,"b_bool":true,"b_null":null,"b_empty_obj":{},"b_empty_array":[],"b_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"b_empty_array_nested":[{},[],null]},"b_array":[{"b_str":"A","b_num_int":1,"b_num_float":0.1,"b_bool":true,"b_null":null,"b_empty_obj":{},"b_empty_array":[],"b_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"b_empty_array_nested":[{},[],null]},{"b_str":"A","b_num_int":1,"b_num_float":0.1,"b_bool":true,"b_null":null,"b_empty_obj":{},"b_empty_array":[],"b_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"b_empty_array_nested":[{},[],null]}]},{"b_str":"A","b_num_int":1,"b_num_float":0.1,"b_bool":true,"b_null":null,"b_empty_obj":{},"b_empty_array":[],"b_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"b_empty_array_nested":[{},[],null],"b_obj":{"b_str":"A","b_num_int":1,"b_num_float":0.1,"b_bool":true,"b_null":null,"b_empty_obj":{},"b_empty_array":[],"b_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"b_empty_array_nested":[{},[],null]},"b_array":[{"b_str":"A","b_num_int":1,"b_num_float":0.1,"b_bool":true,"b_null":null,"b_empty_obj":{},"b_empty_array":[],"b_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"b_empty_array_nested":[{},[],null]},{"b_str":"A","b_num_int":1,"b_num_float":0.1,"b_bool":true,"b_null":null,"b_empty_obj":{},"b_empty_array":[],"b_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"b_empty_array_nested":[{},[],null]}]}]} |       |         |        |            |              |         |         |             |               |        |            |              |         |         |       |   1 |
| 2022-02-01 00:00:00.000 |       |           |             |        |        |             |               |                             |                      | {"b_str":"A","b_num_int":1,"b_num_float":0.1,"b_bool":true,"b_null":null,"b_empty_obj":{},"b_empty_array":[],"b_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"b_empty_array_nested":[{},[],null],"b_obj":{"b_str":"A","b_num_int":1,"b_num_float":0.1,"b_bool":true,"b_null":null,"b_empty_obj":{},"b_empty_array":[],"b_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"b_empty_array_nested":[{},[],null],"b_obj":{"b_str":"A","b_num_int":1,"b_num_float":0.1,"b_bool":true,"b_null":null,"b_empty_obj":{},"b_empty_array":[],"b_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"b_empty_array_nested":[{},[],null]},"b_array":[{"b_str":"A","b_num_int":1,"b_num_float":0.1,"b_bool":true,"b_null":null,"b_empty_obj":{},"b_empty_array":[],"b_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"b_empty_array_nested":[{},[],null]},{"b_str":"A","b_num_int":1,"b_num_float":0.1,"b_bool":true,"b_null":null,"b_empty_obj":{},"b_empty_array":[],"b_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"b_empty_array_nested":[{},[],null]}]},"b_array":[{"b_str":"A","b_num_int":1,"b_num_float":0.1,"b_bool":true,"b_null":null,"b_empty_obj":{},"b_empty_array":[],"b_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"b_empty_array_nested":[{},[],null],"b_obj":{"b_str":"A","b_num_int":1,"b_num_float":0.1,"b_bool":true,"b_null":null,"b_empty_obj":{},"b_empty_array":[],"b_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"b_empty_array_nested":[{},[],null]},"b_array":[{"b_str":"A","b_num_int":1,"b_num_float":0.1,"b_bool":true,"b_null":null,"b_empty_obj":{},"b_empty_array":[],"b_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"b_empty_array_nested":[{},[],null]},{"b_str":"A","b_num_int":1,"b_num_float":0.1,"b_bool":true,"b_null":null,"b_empty_obj":{},"b_empty_array":[],"b_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"b_empty_array_nested":[{},[],null]}]},{"b_str":"A","b_num_int":1,"b_num_float":0.1,"b_bool":true,"b_null":null,"b_empty_obj":{},"b_empty_array":[],"b_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"b_empty_array_nested":[{},[],null],"b_obj":{"b_str":"A","b_num_int":1,"b_num_float":0.1,"b_bool":true,"b_null":null,"b_empty_obj":{},"b_empty_array":[],"b_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"b_empty_array_nested":[{},[],null]},"b_array":[{"b_str":"A","b_num_int":1,"b_num_float":0.1,"b_bool":true,"b_null":null,"b_empty_obj":{},"b_empty_array":[],"b_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"b_empty_array_nested":[{},[],null]},{"b_str":"A","b_num_int":1,"b_num_float":0.1,"b_bool":true,"b_null":null,"b_empty_obj":{},"b_empty_array":[],"b_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"b_empty_array_nested":[{},[],null]}]}]} | {"b_str":"A","b_num_int":1,"b_num_float":0.1,"b_bool":true,"b_null":null,"b_empty_obj":{},"b_empty_array":[],"b_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"b_empty_array_nested":[{},[],null],"b_obj":{"b_str":"A","b_num_int":1,"b_num_float":0.1,"b_bool":true,"b_null":null,"b_empty_obj":{},"b_empty_array":[],"b_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"b_empty_array_nested":[{},[],null],"b_obj":{"b_str":"A","b_num_int":1,"b_num_float":0.1,"b_bool":true,"b_null":null,"b_empty_obj":{},"b_empty_array":[],"b_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"b_empty_array_nested":[{},[],null]},"b_array":[{"b_str":"A","b_num_int":1,"b_num_float":0.1,"b_bool":true,"b_null":null,"b_empty_obj":{},"b_empty_array":[],"b_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"b_empty_array_nested":[{},[],null]},{"b_str":"A","b_num_int":1,"b_num_float":0.1,"b_bool":true,"b_null":null,"b_empty_obj":{},"b_empty_array":[],"b_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"b_empty_array_nested":[{},[],null]}]},"b_array":[{"b_str":"A","b_num_int":1,"b_num_float":0.1,"b_bool":true,"b_null":null,"b_empty_obj":{},"b_empty_array":[],"b_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"b_empty_array_nested":[{},[],null],"b_obj":{"b_str":"A","b_num_int":1,"b_num_float":0.1,"b_bool":true,"b_null":null,"b_empty_obj":{},"b_empty_array":[],"b_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"b_empty_array_nested":[{},[],null]},"b_array":[{"b_str":"A","b_num_int":1,"b_num_float":0.1,"b_bool":true,"b_null":null,"b_empty_obj":{},"b_empty_array":[],"b_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"b_empty_array_nested":[{},[],null]},{"b_str":"A","b_num_int":1,"b_num_float":0.1,"b_bool":true,"b_null":null,"b_empty_obj":{},"b_empty_array":[],"b_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"b_empty_array_nested":[{},[],null]}]},{"b_str":"A","b_num_int":1,"b_num_float":0.1,"b_bool":true,"b_null":null,"b_empty_obj":{},"b_empty_array":[],"b_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"b_empty_array_nested":[{},[],null],"b_obj":{"b_str":"A","b_num_int":1,"b_num_float":0.1,"b_bool":true,"b_null":null,"b_empty_obj":{},"b_empty_array":[],"b_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"b_empty_array_nested":[{},[],null]},"b_array":[{"b_str":"A","b_num_int":1,"b_num_float":0.1,"b_bool":true,"b_null":null,"b_empty_obj":{},"b_empty_array":[],"b_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"b_empty_array_nested":[{},[],null]},{"b_str":"A","b_num_int":1,"b_num_float":0.1,"b_bool":true,"b_null":null,"b_empty_obj":{},"b_empty_array":[],"b_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"b_empty_array_nested":[{},[],null]}]}]} |       |         |        |            |              |         |         |             |               |        |            |              |         |         |       |   1 |

(4 rows)

!ok

{
  "queryType" : "scan",
  "dataSource" : {
    "type" : "table",
    "name" : "test_json_cols"
  },
  "intervals" : {
    "type" : "intervals",
    "intervals" : [ "-146136543-09-08T08:23:32.096Z/146140482-04-24T15:36:27.903Z" ]
  },
  "resultFormat" : "compactedList",
  "columns" : [ "__time", "s_str", "s_num_int", "s_num_float", "s_bool", "s_null", "c_empty_obj", "c_empty_array", "c_empty_obj_nested", "c_empty_array_nested", "c1", "c2", "t_obj", "t_array", "t_str1", "t_num_int1", "t_num_float1", "t_bool1", "t_null1", "t_empty_obj", "t_empty_array", "t_str2", "t_num_int2", "t_num_float2", "t_bool2", "t_null2", "t_new", "cnt" ],
  "columnTypes" : [ "LONG", "STRING", "LONG", "DOUBLE", "LONG", "STRING", "COMPLEX<json>", "ARRAY<LONG>", "COMPLEX<json>", "COMPLEX<json>", "COMPLEX<json>", "COMPLEX<json>", "STRING", "STRING", "STRING", "STRING", "STRING", "STRING", "STRING", "STRING", "STRING", "STRING", "LONG", "STRING", "STRING", "STRING", "STRING", "LONG" ],
  "granularity" : {
    "type" : "all"
  },
  "legacy" : false
}
!nativePlan

#-------------------------------------------------------------------------
# TESTCASE: test_func_json_value TEST_ID: A001 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT json_value(__time, '$') c
FROM test_json_cols;
+---------------+
| c             |
+---------------+
| 1640995200000 |
| 1640995200000 |
| 1643673600000 |
| 1643673600000 |
+---------------+
(4 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_func_json_value TEST_ID: A002 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT count(*) c
FROM test_json_cols
WHERE json_value(__time, '$' RETURNING bigint) = 1640995200000;
+---+
| c |
+---+
| 2 |
+---+
(1 row)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_func_json_value TEST_ID: A003 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT count(*) c
FROM test_json_cols
WHERE json_value(__time, '$' RETURNING bigint) <> 1640995200000;
+---+
| c |
+---+
| 2 |
+---+
(1 row)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_func_json_value TEST_ID: A004 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT count(*) c
FROM test_json_cols
WHERE json_value(__time, '$') IS NOT NULL;
+---+
| c |
+---+
| 4 |
+---+
(1 row)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_func_json_value TEST_ID: A005 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT count(*) c
FROM test_json_cols
WHERE json_value(__time, '$') IS NULL;
+---+
| c |
+---+
| 0 |
+---+
(1 row)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_func_json_value TEST_ID: A006 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT json_value('ABCD', '$' RETURNING CHAR) c
FROM test_json_cols;
+------+
| c    |
+------+
| ABCD |
| ABCD |
| ABCD |
| ABCD |
+------+
(4 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_func_json_value TEST_ID: A007 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT count(*) c
FROM test_json_cols
WHERE json_value('ABCD', '$' RETURNING CHAR) = 'ABCD';
+---+
| c |
+---+
| 4 |
+---+
(1 row)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_func_json_value TEST_ID: A008 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT count(*) c
FROM test_json_cols
WHERE json_value('ABCD', '$' RETURNING CHAR) <> 'ABCD';
+---+
| c |
+---+
| 0 |
+---+
(1 row)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_func_json_value TEST_ID: A009 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT count(*) c
FROM test_json_cols
WHERE json_value('ABCD', '$' RETURNING CHAR) IS NOT NULL;
+---+
| c |
+---+
| 4 |
+---+
(1 row)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_func_json_value TEST_ID: A010 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT count(*) c
FROM test_json_cols
WHERE json_value('ABCD', '$' RETURNING CHAR) IS NULL;
+---+
| c |
+---+
| 0 |
+---+
(1 row)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_func_json_value TEST_ID: A011 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT json_value(s_str, '$' RETURNING CHAR) c
FROM test_json_cols;
+---+
| c |
+---+
| A |
| A |
|   |
|   |
+---+
(4 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_func_json_value TEST_ID: A012 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT count(*) c
FROM test_json_cols
WHERE json_value(s_str, '$' RETURNING CHAR) = 'A';
+---+
| c |
+---+
| 2 |
+---+
(1 row)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_func_json_value TEST_ID: A013 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT count(*) c
FROM test_json_cols
WHERE json_value(s_str, '$' RETURNING CHAR) <> 'A';
+---+
| c |
+---+
| 0 |
+---+
(1 row)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_func_json_value TEST_ID: A014 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT count(*) c
FROM test_json_cols
WHERE json_value(s_str, '$' RETURNING CHAR) IS NOT NULL;
+---+
| c |
+---+
| 2 |
+---+
(1 row)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_func_json_value TEST_ID: A015 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT count(*) c
FROM test_json_cols
WHERE json_value(s_str, '$' RETURNING CHAR) IS NULL;
+---+
| c |
+---+
| 2 |
+---+
(1 row)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_func_json_value TEST_ID: A016 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT json_value(1234, '$' RETURNING int) c
FROM test_json_cols;
+------+
| c    |
+------+
| 1234 |
| 1234 |
| 1234 |
| 1234 |
+------+
(4 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_func_json_value TEST_ID: A017 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT count(*) c
FROM test_json_cols
WHERE json_value(1234, '$') = 1234;
+---+
| c |
+---+
| 4 |
+---+
(1 row)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_func_json_value TEST_ID: A018 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT count(*) c
FROM test_json_cols
WHERE json_value(1234, '$') <> 1234;
+---+
| c |
+---+
| 0 |
+---+
(1 row)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_func_json_value TEST_ID: A019 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT count(*) c
FROM test_json_cols
WHERE json_value(1234, '$') IS NOT NULL;
+---+
| c |
+---+
| 4 |
+---+
(1 row)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_func_json_value TEST_ID: A020 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT count(*) c
FROM test_json_cols
WHERE json_value(1234, '$') IS NULL;
+---+
| c |
+---+
| 0 |
+---+
(1 row)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_func_json_value TEST_ID: A021 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT json_value(s_num_int, '$' RETURNING int) c
FROM test_json_cols;
+---+
| c |
+---+
| 1 |
| 1 |
|   |
|   |
+---+
(4 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_func_json_value TEST_ID: A022 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT count(*) c
FROM test_json_cols
WHERE json_value(s_num_int, '$' RETURNING int) = 1;
+---+
| c |
+---+
| 2 |
+---+
(1 row)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_func_json_value TEST_ID: A023 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT count(*) c
FROM test_json_cols
WHERE json_value(s_num_int, '$' RETURNING int) <> 1;
+---+
| c |
+---+
| 0 |
+---+
(1 row)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_func_json_value TEST_ID: A024 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT count(*) c
FROM test_json_cols
WHERE json_value(s_num_int, '$' RETURNING int) IS NOT NULL;
+---+
| c |
+---+
| 2 |
+---+
(1 row)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_func_json_value TEST_ID: A025 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT count(*) c
FROM test_json_cols
WHERE json_value(s_num_int, '$' RETURNING int) IS NULL;
+---+
| c |
+---+
| 2 |
+---+
(1 row)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_func_json_value TEST_ID: A026 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT json_value(1234.5678, '$' RETURNING DOUBLE) c
FROM test_json_cols;
+-----------+
| c         |
+-----------+
| 1234.5678 |
| 1234.5678 |
| 1234.5678 |
| 1234.5678 |
+-----------+
(4 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_func_json_value TEST_ID: A027 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT count(*) c
FROM test_json_cols
WHERE json_value(1234.5678, '$' RETURNING DOUBLE) = 1234.5678;
+---+
| c |
+---+
| 4 |
+---+
(1 row)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_func_json_value TEST_ID: A028 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT count(*) c
FROM test_json_cols
WHERE json_value(1234.5678, '$' RETURNING DOUBLE) <> 1234.5678;
+---+
| c |
+---+
| 0 |
+---+
(1 row)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_func_json_value TEST_ID: A029 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT count(*) c
FROM test_json_cols
WHERE json_value(1234.5678, '$' RETURNING DOUBLE) IS NOT NULL;
+---+
| c |
+---+
| 4 |
+---+
(1 row)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_func_json_value TEST_ID: A030 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT count(*) c
FROM test_json_cols
WHERE json_value(1234.5678, '$' RETURNING DOUBLE) IS NULL;
+---+
| c |
+---+
| 0 |
+---+
(1 row)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_func_json_value TEST_ID: A031 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT json_value(s_num_float, '$' RETURNING DOUBLE) c
FROM test_json_cols;
+-----+
| c   |
+-----+
| 0.1 |
| 0.1 |
|     |
|     |
+-----+
(4 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_func_json_value TEST_ID: A032 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT count(*) c
FROM test_json_cols
WHERE json_value(s_num_float, '$' RETURNING DOUBLE) = 0.1;
+---+
| c |
+---+
| 2 |
+---+
(1 row)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_func_json_value TEST_ID: A033 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT count(*) c
FROM test_json_cols
WHERE json_value(s_num_float, '$' RETURNING DOUBLE) <> 0.1;
+---+
| c |
+---+
| 0 |
+---+
(1 row)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_func_json_value TEST_ID: A034 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT count(*) c
FROM test_json_cols
WHERE json_value(s_num_float, '$' RETURNING DOUBLE) IS NOT NULL;
+---+
| c |
+---+
| 2 |
+---+
(1 row)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_func_json_value TEST_ID: A035 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT count(*) c
FROM test_json_cols
WHERE json_value(s_num_float, '$' RETURNING DOUBLE) IS NULL;
+---+
| c |
+---+
| 2 |
+---+
(1 row)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_func_json_value TEST_ID: A036 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT DISTINCT json_value(NULL, '$') c
FROM test_json_cols;
+---+
| c |
+---+
|   |
+---+
(1 row)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_func_json_value TEST_ID: A037 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT count(*) c
FROM test_json_cols
WHERE json_value(NULL, '$') IS NULL;
+---+
| c |
+---+
| 4 |
+---+
(1 row)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_func_json_value TEST_ID: A038 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT count(*) c
FROM test_json_cols
WHERE json_value(NULL, '$') IS NOT NULL;
+---+
| c |
+---+
| 0 |
+---+
(1 row)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_func_json_value TEST_ID: A039 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT DISTINCT json_value(s_null, '$') c
FROM test_json_cols;
+---+
| c |
+---+
|   |
+---+
(1 row)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_func_json_value TEST_ID: A040 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT count(*) c
FROM test_json_cols
WHERE json_value(s_null, '$') IS NULL;
+---+
| c |
+---+
| 4 |
+---+
(1 row)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_func_json_value TEST_ID: A041 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT count(*) c
FROM test_json_cols
WHERE json_value(s_null, '$') IS NOT NULL;
+---+
| c |
+---+
| 0 |
+---+
(1 row)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_func_json_value TEST_ID: A042 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT DISTINCT json_value(c_empty_obj, '$') c
FROM test_json_cols;
+---+
| c |
+---+
|   |
+---+
(1 row)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_func_json_value TEST_ID: A043 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT count(*) c
FROM test_json_cols
WHERE json_value(c_empty_obj, '$') IS NULL;
+---+
| c |
+---+
| 4 |
+---+
(1 row)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_func_json_value TEST_ID: A044 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT count(*) c
FROM test_json_cols
WHERE json_value(c_empty_obj, '$') IS NOT NULL;
+---+
| c |
+---+
| 0 |
+---+
(1 row)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_func_json_value TEST_ID: A045 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT DISTINCT json_value(c_empty_array, '$') c
FROM test_json_cols;
+---+
| c |
+---+
|   |
+---+
(1 row)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_func_json_value TEST_ID: A046 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT count(*) c
FROM test_json_cols
WHERE json_value(c_empty_array, '$') IS NULL;
+---+
| c |
+---+
| 2 |
+---+
(1 row)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_func_json_value TEST_ID: A047 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT count(*) c
FROM test_json_cols
WHERE json_value(c_empty_array, '$') IS NOT NULL;
+---+
| c |
+---+
| 2 |
+---+
(1 row)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_func_json_value TEST_ID: A048 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT DISTINCT json_value(c_empty_obj_nested, '$.o1') c
FROM test_json_cols;
+---+
| c |
+---+
|   |
+---+
(1 row)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_func_json_value TEST_ID: A049 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT count(*) c
FROM test_json_cols
WHERE json_value(c_empty_obj_nested, '$.o1') IS NULL;
+---+
| c |
+---+
| 4 |
+---+
(1 row)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_func_json_value TEST_ID: A050 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT count(*) c
FROM test_json_cols
WHERE json_value(c_empty_obj_nested, '$.o1') IS NOT NULL;
+---+
| c |
+---+
| 0 |
+---+
(1 row)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_func_json_value TEST_ID: A051 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT DISTINCT json_value(c_empty_obj_nested, '$.o2') c
FROM test_json_cols;
+---+
| c |
+---+
|   |
+---+
(1 row)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_func_json_value TEST_ID: A052 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT DISTINCT json_value(c_empty_obj_nested, '$.o2') c
FROM test_json_cols;
+---+
| c |
+---+
|   |
+---+
(1 row)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_func_json_value TEST_ID: A053 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT count(*) c
FROM test_json_cols
WHERE json_value(c_empty_obj_nested, '$.o2') IS NULL;
+---+
| c |
+---+
| 2 |
+---+
(1 row)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_func_json_value TEST_ID: A054 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT count(*) c
FROM test_json_cols
WHERE json_value(c_empty_obj_nested, '$.o2') IS NOT NULL;
+---+
| c |
+---+
| 2 |
+---+
(1 row)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_func_json_value TEST_ID: A055 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT DISTINCT json_value(c_empty_obj_nested, '$.o3') c
FROM test_json_cols;
+---+
| c |
+---+
|   |
+---+
(1 row)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_func_json_value TEST_ID: A056 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT count(*) c
FROM test_json_cols
WHERE json_value(c_empty_obj_nested, '$.o3') IS NULL;
+---+
| c |
+---+
| 4 |
+---+
(1 row)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_func_json_value TEST_ID: A057 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT count(*) c
FROM test_json_cols
WHERE json_value(c_empty_obj_nested, '$.o3') IS NOT NULL;
+---+
| c |
+---+
| 0 |
+---+
(1 row)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_func_json_value TEST_ID: A058 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT DISTINCT json_value(c_empty_array_nested, '$[0]') c
FROM test_json_cols;
+---+
| c |
+---+
|   |
+---+
(1 row)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_func_json_value TEST_ID: A059 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT count(*) c
FROM test_json_cols
WHERE json_value(c_empty_array_nested, '$[0]') IS NULL;
+---+
| c |
+---+
| 4 |
+---+
(1 row)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_func_json_value TEST_ID: A060 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT count(*) c
FROM test_json_cols
WHERE json_value(c_empty_array_nested, '$[0]') IS NOT NULL;
+---+
| c |
+---+
| 0 |
+---+
(1 row)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_func_json_value TEST_ID: A061 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT DISTINCT json_value(c_empty_array_nested, '$[1]') c
FROM test_json_cols;
+---+
| c |
+---+
|   |
+---+
(1 row)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_func_json_value TEST_ID: A062 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT DISTINCT json_value(c_empty_array_nested, '$[1]') c
FROM test_json_cols;
+---+
| c |
+---+
|   |
+---+
(1 row)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_func_json_value TEST_ID: A063 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT count(*) c
FROM test_json_cols
WHERE json_value(c_empty_array_nested, '$[1]') IS NULL;
+---+
| c |
+---+
| 2 |
+---+
(1 row)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_func_json_value TEST_ID: A064 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT count(*) c
FROM test_json_cols
WHERE json_value(c_empty_array_nested, '$[1]') IS NOT NULL;
+---+
| c |
+---+
| 2 |
+---+
(1 row)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_func_json_value TEST_ID: A065 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT DISTINCT json_value(c_empty_array_nested, '$[2]') c
FROM test_json_cols;
+---+
| c |
+---+
|   |
+---+
(1 row)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_func_json_value TEST_ID: A066 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT count(*) c
FROM test_json_cols
WHERE json_value(c_empty_array_nested, '$[2]') IS NULL;
+---+
| c |
+---+
| 4 |
+---+
(1 row)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_func_json_value TEST_ID: A067 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT count(*) c
FROM test_json_cols
WHERE json_value(c_empty_array_nested, '$[2]') IS NOT NULL;
+---+
| c |
+---+
| 0 |
+---+
(1 row)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_func_json_value TEST_ID: A068 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT count(*) c
FROM test_json_cols
WHERE json_value(c1, '$.does.not.exist') IS NULL;
+---+
| c |
+---+
| 4 |
+---+
(1 row)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_func_json_value TEST_ID: A069 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT count(*) c
FROM test_json_cols
WHERE json_value(c_empty_obj_nested, '$.') IS NULL;
+---+
| c |
+---+
| 4 |
+---+
(1 row)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_func_json_value TEST_ID: A070 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT count(*) c
FROM test_json_cols
WHERE json_value(c_empty_array_nested, '$.') IS NULL;
+---+
| c |
+---+
| 4 |
+---+
(1 row)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_func_json_value TEST_ID: A071 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT count(*) c
FROM test_json_cols
WHERE json_value(c1, '$.a_obj') IS NULL;
+---+
| c |
+---+
| 4 |
+---+
(1 row)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_func_json_value TEST_ID: A072 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT count(*) c
FROM test_json_cols
WHERE json_value(c1, '$.a_array[0]') IS NULL;
+---+
| c |
+---+
| 4 |
+---+
(1 row)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_func_json_value TEST_ID: A073 TYPE: NEGATIVE TEST
#-------------------------------------------------------------------------
SELECT count(*) c
FROM test_json_cols
WHERE json_value(c1, '$.a_array[0,1]') IS NULL;
QueryInterruptedException
!error

#-------------------------------------------------------------------------
# TESTCASE: test_func_json_value TEST_ID: A074 TYPE: NEGATIVE TEST
#-------------------------------------------------------------------------
SELECT count(*) c
FROM test_json_cols
WHERE json_value(c1, '$.a_array[0:2]') IS NULL;
QueryInterruptedException
!error

#-------------------------------------------------------------------------
# TESTCASE: test_func_json_value TEST_ID: A075 TYPE: NEGATIVE TEST
#-------------------------------------------------------------------------
SELECT count(*) c
FROM test_json_cols
WHERE json_value(c1, '$.a_array[:2]') IS NULL;
QueryInterruptedException
!error

#-------------------------------------------------------------------------
# TESTCASE: test_func_json_value TEST_ID: A076 TYPE: NEGATIVE TEST
#-------------------------------------------------------------------------
SELECT count(*) c
FROM test_json_cols
WHERE json_value(c1, '$.a_array[0:]') IS NULL;
QueryInterruptedException
!error

#-------------------------------------------------------------------------
# TESTCASE: test_func_json_value TEST_ID: A077 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT count(*) c
FROM test_json_cols
WHERE json_value(c1, '$.a_array[-1].a_str') IS NULL;
+---+
| c |
+---+
| 4 |
+---+
(1 row)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_func_json_value TEST_ID: A078 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT count(*) c
FROM test_json_cols
WHERE json_value(c1, '$.a_array[-2].a_str') IS NULL;
+---+
| c |
+---+
| 4 |
+---+
(1 row)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_func_json_value TEST_ID: A079 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT count(*) c
FROM test_json_cols
WHERE json_value(c1, '$.a_array[-1234567890].a_str') IS NULL;
+---+
| c |
+---+
| 4 |
+---+
(1 row)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_func_json_value TEST_ID: A080 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT count(*) c
FROM test_json_cols
WHERE json_value(c1, '$.a_array[0].a_str.length()') IS NULL;
+---+
| c |
+---+
| 4 |
+---+
(1 row)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_func_json_value TEST_ID: A081 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT count(*) c
FROM test_json_cols
WHERE json_value(c1, '$.a_array[0].a_str') = 'A';
+---+
| c |
+---+
| 2 |
+---+
(1 row)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_func_json_value TEST_ID: A082 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT count(*) c
FROM test_json_cols
WHERE json_value(c1, '$.a_array[1].a_str') = 'A';
+---+
| c |
+---+
| 2 |
+---+
(1 row)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_func_json_value TEST_ID: A083 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT count(*) c
FROM test_json_cols
WHERE json_value(c1, '$.a_array[2].a_str') IS NULL;
+---+
| c |
+---+
| 4 |
+---+
(1 row)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_func_json_value TEST_ID: A084 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT count(*) c
FROM test_json_cols
WHERE json_value(c1, '$.a_array[1234567890].a_str') IS NULL;
+---+
| c |
+---+
| 4 |
+---+
(1 row)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_func_json_value TEST_ID: A085 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT count(*) c
FROM test_json_cols
WHERE json_value(c1, '$.a_empty_obj') IS NULL;
+---+
| c |
+---+
| 4 |
+---+
(1 row)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_func_json_value TEST_ID: A086 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT count(*) c
FROM test_json_cols
WHERE json_value(c1, '$.a_empty_array') IS NULL;
+---+
| c |
+---+
| 2 |
+---+
(1 row)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_func_json_value TEST_ID: A087 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT count(*) c
FROM test_json_cols
WHERE json_value(c1, '$.a_empty_obj_nested.o1') IS NULL;
+---+
| c |
+---+
| 4 |
+---+
(1 row)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_func_json_value TEST_ID: A088 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT count(*) c
FROM test_json_cols
WHERE json_value(c1, '$.a_empty_obj_nested.o2') IS NULL;
+---+
| c |
+---+
| 2 |
+---+
(1 row)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_func_json_value TEST_ID: A089 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT count(*) c
FROM test_json_cols
WHERE json_value(c1, '$.a_empty_obj_nested.o3') IS NULL;
+---+
| c |
+---+
| 4 |
+---+
(1 row)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_func_json_value TEST_ID: A090 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT count(*) c
FROM test_json_cols
WHERE json_value(c1, '$.a_empty_array_nested[0]') IS NULL;
+---+
| c |
+---+
| 4 |
+---+
(1 row)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_func_json_value TEST_ID: A091 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT count(*) c
FROM test_json_cols
WHERE json_value(c1, '$.a_empty_array_nested[1]') IS NULL;
+---+
| c |
+---+
| 2 |
+---+
(1 row)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_func_json_value TEST_ID: A092 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT count(*) c
FROM test_json_cols
WHERE json_value(c1, '$.a_empty_array_nested[2]') IS NULL;
+---+
| c |
+---+
| 4 |
+---+
(1 row)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_func_json_value TEST_ID: A093 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT count(*) c
FROM test_json_cols
WHERE json_value(c1, '$.a_obj.a_str') = 'A';
+---+
| c |
+---+
| 2 |
+---+
(1 row)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_func_json_value TEST_ID: A094 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT json_value(s_str, '$') c
FROM test_json_cols;
+---+
| c |
+---+
| A |
| A |
|   |
|   |
+---+
(4 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_func_json_value TEST_ID: A095 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT json_value(c1, '$.a_str') c
FROM test_json_cols;
+---+
| c |
+---+
| A |
| A |
|   |
|   |
+---+
(4 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_func_json_value TEST_ID: A096 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT json_value(c1, '$.a_obj.a_str') c
FROM test_json_cols;
+---+
| c |
+---+
| A |
| A |
|   |
|   |
+---+
(4 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_func_json_value TEST_ID: A097 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT json_value(c1, '$.a_array[0].a_str') c
FROM test_json_cols;
+---+
| c |
+---+
| A |
| A |
|   |
|   |
+---+
(4 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_func_json_value TEST_ID: A098 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT json_value(s_str, '$' RETURNING bigint) c
FROM test_json_cols;
+---+
| c |
+---+
|   |
|   |
|   |
|   |
+---+
(4 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_func_json_value TEST_ID: A099 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT json_value(c1, '$.a_str' RETURNING bigint) c
FROM test_json_cols;
+---+
| c |
+---+
|   |
|   |
|   |
|   |
+---+
(4 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_func_json_value TEST_ID: A100 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT json_value(c1, '$.a_obj.a_str' RETURNING bigint) c
FROM test_json_cols;
+---+
| c |
+---+
|   |
|   |
|   |
|   |
+---+
(4 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_func_json_value TEST_ID: A101 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT json_value(c1, '$.a_array[0].a_str' RETURNING bigint) c
FROM test_json_cols;
+---+
| c |
+---+
|   |
|   |
|   |
|   |
+---+
(4 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_func_json_value TEST_ID: A102 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT json_value(s_num_int, '$') c
FROM test_json_cols;
+---+
| c |
+---+
| 1 |
| 1 |
|   |
|   |
+---+
(4 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_func_json_value TEST_ID: A103 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT json_value(c1, '$.a_num_int') c
FROM test_json_cols;
+---+
| c |
+---+
| 1 |
| 1 |
|   |
|   |
+---+
(4 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_func_json_value TEST_ID: A104 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT json_value(c1, '$.a_obj.a_num_int') c
FROM test_json_cols;
+---+
| c |
+---+
| 1 |
| 1 |
|   |
|   |
+---+
(4 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_func_json_value TEST_ID: A105 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT json_value(c1, '$.a_array[0].a_num_int') c
FROM test_json_cols;
+---+
| c |
+---+
| 1 |
| 1 |
|   |
|   |
+---+
(4 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_func_json_value TEST_ID: A106 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT json_value(s_num_int, '$' RETURNING bigint) c
FROM test_json_cols;
+---+
| c |
+---+
| 1 |
| 1 |
|   |
|   |
+---+
(4 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_func_json_value TEST_ID: A107 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT json_value(c1, '$.a_num_int' RETURNING bigint) c
FROM test_json_cols;
+---+
| c |
+---+
| 1 |
| 1 |
|   |
|   |
+---+
(4 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_func_json_value TEST_ID: A108 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT json_value(c1, '$.a_obj.a_num_int' RETURNING bigint) c
FROM test_json_cols;
+---+
| c |
+---+
| 1 |
| 1 |
|   |
|   |
+---+
(4 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_func_json_value TEST_ID: A109 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT json_value(c1, '$.a_array[0].a_num_int' RETURNING bigint) c
FROM test_json_cols;
+---+
| c |
+---+
| 1 |
| 1 |
|   |
|   |
+---+
(4 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_func_json_value TEST_ID: A110 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT cast(json_value(s_num_int, '$') AS bigint) c
FROM test_json_cols;
+---+
| c |
+---+
| 1 |
| 1 |
|   |
|   |
+---+
(4 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_func_json_value TEST_ID: A111 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT cast(json_value(c1, '$.a_num_int') AS bigint) c
FROM test_json_cols;
+---+
| c |
+---+
| 1 |
| 1 |
|   |
|   |
+---+
(4 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_func_json_value TEST_ID: A112 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT cast(json_value(c1, '$.a_obj.a_num_int') AS bigint) c
FROM test_json_cols;
+---+
| c |
+---+
| 1 |
| 1 |
|   |
|   |
+---+
(4 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_func_json_value TEST_ID: A113 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT cast(json_value(c1, '$.a_array[0].a_num_int') AS bigint) c
FROM test_json_cols;
+---+
| c |
+---+
| 1 |
| 1 |
|   |
|   |
+---+
(4 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_func_json_value TEST_ID: A114 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT json_value(s_num_float, '$') c
FROM test_json_cols;
+-----+
| c   |
+-----+
| 0.1 |
| 0.1 |
|     |
|     |
+-----+
(4 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_func_json_value TEST_ID: A115 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT json_value(c1, '$.a_num_float') c
FROM test_json_cols;
+-----+
| c   |
+-----+
| 0.1 |
| 0.1 |
|     |
|     |
+-----+
(4 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_func_json_value TEST_ID: A116 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT json_value(c1, '$.a_obj.a_num_float') c
FROM test_json_cols;
+-----+
| c   |
+-----+
| 0.1 |
| 0.1 |
|     |
|     |
+-----+
(4 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_func_json_value TEST_ID: A117 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT json_value(c1, '$.a_array[0].a_num_float') c
FROM test_json_cols;
+-----+
| c   |
+-----+
| 0.1 |
| 0.1 |
|     |
|     |
+-----+
(4 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_func_json_value TEST_ID: A118 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT json_value(s_num_float, '$' RETURNING DOUBLE) c
FROM test_json_cols;
+-----+
| c   |
+-----+
| 0.1 |
| 0.1 |
|     |
|     |
+-----+
(4 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_func_json_value TEST_ID: A119 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT json_value(c1, '$.a_num_float' RETURNING DOUBLE) c
FROM test_json_cols;
+-----+
| c   |
+-----+
| 0.1 |
| 0.1 |
|     |
|     |
+-----+
(4 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_func_json_value TEST_ID: A120 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT json_value(c1, '$.a_obj.a_num_float' RETURNING DOUBLE) c
FROM test_json_cols;
+-----+
| c   |
+-----+
| 0.1 |
| 0.1 |
|     |
|     |
+-----+
(4 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_func_json_value TEST_ID: A121 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT json_value(c1, '$.a_array[0].a_num_float' RETURNING DOUBLE) c
FROM test_json_cols;
+-----+
| c   |
+-----+
| 0.1 |
| 0.1 |
|     |
|     |
+-----+
(4 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_func_json_value TEST_ID: A122 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT cast(json_value(s_num_float, '$') AS DOUBLE) c
FROM test_json_cols;
+-----+
| c   |
+-----+
| 0.1 |
| 0.1 |
|     |
|     |
+-----+
(4 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_func_json_value TEST_ID: A123 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT cast(json_value(c1, '$.a_num_float') AS DOUBLE) c
FROM test_json_cols;
+-----+
| c   |
+-----+
| 0.1 |
| 0.1 |
|     |
|     |
+-----+
(4 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_func_json_value TEST_ID: A124 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT cast(json_value(c1, '$.a_obj.a_num_float') AS DOUBLE) c
FROM test_json_cols;
+-----+
| c   |
+-----+
| 0.1 |
| 0.1 |
|     |
|     |
+-----+
(4 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_func_json_value TEST_ID: A125 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT cast(json_value(c1, '$.a_array[0].a_num_float') AS DOUBLE) c
FROM test_json_cols;
+-----+
| c   |
+-----+
| 0.1 |
| 0.1 |
|     |
|     |
+-----+
(4 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_func_json_value TEST_ID: A126 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT json_value(s_bool, '$') c
FROM test_json_cols;
+---+
| c |
+---+
| 1 |
| 1 |
|   |
|   |
+---+
(4 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_func_json_value TEST_ID: A127 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT json_value(c1, '$.a_bool') c
FROM test_json_cols;
+---+
| c |
+---+
| 1 |
| 1 |
|   |
|   |
+---+
(4 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_func_json_value TEST_ID: A128 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT json_value(c1, '$.a_obj.a_bool') c
FROM test_json_cols;
+---+
| c |
+---+
| 1 |
| 1 |
|   |
|   |
+---+
(4 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_func_json_value TEST_ID: A129 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT json_value(c1, '$.a_array[0].a_bool') c
FROM test_json_cols;
+---+
| c |
+---+
| 1 |
| 1 |
|   |
|   |
+---+
(4 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_func_json_value TEST_ID: A130 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT json_value(s_bool, '$' RETURNING boolean) c
FROM test_json_cols;
+------+
| c    |
+------+
| true |
| true |
|      |
|      |
+------+
(4 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_func_json_value TEST_ID: A131 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT json_value(c1, '$.a_bool' RETURNING boolean) c
FROM test_json_cols;
+------+
| c    |
+------+
| true |
| true |
|      |
|      |
+------+
(4 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_func_json_value TEST_ID: A132 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT json_value(c1, '$.a_obj.a_bool' RETURNING boolean) c
FROM test_json_cols;
+------+
| c    |
+------+
| true |
| true |
|      |
|      |
+------+
(4 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_func_json_value TEST_ID: A133 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT json_value(c1, '$.a_array[0].a_bool' RETURNING boolean) c
FROM test_json_cols;
+------+
| c    |
+------+
| true |
| true |
|      |
|      |
+------+
(4 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_func_json_value TEST_ID: A134 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT cast(json_value(s_bool, '$') AS boolean) c
FROM test_json_cols;
+------+
| c    |
+------+
| true |
| true |
|      |
|      |
+------+
(4 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_func_json_value TEST_ID: A135 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT cast(json_value(c1, '$.a_bool') AS boolean) c
FROM test_json_cols;
+------+
| c    |
+------+
| true |
| true |
|      |
|      |
+------+
(4 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_func_json_value TEST_ID: A136 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT cast(json_value(c1, '$.a_obj.a_bool') AS boolean) c
FROM test_json_cols;
+------+
| c    |
+------+
| true |
| true |
|      |
|      |
+------+
(4 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_func_json_value TEST_ID: A137 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT cast(json_value(c1, '$.a_array[0].a_bool') AS boolean) c
FROM test_json_cols;
+------+
| c    |
+------+
| true |
| true |
|      |
|      |
+------+
(4 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_func_json_value TEST_ID: A138 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT json_value(s_null, '$') c
FROM test_json_cols;
+---+
| c |
+---+
|   |
|   |
|   |
|   |
+---+
(4 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_func_json_value TEST_ID: A139 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT json_value(c1, '$.a_null') c
FROM test_json_cols;
+---+
| c |
+---+
|   |
|   |
|   |
|   |
+---+
(4 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_func_json_value TEST_ID: A140 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT json_value(c1, '$.a_obj.a_null') c
FROM test_json_cols;
+---+
| c |
+---+
|   |
|   |
|   |
|   |
+---+
(4 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_func_json_value TEST_ID: A141 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT json_value(c1, '$.a_array[0].a_null') c
FROM test_json_cols;
+---+
| c |
+---+
|   |
|   |
|   |
|   |
+---+
(4 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_func_json_value TEST_ID: A142 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT json_value(s_null, '$' RETURNING CHAR) c
FROM test_json_cols;
+---+
| c |
+---+
|   |
|   |
|   |
|   |
+---+
(4 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_func_json_value TEST_ID: A143 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT json_value(c1, '$.a_null' RETURNING BIGINT) c
FROM test_json_cols;
+---+
| c |
+---+
|   |
|   |
|   |
|   |
+---+
(4 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_func_json_value TEST_ID: A144 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT json_value(c1, '$.a_obj.a_null' RETURNING DOUBLE) c
FROM test_json_cols;
+---+
| c |
+---+
|   |
|   |
|   |
|   |
+---+
(4 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_func_json_value TEST_ID: A145 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT json_value(c1, '$.a_array[0].a_null' RETURNING BOOLEAN) c
FROM test_json_cols;
+---+
| c |
+---+
|   |
|   |
|   |
|   |
+---+
(4 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_func_json_value TEST_ID: A146 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT count(*) c
FROM test_json_cols
WHERE json_value(c1, '$.a_obj.a_str') IS NULL;
+---+
| c |
+---+
| 2 |
+---+
(1 row)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_func_json_value TEST_ID: A147 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT count(*) c
FROM test_json_cols
WHERE json_value(c1, '$.a_obj.a_num_int') IS NULL;
+---+
| c |
+---+
| 2 |
+---+
(1 row)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_func_json_value TEST_ID: A148 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT count(*) c
FROM test_json_cols
WHERE json_value(c1, '$.a_obj.a_num_float') IS NULL;
+---+
| c |
+---+
| 2 |
+---+
(1 row)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_func_json_value TEST_ID: A149 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT count(*) c
FROM test_json_cols
WHERE json_value(c1, '$.a_obj.a_null') IS NULL;
+---+
| c |
+---+
| 4 |
+---+
(1 row)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_func_json_value TEST_ID: A150 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT count(*) c
FROM test_json_cols
WHERE json_value(c1, '$.doesntexist') IS NULL;
+---+
| c |
+---+
| 4 |
+---+
(1 row)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_func_json_value TEST_ID: A151 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT count(*) c
FROM test_json_cols
WHERE json_value(c1, '$.a_obj.a_str') IS NOT NULL;
+---+
| c |
+---+
| 2 |
+---+
(1 row)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_func_json_value TEST_ID: A152 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT count(*) c
FROM test_json_cols
WHERE json_value(c1, '$.a_obj.a_num_int') IS NOT NULL;
+---+
| c |
+---+
| 2 |
+---+
(1 row)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_func_json_value TEST_ID: A153 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT count(*) c
FROM test_json_cols
WHERE json_value(c1, '$.a_obj.a_num_float') IS NOT NULL;
+---+
| c |
+---+
| 2 |
+---+
(1 row)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_func_json_value TEST_ID: A154 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT count(*) c
FROM test_json_cols
WHERE json_value(c1, '$.a_obj.a_null') IS NOT NULL;
+---+
| c |
+---+
| 0 |
+---+
(1 row)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_func_json_value TEST_ID: A155 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT count(*) c
FROM test_json_cols
WHERE json_value(c1, '$.doesntexist') IS NOT NULL;
+---+
| c |
+---+
| 0 |
+---+
(1 row)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_func_json_value TEST_ID: A156 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT count(*) c
FROM
  (SELECT json_value(c1, '$.a_obj.a_str')
   FROM test_json_cols);
+---+
| c |
+---+
| 4 |
+---+
(1 row)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_func_json_value TEST_ID: A157 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT count(*) c
FROM
  (SELECT ALL json_value(c1, '$.a_obj.a_str')
   FROM test_json_cols);
+---+
| c |
+---+
| 4 |
+---+
(1 row)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_func_json_value TEST_ID: A158 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT count(mycol) c
FROM
  (SELECT json_value(c1, '$.a_obj.a_str') mycol
   FROM test_json_cols);
+---+
| c |
+---+
| 2 |
+---+
(1 row)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_func_json_value TEST_ID: A159 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT DISTINCT json_value(c1, '$.a_obj.a_str') c
FROM test_json_cols;
+---+
| c |
+---+
| A |
|   |
+---+
(2 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_func_json_value TEST_ID: A160 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT mycol,
       count(*) c
FROM
  (SELECT json_value(c1, '$.a_obj.a_str') mycol
   FROM test_json_cols)
GROUP BY mycol;
+-------+---+
| mycol | c |
+-------+---+
| A     | 2 |
|       | 2 |
+-------+---+
(2 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_func_json_value TEST_ID: A161 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT mycol,
       count(*) c
FROM
  (SELECT c1,
          json_value(c1, '$.a_obj.a_str') mycol
   FROM test_json_cols)
GROUP BY mycol
HAVING mycol = 'A';
+-------+---+
| mycol | c |
+-------+---+
| A     | 2 |
+-------+---+
(1 row)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_func_json_value TEST_ID: A162 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT count(*) c
FROM test_json_cols
WHERE json_value(c1, '$.a_obj.a_str') = json_value(c2, '$.a_obj.a_str');
+---+
| c |
+---+
| 2 |
+---+
(1 row)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_func_json_value TEST_ID: A163 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT count(*) c
FROM test_json_cols t1
INNER JOIN test_json_cols t2 ON json_value(t1.c1, '$.a_obj.a_str') = json_value(t2.c1, '$.a_obj.a_str');
+---+
| c |
+---+
| 4 |
+---+
(1 row)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_func_json_value TEST_ID: A164 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT count(*) c
FROM test_json_cols t1
LEFT JOIN test_json_cols t2 ON json_value(t1.c1, '$.a_obj.a_str') = json_value(t2.c1, '$.a_obj.a_str');
+---+
| c |
+---+
| 6 |
+---+
(1 row)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_func_json_value TEST_ID: A165 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT count(*) c
FROM test_json_cols t1,
     test_json_cols t2
WHERE json_value(t1.c1, '$.a_obj.a_str') = json_value(t2.c1, '$.a_obj.a_str');
+---+
| c |
+---+
| 4 |
+---+
(1 row)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_func_json_value TEST_ID: A166 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT json_value(c1, '$.a_obj.a_str') c
FROM test_json_cols
ORDER BY __time;
+---+
| c |
+---+
| A |
| A |
|   |
|   |
+---+
(4 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_func_json_value TEST_ID: A167 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT json_value(c1, '$.a_obj.a_str') c
FROM test_json_cols
LIMIT 1;
+---+
| c |
+---+
| A |
+---+
(1 row)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_func_json_value TEST_ID: A168 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT json_value(c1, '$.a_obj.a_str') c
FROM test_json_cols
OFFSET 1;
+---+
| c |
+---+
| A |
|   |
|   |
+---+
(3 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_func_json_value TEST_ID: A169 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT json_value(c1, '$.a_obj.a_str') c
FROM test_json_cols
UNION ALL
SELECT json_value(c1, '$.a_obj.a_str') c
FROM test_json_cols;
+---+
| c |
+---+
| A |
| A |
| A |
| A |
|   |
|   |
|   |
|   |
+---+
(8 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_func_json_value TEST_ID: A170 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------

SELECT json_value(c1, '$.a_obj.a_str')
FROM test_json_cols;
+--------+
| EXPR$0 |
+--------+
| A      |
| A      |
|        |
|        |
+--------+
(4 rows)

!ok

{
  "queryType" : "scan",
  "dataSource" : {
    "type" : "table",
    "name" : "test_json_cols"
  },
  "intervals" : {
    "type" : "intervals",
    "intervals" : [ "-146136543-09-08T08:23:32.096Z/146140482-04-24T15:36:27.903Z" ]
  },
  "virtualColumns" : [ {
    "type" : "nested-field",
    "columnName" : "c1",
    "outputName" : "v0",
    "expectedType" : "STRING",
    "pathParts" : [ {
      "type" : "field",
      "field" : "a_obj"
    }, {
      "type" : "field",
      "field" : "a_str"
    } ],
    "processFromRaw" : false
  } ],
  "resultFormat" : "compactedList",
  "columns" : [ "v0" ],
  "columnTypes" : [ "STRING" ],
  "granularity" : {
    "type" : "all"
  },
  "legacy" : false
}
!nativePlan

#-------------------------------------------------------------------------
# TESTCASE: test_func_json_query TEST_ID: A001 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT json_query(__time, '$') c
FROM test_json_cols;
+---------------+
| c             |
+---------------+
| 1640995200000 |
| 1640995200000 |
| 1643673600000 |
| 1643673600000 |
+---------------+
(4 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_func_json_query TEST_ID: A002 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT count(*) c
FROM test_json_cols
WHERE json_value(json_query(__time, '$'), '$' RETURNING bigint) = 1640995200000;
+---+
| c |
+---+
| 2 |
+---+
(1 row)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_func_json_query TEST_ID: A003 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT count(*) c
FROM test_json_cols
WHERE json_value(json_query(__time, '$'), '$' RETURNING bigint) <> 1640995200000;
+---+
| c |
+---+
| 2 |
+---+
(1 row)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_func_json_query TEST_ID: A004 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT count(*) c
FROM test_json_cols
WHERE json_query(__time, '$') IS NOT NULL;
+---+
| c |
+---+
| 4 |
+---+
(1 row)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_func_json_query TEST_ID: A005 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT count(*) c
FROM test_json_cols
WHERE json_query(__time, '$') IS NULL;
+---+
| c |
+---+
| 0 |
+---+
(1 row)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_func_json_query TEST_ID: A006 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT json_query('ABCD', '$') c
FROM test_json_cols;
+--------+
| c      |
+--------+
| "ABCD" |
| "ABCD" |
| "ABCD" |
| "ABCD" |
+--------+
(4 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_func_json_query TEST_ID: A007 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT count(*) c
FROM test_json_cols
WHERE json_value(json_query('ABCD', '$'), '$' RETURNING CHAR) = 'ABCD';
+---+
| c |
+---+
| 4 |
+---+
(1 row)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_func_json_query TEST_ID: A008 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT count(*) c
FROM test_json_cols
WHERE json_value(json_query('ABCD', '$'), '$' RETURNING CHAR) <> 'ABCD';
+---+
| c |
+---+
| 0 |
+---+
(1 row)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_func_json_query TEST_ID: A009 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT count(*) c
FROM test_json_cols
WHERE json_query('ABCD', '$') IS NOT NULL;
+---+
| c |
+---+
| 4 |
+---+
(1 row)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_func_json_query TEST_ID: A010 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT count(*) c
FROM test_json_cols
WHERE json_query('ABCD', '$') IS NULL;
+---+
| c |
+---+
| 0 |
+---+
(1 row)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_func_json_query TEST_ID: A011 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT json_query(s_str, '$') c
FROM test_json_cols;
+-----+
| c   |
+-----+
| "A" |
| "A" |
|     |
|     |
+-----+
(4 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_func_json_query TEST_ID: A012 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT count(*) c
FROM test_json_cols
WHERE json_value(json_query(s_str, '$'), '$' RETURNING CHAR) = 'A';
+---+
| c |
+---+
| 2 |
+---+
(1 row)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_func_json_query TEST_ID: A013 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT count(*) c
FROM test_json_cols
WHERE json_value(json_query(s_str, '$'), '$' RETURNING CHAR) <> 'A';
+---+
| c |
+---+
| 0 |
+---+
(1 row)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_func_json_query TEST_ID: A014 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT count(*) c
FROM test_json_cols
WHERE json_query(s_str, '$') IS NOT NULL;
+---+
| c |
+---+
| 2 |
+---+
(1 row)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_func_json_query TEST_ID: A015 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT count(*) c
FROM test_json_cols
WHERE json_query(s_str, '$') IS NULL;
+---+
| c |
+---+
| 2 |
+---+
(1 row)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_func_json_query TEST_ID: A016 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT json_value(json_query(1234, '$'), '$' RETURNING int) c
FROM test_json_cols;
+------+
| c    |
+------+
| 1234 |
| 1234 |
| 1234 |
| 1234 |
+------+
(4 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_func_json_query TEST_ID: A017 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT count(*) c
FROM test_json_cols
WHERE json_value(json_query(1234, '$'), '$' RETURNING int) = 1234;
+---+
| c |
+---+
| 4 |
+---+
(1 row)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_func_json_query TEST_ID: A018 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT count(*) c
FROM test_json_cols
WHERE json_value(json_query(1234, '$'), '$' RETURNING int) <> 1234;
+---+
| c |
+---+
| 0 |
+---+
(1 row)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_func_json_query TEST_ID: A019 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT count(*) c
FROM test_json_cols
WHERE json_query(1234, '$') IS NOT NULL;
+---+
| c |
+---+
| 4 |
+---+
(1 row)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_func_json_query TEST_ID: A020 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT count(*) c
FROM test_json_cols
WHERE json_query(1234, '$') IS NULL;
+---+
| c |
+---+
| 0 |
+---+
(1 row)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_func_json_query TEST_ID: A021 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT json_value(json_query(s_num_int, '$'), '$' RETURNING int) c
FROM test_json_cols;
+---+
| c |
+---+
| 1 |
| 1 |
|   |
|   |
+---+
(4 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_func_json_query TEST_ID: A022 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT count(*) c
FROM test_json_cols
WHERE json_value(json_query(s_num_int, '$'), '$' RETURNING int) = 1;
+---+
| c |
+---+
| 2 |
+---+
(1 row)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_func_json_query TEST_ID: A023 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT count(*) c
FROM test_json_cols
WHERE json_value(json_query(s_num_int, '$'), '$' RETURNING int) <> 1;
+---+
| c |
+---+
| 0 |
+---+
(1 row)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_func_json_query TEST_ID: A024 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT count(*) c
FROM test_json_cols
WHERE json_query(s_num_int, '$') IS NOT NULL;
+---+
| c |
+---+
| 2 |
+---+
(1 row)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_func_json_query TEST_ID: A025 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT count(*) c
FROM test_json_cols
WHERE json_query(s_num_int, '$') IS NULL;
+---+
| c |
+---+
| 2 |
+---+
(1 row)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_func_json_query TEST_ID: A026 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT json_value(json_query(1234.5678, '$'), '$' RETURNING DOUBLE) c
FROM test_json_cols;
+-----------+
| c         |
+-----------+
| 1234.5678 |
| 1234.5678 |
| 1234.5678 |
| 1234.5678 |
+-----------+
(4 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_func_json_query TEST_ID: A027 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT count(*) c
FROM test_json_cols
WHERE json_value(json_query(1234.5678, '$'), '$' RETURNING DOUBLE) = 1234.5678;
+---+
| c |
+---+
| 4 |
+---+
(1 row)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_func_json_query TEST_ID: A028 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT count(*) c
FROM test_json_cols
WHERE json_value(json_query(1234.5678, '$'), '$' RETURNING DOUBLE) <> 1234.5678;
+---+
| c |
+---+
| 0 |
+---+
(1 row)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_func_json_query TEST_ID: A029 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT count(*) c
FROM test_json_cols
WHERE json_query(1234.5678, '$') IS NOT NULL;
+---+
| c |
+---+
| 4 |
+---+
(1 row)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_func_json_query TEST_ID: A030 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT count(*) c
FROM test_json_cols
WHERE json_query(1234.5678, '$') IS NULL;
+---+
| c |
+---+
| 0 |
+---+
(1 row)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_func_json_query TEST_ID: A031 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT json_value(json_query(s_num_float, '$'), '$' RETURNING DOUBLE) c
FROM test_json_cols;
+-----+
| c   |
+-----+
| 0.1 |
| 0.1 |
|     |
|     |
+-----+
(4 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_func_json_query TEST_ID: A032 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT count(*) c
FROM test_json_cols
WHERE json_value(json_query(s_num_float, '$'), '$' RETURNING DOUBLE) = 0.1;
+---+
| c |
+---+
| 2 |
+---+
(1 row)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_func_json_query TEST_ID: A033 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT count(*) c
FROM test_json_cols
WHERE json_value(json_query(s_num_float, '$'), '$' RETURNING DOUBLE) <> 0.1;
+---+
| c |
+---+
| 0 |
+---+
(1 row)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_func_json_query TEST_ID: A034 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT count(*) c
FROM test_json_cols
WHERE json_query(s_num_float, '$') IS NOT NULL;
+---+
| c |
+---+
| 2 |
+---+
(1 row)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_func_json_query TEST_ID: A035 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT count(*) c
FROM test_json_cols
WHERE json_query(s_num_float, '$') IS NULL;
+---+
| c |
+---+
| 2 |
+---+
(1 row)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_func_json_query TEST_ID: A036 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT json_query(NULL, '$') c
FROM test_json_cols;
+---+
| c |
+---+
|   |
|   |
|   |
|   |
+---+
(4 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_func_json_query TEST_ID: A037 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT count(*) c
FROM test_json_cols
WHERE json_query(NULL, '$') IS NULL;
+---+
| c |
+---+
| 4 |
+---+
(1 row)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_func_json_query TEST_ID: A038 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT count(*) c
FROM test_json_cols
WHERE json_query(NULL, '$') IS NOT NULL;
+---+
| c |
+---+
| 0 |
+---+
(1 row)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_func_json_query TEST_ID: A039 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT json_query(s_null, '$') c
FROM test_json_cols;
+---+
| c |
+---+
|   |
|   |
|   |
|   |
+---+
(4 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_func_json_query TEST_ID: A040 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT count(*) c
FROM test_json_cols
WHERE json_query(s_null, '$') IS NULL;
+---+
| c |
+---+
| 4 |
+---+
(1 row)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_func_json_query TEST_ID: A041 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT count(*) c
FROM test_json_cols
WHERE json_query(s_null, '$') IS NOT NULL;
+---+
| c |
+---+
| 0 |
+---+
(1 row)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_func_json_query TEST_ID: A042 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT json_query(c1, '$.does.not.exist') c
FROM test_json_cols;
+---+
| c |
+---+
|   |
|   |
|   |
|   |
+---+
(4 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_func_json_query TEST_ID: A043 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT count(*) c
FROM test_json_cols
WHERE json_query(c1, '$.does.not.exist') IS NULL;
+---+
| c |
+---+
| 4 |
+---+
(1 row)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_func_json_query TEST_ID: A044 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT json_query(s_str, '$') c
FROM test_json_cols;
+-----+
| c   |
+-----+
| "A" |
| "A" |
|     |
|     |
+-----+
(4 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_func_json_query TEST_ID: A045 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT json_query(c1, '$.a_str') c
FROM test_json_cols;
+-----+
| c   |
+-----+
| "A" |
| "A" |
|     |
|     |
+-----+
(4 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_func_json_query TEST_ID: A046 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT json_query(c1, '$.a_obj.a_str') c
FROM test_json_cols;
+-----+
| c   |
+-----+
| "A" |
| "A" |
|     |
|     |
+-----+
(4 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_func_json_query TEST_ID: A047 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT json_query(c1, '$.a_array[0].a_str') c
FROM test_json_cols;
+-----+
| c   |
+-----+
| "A" |
| "A" |
|     |
|     |
+-----+
(4 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_func_json_query TEST_ID: A048 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT count(*) c
FROM test_json_cols
WHERE json_query(c1, '$.a_str') IS NULL;
+---+
| c |
+---+
| 2 |
+---+
(1 row)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_func_json_query TEST_ID: A049 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT count(*) c
FROM test_json_cols
WHERE json_query(c1, '$.a_str') IS NOT NULL;
+---+
| c |
+---+
| 2 |
+---+
(1 row)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_func_json_query TEST_ID: A050 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT json_query(s_num_int, '$') c
FROM test_json_cols;
+---+
| c |
+---+
| 1 |
| 1 |
|   |
|   |
+---+
(4 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_func_json_query TEST_ID: A051 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT json_query(c1, '$.a_num_int') c
FROM test_json_cols;
+---+
| c |
+---+
| 1 |
| 1 |
|   |
|   |
+---+
(4 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_func_json_query TEST_ID: A052 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT json_query(c1, '$.a_obj.a_num_int') c
FROM test_json_cols;
+---+
| c |
+---+
| 1 |
| 1 |
|   |
|   |
+---+
(4 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_func_json_query TEST_ID: A053 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT json_query(c1, '$.a_array[0].a_num_int') c
FROM test_json_cols;
+---+
| c |
+---+
| 1 |
| 1 |
|   |
|   |
+---+
(4 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_func_json_query TEST_ID: A054 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT count(*) c
FROM test_json_cols
WHERE json_query(c1, '$.a_num_int') IS NULL;
+---+
| c |
+---+
| 2 |
+---+
(1 row)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_func_json_query TEST_ID: A055 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT count(*) c
FROM test_json_cols
WHERE json_query(c1, '$.a_num_int') IS NOT NULL;
+---+
| c |
+---+
| 2 |
+---+
(1 row)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_func_json_query TEST_ID: A056 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT json_query(s_num_float, '$') c
FROM test_json_cols;
+-----+
| c   |
+-----+
| 0.1 |
| 0.1 |
|     |
|     |
+-----+
(4 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_func_json_query TEST_ID: A057 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT json_query(c1, '$.a_num_float') c
FROM test_json_cols;
+-----+
| c   |
+-----+
| 0.1 |
| 0.1 |
|     |
|     |
+-----+
(4 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_func_json_query TEST_ID: A058 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT json_query(c1, '$.a_obj.a_num_float') c
FROM test_json_cols;
+-----+
| c   |
+-----+
| 0.1 |
| 0.1 |
|     |
|     |
+-----+
(4 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_func_json_query TEST_ID: A059 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT json_query(c1, '$.a_array[0].a_num_float') c
FROM test_json_cols;
+-----+
| c   |
+-----+
| 0.1 |
| 0.1 |
|     |
|     |
+-----+
(4 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_func_json_query TEST_ID: A060 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT count(*) c
FROM test_json_cols
WHERE json_query(c1, '$.a_num_float') IS NULL;
+---+
| c |
+---+
| 2 |
+---+
(1 row)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_func_json_query TEST_ID: A061 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT count(*) c
FROM test_json_cols
WHERE json_query(c1, '$.a_num_float') IS NOT NULL;
+---+
| c |
+---+
| 2 |
+---+
(1 row)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_func_json_query TEST_ID: A062 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT json_query(s_bool, '$') c
FROM test_json_cols;
+---+
| c |
+---+
| 1 |
| 1 |
|   |
|   |
+---+
(4 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_func_json_query TEST_ID: A063 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT json_query(c1, '$.a_bool') c
FROM test_json_cols;
+------+
| c    |
+------+
| true |
| true |
|      |
|      |
+------+
(4 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_func_json_query TEST_ID: A064 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT json_query(c1, '$.a_obj.a_bool') c
FROM test_json_cols;
+------+
| c    |
+------+
| true |
| true |
|      |
|      |
+------+
(4 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_func_json_query TEST_ID: A065 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT json_query(c1, '$.a_array[0].a_bool') c
FROM test_json_cols;
+------+
| c    |
+------+
| true |
| true |
|      |
|      |
+------+
(4 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_func_json_query TEST_ID: A066 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT count(*) c
FROM test_json_cols
WHERE json_query(c1, '$.a_bool') IS NULL;
+---+
| c |
+---+
| 2 |
+---+
(1 row)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_func_json_query TEST_ID: A067 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT count(*) c
FROM test_json_cols
WHERE json_query(c1, '$.a_bool') IS NOT NULL;
+---+
| c |
+---+
| 2 |
+---+
(1 row)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_func_json_query TEST_ID: A068 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT json_query(s_null, '$') c
FROM test_json_cols;
+---+
| c |
+---+
|   |
|   |
|   |
|   |
+---+
(4 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_func_json_query TEST_ID: A069 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT json_query(c1, '$.a_null') c
FROM test_json_cols;
+---+
| c |
+---+
|   |
|   |
|   |
|   |
+---+
(4 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_func_json_query TEST_ID: A070 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT json_query(c1, '$.a_obj.a_null') c
FROM test_json_cols;
+---+
| c |
+---+
|   |
|   |
|   |
|   |
+---+
(4 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_func_json_query TEST_ID: A071 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT json_query(c1, '$.a_array[0].a_null') c
FROM test_json_cols;
+---+
| c |
+---+
|   |
|   |
|   |
|   |
+---+
(4 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_func_json_query TEST_ID: A072 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT count(*) c
FROM test_json_cols
WHERE json_query(c1, '$.a_null') IS NULL;
+---+
| c |
+---+
| 4 |
+---+
(1 row)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_func_json_query TEST_ID: A073 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT count(*) c
FROM test_json_cols
WHERE json_query(c1, '$.a_null') IS NOT NULL;
+---+
| c |
+---+
| 0 |
+---+
(1 row)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_func_json_query TEST_ID: A074 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT json_query(c_empty_obj, '$') c
FROM test_json_cols;
+----+
| c  |
+----+
| {} |
| {} |
|    |
|    |
+----+
(4 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_func_json_query TEST_ID: A075 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT count(*) c
FROM test_json_cols
WHERE json_query(c_empty_obj, '$') IS NULL;
+---+
| c |
+---+
| 2 |
+---+
(1 row)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_func_json_query TEST_ID: A076 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT count(*) c
FROM test_json_cols
WHERE json_query(c_empty_obj, '$') IS NOT NULL;
+---+
| c |
+---+
| 2 |
+---+
(1 row)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_func_json_query TEST_ID: A077 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT json_query(c_empty_array, '$') c
FROM test_json_cols;
+----+
| c  |
+----+
| [] |
| [] |
|    |
|    |
+----+
(4 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_func_json_query TEST_ID: A078 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT count(*) c
FROM test_json_cols
WHERE json_query(c_empty_array, '$') IS NULL;
+---+
| c |
+---+
| 2 |
+---+
(1 row)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_func_json_query TEST_ID: A079 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT count(*) c
FROM test_json_cols
WHERE json_query(c_empty_array, '$') IS NOT NULL;
+---+
| c |
+---+
| 2 |
+---+
(1 row)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_func_json_query TEST_ID: A080 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT json_query(c_empty_obj_nested, '$.o1') c
FROM test_json_cols;
+----+
| c  |
+----+
| {} |
| {} |
|    |
|    |
+----+
(4 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_func_json_query TEST_ID: A081 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT count(*) c
FROM test_json_cols
WHERE json_query(c_empty_obj_nested, '$.o1') IS NULL;
+---+
| c |
+---+
| 2 |
+---+
(1 row)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_func_json_query TEST_ID: A082 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT count(*) c
FROM test_json_cols
WHERE json_query(c_empty_obj_nested, '$.o1') IS NOT NULL;
+---+
| c |
+---+
| 2 |
+---+
(1 row)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_func_json_query TEST_ID: A083 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT json_query(c_empty_obj_nested, '$.o2') c
FROM test_json_cols;
+----+
| c  |
+----+
| [] |
| [] |
|    |
|    |
+----+
(4 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_func_json_query TEST_ID: A084 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT count(*) c
FROM test_json_cols
WHERE json_query(c_empty_obj_nested, '$.o2') IS NULL;
+---+
| c |
+---+
| 2 |
+---+
(1 row)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_func_json_query TEST_ID: A085 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT count(*) c
FROM test_json_cols
WHERE json_query(c_empty_obj_nested, '$.o2') IS NOT NULL;
+---+
| c |
+---+
| 2 |
+---+
(1 row)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_func_json_query TEST_ID: A086 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT json_query(c_empty_obj_nested, '$.o3') c
FROM test_json_cols;
+---+
| c |
+---+
|   |
|   |
|   |
|   |
+---+
(4 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_func_json_query TEST_ID: A087 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT count(*) c
FROM test_json_cols
WHERE json_query(c_empty_obj_nested, '$.o3') IS NULL;
+---+
| c |
+---+
| 4 |
+---+
(1 row)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_func_json_query TEST_ID: A088 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT count(*) c
FROM test_json_cols
WHERE json_query(c_empty_obj_nested, '$.o3') IS NOT NULL;
+---+
| c |
+---+
| 0 |
+---+
(1 row)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_func_json_query TEST_ID: A089 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT json_query(c_empty_array_nested, '$[0]') c
FROM test_json_cols;
+----+
| c  |
+----+
| {} |
| {} |
|    |
|    |
+----+
(4 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_func_json_query TEST_ID: A090 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT count(*) c
FROM test_json_cols
WHERE json_query(c_empty_array_nested, '$[0]') IS NULL;
+---+
| c |
+---+
| 2 |
+---+
(1 row)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_func_json_query TEST_ID: A091 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT count(*) c
FROM test_json_cols
WHERE json_query(c_empty_array_nested, '$[0]') IS NOT NULL;
+---+
| c |
+---+
| 2 |
+---+
(1 row)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_func_json_query TEST_ID: A092 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT json_query(c_empty_array_nested, '$[1]') c
FROM test_json_cols;
+----+
| c  |
+----+
| [] |
| [] |
|    |
|    |
+----+
(4 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_func_json_query TEST_ID: A093 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT count(*) c
FROM test_json_cols
WHERE json_query(c_empty_array_nested, '$[1]') IS NULL;
+---+
| c |
+---+
| 2 |
+---+
(1 row)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_func_json_query TEST_ID: A094 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT count(*) c
FROM test_json_cols
WHERE json_query(c_empty_array_nested, '$[1]') IS NOT NULL;
+---+
| c |
+---+
| 2 |
+---+
(1 row)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_func_json_query TEST_ID: A095 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT json_query(c_empty_array_nested, '$[2]') c
FROM test_json_cols;
+---+
| c |
+---+
|   |
|   |
|   |
|   |
+---+
(4 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_func_json_query TEST_ID: A096 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT count(*) c
FROM test_json_cols
WHERE json_query(c_empty_array_nested, '$[2]') IS NULL;
+---+
| c |
+---+
| 4 |
+---+
(1 row)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_func_json_query TEST_ID: A097 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT count(*) c
FROM test_json_cols
WHERE json_query(c_empty_array_nested, '$[2]') IS NOT NULL;
+---+
| c |
+---+
| 0 |
+---+
(1 row)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_func_json_query TEST_ID: A098 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT json_query(c_empty_obj_nested, '$.') c
FROM test_json_cols;
+-----------------------------+
| c                           |
+-----------------------------+
| {"o1":{},"o2":[],"o3":null} |
| {"o1":{},"o2":[],"o3":null} |
|                             |
|                             |
+-----------------------------+
(4 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_func_json_query TEST_ID: A099 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT count(*) c
FROM test_json_cols
WHERE json_query(c_empty_obj_nested, '$.') IS NULL;
+---+
| c |
+---+
| 2 |
+---+
(1 row)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_func_json_query TEST_ID: A100 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT json_query(c_empty_array_nested, '$.') c
FROM test_json_cols;
+--------------+
| c            |
+--------------+
| [{},[],null] |
| [{},[],null] |
|              |
|              |
+--------------+
(4 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_func_json_query TEST_ID: A101 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT count(*) c
FROM test_json_cols
WHERE json_query(c_empty_array_nested, '$.') IS NULL;
+---+
| c |
+---+
| 2 |
+---+
(1 row)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_func_json_query TEST_ID: A102 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT json_query(c1, '$.a_obj.a_obj') c
FROM test_json_cols;
+----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| c                                                                                                                                                                                                  |
+----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| {"a_str":"A","a_num_int":1,"a_num_float":0.1,"a_bool":true,"a_null":null,"a_empty_obj":{},"a_empty_array":[],"a_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"a_empty_array_nested":[{},[],null]} |
| {"a_str":"A","a_num_int":1,"a_num_float":0.1,"a_bool":true,"a_null":null,"a_empty_obj":{},"a_empty_array":[],"a_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"a_empty_array_nested":[{},[],null]} |
|                                                                                                                                                                                                    |
|                                                                                                                                                                                                    |
+----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
(4 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_func_json_query TEST_ID: A103 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT count(*) c
FROM test_json_cols
WHERE json_query(c1, '$.a_obj.a_obj') IS NULL;
+---+
| c |
+---+
| 2 |
+---+
(1 row)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_func_json_query TEST_ID: A104 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT json_query(c1, '$.a_obj.a_array[0]') c
FROM test_json_cols;
+----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| c                                                                                                                                                                                                  |
+----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| {"a_str":"A","a_num_int":1,"a_num_float":0.1,"a_bool":true,"a_null":null,"a_empty_obj":{},"a_empty_array":[],"a_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"a_empty_array_nested":[{},[],null]} |
| {"a_str":"A","a_num_int":1,"a_num_float":0.1,"a_bool":true,"a_null":null,"a_empty_obj":{},"a_empty_array":[],"a_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"a_empty_array_nested":[{},[],null]} |
|                                                                                                                                                                                                    |
|                                                                                                                                                                                                    |
+----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
(4 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_func_json_query TEST_ID: A105 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT count(*) c
FROM test_json_cols
WHERE json_query(c1, '$.a_obj.a_array[0]') IS NULL;
+---+
| c |
+---+
| 2 |
+---+
(1 row)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_func_json_query TEST_ID: A106 TYPE: NEGATIVE TEST
#-------------------------------------------------------------------------
SELECT count(*) c
FROM test_json_cols
WHERE json_query(c1, '$.a_array[0,1]') IS NULL;
QueryInterruptedException
!error

#-------------------------------------------------------------------------
# TESTCASE: test_func_json_query TEST_ID: A107 TYPE: NEGATIVE TEST
#-------------------------------------------------------------------------
SELECT count(*) c
FROM test_json_cols
WHERE json_query(c1, '$.a_array[0:2]') IS NULL;
QueryInterruptedException
!error

#-------------------------------------------------------------------------
# TESTCASE: test_func_json_query TEST_ID: A108 TYPE: NEGATIVE TEST
#-------------------------------------------------------------------------
SELECT count(*) c
FROM test_json_cols
WHERE json_query(c1, '$.a_array[:2]') IS NULL;
QueryInterruptedException
!error

#-------------------------------------------------------------------------
# TESTCASE: test_func_json_query TEST_ID: A109 TYPE: NEGATIVE TEST
#-------------------------------------------------------------------------
SELECT count(*) c
FROM test_json_cols
WHERE json_query(c1, '$.a_array[0:]') IS NULL;
QueryInterruptedException
!error

#-------------------------------------------------------------------------
# TESTCASE: test_func_json_query TEST_ID: A110 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT count(*) c
FROM test_json_cols
WHERE json_query(c1, '$.a_array[-1].a_str') IS NULL;
+---+
| c |
+---+
| 2 |
+---+
(1 row)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_func_json_query TEST_ID: A111 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT count(*) c
FROM test_json_cols
WHERE json_query(c1, '$.a_array[-2].a_str') IS NULL;
+---+
| c |
+---+
| 2 |
+---+
(1 row)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_func_json_query TEST_ID: A112 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT count(*) c
FROM test_json_cols
WHERE json_query(c1, '$.a_array[-1234567890].a_str') IS NULL;
+---+
| c |
+---+
| 4 |
+---+
(1 row)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_func_json_query TEST_ID: A113 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT count(*) c
FROM test_json_cols
WHERE json_query(c1, '$.a_array[0].a_str.length()') IS NULL;
+---+
| c |
+---+
| 4 |
+---+
(1 row)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_func_json_query TEST_ID: A114 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT count(*) c
FROM test_json_cols
WHERE json_query(c1, '$.a_array[0].a_str') IS NULL;
+---+
| c |
+---+
| 2 |
+---+
(1 row)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_func_json_query TEST_ID: A115 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT count(*) c
FROM test_json_cols
WHERE json_query(c1, '$.a_array[1].a_str') IS NULL;
+---+
| c |
+---+
| 2 |
+---+
(1 row)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_func_json_query TEST_ID: A116 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT count(*) c
FROM test_json_cols
WHERE json_query(c1, '$.a_array[2].a_str') IS NULL;
+---+
| c |
+---+
| 4 |
+---+
(1 row)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_func_json_query TEST_ID: A117 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT count(*) c
FROM test_json_cols
WHERE json_query(c1, '$.a_array[1234567890].a_str') IS NULL;
+---+
| c |
+---+
| 4 |
+---+
(1 row)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_func_json_query TEST_ID: A118 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT count(*) c
FROM test_json_cols
WHERE json_query(c1, '$.a_obj.a_str') IS NULL;
+---+
| c |
+---+
| 2 |
+---+
(1 row)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_func_json_query TEST_ID: A119 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT count(*) c
FROM test_json_cols
WHERE json_value(json_query(c1, '$.a_array[0].a_str'), '$') = 'A';
+---+
| c |
+---+
| 2 |
+---+
(1 row)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_func_json_query TEST_ID: A120 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT count(*) c
FROM test_json_cols
WHERE json_value(json_query(c1, '$.a_array[0].a_num_int'), '$') = 1;
+---+
| c |
+---+
| 2 |
+---+
(1 row)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_func_json_query TEST_ID: A121 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT count(*) c
FROM test_json_cols
WHERE json_value(json_query(c1, '$.a_array[0].a_num_float'), '$') = 0.1;
+---+
| c |
+---+
| 2 |
+---+
(1 row)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_func_json_query TEST_ID: A122 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT count(*) c
FROM test_json_cols
WHERE json_value(json_query(c1, '$.a_obj'), '$.a_array[0].a_str') = 'A';
+---+
| c |
+---+
| 2 |
+---+
(1 row)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_func_json_query TEST_ID: A123 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT count(*) c
FROM test_json_cols
WHERE json_value(json_query(c1, '$.a_obj'), '$.a_array[0].a_num_int') = 1;
+---+
| c |
+---+
| 2 |
+---+
(1 row)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_func_json_query TEST_ID: A124 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT count(*) c
FROM test_json_cols
WHERE json_value(json_query(c1, '$.a_obj'), '$.a_array[0].a_num_float') = 0.1;
+---+
| c |
+---+
| 2 |
+---+
(1 row)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_func_json_query TEST_ID: A125 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT count(*) c
FROM test_json_cols
WHERE json_value(json_query(c1, '$.a_array[1].a_str'), '$') = 'A';
+---+
| c |
+---+
| 2 |
+---+
(1 row)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_func_json_query TEST_ID: A126 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT count(*) c
FROM test_json_cols
WHERE json_value(json_query(c1, '$.a_array[1].a_num_int'), '$') = 1;
+---+
| c |
+---+
| 2 |
+---+
(1 row)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_func_json_query TEST_ID: A127 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT count(*) c
FROM test_json_cols
WHERE json_value(json_query(c1, '$.a_array[1].a_num_float'), '$') = 0.1;
+---+
| c |
+---+
| 2 |
+---+
(1 row)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_func_json_query TEST_ID: A128 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT count(*) c
FROM test_json_cols
WHERE json_value(json_query(c1, '$.a_obj'), '$.a_array[1].a_str') = 'A';
+---+
| c |
+---+
| 2 |
+---+
(1 row)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_func_json_query TEST_ID: A129 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT count(*) c
FROM test_json_cols
WHERE json_value(json_query(c1, '$.a_obj'), '$.a_array[1].a_num_int') = 1;
+---+
| c |
+---+
| 2 |
+---+
(1 row)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_func_json_query TEST_ID: A130 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT count(*) c
FROM test_json_cols
WHERE json_value(json_query(c1, '$.a_obj'), '$.a_array[1].a_num_float') = 0.1;
+---+
| c |
+---+
| 2 |
+---+
(1 row)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_func_json_query TEST_ID: A131 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT count(*) c
FROM test_json_cols
WHERE json_value(json_query(c1, '$.a_array[2].a_str'), '$') = 'A';
+---+
| c |
+---+
| 0 |
+---+
(1 row)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_func_json_query TEST_ID: A132 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT count(*) c
FROM test_json_cols
WHERE json_value(json_query(c1, '$.a_array[2].a_num_int'), '$') = 1;
+---+
| c |
+---+
| 0 |
+---+
(1 row)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_func_json_query TEST_ID: A133 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT count(*) c
FROM test_json_cols
WHERE json_value(json_query(c1, '$.a_array[2].a_num_float'), '$') = 0.1;
+---+
| c |
+---+
| 0 |
+---+
(1 row)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_func_json_query TEST_ID: A134 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT count(*) c
FROM test_json_cols
WHERE json_value(json_query(c1, '$.a_obj'), '$.a_array[2].a_str') = 'A';
+---+
| c |
+---+
| 0 |
+---+
(1 row)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_func_json_query TEST_ID: A135 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT count(*) c
FROM test_json_cols
WHERE json_value(json_query(c1, '$.a_obj'), '$.a_array[2].a_num_int') = 1;
+---+
| c |
+---+
| 0 |
+---+
(1 row)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_func_json_query TEST_ID: A136 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT count(*) c
FROM test_json_cols
WHERE json_value(json_query(c1, '$.a_obj'), '$.a_array[2].a_num_float') = 0.1;
+---+
| c |
+---+
| 0 |
+---+
(1 row)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_func_json_query TEST_ID: A137 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT count(*) c
FROM test_json_cols
WHERE json_value(json_query(c1, '$.a_array[1234567890].a_str'), '$') = 'A';
+---+
| c |
+---+
| 0 |
+---+
(1 row)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_func_json_query TEST_ID: A138 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT count(*) c
FROM test_json_cols
WHERE json_value(json_query(c1, '$.a_array[1234567890].a_num_int'), '$') = 1;
+---+
| c |
+---+
| 0 |
+---+
(1 row)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_func_json_query TEST_ID: A139 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT count(*) c
FROM test_json_cols
WHERE json_value(json_query(c1, '$.a_array[1234567890].a_num_float'), '$') = 0.1;
+---+
| c |
+---+
| 0 |
+---+
(1 row)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_func_json_query TEST_ID: A140 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT count(*) c
FROM test_json_cols
WHERE json_value(json_query(c1, '$.a_obj'), '$.a_array[1234567890].a_str') = 'A';
+---+
| c |
+---+
| 0 |
+---+
(1 row)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_func_json_query TEST_ID: A141 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT count(*) c
FROM test_json_cols
WHERE json_value(json_query(c1, '$.a_obj'), '$.a_array[1234567890].a_num_int') = 1;
+---+
| c |
+---+
| 0 |
+---+
(1 row)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_func_json_query TEST_ID: A142 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT count(*) c
FROM test_json_cols
WHERE json_value(json_query(c1, '$.a_obj'), '$.a_array[1234567890].a_num_float') = 0.1;
+---+
| c |
+---+
| 0 |
+---+
(1 row)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_func_json_query TEST_ID: A143 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT count(*) c
FROM test_json_cols
WHERE json_query(c1, '$.a_obj') IS NULL;
+---+
| c |
+---+
| 2 |
+---+
(1 row)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_func_json_query TEST_ID: A144 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT count(*) c
FROM test_json_cols
WHERE json_query(c1, '$.a_obj.a_str') IS NULL;
+---+
| c |
+---+
| 2 |
+---+
(1 row)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_func_json_query TEST_ID: A145 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT count(*) c
FROM test_json_cols
WHERE json_query(c1, '$.a_obj.a_num_int') IS NULL;
+---+
| c |
+---+
| 2 |
+---+
(1 row)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_func_json_query TEST_ID: A146 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT count(*) c
FROM test_json_cols
WHERE json_query(c1, '$.a_obj') IS NOT NULL;
+---+
| c |
+---+
| 2 |
+---+
(1 row)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_func_json_query TEST_ID: A147 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT count(*) c
FROM test_json_cols
WHERE json_query(c1, '$.a_obj.a_str') IS NOT NULL;
+---+
| c |
+---+
| 2 |
+---+
(1 row)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_func_json_query TEST_ID: A148 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT count(*) c
FROM test_json_cols
WHERE json_query(c1, '$.a_obj.a_num_int') IS NOT NULL;
+---+
| c |
+---+
| 2 |
+---+
(1 row)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_func_json_query TEST_ID: A149 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT count(*) c
FROM
  (SELECT json_query(c1, '$.a_obj')
   FROM test_json_cols);
+---+
| c |
+---+
| 4 |
+---+
(1 row)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_func_json_query TEST_ID: A150 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT count(*) c
FROM
  (SELECT ALL json_query(c1, '$.a_array')
   FROM test_json_cols);
+---+
| c |
+---+
| 4 |
+---+
(1 row)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_func_json_query TEST_ID: A151 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT count(*) c
FROM
  (SELECT json_query(c1, '$.a_obj.a_str')
   FROM test_json_cols);
+---+
| c |
+---+
| 4 |
+---+
(1 row)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_func_json_query TEST_ID: A152 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT count(*) c
FROM
  (SELECT ALL json_query(c1, '$.a_obj.a_num_int')
   FROM test_json_cols);
+---+
| c |
+---+
| 4 |
+---+
(1 row)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_func_json_query TEST_ID: A153 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT count(mycol) c
FROM
  (SELECT json_query(c1, '$.a_obj') mycol
   FROM test_json_cols);
+---+
| c |
+---+
| 2 |
+---+
(1 row)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_func_json_query TEST_ID: A154 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT count(mycol) c
FROM
  (SELECT json_query(c1, '$.a_obj.a_str') mycol
   FROM test_json_cols);
+---+
| c |
+---+
| 2 |
+---+
(1 row)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_func_json_query TEST_ID: A155 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT count(mycol) c
FROM
  (SELECT json_query(c1, '$.a_obj.a_num_int') mycol
   FROM test_json_cols);
+---+
| c |
+---+
| 2 |
+---+
(1 row)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_func_json_query TEST_ID: A156 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT count(*) c
FROM
  (SELECT DISTINCT json_query(c1, '$.a_obj') c
   FROM test_json_cols);
+---+
| c |
+---+
| 2 |
+---+
(1 row)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_func_json_query TEST_ID: A157 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT DISTINCT json_query(c1, '$.a_obj.a_str') c
FROM test_json_cols;
+-----+
| c   |
+-----+
| "A" |
|     |
+-----+
(2 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_func_json_query TEST_ID: A158 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT DISTINCT json_query(c1, '$.a_obj.a_num_int') c
FROM test_json_cols;
+---+
| c |
+---+
| 1 |
|   |
+---+
(2 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_func_json_query TEST_ID: A159 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT count(*) c
FROM
  (SELECT json_query(c1, '$.a_obj') mycol
   FROM test_json_cols)
GROUP BY mycol;
+---+
| c |
+---+
| 2 |
| 2 |
+---+
(2 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_func_json_query TEST_ID: A160 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT json_query(c1, '$.a_obj.a_str') mycol
FROM test_json_cols
GROUP BY json_query(c1, '$.a_obj.a_str');
+-------+
| mycol |
+-------+
| "A"   |
|       |
+-------+
(2 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_func_json_query TEST_ID: A161 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT json_query(c1, '$.a_obj.a_num_int') mycol
FROM test_json_cols
GROUP BY json_query(c1, '$.a_obj.a_num_int');
+-------+
| mycol |
+-------+
| 1     |
|       |
+-------+
(2 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_func_json_query TEST_ID: A162 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT count(*) c
FROM
  (SELECT json_query(c1, '$.a_obj') mycol
   FROM test_json_cols)
GROUP BY mycol
HAVING mycol IS NOT NULL;
+---+
| c |
+---+
| 2 |
+---+
(1 row)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_func_json_query TEST_ID: A163 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT mycol,
       count(*) c
FROM
  (SELECT c1,
          json_query(c1, '$.a_str') mycol
   FROM test_json_cols)
GROUP BY mycol
HAVING mycol IS NOT NULL;
+-------+---+
| mycol | c |
+-------+---+
| "A"   | 2 |
+-------+---+
(1 row)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_func_json_query TEST_ID: A164 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT mycol,
       count(*) c
FROM
  (SELECT c1,
          json_query(c1, '$.a_num_int') mycol
   FROM test_json_cols)
GROUP BY mycol
HAVING mycol IS NOT NULL;
+-------+---+
| mycol | c |
+-------+---+
| 1     | 2 |
+-------+---+
(1 row)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_func_json_query TEST_ID: A165 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT count(*) c
FROM test_json_cols
WHERE json_query(c1, '$.a_obj') = json_query(c2, '$.a_obj');
+---+
| c |
+---+
| 0 |
+---+
(1 row)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_func_json_query TEST_ID: A166 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT count(*) c
FROM test_json_cols
WHERE json_query(c1, '$.a_obj.a_str') = json_query(c2, '$.a_obj.a_str');
+---+
| c |
+---+
| 0 |
+---+
(1 row)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_func_json_query TEST_ID: A167 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT count(*) c
FROM test_json_cols
WHERE json_query(c1, '$.a_obj.a_num_int') = json_query(c2, '$.a_obj.a_num_int');
+---+
| c |
+---+
| 2 |
+---+
(1 row)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_func_json_query TEST_ID: A168 TYPE: NEGATIVE TEST
#-------------------------------------------------------------------------
SELECT count(*) c
FROM test_json_cols t1
INNER JOIN test_json_cols t2 ON json_query(t1.c1, '$.a_obj')=json_query(t2.c1, '$.a_obj');
Cannot join
!error

#-------------------------------------------------------------------------
# TESTCASE: test_func_json_query TEST_ID: A169 TYPE: NEGATIVE TEST
#-------------------------------------------------------------------------
SELECT count(*) c
FROM test_json_cols t1
INNER JOIN test_json_cols t2 ON json_query(t1.c1, '$.a_obj.a_str')=json_query(t2.c1, '$.a_obj.a_str');
Cannot join
!error

#-------------------------------------------------------------------------
# TESTCASE: test_func_json_query TEST_ID: A170 TYPE: NEGATIVE TEST
#-------------------------------------------------------------------------
SELECT count(*) c
FROM test_json_cols t1
INNER JOIN test_json_cols t2 ON json_query(t1.c1, '$.a_obj.a_num_int')=json_query(t2.c1, '$.a_obj.a_num_int');
Cannot join
!error

#-------------------------------------------------------------------------
# TESTCASE: test_func_json_query TEST_ID: A171 TYPE: NEGATIVE TEST
#-------------------------------------------------------------------------
SELECT count(*) c
FROM test_json_cols t1
LEFT JOIN test_json_cols t2 ON json_query(t1.c1, '$.a_obj')=json_query(t2.c1, '$.a_obj');
Cannot join
!error

#-------------------------------------------------------------------------
# TESTCASE: test_func_json_query TEST_ID: A172 TYPE: NEGATIVE TEST
#-------------------------------------------------------------------------
SELECT count(*) c
FROM test_json_cols t1
LEFT JOIN test_json_cols t2 ON json_query(t1.c1, '$.a_obj.a_str')=json_query(t2.c1, '$.a_obj.a_str');
Cannot join
!error

#-------------------------------------------------------------------------
# TESTCASE: test_func_json_query TEST_ID: A173 TYPE: NEGATIVE TEST
#-------------------------------------------------------------------------
SELECT count(*) c
FROM test_json_cols t1
LEFT JOIN test_json_cols t2 ON json_query(t1.c1, '$.a_obj.a_num_int')=json_query(t2.c1, '$.a_obj.a_num_int');
Cannot join
!error

#-------------------------------------------------------------------------
# TESTCASE: test_func_json_query TEST_ID: A174 TYPE: NEGATIVE TEST
#-------------------------------------------------------------------------
SELECT count(*) c
FROM test_json_cols t1,
     test_json_cols t2
WHERE json_query(t1.c1, '$.a_obj')=json_query(t2.c1, '$.a_obj');
Cannot join
!error

#-------------------------------------------------------------------------
# TESTCASE: test_func_json_query TEST_ID: A175 TYPE: NEGATIVE TEST
#-------------------------------------------------------------------------
SELECT count(*) c
FROM test_json_cols t1,
     test_json_cols t2
WHERE json_query(t1.c1, '$.a_obj.a_str')=json_query(t2.c1, '$.a_obj.a_str');
Cannot join
!error

#-------------------------------------------------------------------------
# TESTCASE: test_func_json_query TEST_ID: A176 TYPE: NEGATIVE TEST
#-------------------------------------------------------------------------
SELECT count(*) c
FROM test_json_cols t1,
     test_json_cols t2
WHERE json_query(t1.c1, '$.a_obj.a_num_int')=json_query(t2.c1, '$.a_obj.a_num_int');
Cannot join
!error

#-------------------------------------------------------------------------
# TESTCASE: test_func_json_query TEST_ID: A177 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT json_query(c1, '$.a_obj.a_array[0]') c
FROM test_json_cols
ORDER BY __time;
+----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| c                                                                                                                                                                                                  |
+----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| {"a_str":"A","a_num_int":1,"a_num_float":0.1,"a_bool":true,"a_null":null,"a_empty_obj":{},"a_empty_array":[],"a_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"a_empty_array_nested":[{},[],null]} |
| {"a_str":"A","a_num_int":1,"a_num_float":0.1,"a_bool":true,"a_null":null,"a_empty_obj":{},"a_empty_array":[],"a_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"a_empty_array_nested":[{},[],null]} |
|                                                                                                                                                                                                    |
|                                                                                                                                                                                                    |
+----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
(4 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_func_json_query TEST_ID: A178 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT json_query(c1, '$.a_obj.a_array[0].a_str') c
FROM test_json_cols
ORDER BY __time;
+-----+
| c   |
+-----+
| "A" |
| "A" |
|     |
|     |
+-----+
(4 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_func_json_query TEST_ID: A179 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT json_query(c1, '$.a_obj.a_array[0].a_num_int') c
FROM test_json_cols
ORDER BY __time;
+---+
| c |
+---+
| 1 |
| 1 |
|   |
|   |
+---+
(4 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_func_json_query TEST_ID: A180 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT json_query(c1, '$.a_obj') c
FROM test_json_cols
LIMIT 1;

| c|

| {"a_str":"A","a_num_int":1,"a_num_float":0.1,"a_bool":true,"a_null":null,"a_empty_obj":{},"a_empty_array":[],"a_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"a_empty_array_nested":[{},[],null],"a_obj":{"a_str":"A","a_num_int":1,"a_num_float":0.1,"a_bool":true,"a_null":null,"a_empty_obj":{},"a_empty_array":[],"a_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"a_empty_array_nested":[{},[],null]},"a_array":[{"a_str":"A","a_num_int":1,"a_num_float":0.1,"a_bool":true,"a_null":null,"a_empty_obj":{},"a_empty_array":[],"a_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"a_empty_array_nested":[{},[],null]},{"a_str":"A","a_num_int":1,"a_num_float":0.1,"a_bool":true,"a_null":null,"a_empty_obj":{},"a_empty_array":[],"a_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"a_empty_array_nested":[{},[],null]}]} |

(1 row)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_func_json_query TEST_ID: A181 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT json_query(c1, '$.a_obj.a_str') c
FROM test_json_cols
LIMIT 1;
+-----+
| c   |
+-----+
| "A" |
+-----+
(1 row)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_func_json_query TEST_ID: A182 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT json_query(c1, '$.a_obj.a_num_int') c
FROM test_json_cols
LIMIT 1;
+---+
| c |
+---+
| 1 |
+---+
(1 row)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_func_json_query TEST_ID: A183 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT json_query(c1, '$.a_obj') c
FROM test_json_cols
OFFSET 1;

| c|

| {"a_str":"A","a_num_int":1,"a_num_float":0.1,"a_bool":true,"a_null":null,"a_empty_obj":{},"a_empty_array":[],"a_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"a_empty_array_nested":[{},[],null],"a_obj":{"a_str":"A","a_num_int":1,"a_num_float":0.1,"a_bool":true,"a_null":null,"a_empty_obj":{},"a_empty_array":[],"a_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"a_empty_array_nested":[{},[],null]},"a_array":[{"a_str":"A","a_num_int":1,"a_num_float":0.1,"a_bool":true,"a_null":null,"a_empty_obj":{},"a_empty_array":[],"a_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"a_empty_array_nested":[{},[],null]},{"a_str":"A","a_num_int":1,"a_num_float":0.1,"a_bool":true,"a_null":null,"a_empty_obj":{},"a_empty_array":[],"a_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"a_empty_array_nested":[{},[],null]}]} |
||
||

(3 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_func_json_query TEST_ID: A184 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT json_query(c1, '$.a_obj.a_str') c
FROM test_json_cols
OFFSET 1;
+-----+
| c   |
+-----+
| "A" |
|     |
|     |
+-----+
(3 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_func_json_query TEST_ID: A185 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT json_query(c1, '$.a_obj.a_num_int') c
FROM test_json_cols
OFFSET 1;
+---+
| c |
+---+
| 1 |
|   |
|   |
+---+
(3 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_func_json_query TEST_ID: A186 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT json_query(c1, '$.a_obj.a_array[0]') c
FROM test_json_cols
UNION ALL
SELECT json_query(c1, '$.a_obj.a_array[0]') c
FROM test_json_cols;
+----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| c                                                                                                                                                                                                  |
+----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| {"a_str":"A","a_num_int":1,"a_num_float":0.1,"a_bool":true,"a_null":null,"a_empty_obj":{},"a_empty_array":[],"a_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"a_empty_array_nested":[{},[],null]} |
| {"a_str":"A","a_num_int":1,"a_num_float":0.1,"a_bool":true,"a_null":null,"a_empty_obj":{},"a_empty_array":[],"a_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"a_empty_array_nested":[{},[],null]} |
| {"a_str":"A","a_num_int":1,"a_num_float":0.1,"a_bool":true,"a_null":null,"a_empty_obj":{},"a_empty_array":[],"a_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"a_empty_array_nested":[{},[],null]} |
| {"a_str":"A","a_num_int":1,"a_num_float":0.1,"a_bool":true,"a_null":null,"a_empty_obj":{},"a_empty_array":[],"a_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"a_empty_array_nested":[{},[],null]} |
|                                                                                                                                                                                                    |
|                                                                                                                                                                                                    |
|                                                                                                                                                                                                    |
|                                                                                                                                                                                                    |
+----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
(8 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_func_json_query TEST_ID: A187 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT json_query(c1, '$.a_obj.a_array[0].a_str') c
FROM test_json_cols
UNION ALL
SELECT json_query(c1, '$.a_obj.a_array[0].a_str') c
FROM test_json_cols;
+-----+
| c   |
+-----+
| "A" |
| "A" |
| "A" |
| "A" |
|     |
|     |
|     |
|     |
+-----+
(8 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_func_json_query TEST_ID: A188 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT json_query(c1, '$.a_obj.a_array[0].a_num_int') c
FROM test_json_cols
UNION ALL
SELECT json_query(c1, '$.a_obj.a_array[0].a_num_int') c
FROM test_json_cols;
+---+
| c |
+---+
| 1 |
| 1 |
| 1 |
| 1 |
|   |
|   |
|   |
|   |
+---+
(8 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_func_json_query TEST_ID: A189 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------

SELECT json_query(c1, '$.a_obj')
FROM test_json_cols;

||

| {"a_str":"A","a_num_int":1,"a_num_float":0.1,"a_bool":true,"a_null":null,"a_empty_obj":{},"a_empty_array":[],"a_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"a_empty_array_nested":[{},[],null],"a_obj":{"a_str":"A","a_num_int":1,"a_num_float":0.1,"a_bool":true,"a_null":null,"a_empty_obj":{},"a_empty_array":[],"a_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"a_empty_array_nested":[{},[],null]},"a_array":[{"a_str":"A","a_num_int":1,"a_num_float":0.1,"a_bool":true,"a_null":null,"a_empty_obj":{},"a_empty_array":[],"a_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"a_empty_array_nested":[{},[],null]},{"a_str":"A","a_num_int":1,"a_num_float":0.1,"a_bool":true,"a_null":null,"a_empty_obj":{},"a_empty_array":[],"a_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"a_empty_array_nested":[{},[],null]}]} |
| {"a_str":"A","a_num_int":1,"a_num_float":0.1,"a_bool":true,"a_null":null,"a_empty_obj":{},"a_empty_array":[],"a_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"a_empty_array_nested":[{},[],null],"a_obj":{"a_str":"A","a_num_int":1,"a_num_float":0.1,"a_bool":true,"a_null":null,"a_empty_obj":{},"a_empty_array":[],"a_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"a_empty_array_nested":[{},[],null]},"a_array":[{"a_str":"A","a_num_int":1,"a_num_float":0.1,"a_bool":true,"a_null":null,"a_empty_obj":{},"a_empty_array":[],"a_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"a_empty_array_nested":[{},[],null]},{"a_str":"A","a_num_int":1,"a_num_float":0.1,"a_bool":true,"a_null":null,"a_empty_obj":{},"a_empty_array":[],"a_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"a_empty_array_nested":[{},[],null]}]} |
|                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                 |
||

(4 rows)

!ok

{
  "queryType" : "scan",
  "dataSource" : {
    "type" : "table",
    "name" : "test_json_cols"
  },
  "intervals" : {
    "type" : "intervals",
    "intervals" : [ "-146136543-09-08T08:23:32.096Z/146140482-04-24T15:36:27.903Z" ]
  },
  "virtualColumns" : [ {
    "type" : "nested-field",
    "columnName" : "c1",
    "outputName" : "v0",
    "expectedType" : "COMPLEX<json>",
    "pathParts" : [ {
      "type" : "field",
      "field" : "a_obj"
    } ],
    "processFromRaw" : true
  } ],
  "resultFormat" : "compactedList",
  "columns" : [ "v0" ],
  "columnTypes" : [ "COMPLEX<json>" ],
  "granularity" : {
    "type" : "all"
  },
  "legacy" : false
}
!nativePlan

#-------------------------------------------------------------------------
# TESTCASE: test_func_json_query TEST_ID: A190 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------

SELECT json_query(c1, '$.a_obj.a_str')
FROM test_json_cols;
+--------+
| EXPR$0 |
+--------+
| "A"    |
| "A"    |
|        |
|        |
+--------+
(4 rows)

!ok

{
  "queryType" : "scan",
  "dataSource" : {
    "type" : "table",
    "name" : "test_json_cols"
  },
  "intervals" : {
    "type" : "intervals",
    "intervals" : [ "-146136543-09-08T08:23:32.096Z/146140482-04-24T15:36:27.903Z" ]
  },
  "virtualColumns" : [ {
    "type" : "nested-field",
    "columnName" : "c1",
    "outputName" : "v0",
    "expectedType" : "COMPLEX<json>",
    "pathParts" : [ {
      "type" : "field",
      "field" : "a_obj"
    }, {
      "type" : "field",
      "field" : "a_str"
    } ],
    "processFromRaw" : true
  } ],
  "resultFormat" : "compactedList",
  "columns" : [ "v0" ],
  "columnTypes" : [ "COMPLEX<json>" ],
  "granularity" : {
    "type" : "all"
  },
  "legacy" : false
}
!nativePlan

#-------------------------------------------------------------------------
# TESTCASE: test_func_json_query TEST_ID: A191 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------

SELECT json_query(c1, '$.a_obj.a_num_int')
FROM test_json_cols;
+--------+
| EXPR$0 |
+--------+
| 1      |
| 1      |
|        |
|        |
+--------+
(4 rows)

!ok

{
  "queryType" : "scan",
  "dataSource" : {
    "type" : "table",
    "name" : "test_json_cols"
  },
  "intervals" : {
    "type" : "intervals",
    "intervals" : [ "-146136543-09-08T08:23:32.096Z/146140482-04-24T15:36:27.903Z" ]
  },
  "virtualColumns" : [ {
    "type" : "nested-field",
    "columnName" : "c1",
    "outputName" : "v0",
    "expectedType" : "COMPLEX<json>",
    "pathParts" : [ {
      "type" : "field",
      "field" : "a_obj"
    }, {
      "type" : "field",
      "field" : "a_num_int"
    } ],
    "processFromRaw" : true
  } ],
  "resultFormat" : "compactedList",
  "columns" : [ "v0" ],
  "columnTypes" : [ "COMPLEX<json>" ],
  "granularity" : {
    "type" : "all"
  },
  "legacy" : false
}
!nativePlan

#-------------------------------------------------------------------------
# TESTCASE: test_func_json_object TEST_ID: A001 TYPE: NEGATIVE TEST
#-------------------------------------------------------------------------
SELECT json_object(value 'A' KEY 'a') c
FROM test_json_cols;
QueryInterruptedException
!error

#-------------------------------------------------------------------------
# TESTCASE: test_func_json_object TEST_ID: A002 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT json_object(KEY 'a' vAlUe 'A') c
FROM test_json_cols;
+-----------+
| c         |
+-----------+
| {"a":"A"} |
| {"a":"A"} |
| {"a":"A"} |
| {"a":"A"} |
+-----------+
(4 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_func_json_object TEST_ID: A003 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT json_object(KEY 'a' value 'A1', KEY 'b' value 'A2', KEY 'c' value 'A3') c
FROM test_json_cols;
+------------------------------+
| c                            |
+------------------------------+
| {"a":"A1","b":"A2","c":"A3"} |
| {"a":"A1","b":"A2","c":"A3"} |
| {"a":"A1","b":"A2","c":"A3"} |
| {"a":"A1","b":"A2","c":"A3"} |
+------------------------------+
(4 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_func_json_object TEST_ID: A004 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT json_object('a':'A1', 'b':'A2', 'c':'A3') c
FROM test_json_cols;
+------------------------------+
| c                            |
+------------------------------+
| {"a":"A1","b":"A2","c":"A3"} |
| {"a":"A1","b":"A2","c":"A3"} |
| {"a":"A1","b":"A2","c":"A3"} |
| {"a":"A1","b":"A2","c":"A3"} |
+------------------------------+
(4 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_func_json_object TEST_ID: A005 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT json_object(KEY 'aAa' value 'A1', KEY 'AaA' value 'A2', KEY 'AAa' value 'A3') c
FROM test_json_cols;
+------------------------------------+
| c                                  |
+------------------------------------+
| {"aAa":"A1","AaA":"A2","AAa":"A3"} |
| {"aAa":"A1","AaA":"A2","AAa":"A3"} |
| {"aAa":"A1","AaA":"A2","AAa":"A3"} |
| {"aAa":"A1","AaA":"A2","AAa":"A3"} |
+------------------------------------+
(4 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_func_json_object TEST_ID: A006 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT json_object('aAa':'A1', 'AaA':'A2', 'AAa':'A3') c
FROM test_json_cols;
+------------------------------------+
| c                                  |
+------------------------------------+
| {"aAa":"A1","AaA":"A2","AAa":"A3"} |
| {"aAa":"A1","AaA":"A2","AAa":"A3"} |
| {"aAa":"A1","AaA":"A2","AAa":"A3"} |
| {"aAa":"A1","AaA":"A2","AAa":"A3"} |
+------------------------------------+
(4 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_func_json_object TEST_ID: A007 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT json_object(KEY 'aaa' value 'A1', KEY 'aaa' value 'A2', KEY 'aaa' value 'A3') c
FROM test_json_cols;
+--------------+
| c            |
+--------------+
| {"aaa":"A3"} |
| {"aaa":"A3"} |
| {"aaa":"A3"} |
| {"aaa":"A3"} |
+--------------+
(4 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_func_json_object TEST_ID: A008 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT json_object('aaa':'A1', 'aaa':'A2', 'aaa':'A3') c
FROM test_json_cols;
+--------------+
| c            |
+--------------+
| {"aaa":"A3"} |
| {"aaa":"A3"} |
| {"aaa":"A3"} |
| {"aaa":"A3"} |
+--------------+
(4 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_func_json_object TEST_ID: A009 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT json_object(KEY 'a' value 'A') c
FROM test_json_cols;
+-----------+
| c         |
+-----------+
| {"a":"A"} |
| {"a":"A"} |
| {"a":"A"} |
| {"a":"A"} |
+-----------+
(4 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_func_json_object TEST_ID: A010 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT json_object('a':'A') c
FROM test_json_cols;
+-----------+
| c         |
+-----------+
| {"a":"A"} |
| {"a":"A"} |
| {"a":"A"} |
| {"a":"A"} |
+-----------+
(4 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_func_json_object TEST_ID: A011 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT json_object(KEY '123' value 'A') c
FROM test_json_cols;
+-------------+
| c           |
+-------------+
| {"123":"A"} |
| {"123":"A"} |
| {"123":"A"} |
| {"123":"A"} |
+-------------+
(4 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_func_json_object TEST_ID: A012 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT json_object('123':'A') c
FROM test_json_cols;
+-------------+
| c           |
+-------------+
| {"123":"A"} |
| {"123":"A"} |
| {"123":"A"} |
| {"123":"A"} |
+-------------+
(4 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_func_json_object TEST_ID: A013 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT json_object(KEY '日本' value 'A') c
FROM test_json_cols;
+------------+
| c          |
+------------+
| {"日本":"A"} |
| {"日本":"A"} |
| {"日本":"A"} |
| {"日本":"A"} |
+------------+
(4 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_func_json_object TEST_ID: A014 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT json_object('日本':'A') c
FROM test_json_cols;
+------------+
| c          |
+------------+
| {"日本":"A"} |
| {"日本":"A"} |
| {"日本":"A"} |
| {"日本":"A"} |
+------------+
(4 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_func_json_object TEST_ID: A015 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT json_object(KEY 'a'||'b'||'c' value 'A') c
FROM test_json_cols;
+-------------+
| c           |
+-------------+
| {"abc":"A"} |
| {"abc":"A"} |
| {"abc":"A"} |
| {"abc":"A"} |
+-------------+
(4 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_func_json_object TEST_ID: A016 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT json_object('a'||'b'||'c':'A') c
FROM test_json_cols;
+-------------+
| c           |
+-------------+
| {"abc":"A"} |
| {"abc":"A"} |
| {"abc":"A"} |
| {"abc":"A"} |
+-------------+
(4 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_func_json_object TEST_ID: A017 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT json_object(KEY '"This is My Key"' value 'A') c
FROM test_json_cols;
+----------------------------+
| c                          |
+----------------------------+
| {"\"This is My Key\"":"A"} |
| {"\"This is My Key\"":"A"} |
| {"\"This is My Key\"":"A"} |
| {"\"This is My Key\"":"A"} |
+----------------------------+
(4 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_func_json_object TEST_ID: A018 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT json_object('"This is My Key"':'A') c
FROM test_json_cols;
+----------------------------+
| c                          |
+----------------------------+
| {"\"This is My Key\"":"A"} |
| {"\"This is My Key\"":"A"} |
| {"\"This is My Key\"":"A"} |
| {"\"This is My Key\"":"A"} |
+----------------------------+
(4 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_func_json_object TEST_ID: A019 TYPE: NEGATIVE TEST
#-------------------------------------------------------------------------
SELECT json_object(KEY json_value(s_str, '$') value 'A') c
FROM test_json_cols;
QueryInterruptedException
!error

#-------------------------------------------------------------------------
# TESTCASE: test_func_json_object TEST_ID: A020 TYPE: NEGATIVE TEST
#-------------------------------------------------------------------------
SELECT json_object(json_value(s_str, '$'):'A') c
FROM test_json_cols;
QueryInterruptedException
!error

#-------------------------------------------------------------------------
# TESTCASE: test_func_json_object TEST_ID: A021 TYPE: NEGATIVE TEST
#-------------------------------------------------------------------------
SELECT json_object(KEY 123 value 'A') c
FROM test_json_cols;
field name must be a STRING
!error

#-------------------------------------------------------------------------
# TESTCASE: test_func_json_object TEST_ID: A022 TYPE: NEGATIVE TEST
#-------------------------------------------------------------------------
SELECT json_object(123:'A') c
FROM test_json_cols;
field name must be a STRING
!error

#-------------------------------------------------------------------------
# TESTCASE: test_func_json_object TEST_ID: A023 TYPE: NEGATIVE TEST
#-------------------------------------------------------------------------
SELECT json_object(KEY 1+1 value 'A') c
FROM test_json_cols;
field name must be a STRING
!error

#-------------------------------------------------------------------------
# TESTCASE: test_func_json_object TEST_ID: A024 TYPE: NEGATIVE TEST
#-------------------------------------------------------------------------
SELECT json_object(1+1:'A') c
FROM test_json_cols;
field name must be a STRING
!error

#-------------------------------------------------------------------------
# TESTCASE: test_func_json_object TEST_ID: A025 TYPE: NEGATIVE TEST
#-------------------------------------------------------------------------
SELECT json_object(KEY json_value(s_num_int, '$' RETURNING bigint) value 'A') c
FROM test_json_cols;
field name must be a STRING
!error

#-------------------------------------------------------------------------
# TESTCASE: test_func_json_object TEST_ID: A026 TYPE: NEGATIVE TEST
#-------------------------------------------------------------------------
SELECT json_object(json_value(s_num_int, '$' RETURNING bigint):'A') c
FROM test_json_cols;
field name must be a STRING
!error

#-------------------------------------------------------------------------
# TESTCASE: test_func_json_object TEST_ID: A027 TYPE: NEGATIVE TEST
#-------------------------------------------------------------------------
SELECT json_object(KEY 0.123 value 'A') c
FROM test_json_cols;
field name must be a STRING
!error

#-------------------------------------------------------------------------
# TESTCASE: test_func_json_object TEST_ID: A028 TYPE: NEGATIVE TEST
#-------------------------------------------------------------------------
SELECT json_object(0.123:'A') c
FROM test_json_cols;
field name must be a STRING
!error

#-------------------------------------------------------------------------
# TESTCASE: test_func_json_object TEST_ID: A029 TYPE: NEGATIVE TEST
#-------------------------------------------------------------------------
SELECT json_object(KEY 0.1+0.1 value 'A') c
FROM test_json_cols;
field name must be a STRING
!error

#-------------------------------------------------------------------------
# TESTCASE: test_func_json_object TEST_ID: A030 TYPE: NEGATIVE TEST
#-------------------------------------------------------------------------
SELECT json_object(0.1+0.1:'A') c
FROM test_json_cols;
field name must be a STRING
!error

#-------------------------------------------------------------------------
# TESTCASE: test_func_json_object TEST_ID: A031 TYPE: NEGATIVE TEST
#-------------------------------------------------------------------------
SELECT json_object(KEY json_value(s_num_float, '$' RETURNING DOUBLE) value 'A') c
FROM test_json_cols;
field name must be a STRING
!error

#-------------------------------------------------------------------------
# TESTCASE: test_func_json_object TEST_ID: A032 TYPE: NEGATIVE TEST
#-------------------------------------------------------------------------
SELECT json_object(json_value(s_num_float, '$' RETURNING DOUBLE):'A') c
FROM test_json_cols;
field name must be a STRING
!error

#-------------------------------------------------------------------------
# TESTCASE: test_func_json_object TEST_ID: A033 TYPE: NEGATIVE TEST
#-------------------------------------------------------------------------
SELECT json_object(KEY TRUE value 'A') c
FROM test_json_cols;
field name must be a STRING
!error

#-------------------------------------------------------------------------
# TESTCASE: test_func_json_object TEST_ID: A034 TYPE: NEGATIVE TEST
#-------------------------------------------------------------------------
SELECT json_object(TRUE:'A') c
FROM test_json_cols;
field name must be a STRING
!error

#-------------------------------------------------------------------------
# TESTCASE: test_func_json_object TEST_ID: A035 TYPE: NEGATIVE TEST
#-------------------------------------------------------------------------
SELECT json_object(KEY (1=2) value 'A') c
FROM test_json_cols;
field name must be a STRING
!error

#-------------------------------------------------------------------------
# TESTCASE: test_func_json_object TEST_ID: A036 TYPE: NEGATIVE TEST
#-------------------------------------------------------------------------
SELECT json_object((1=2):'A') c
FROM test_json_cols;
field name must be a STRING
!error

#-------------------------------------------------------------------------
# TESTCASE: test_func_json_object TEST_ID: A037 TYPE: NEGATIVE TEST
#-------------------------------------------------------------------------
SELECT json_object(KEY json_value(s_bool, '$' RETURNING boolean) value 'A') c
FROM test_json_cols;
QueryInterruptedException
!error

#-------------------------------------------------------------------------
# TESTCASE: test_func_json_object TEST_ID: A038 TYPE: NEGATIVE TEST
#-------------------------------------------------------------------------
SELECT json_object(json_value(s_bool, '$' RETURNING boolean):'A') c
FROM test_json_cols;
QueryInterruptedException
!error

#-------------------------------------------------------------------------
# TESTCASE: test_func_json_object TEST_ID: A039 TYPE: NEGATIVE TEST
#-------------------------------------------------------------------------
SELECT json_object(KEY NULL value 'A') c
FROM test_json_cols;
QueryInterruptedException
!error

#-------------------------------------------------------------------------
# TESTCASE: test_func_json_object TEST_ID: A040 TYPE: NEGATIVE TEST
#-------------------------------------------------------------------------
SELECT json_object(NULL:'A') c
FROM test_json_cols;
QueryInterruptedException
!error

#-------------------------------------------------------------------------
# TESTCASE: test_func_json_object TEST_ID: A041 TYPE: NEGATIVE TEST
#-------------------------------------------------------------------------
SELECT json_object(KEY json_value(s_null, '$') value 'A') c
FROM test_json_cols;
QueryInterruptedException
!error

#-------------------------------------------------------------------------
# TESTCASE: test_func_json_object TEST_ID: A042 TYPE: NEGATIVE TEST
#-------------------------------------------------------------------------
SELECT json_object(json_value(s_null, '$'):'A') c
FROM test_json_cols;
QueryInterruptedException
!error

#-------------------------------------------------------------------------
# TESTCASE: test_func_json_object TEST_ID: A043 TYPE: NEGATIVE TEST
#-------------------------------------------------------------------------
SELECT json_object(KEY json_value(c1, '$.doesnotexist') value 'A') c
FROM test_json_cols;
QueryInterruptedException
!error

#-------------------------------------------------------------------------
# TESTCASE: test_func_json_object TEST_ID: A044 TYPE: NEGATIVE TEST
#-------------------------------------------------------------------------
SELECT json_object(json_value(c1, '$.doesnotexist'):'A') c
FROM test_json_cols;
QueryInterruptedException
!error

#-------------------------------------------------------------------------
# TESTCASE: test_func_json_object TEST_ID: A045 TYPE: NEGATIVE TEST
#-------------------------------------------------------------------------
SELECT json_object(KEY __time value 'A') c
FROM test_json_cols;
field name must be a STRING
!error

#-------------------------------------------------------------------------
# TESTCASE: test_func_json_object TEST_ID: A046 TYPE: NEGATIVE TEST
#-------------------------------------------------------------------------
SELECT json_object(__time:'A') c
FROM test_json_cols;
field name must be a STRING
!error

#-------------------------------------------------------------------------
# TESTCASE: test_func_json_object TEST_ID: A047 TYPE: NEGATIVE TEST
#-------------------------------------------------------------------------
SELECT json_object(KEY CURRENT_TIMESTAMP value 'A') c
FROM test_json_cols;
field name must be a STRING
!error

#-------------------------------------------------------------------------
# TESTCASE: test_func_json_object TEST_ID: A048 TYPE: NEGATIVE TEST
#-------------------------------------------------------------------------
SELECT json_object(CURRENT_TIMESTAMP:'A') c
FROM test_json_cols;
field name must be a STRING
!error

#-------------------------------------------------------------------------
# TESTCASE: test_func_json_object TEST_ID: A049 TYPE: NEGATIVE TEST
#-------------------------------------------------------------------------
SELECT json_object(KEY c1 value 'A') c
FROM test_json_cols;
field name must be a STRING
!error

#-------------------------------------------------------------------------
# TESTCASE: test_func_json_object TEST_ID: A050 TYPE: NEGATIVE TEST
#-------------------------------------------------------------------------
SELECT json_object(c1:'A') c
FROM test_json_cols;
field name must be a STRING
!error

#-------------------------------------------------------------------------
# TESTCASE: test_func_json_object TEST_ID: A051 TYPE: NEGATIVE TEST
#-------------------------------------------------------------------------
SELECT json_object(KEY json_query(c1, '$.a_array[0].a_obj') value 'A') c
FROM test_json_cols;
field name must be a STRING
!error

#-------------------------------------------------------------------------
# TESTCASE: test_func_json_object TEST_ID: A052 TYPE: NEGATIVE TEST
#-------------------------------------------------------------------------
SELECT json_object(json_query(c1, '$.a_array[0].a_obj'):'A') c
FROM test_json_cols;
field name must be a STRING
!error

#-------------------------------------------------------------------------
# TESTCASE: test_func_json_object TEST_ID: A053 TYPE: NEGATIVE TEST
#-------------------------------------------------------------------------
SELECT json_object(KEY json_object(KEY c2 value 'B') value 'A') c
FROM test_json_cols;
field name must be a STRING
!error

#-------------------------------------------------------------------------
# TESTCASE: test_func_json_object TEST_ID: A054 TYPE: NEGATIVE TEST
#-------------------------------------------------------------------------
SELECT json_object(json_object(KEY c2 value 'B'):'A') c
FROM test_json_cols;
field name must be a STRING
!error

#-------------------------------------------------------------------------
# TESTCASE: test_func_json_object TEST_ID: A055 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT json_object(KEY 'a' value 'A') c
FROM test_json_cols;
+-----------+
| c         |
+-----------+
| {"a":"A"} |
| {"a":"A"} |
| {"a":"A"} |
| {"a":"A"} |
+-----------+
(4 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_func_json_object TEST_ID: A056 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT json_object('a':'A') c
FROM test_json_cols;
+-----------+
| c         |
+-----------+
| {"a":"A"} |
| {"a":"A"} |
| {"a":"A"} |
| {"a":"A"} |
+-----------+
(4 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_func_json_object TEST_ID: A057 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT json_object(KEY 'a' value '123') c
FROM test_json_cols;
+-------------+
| c           |
+-------------+
| {"a":"123"} |
| {"a":"123"} |
| {"a":"123"} |
| {"a":"123"} |
+-------------+
(4 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_func_json_object TEST_ID: A058 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT json_object('a':'123') c
FROM test_json_cols;
+-------------+
| c           |
+-------------+
| {"a":"123"} |
| {"a":"123"} |
| {"a":"123"} |
| {"a":"123"} |
+-------------+
(4 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_func_json_object TEST_ID: A059 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT json_object(KEY 'a' value '日本') c
FROM test_json_cols;
+------------+
| c          |
+------------+
| {"a":"日本"} |
| {"a":"日本"} |
| {"a":"日本"} |
| {"a":"日本"} |
+------------+
(4 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_func_json_object TEST_ID: A060 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT json_object('a':'日本') c
FROM test_json_cols;
+------------+
| c          |
+------------+
| {"a":"日本"} |
| {"a":"日本"} |
| {"a":"日本"} |
| {"a":"日本"} |
+------------+
(4 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_func_json_object TEST_ID: A061 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT json_object(KEY 'a' value 'a'||'b'||'c') c
FROM test_json_cols;
+-------------+
| c           |
+-------------+
| {"a":"abc"} |
| {"a":"abc"} |
| {"a":"abc"} |
| {"a":"abc"} |
+-------------+
(4 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_func_json_object TEST_ID: A062 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT json_object('a':'a'||'b'||'c') c
FROM test_json_cols;
+-------------+
| c           |
+-------------+
| {"a":"abc"} |
| {"a":"abc"} |
| {"a":"abc"} |
| {"a":"abc"} |
+-------------+
(4 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_func_json_object TEST_ID: A063 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT json_object(KEY 'a' value '"This is My Key"') c
FROM test_json_cols;
+----------------------------+
| c                          |
+----------------------------+
| {"a":"\"This is My Key\""} |
| {"a":"\"This is My Key\""} |
| {"a":"\"This is My Key\""} |
| {"a":"\"This is My Key\""} |
+----------------------------+
(4 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_func_json_object TEST_ID: A064 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT json_object('a':'"This is My Key"') c
FROM test_json_cols;
+----------------------------+
| c                          |
+----------------------------+
| {"a":"\"This is My Key\""} |
| {"a":"\"This is My Key\""} |
| {"a":"\"This is My Key\""} |
| {"a":"\"This is My Key\""} |
+----------------------------+
(4 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_func_json_object TEST_ID: A065 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT json_object(KEY 'a' value json_value(s_str, '$')) c
FROM test_json_cols;
+------------+
| c          |
+------------+
| {"a":"A"}  |
| {"a":"A"}  |
| {"a":null} |
| {"a":null} |
+------------+
(4 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_func_json_object TEST_ID: A066 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT json_object('a':json_value(s_str, '$')) c
FROM test_json_cols;
+------------+
| c          |
+------------+
| {"a":"A"}  |
| {"a":"A"}  |
| {"a":null} |
| {"a":null} |
+------------+
(4 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_func_json_object TEST_ID: A067 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT json_object(KEY 'a' value 123) c
FROM test_json_cols;
+-----------+
| c         |
+-----------+
| {"a":123} |
| {"a":123} |
| {"a":123} |
| {"a":123} |
+-----------+
(4 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_func_json_object TEST_ID: A068 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT json_object('a':123) c
FROM test_json_cols;
+-----------+
| c         |
+-----------+
| {"a":123} |
| {"a":123} |
| {"a":123} |
| {"a":123} |
+-----------+
(4 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_func_json_object TEST_ID: A069 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT json_object(KEY 'a' value 1+1) c
FROM test_json_cols;
+---------+
| c       |
+---------+
| {"a":2} |
| {"a":2} |
| {"a":2} |
| {"a":2} |
+---------+
(4 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_func_json_object TEST_ID: A070 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT json_object('a':1+1) c
FROM test_json_cols;
+---------+
| c       |
+---------+
| {"a":2} |
| {"a":2} |
| {"a":2} |
| {"a":2} |
+---------+
(4 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_func_json_object TEST_ID: A071 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT json_object(KEY 'a' value json_value(s_num_int, '$' RETURNING bigint)) c
FROM test_json_cols;
+------------+
| c          |
+------------+
| {"a":1}    |
| {"a":1}    |
| {"a":null} |
| {"a":null} |
+------------+
(4 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_func_json_object TEST_ID: A072 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT json_object('a':json_value(s_num_int, '$' RETURNING bigint)) c
FROM test_json_cols;
+------------+
| c          |
+------------+
| {"a":1}    |
| {"a":1}    |
| {"a":null} |
| {"a":null} |
+------------+
(4 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_func_json_object TEST_ID: A073 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT json_object(KEY 'a' value 0.123) c
FROM test_json_cols;
+-------------+
| c           |
+-------------+
| {"a":0.123} |
| {"a":0.123} |
| {"a":0.123} |
| {"a":0.123} |
+-------------+
(4 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_func_json_object TEST_ID: A074 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT json_object('a':0.123) c
FROM test_json_cols;
+-------------+
| c           |
+-------------+
| {"a":0.123} |
| {"a":0.123} |
| {"a":0.123} |
| {"a":0.123} |
+-------------+
(4 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_func_json_object TEST_ID: A075 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT json_object(KEY 'a' value 0.1+0.1) c
FROM test_json_cols;
+-----------+
| c         |
+-----------+
| {"a":0.2} |
| {"a":0.2} |
| {"a":0.2} |
| {"a":0.2} |
+-----------+
(4 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_func_json_object TEST_ID: A076 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT json_object('a':0.1+0.1) c
FROM test_json_cols;
+-----------+
| c         |
+-----------+
| {"a":0.2} |
| {"a":0.2} |
| {"a":0.2} |
| {"a":0.2} |
+-----------+
(4 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_func_json_object TEST_ID: A077 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT json_object(KEY 'a' value json_value(s_num_float, '$' RETURNING DOUBLE)) c
FROM test_json_cols;
+------------+
| c          |
+------------+
| {"a":0.1}  |
| {"a":0.1}  |
| {"a":null} |
| {"a":null} |
+------------+
(4 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_func_json_object TEST_ID: A078 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT json_object('a':json_value(s_num_float, '$' RETURNING DOUBLE)) c
FROM test_json_cols;
+------------+
| c          |
+------------+
| {"a":0.1}  |
| {"a":0.1}  |
| {"a":null} |
| {"a":null} |
+------------+
(4 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_func_json_object TEST_ID: A079 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT json_object(KEY 'a' value TRUE) c
FROM test_json_cols;
+---------+
| c       |
+---------+
| {"a":1} |
| {"a":1} |
| {"a":1} |
| {"a":1} |
+---------+
(4 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_func_json_object TEST_ID: A080 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT json_object('a':true) c
FROM test_json_cols;
+---------+
| c       |
+---------+
| {"a":1} |
| {"a":1} |
| {"a":1} |
| {"a":1} |
+---------+
(4 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_func_json_object TEST_ID: A081 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT json_object(KEY 'a' value (1=2)) c
FROM test_json_cols;
+---------+
| c       |
+---------+
| {"a":0} |
| {"a":0} |
| {"a":0} |
| {"a":0} |
+---------+
(4 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_func_json_object TEST_ID: A082 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT json_object('a':(1=2)) c
FROM test_json_cols;
+---------+
| c       |
+---------+
| {"a":0} |
| {"a":0} |
| {"a":0} |
| {"a":0} |
+---------+
(4 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_func_json_object TEST_ID: A083 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT json_object(KEY 'a' value json_value(s_bool, '$' RETURNING boolean)) c
FROM test_json_cols;
+------------+
| c          |
+------------+
| {"a":1}    |
| {"a":1}    |
| {"a":null} |
| {"a":null} |
+------------+
(4 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_func_json_object TEST_ID: A084 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT json_object('a':json_value(s_bool, '$' RETURNING boolean)) c
FROM test_json_cols;
+------------+
| c          |
+------------+
| {"a":1}    |
| {"a":1}    |
| {"a":null} |
| {"a":null} |
+------------+
(4 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_func_json_object TEST_ID: A085 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT json_object(KEY 'a' value NULL) c
FROM test_json_cols;
+------------+
| c          |
+------------+
| {"a":null} |
| {"a":null} |
| {"a":null} |
| {"a":null} |
+------------+
(4 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_func_json_object TEST_ID: A086 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT json_object('a':null) c
FROM test_json_cols;
+------------+
| c          |
+------------+
| {"a":null} |
| {"a":null} |
| {"a":null} |
| {"a":null} |
+------------+
(4 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_func_json_object TEST_ID: A087 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT json_object(KEY 'a' value json_value(s_null, '$')) c
FROM test_json_cols;
+------------+
| c          |
+------------+
| {"a":null} |
| {"a":null} |
| {"a":null} |
| {"a":null} |
+------------+
(4 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_func_json_object TEST_ID: A088 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT json_object('a':json_value(s_null, '$')) c
FROM test_json_cols;
+------------+
| c          |
+------------+
| {"a":null} |
| {"a":null} |
| {"a":null} |
| {"a":null} |
+------------+
(4 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_func_json_object TEST_ID: A089 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT json_object(KEY 'a' value json_value(c1, '$.doesnotexist')) c
FROM test_json_cols;
+------------+
| c          |
+------------+
| {"a":null} |
| {"a":null} |
| {"a":null} |
| {"a":null} |
+------------+
(4 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_func_json_object TEST_ID: A090 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT json_object('a':json_value(c1, '$.doesnotexist')) c
FROM test_json_cols;
+------------+
| c          |
+------------+
| {"a":null} |
| {"a":null} |
| {"a":null} |
| {"a":null} |
+------------+
(4 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_func_json_object TEST_ID: A091 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT json_object(KEY 'a' value __time) c
FROM test_json_cols;
+---------------------+
| c                   |
+---------------------+
| {"a":1640995200000} |
| {"a":1640995200000} |
| {"a":1643673600000} |
| {"a":1643673600000} |
+---------------------+
(4 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_func_json_object TEST_ID: A092 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT json_object('a':__time) c
FROM test_json_cols;
+---------------------+
| c                   |
+---------------------+
| {"a":1640995200000} |
| {"a":1640995200000} |
| {"a":1643673600000} |
| {"a":1643673600000} |
+---------------------+
(4 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_func_json_object TEST_ID: A093 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT count(*)
FROM
  (SELECT json_object(KEY 'a' value CURRENT_TIMESTAMP) c
   FROM test_json_cols);
+--------+
| EXPR$0 |
+--------+
|      4 |
+--------+
(1 row)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_func_json_object TEST_ID: A094 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT count(*)
FROM
  (SELECT json_object('a':current_timestamp) c
   FROM test_json_cols);
+--------+
| EXPR$0 |
+--------+
|      4 |
+--------+
(1 row)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_func_json_object TEST_ID: A095 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT json_object(KEY 'a' value c_empty_obj) c
FROM test_json_cols;
+------------+
| c          |
+------------+
| {"a":null} |
| {"a":null} |
| {"a":{}}   |
| {"a":{}}   |
+------------+
(4 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_func_json_object TEST_ID: A096 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT json_object('a':c_empty_obj) c
FROM test_json_cols;
+------------+
| c          |
+------------+
| {"a":null} |
| {"a":null} |
| {"a":{}}   |
| {"a":{}}   |
+------------+
(4 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_func_json_object TEST_ID: A097 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT json_object(KEY 'a' value c_empty_array) c
FROM test_json_cols;
+------------+
| c          |
+------------+
| {"a":[]}   |
| {"a":[]}   |
| {"a":null} |
| {"a":null} |
+------------+
(4 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_func_json_object TEST_ID: A098 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT json_object('a':c_empty_array) c
FROM test_json_cols;
+------------+
| c          |
+------------+
| {"a":[]}   |
| {"a":[]}   |
| {"a":null} |
| {"a":null} |
+------------+
(4 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_func_json_object TEST_ID: A099 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT json_object(KEY 'a' value c_empty_obj_nested) c
FROM test_json_cols;
+-----------------------------------+
| c                                 |
+-----------------------------------+
| {"a":null}                        |
| {"a":null}                        |
| {"a":{"o1":{},"o2":[],"o3":null}} |
| {"a":{"o1":{},"o2":[],"o3":null}} |
+-----------------------------------+
(4 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_func_json_object TEST_ID: A100 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT json_object('a':c_empty_obj_nested) c
FROM test_json_cols;
+-----------------------------------+
| c                                 |
+-----------------------------------+
| {"a":null}                        |
| {"a":null}                        |
| {"a":{"o1":{},"o2":[],"o3":null}} |
| {"a":{"o1":{},"o2":[],"o3":null}} |
+-----------------------------------+
(4 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_func_json_object TEST_ID: A101 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT json_object(KEY 'a' value c_empty_array_nested) c
FROM test_json_cols;
+--------------------+
| c                  |
+--------------------+
| {"a":[{},[],null]} |
| {"a":[{},[],null]} |
| {"a":null}         |
| {"a":null}         |
+--------------------+
(4 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_func_json_object TEST_ID: A102 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT json_object('a':c_empty_array_nested) c
FROM test_json_cols;
+--------------------+
| c                  |
+--------------------+
| {"a":[{},[],null]} |
| {"a":[{},[],null]} |
| {"a":null}         |
| {"a":null}         |
+--------------------+
(4 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_func_json_object TEST_ID: A103 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT json_object(KEY 'a' value c1) c
FROM test_json_cols;

| c|

| {"a":{"a_str":"A","a_num_int":1,"a_num_float":0.1,"a_bool":true,"a_null":null,"a_empty_obj":{},"a_empty_array":[],"a_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"a_empty_array_nested":[{},[],null],"a_obj":{"a_str":"A","a_num_int":1,"a_num_float":0.1,"a_bool":true,"a_null":null,"a_empty_obj":{},"a_empty_array":[],"a_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"a_empty_array_nested":[{},[],null],"a_obj":{"a_str":"A","a_num_int":1,"a_num_float":0.1,"a_bool":true,"a_null":null,"a_empty_obj":{},"a_empty_array":[],"a_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"a_empty_array_nested":[{},[],null]},"a_array":[{"a_str":"A","a_num_int":1,"a_num_float":0.1,"a_bool":true,"a_null":null,"a_empty_obj":{},"a_empty_array":[],"a_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"a_empty_array_nested":[{},[],null]},{"a_str":"A","a_num_int":1,"a_num_float":0.1,"a_bool":true,"a_null":null,"a_empty_obj":{},"a_empty_array":[],"a_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"a_empty_array_nested":[{},[],null]}]},"a_array":[{"a_str":"A","a_num_int":1,"a_num_float":0.1,"a_bool":true,"a_null":null,"a_empty_obj":{},"a_empty_array":[],"a_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"a_empty_array_nested":[{},[],null],"a_obj":{"a_str":"A","a_num_int":1,"a_num_float":0.1,"a_bool":true,"a_null":null,"a_empty_obj":{},"a_empty_array":[],"a_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"a_empty_array_nested":[{},[],null]},"a_array":[{"a_str":"A","a_num_int":1,"a_num_float":0.1,"a_bool":true,"a_null":null,"a_empty_obj":{},"a_empty_array":[],"a_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"a_empty_array_nested":[{},[],null]},{"a_str":"A","a_num_int":1,"a_num_float":0.1,"a_bool":true,"a_null":null,"a_empty_obj":{},"a_empty_array":[],"a_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"a_empty_array_nested":[{},[],null]}]},{"a_str":"A","a_num_int":1,"a_num_float":0.1,"a_bool":true,"a_null":null,"a_empty_obj":{},"a_empty_array":[],"a_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"a_empty_array_nested":[{},[],null],"a_obj":{"a_str":"A","a_num_int":1,"a_num_float":0.1,"a_bool":true,"a_null":null,"a_empty_obj":{},"a_empty_array":[],"a_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"a_empty_array_nested":[{},[],null]},"a_array":[{"a_str":"A","a_num_int":1,"a_num_float":0.1,"a_bool":true,"a_null":null,"a_empty_obj":{},"a_empty_array":[],"a_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"a_empty_array_nested":[{},[],null]},{"a_str":"A","a_num_int":1,"a_num_float":0.1,"a_bool":true,"a_null":null,"a_empty_obj":{},"a_empty_array":[],"a_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"a_empty_array_nested":[{},[],null]}]}]}} |
| {"a":{"a_str":"A","a_num_int":1,"a_num_float":0.1,"a_bool":true,"a_null":null,"a_empty_obj":{},"a_empty_array":[],"a_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"a_empty_array_nested":[{},[],null],"a_obj":{"a_str":"A","a_num_int":1,"a_num_float":0.1,"a_bool":true,"a_null":null,"a_empty_obj":{},"a_empty_array":[],"a_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"a_empty_array_nested":[{},[],null],"a_obj":{"a_str":"A","a_num_int":1,"a_num_float":0.1,"a_bool":true,"a_null":null,"a_empty_obj":{},"a_empty_array":[],"a_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"a_empty_array_nested":[{},[],null]},"a_array":[{"a_str":"A","a_num_int":1,"a_num_float":0.1,"a_bool":true,"a_null":null,"a_empty_obj":{},"a_empty_array":[],"a_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"a_empty_array_nested":[{},[],null]},{"a_str":"A","a_num_int":1,"a_num_float":0.1,"a_bool":true,"a_null":null,"a_empty_obj":{},"a_empty_array":[],"a_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"a_empty_array_nested":[{},[],null]}]},"a_array":[{"a_str":"A","a_num_int":1,"a_num_float":0.1,"a_bool":true,"a_null":null,"a_empty_obj":{},"a_empty_array":[],"a_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"a_empty_array_nested":[{},[],null],"a_obj":{"a_str":"A","a_num_int":1,"a_num_float":0.1,"a_bool":true,"a_null":null,"a_empty_obj":{},"a_empty_array":[],"a_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"a_empty_array_nested":[{},[],null]},"a_array":[{"a_str":"A","a_num_int":1,"a_num_float":0.1,"a_bool":true,"a_null":null,"a_empty_obj":{},"a_empty_array":[],"a_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"a_empty_array_nested":[{},[],null]},{"a_str":"A","a_num_int":1,"a_num_float":0.1,"a_bool":true,"a_null":null,"a_empty_obj":{},"a_empty_array":[],"a_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"a_empty_array_nested":[{},[],null]}]},{"a_str":"A","a_num_int":1,"a_num_float":0.1,"a_bool":true,"a_null":null,"a_empty_obj":{},"a_empty_array":[],"a_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"a_empty_array_nested":[{},[],null],"a_obj":{"a_str":"A","a_num_int":1,"a_num_float":0.1,"a_bool":true,"a_null":null,"a_empty_obj":{},"a_empty_array":[],"a_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"a_empty_array_nested":[{},[],null]},"a_array":[{"a_str":"A","a_num_int":1,"a_num_float":0.1,"a_bool":true,"a_null":null,"a_empty_obj":{},"a_empty_array":[],"a_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"a_empty_array_nested":[{},[],null]},{"a_str":"A","a_num_int":1,"a_num_float":0.1,"a_bool":true,"a_null":null,"a_empty_obj":{},"a_empty_array":[],"a_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"a_empty_array_nested":[{},[],null]}]}]}} |
| {"a":{"b_str":"A","b_num_int":1,"b_num_float":0.1,"b_bool":true,"b_null":null,"b_empty_obj":{},"b_empty_array":[],"b_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"b_empty_array_nested":[{},[],null],"b_obj":{"b_str":"A","b_num_int":1,"b_num_float":0.1,"b_bool":true,"b_null":null,"b_empty_obj":{},"b_empty_array":[],"b_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"b_empty_array_nested":[{},[],null],"b_obj":{"b_str":"A","b_num_int":1,"b_num_float":0.1,"b_bool":true,"b_null":null,"b_empty_obj":{},"b_empty_array":[],"b_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"b_empty_array_nested":[{},[],null]},"b_array":[{"b_str":"A","b_num_int":1,"b_num_float":0.1,"b_bool":true,"b_null":null,"b_empty_obj":{},"b_empty_array":[],"b_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"b_empty_array_nested":[{},[],null]},{"b_str":"A","b_num_int":1,"b_num_float":0.1,"b_bool":true,"b_null":null,"b_empty_obj":{},"b_empty_array":[],"b_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"b_empty_array_nested":[{},[],null]}]},"b_array":[{"b_str":"A","b_num_int":1,"b_num_float":0.1,"b_bool":true,"b_null":null,"b_empty_obj":{},"b_empty_array":[],"b_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"b_empty_array_nested":[{},[],null],"b_obj":{"b_str":"A","b_num_int":1,"b_num_float":0.1,"b_bool":true,"b_null":null,"b_empty_obj":{},"b_empty_array":[],"b_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"b_empty_array_nested":[{},[],null]},"b_array":[{"b_str":"A","b_num_int":1,"b_num_float":0.1,"b_bool":true,"b_null":null,"b_empty_obj":{},"b_empty_array":[],"b_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"b_empty_array_nested":[{},[],null]},{"b_str":"A","b_num_int":1,"b_num_float":0.1,"b_bool":true,"b_null":null,"b_empty_obj":{},"b_empty_array":[],"b_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"b_empty_array_nested":[{},[],null]}]},{"b_str":"A","b_num_int":1,"b_num_float":0.1,"b_bool":true,"b_null":null,"b_empty_obj":{},"b_empty_array":[],"b_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"b_empty_array_nested":[{},[],null],"b_obj":{"b_str":"A","b_num_int":1,"b_num_float":0.1,"b_bool":true,"b_null":null,"b_empty_obj":{},"b_empty_array":[],"b_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"b_empty_array_nested":[{},[],null]},"b_array":[{"b_str":"A","b_num_int":1,"b_num_float":0.1,"b_bool":true,"b_null":null,"b_empty_obj":{},"b_empty_array":[],"b_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"b_empty_array_nested":[{},[],null]},{"b_str":"A","b_num_int":1,"b_num_float":0.1,"b_bool":true,"b_null":null,"b_empty_obj":{},"b_empty_array":[],"b_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"b_empty_array_nested":[{},[],null]}]}]}} |
| {"a":{"b_str":"A","b_num_int":1,"b_num_float":0.1,"b_bool":true,"b_null":null,"b_empty_obj":{},"b_empty_array":[],"b_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"b_empty_array_nested":[{},[],null],"b_obj":{"b_str":"A","b_num_int":1,"b_num_float":0.1,"b_bool":true,"b_null":null,"b_empty_obj":{},"b_empty_array":[],"b_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"b_empty_array_nested":[{},[],null],"b_obj":{"b_str":"A","b_num_int":1,"b_num_float":0.1,"b_bool":true,"b_null":null,"b_empty_obj":{},"b_empty_array":[],"b_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"b_empty_array_nested":[{},[],null]},"b_array":[{"b_str":"A","b_num_int":1,"b_num_float":0.1,"b_bool":true,"b_null":null,"b_empty_obj":{},"b_empty_array":[],"b_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"b_empty_array_nested":[{},[],null]},{"b_str":"A","b_num_int":1,"b_num_float":0.1,"b_bool":true,"b_null":null,"b_empty_obj":{},"b_empty_array":[],"b_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"b_empty_array_nested":[{},[],null]}]},"b_array":[{"b_str":"A","b_num_int":1,"b_num_float":0.1,"b_bool":true,"b_null":null,"b_empty_obj":{},"b_empty_array":[],"b_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"b_empty_array_nested":[{},[],null],"b_obj":{"b_str":"A","b_num_int":1,"b_num_float":0.1,"b_bool":true,"b_null":null,"b_empty_obj":{},"b_empty_array":[],"b_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"b_empty_array_nested":[{},[],null]},"b_array":[{"b_str":"A","b_num_int":1,"b_num_float":0.1,"b_bool":true,"b_null":null,"b_empty_obj":{},"b_empty_array":[],"b_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"b_empty_array_nested":[{},[],null]},{"b_str":"A","b_num_int":1,"b_num_float":0.1,"b_bool":true,"b_null":null,"b_empty_obj":{},"b_empty_array":[],"b_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"b_empty_array_nested":[{},[],null]}]},{"b_str":"A","b_num_int":1,"b_num_float":0.1,"b_bool":true,"b_null":null,"b_empty_obj":{},"b_empty_array":[],"b_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"b_empty_array_nested":[{},[],null],"b_obj":{"b_str":"A","b_num_int":1,"b_num_float":0.1,"b_bool":true,"b_null":null,"b_empty_obj":{},"b_empty_array":[],"b_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"b_empty_array_nested":[{},[],null]},"b_array":[{"b_str":"A","b_num_int":1,"b_num_float":0.1,"b_bool":true,"b_null":null,"b_empty_obj":{},"b_empty_array":[],"b_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"b_empty_array_nested":[{},[],null]},{"b_str":"A","b_num_int":1,"b_num_float":0.1,"b_bool":true,"b_null":null,"b_empty_obj":{},"b_empty_array":[],"b_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"b_empty_array_nested":[{},[],null]}]}]}} |

(4 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_func_json_object TEST_ID: A104 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT json_object('a':c1) c
FROM test_json_cols;

| c|

| {"a":{"a_str":"A","a_num_int":1,"a_num_float":0.1,"a_bool":true,"a_null":null,"a_empty_obj":{},"a_empty_array":[],"a_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"a_empty_array_nested":[{},[],null],"a_obj":{"a_str":"A","a_num_int":1,"a_num_float":0.1,"a_bool":true,"a_null":null,"a_empty_obj":{},"a_empty_array":[],"a_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"a_empty_array_nested":[{},[],null],"a_obj":{"a_str":"A","a_num_int":1,"a_num_float":0.1,"a_bool":true,"a_null":null,"a_empty_obj":{},"a_empty_array":[],"a_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"a_empty_array_nested":[{},[],null]},"a_array":[{"a_str":"A","a_num_int":1,"a_num_float":0.1,"a_bool":true,"a_null":null,"a_empty_obj":{},"a_empty_array":[],"a_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"a_empty_array_nested":[{},[],null]},{"a_str":"A","a_num_int":1,"a_num_float":0.1,"a_bool":true,"a_null":null,"a_empty_obj":{},"a_empty_array":[],"a_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"a_empty_array_nested":[{},[],null]}]},"a_array":[{"a_str":"A","a_num_int":1,"a_num_float":0.1,"a_bool":true,"a_null":null,"a_empty_obj":{},"a_empty_array":[],"a_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"a_empty_array_nested":[{},[],null],"a_obj":{"a_str":"A","a_num_int":1,"a_num_float":0.1,"a_bool":true,"a_null":null,"a_empty_obj":{},"a_empty_array":[],"a_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"a_empty_array_nested":[{},[],null]},"a_array":[{"a_str":"A","a_num_int":1,"a_num_float":0.1,"a_bool":true,"a_null":null,"a_empty_obj":{},"a_empty_array":[],"a_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"a_empty_array_nested":[{},[],null]},{"a_str":"A","a_num_int":1,"a_num_float":0.1,"a_bool":true,"a_null":null,"a_empty_obj":{},"a_empty_array":[],"a_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"a_empty_array_nested":[{},[],null]}]},{"a_str":"A","a_num_int":1,"a_num_float":0.1,"a_bool":true,"a_null":null,"a_empty_obj":{},"a_empty_array":[],"a_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"a_empty_array_nested":[{},[],null],"a_obj":{"a_str":"A","a_num_int":1,"a_num_float":0.1,"a_bool":true,"a_null":null,"a_empty_obj":{},"a_empty_array":[],"a_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"a_empty_array_nested":[{},[],null]},"a_array":[{"a_str":"A","a_num_int":1,"a_num_float":0.1,"a_bool":true,"a_null":null,"a_empty_obj":{},"a_empty_array":[],"a_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"a_empty_array_nested":[{},[],null]},{"a_str":"A","a_num_int":1,"a_num_float":0.1,"a_bool":true,"a_null":null,"a_empty_obj":{},"a_empty_array":[],"a_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"a_empty_array_nested":[{},[],null]}]}]}} |
| {"a":{"a_str":"A","a_num_int":1,"a_num_float":0.1,"a_bool":true,"a_null":null,"a_empty_obj":{},"a_empty_array":[],"a_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"a_empty_array_nested":[{},[],null],"a_obj":{"a_str":"A","a_num_int":1,"a_num_float":0.1,"a_bool":true,"a_null":null,"a_empty_obj":{},"a_empty_array":[],"a_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"a_empty_array_nested":[{},[],null],"a_obj":{"a_str":"A","a_num_int":1,"a_num_float":0.1,"a_bool":true,"a_null":null,"a_empty_obj":{},"a_empty_array":[],"a_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"a_empty_array_nested":[{},[],null]},"a_array":[{"a_str":"A","a_num_int":1,"a_num_float":0.1,"a_bool":true,"a_null":null,"a_empty_obj":{},"a_empty_array":[],"a_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"a_empty_array_nested":[{},[],null]},{"a_str":"A","a_num_int":1,"a_num_float":0.1,"a_bool":true,"a_null":null,"a_empty_obj":{},"a_empty_array":[],"a_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"a_empty_array_nested":[{},[],null]}]},"a_array":[{"a_str":"A","a_num_int":1,"a_num_float":0.1,"a_bool":true,"a_null":null,"a_empty_obj":{},"a_empty_array":[],"a_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"a_empty_array_nested":[{},[],null],"a_obj":{"a_str":"A","a_num_int":1,"a_num_float":0.1,"a_bool":true,"a_null":null,"a_empty_obj":{},"a_empty_array":[],"a_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"a_empty_array_nested":[{},[],null]},"a_array":[{"a_str":"A","a_num_int":1,"a_num_float":0.1,"a_bool":true,"a_null":null,"a_empty_obj":{},"a_empty_array":[],"a_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"a_empty_array_nested":[{},[],null]},{"a_str":"A","a_num_int":1,"a_num_float":0.1,"a_bool":true,"a_null":null,"a_empty_obj":{},"a_empty_array":[],"a_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"a_empty_array_nested":[{},[],null]}]},{"a_str":"A","a_num_int":1,"a_num_float":0.1,"a_bool":true,"a_null":null,"a_empty_obj":{},"a_empty_array":[],"a_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"a_empty_array_nested":[{},[],null],"a_obj":{"a_str":"A","a_num_int":1,"a_num_float":0.1,"a_bool":true,"a_null":null,"a_empty_obj":{},"a_empty_array":[],"a_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"a_empty_array_nested":[{},[],null]},"a_array":[{"a_str":"A","a_num_int":1,"a_num_float":0.1,"a_bool":true,"a_null":null,"a_empty_obj":{},"a_empty_array":[],"a_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"a_empty_array_nested":[{},[],null]},{"a_str":"A","a_num_int":1,"a_num_float":0.1,"a_bool":true,"a_null":null,"a_empty_obj":{},"a_empty_array":[],"a_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"a_empty_array_nested":[{},[],null]}]}]}} |
| {"a":{"b_str":"A","b_num_int":1,"b_num_float":0.1,"b_bool":true,"b_null":null,"b_empty_obj":{},"b_empty_array":[],"b_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"b_empty_array_nested":[{},[],null],"b_obj":{"b_str":"A","b_num_int":1,"b_num_float":0.1,"b_bool":true,"b_null":null,"b_empty_obj":{},"b_empty_array":[],"b_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"b_empty_array_nested":[{},[],null],"b_obj":{"b_str":"A","b_num_int":1,"b_num_float":0.1,"b_bool":true,"b_null":null,"b_empty_obj":{},"b_empty_array":[],"b_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"b_empty_array_nested":[{},[],null]},"b_array":[{"b_str":"A","b_num_int":1,"b_num_float":0.1,"b_bool":true,"b_null":null,"b_empty_obj":{},"b_empty_array":[],"b_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"b_empty_array_nested":[{},[],null]},{"b_str":"A","b_num_int":1,"b_num_float":0.1,"b_bool":true,"b_null":null,"b_empty_obj":{},"b_empty_array":[],"b_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"b_empty_array_nested":[{},[],null]}]},"b_array":[{"b_str":"A","b_num_int":1,"b_num_float":0.1,"b_bool":true,"b_null":null,"b_empty_obj":{},"b_empty_array":[],"b_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"b_empty_array_nested":[{},[],null],"b_obj":{"b_str":"A","b_num_int":1,"b_num_float":0.1,"b_bool":true,"b_null":null,"b_empty_obj":{},"b_empty_array":[],"b_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"b_empty_array_nested":[{},[],null]},"b_array":[{"b_str":"A","b_num_int":1,"b_num_float":0.1,"b_bool":true,"b_null":null,"b_empty_obj":{},"b_empty_array":[],"b_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"b_empty_array_nested":[{},[],null]},{"b_str":"A","b_num_int":1,"b_num_float":0.1,"b_bool":true,"b_null":null,"b_empty_obj":{},"b_empty_array":[],"b_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"b_empty_array_nested":[{},[],null]}]},{"b_str":"A","b_num_int":1,"b_num_float":0.1,"b_bool":true,"b_null":null,"b_empty_obj":{},"b_empty_array":[],"b_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"b_empty_array_nested":[{},[],null],"b_obj":{"b_str":"A","b_num_int":1,"b_num_float":0.1,"b_bool":true,"b_null":null,"b_empty_obj":{},"b_empty_array":[],"b_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"b_empty_array_nested":[{},[],null]},"b_array":[{"b_str":"A","b_num_int":1,"b_num_float":0.1,"b_bool":true,"b_null":null,"b_empty_obj":{},"b_empty_array":[],"b_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"b_empty_array_nested":[{},[],null]},{"b_str":"A","b_num_int":1,"b_num_float":0.1,"b_bool":true,"b_null":null,"b_empty_obj":{},"b_empty_array":[],"b_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"b_empty_array_nested":[{},[],null]}]}]}} |
| {"a":{"b_str":"A","b_num_int":1,"b_num_float":0.1,"b_bool":true,"b_null":null,"b_empty_obj":{},"b_empty_array":[],"b_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"b_empty_array_nested":[{},[],null],"b_obj":{"b_str":"A","b_num_int":1,"b_num_float":0.1,"b_bool":true,"b_null":null,"b_empty_obj":{},"b_empty_array":[],"b_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"b_empty_array_nested":[{},[],null],"b_obj":{"b_str":"A","b_num_int":1,"b_num_float":0.1,"b_bool":true,"b_null":null,"b_empty_obj":{},"b_empty_array":[],"b_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"b_empty_array_nested":[{},[],null]},"b_array":[{"b_str":"A","b_num_int":1,"b_num_float":0.1,"b_bool":true,"b_null":null,"b_empty_obj":{},"b_empty_array":[],"b_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"b_empty_array_nested":[{},[],null]},{"b_str":"A","b_num_int":1,"b_num_float":0.1,"b_bool":true,"b_null":null,"b_empty_obj":{},"b_empty_array":[],"b_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"b_empty_array_nested":[{},[],null]}]},"b_array":[{"b_str":"A","b_num_int":1,"b_num_float":0.1,"b_bool":true,"b_null":null,"b_empty_obj":{},"b_empty_array":[],"b_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"b_empty_array_nested":[{},[],null],"b_obj":{"b_str":"A","b_num_int":1,"b_num_float":0.1,"b_bool":true,"b_null":null,"b_empty_obj":{},"b_empty_array":[],"b_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"b_empty_array_nested":[{},[],null]},"b_array":[{"b_str":"A","b_num_int":1,"b_num_float":0.1,"b_bool":true,"b_null":null,"b_empty_obj":{},"b_empty_array":[],"b_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"b_empty_array_nested":[{},[],null]},{"b_str":"A","b_num_int":1,"b_num_float":0.1,"b_bool":true,"b_null":null,"b_empty_obj":{},"b_empty_array":[],"b_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"b_empty_array_nested":[{},[],null]}]},{"b_str":"A","b_num_int":1,"b_num_float":0.1,"b_bool":true,"b_null":null,"b_empty_obj":{},"b_empty_array":[],"b_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"b_empty_array_nested":[{},[],null],"b_obj":{"b_str":"A","b_num_int":1,"b_num_float":0.1,"b_bool":true,"b_null":null,"b_empty_obj":{},"b_empty_array":[],"b_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"b_empty_array_nested":[{},[],null]},"b_array":[{"b_str":"A","b_num_int":1,"b_num_float":0.1,"b_bool":true,"b_null":null,"b_empty_obj":{},"b_empty_array":[],"b_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"b_empty_array_nested":[{},[],null]},{"b_str":"A","b_num_int":1,"b_num_float":0.1,"b_bool":true,"b_null":null,"b_empty_obj":{},"b_empty_array":[],"b_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"b_empty_array_nested":[{},[],null]}]}]}} |

(4 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_func_json_object TEST_ID: A105 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT json_object(KEY 'a' value json_query(c1, '$.a_array[0].a_obj')) c
FROM test_json_cols;
+----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| c                                                                                                                                                                                                        |
+----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| {"a":null}                                                                                                                                                                                               |
| {"a":null}                                                                                                                                                                                               |
| {"a":{"a_str":"A","a_num_int":1,"a_num_float":0.1,"a_bool":true,"a_null":null,"a_empty_obj":{},"a_empty_array":[],"a_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"a_empty_array_nested":[{},[],null]}} |
| {"a":{"a_str":"A","a_num_int":1,"a_num_float":0.1,"a_bool":true,"a_null":null,"a_empty_obj":{},"a_empty_array":[],"a_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"a_empty_array_nested":[{},[],null]}} |
+----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
(4 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_func_json_object TEST_ID: A106 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT json_object('a':json_query(c1, '$.a_array[0].a_obj')) c
FROM test_json_cols;
+----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| c                                                                                                                                                                                                        |
+----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| {"a":null}                                                                                                                                                                                               |
| {"a":null}                                                                                                                                                                                               |
| {"a":{"a_str":"A","a_num_int":1,"a_num_float":0.1,"a_bool":true,"a_null":null,"a_empty_obj":{},"a_empty_array":[],"a_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"a_empty_array_nested":[{},[],null]}} |
| {"a":{"a_str":"A","a_num_int":1,"a_num_float":0.1,"a_bool":true,"a_null":null,"a_empty_obj":{},"a_empty_array":[],"a_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"a_empty_array_nested":[{},[],null]}} |
+----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
(4 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_func_json_object TEST_ID: A107 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT json_object(KEY 'a' value json_object(KEY 'b' value 'B')) c
FROM test_json_cols;
+-----------------+
| c               |
+-----------------+
| {"a":{"b":"B"}} |
| {"a":{"b":"B"}} |
| {"a":{"b":"B"}} |
| {"a":{"b":"B"}} |
+-----------------+
(4 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_func_json_object TEST_ID: A108 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT json_object('a':json_object(KEY 'b' value 'B')) c
FROM test_json_cols;
+-----------------+
| c               |
+-----------------+
| {"a":{"b":"B"}} |
| {"a":{"b":"B"}} |
| {"a":{"b":"B"}} |
| {"a":{"b":"B"}} |
+-----------------+
(4 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_func_json_object TEST_ID: A109 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT count(*) c
FROM test_json_cols
WHERE json_object(KEY 'a' value c1) IS NULL;
+---+
| c |
+---+
| 0 |
+---+
(1 row)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_func_json_object TEST_ID: A110 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT count(*) c
FROM test_json_cols
WHERE json_object('a':c1) IS NULL;
+---+
| c |
+---+
| 0 |
+---+
(1 row)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_func_json_object TEST_ID: A111 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT count(*) c
FROM test_json_cols
WHERE json_object(KEY 'a' value c1) IS NOT NULL;
+---+
| c |
+---+
| 4 |
+---+
(1 row)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_func_json_object TEST_ID: A112 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT count(*) c
FROM test_json_cols
WHERE json_object('a':c1) IS NOT NULL;
+---+
| c |
+---+
| 4 |
+---+
(1 row)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_func_json_object TEST_ID: A113 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT count(*) c
FROM
  (SELECT json_object(KEY 'a' value c1)
   FROM test_json_cols);
+---+
| c |
+---+
| 4 |
+---+
(1 row)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_func_json_object TEST_ID: A114 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT count(*) c
FROM
  (SELECT json_object('a':c1)
   FROM test_json_cols);
+---+
| c |
+---+
| 4 |
+---+
(1 row)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_func_json_object TEST_ID: A115 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT count(*) c
FROM
  (SELECT ALL json_object(KEY 'a' value c1)
   FROM test_json_cols);
+---+
| c |
+---+
| 4 |
+---+
(1 row)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_func_json_object TEST_ID: A116 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT count(*) c
FROM
  (SELECT ALL json_object('a':c1)
   FROM test_json_cols);
+---+
| c |
+---+
| 4 |
+---+
(1 row)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_func_json_object TEST_ID: A117 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT count(mycol) c
FROM
  (SELECT json_object(KEY 'a' value c1) mycol
   FROM test_json_cols);
+---+
| c |
+---+
| 4 |
+---+
(1 row)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_func_json_object TEST_ID: A118 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT count(mycol) c
FROM
  (SELECT json_object('a':c1) mycol
   FROM test_json_cols);
+---+
| c |
+---+
| 4 |
+---+
(1 row)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_func_json_object TEST_ID: A119 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT count(*) c
FROM
  (SELECT DISTINCT json_object(KEY 'a' value c1) c
   FROM test_json_cols);
+---+
| c |
+---+
| 2 |
+---+
(1 row)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_func_json_object TEST_ID: A120 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT count(*) c
FROM
  (SELECT DISTINCT json_object('a':c1) c
   FROM test_json_cols);
+---+
| c |
+---+
| 2 |
+---+
(1 row)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_func_json_object TEST_ID: A121 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT count(*) c
FROM
  (SELECT json_object(KEY 'a' value c1) mycol
   FROM test_json_cols)
GROUP BY mycol;
+---+
| c |
+---+
| 2 |
| 2 |
+---+
(2 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_func_json_object TEST_ID: A122 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT count(*) c
FROM
  (SELECT json_object('a':c1) mycol
   FROM test_json_cols)
GROUP BY mycol;
+---+
| c |
+---+
| 2 |
| 2 |
+---+
(2 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_func_json_object TEST_ID: A123 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT count(*) c
FROM
  (SELECT c1,
          json_object(KEY 'a' value c1) mycol
   FROM test_json_cols)
GROUP BY mycol
HAVING mycol IS NOT NULL;
+---+
| c |
+---+
| 2 |
| 2 |
+---+
(2 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_func_json_object TEST_ID: A124 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT count(*) c
FROM
  (SELECT c1,
          json_object('a':c1) mycol
   FROM test_json_cols)
GROUP BY mycol
HAVING mycol IS NOT NULL;
+---+
| c |
+---+
| 2 |
| 2 |
+---+
(2 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_func_json_object TEST_ID: A125 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT count(*) c
FROM test_json_cols
WHERE json_object(KEY 'a' value c1) = json_object(KEY 'a' value c1);
+---+
| c |
+---+
| 4 |
+---+
(1 row)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_func_json_object TEST_ID: A126 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT count(*) c
FROM test_json_cols
WHERE json_object('a':c1) = json_object('a':c1);
+---+
| c |
+---+
| 4 |
+---+
(1 row)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_func_json_object TEST_ID: A127 TYPE: NEGATIVE TEST
#-------------------------------------------------------------------------
SELECT count(*) c
FROM test_json_cols t1
INNER JOIN test_json_cols t2 ON json_object(KEY 'a' value t1.c1)=json_object(KEY 'a' value t2.c1);
Cannot join
!error

#-------------------------------------------------------------------------
# TESTCASE: test_func_json_object TEST_ID: A128 TYPE: NEGATIVE TEST
#-------------------------------------------------------------------------
SELECT count(*) c
FROM test_json_cols t1
INNER JOIN test_json_cols t2 ON json_object('a':t1.c1)=json_object('a':t2.c1);
Cannot join
!error

#-------------------------------------------------------------------------
# TESTCASE: test_func_json_object TEST_ID: A129 TYPE: NEGATIVE TEST
#-------------------------------------------------------------------------
SELECT count(*) c
FROM test_json_cols t1
LEFT JOIN test_json_cols t2 ON json_object(KEY 'a' value t1.c1)=json_object(KEY 'a' value t2.c1);
Cannot join
!error

#-------------------------------------------------------------------------
# TESTCASE: test_func_json_object TEST_ID: A130 TYPE: NEGATIVE TEST
#-------------------------------------------------------------------------
SELECT count(*) c
FROM test_json_cols t1
LEFT JOIN test_json_cols t2 ON json_object('a':t1.c1)=json_object('a':t2.c1);
Cannot join
!error

#-------------------------------------------------------------------------
# TESTCASE: test_func_json_object TEST_ID: A131 TYPE: NEGATIVE TEST
#-------------------------------------------------------------------------
SELECT count(*) c
FROM test_json_cols t1,
     test_json_cols t2
WHERE json_object(KEY 'a' value t1.c1)=json_object(KEY 'a' value t2.c1);
Cannot join
!error

#-------------------------------------------------------------------------
# TESTCASE: test_func_json_object TEST_ID: A132 TYPE: NEGATIVE TEST
#-------------------------------------------------------------------------
SELECT count(*) c
FROM test_json_cols t1,
     test_json_cols t2
WHERE json_object('a':t1.c1)=json_object('a':t2.c1);
Cannot join
!error

#-------------------------------------------------------------------------
# TESTCASE: test_func_json_object TEST_ID: A133 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT json_object(KEY 'a' value 'b') c
FROM test_json_cols
ORDER BY __time;
+-----------+
| c         |
+-----------+
| {"a":"b"} |
| {"a":"b"} |
| {"a":"b"} |
| {"a":"b"} |
+-----------+
(4 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_func_json_object TEST_ID: A134 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT json_object('a':'b') c
FROM test_json_cols
ORDER BY __time;
+-----------+
| c         |
+-----------+
| {"a":"b"} |
| {"a":"b"} |
| {"a":"b"} |
| {"a":"b"} |
+-----------+
(4 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_func_json_object TEST_ID: A135 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT json_object(KEY 'a' value 'b') c
FROM test_json_cols
LIMIT 1;
+-----------+
| c         |
+-----------+
| {"a":"b"} |
+-----------+
(1 row)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_func_json_object TEST_ID: A136 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT json_object('a':'b') c
FROM test_json_cols
LIMIT 1;
+-----------+
| c         |
+-----------+
| {"a":"b"} |
+-----------+
(1 row)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_func_json_object TEST_ID: A137 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT json_object(KEY 'a' value 'b') c
FROM test_json_cols
OFFSET 1;
+-----------+
| c         |
+-----------+
| {"a":"b"} |
| {"a":"b"} |
| {"a":"b"} |
+-----------+
(3 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_func_json_object TEST_ID: A138 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT json_object('a':'b') c
FROM test_json_cols
OFFSET 1;
+-----------+
| c         |
+-----------+
| {"a":"b"} |
| {"a":"b"} |
| {"a":"b"} |
+-----------+
(3 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_func_json_object TEST_ID: A139 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT json_object(KEY 'a' value 'b') c
FROM test_json_cols
UNION ALL
SELECT json_object(KEY 'a' value 'b') c
FROM test_json_cols;
+-----------+
| c         |
+-----------+
| {"a":"b"} |
| {"a":"b"} |
| {"a":"b"} |
| {"a":"b"} |
| {"a":"b"} |
| {"a":"b"} |
| {"a":"b"} |
| {"a":"b"} |
+-----------+
(8 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_func_json_object TEST_ID: A140 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT json_object('a':'b') c
FROM test_json_cols
UNION ALL
SELECT json_object('a':'b') c
FROM test_json_cols;
+-----------+
| c         |
+-----------+
| {"a":"b"} |
| {"a":"b"} |
| {"a":"b"} |
| {"a":"b"} |
| {"a":"b"} |
| {"a":"b"} |
| {"a":"b"} |
| {"a":"b"} |
+-----------+
(8 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_func_json_object TEST_ID: A141 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------

SELECT json_object(KEY 'a' value c1)
FROM test_json_cols;

||

| {"a":{"a_str":"A","a_num_int":1,"a_num_float":0.1,"a_bool":true,"a_null":null,"a_empty_obj":{},"a_empty_array":[],"a_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"a_empty_array_nested":[{},[],null],"a_obj":{"a_str":"A","a_num_int":1,"a_num_float":0.1,"a_bool":true,"a_null":null,"a_empty_obj":{},"a_empty_array":[],"a_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"a_empty_array_nested":[{},[],null],"a_obj":{"a_str":"A","a_num_int":1,"a_num_float":0.1,"a_bool":true,"a_null":null,"a_empty_obj":{},"a_empty_array":[],"a_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"a_empty_array_nested":[{},[],null]},"a_array":[{"a_str":"A","a_num_int":1,"a_num_float":0.1,"a_bool":true,"a_null":null,"a_empty_obj":{},"a_empty_array":[],"a_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"a_empty_array_nested":[{},[],null]},{"a_str":"A","a_num_int":1,"a_num_float":0.1,"a_bool":true,"a_null":null,"a_empty_obj":{},"a_empty_array":[],"a_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"a_empty_array_nested":[{},[],null]}]},"a_array":[{"a_str":"A","a_num_int":1,"a_num_float":0.1,"a_bool":true,"a_null":null,"a_empty_obj":{},"a_empty_array":[],"a_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"a_empty_array_nested":[{},[],null],"a_obj":{"a_str":"A","a_num_int":1,"a_num_float":0.1,"a_bool":true,"a_null":null,"a_empty_obj":{},"a_empty_array":[],"a_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"a_empty_array_nested":[{},[],null]},"a_array":[{"a_str":"A","a_num_int":1,"a_num_float":0.1,"a_bool":true,"a_null":null,"a_empty_obj":{},"a_empty_array":[],"a_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"a_empty_array_nested":[{},[],null]},{"a_str":"A","a_num_int":1,"a_num_float":0.1,"a_bool":true,"a_null":null,"a_empty_obj":{},"a_empty_array":[],"a_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"a_empty_array_nested":[{},[],null]}]},{"a_str":"A","a_num_int":1,"a_num_float":0.1,"a_bool":true,"a_null":null,"a_empty_obj":{},"a_empty_array":[],"a_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"a_empty_array_nested":[{},[],null],"a_obj":{"a_str":"A","a_num_int":1,"a_num_float":0.1,"a_bool":true,"a_null":null,"a_empty_obj":{},"a_empty_array":[],"a_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"a_empty_array_nested":[{},[],null]},"a_array":[{"a_str":"A","a_num_int":1,"a_num_float":0.1,"a_bool":true,"a_null":null,"a_empty_obj":{},"a_empty_array":[],"a_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"a_empty_array_nested":[{},[],null]},{"a_str":"A","a_num_int":1,"a_num_float":0.1,"a_bool":true,"a_null":null,"a_empty_obj":{},"a_empty_array":[],"a_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"a_empty_array_nested":[{},[],null]}]}]}} |
| {"a":{"a_str":"A","a_num_int":1,"a_num_float":0.1,"a_bool":true,"a_null":null,"a_empty_obj":{},"a_empty_array":[],"a_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"a_empty_array_nested":[{},[],null],"a_obj":{"a_str":"A","a_num_int":1,"a_num_float":0.1,"a_bool":true,"a_null":null,"a_empty_obj":{},"a_empty_array":[],"a_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"a_empty_array_nested":[{},[],null],"a_obj":{"a_str":"A","a_num_int":1,"a_num_float":0.1,"a_bool":true,"a_null":null,"a_empty_obj":{},"a_empty_array":[],"a_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"a_empty_array_nested":[{},[],null]},"a_array":[{"a_str":"A","a_num_int":1,"a_num_float":0.1,"a_bool":true,"a_null":null,"a_empty_obj":{},"a_empty_array":[],"a_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"a_empty_array_nested":[{},[],null]},{"a_str":"A","a_num_int":1,"a_num_float":0.1,"a_bool":true,"a_null":null,"a_empty_obj":{},"a_empty_array":[],"a_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"a_empty_array_nested":[{},[],null]}]},"a_array":[{"a_str":"A","a_num_int":1,"a_num_float":0.1,"a_bool":true,"a_null":null,"a_empty_obj":{},"a_empty_array":[],"a_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"a_empty_array_nested":[{},[],null],"a_obj":{"a_str":"A","a_num_int":1,"a_num_float":0.1,"a_bool":true,"a_null":null,"a_empty_obj":{},"a_empty_array":[],"a_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"a_empty_array_nested":[{},[],null]},"a_array":[{"a_str":"A","a_num_int":1,"a_num_float":0.1,"a_bool":true,"a_null":null,"a_empty_obj":{},"a_empty_array":[],"a_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"a_empty_array_nested":[{},[],null]},{"a_str":"A","a_num_int":1,"a_num_float":0.1,"a_bool":true,"a_null":null,"a_empty_obj":{},"a_empty_array":[],"a_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"a_empty_array_nested":[{},[],null]}]},{"a_str":"A","a_num_int":1,"a_num_float":0.1,"a_bool":true,"a_null":null,"a_empty_obj":{},"a_empty_array":[],"a_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"a_empty_array_nested":[{},[],null],"a_obj":{"a_str":"A","a_num_int":1,"a_num_float":0.1,"a_bool":true,"a_null":null,"a_empty_obj":{},"a_empty_array":[],"a_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"a_empty_array_nested":[{},[],null]},"a_array":[{"a_str":"A","a_num_int":1,"a_num_float":0.1,"a_bool":true,"a_null":null,"a_empty_obj":{},"a_empty_array":[],"a_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"a_empty_array_nested":[{},[],null]},{"a_str":"A","a_num_int":1,"a_num_float":0.1,"a_bool":true,"a_null":null,"a_empty_obj":{},"a_empty_array":[],"a_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"a_empty_array_nested":[{},[],null]}]}]}} |
| {"a":{"b_str":"A","b_num_int":1,"b_num_float":0.1,"b_bool":true,"b_null":null,"b_empty_obj":{},"b_empty_array":[],"b_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"b_empty_array_nested":[{},[],null],"b_obj":{"b_str":"A","b_num_int":1,"b_num_float":0.1,"b_bool":true,"b_null":null,"b_empty_obj":{},"b_empty_array":[],"b_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"b_empty_array_nested":[{},[],null],"b_obj":{"b_str":"A","b_num_int":1,"b_num_float":0.1,"b_bool":true,"b_null":null,"b_empty_obj":{},"b_empty_array":[],"b_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"b_empty_array_nested":[{},[],null]},"b_array":[{"b_str":"A","b_num_int":1,"b_num_float":0.1,"b_bool":true,"b_null":null,"b_empty_obj":{},"b_empty_array":[],"b_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"b_empty_array_nested":[{},[],null]},{"b_str":"A","b_num_int":1,"b_num_float":0.1,"b_bool":true,"b_null":null,"b_empty_obj":{},"b_empty_array":[],"b_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"b_empty_array_nested":[{},[],null]}]},"b_array":[{"b_str":"A","b_num_int":1,"b_num_float":0.1,"b_bool":true,"b_null":null,"b_empty_obj":{},"b_empty_array":[],"b_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"b_empty_array_nested":[{},[],null],"b_obj":{"b_str":"A","b_num_int":1,"b_num_float":0.1,"b_bool":true,"b_null":null,"b_empty_obj":{},"b_empty_array":[],"b_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"b_empty_array_nested":[{},[],null]},"b_array":[{"b_str":"A","b_num_int":1,"b_num_float":0.1,"b_bool":true,"b_null":null,"b_empty_obj":{},"b_empty_array":[],"b_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"b_empty_array_nested":[{},[],null]},{"b_str":"A","b_num_int":1,"b_num_float":0.1,"b_bool":true,"b_null":null,"b_empty_obj":{},"b_empty_array":[],"b_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"b_empty_array_nested":[{},[],null]}]},{"b_str":"A","b_num_int":1,"b_num_float":0.1,"b_bool":true,"b_null":null,"b_empty_obj":{},"b_empty_array":[],"b_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"b_empty_array_nested":[{},[],null],"b_obj":{"b_str":"A","b_num_int":1,"b_num_float":0.1,"b_bool":true,"b_null":null,"b_empty_obj":{},"b_empty_array":[],"b_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"b_empty_array_nested":[{},[],null]},"b_array":[{"b_str":"A","b_num_int":1,"b_num_float":0.1,"b_bool":true,"b_null":null,"b_empty_obj":{},"b_empty_array":[],"b_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"b_empty_array_nested":[{},[],null]},{"b_str":"A","b_num_int":1,"b_num_float":0.1,"b_bool":true,"b_null":null,"b_empty_obj":{},"b_empty_array":[],"b_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"b_empty_array_nested":[{},[],null]}]}]}} |
| {"a":{"b_str":"A","b_num_int":1,"b_num_float":0.1,"b_bool":true,"b_null":null,"b_empty_obj":{},"b_empty_array":[],"b_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"b_empty_array_nested":[{},[],null],"b_obj":{"b_str":"A","b_num_int":1,"b_num_float":0.1,"b_bool":true,"b_null":null,"b_empty_obj":{},"b_empty_array":[],"b_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"b_empty_array_nested":[{},[],null],"b_obj":{"b_str":"A","b_num_int":1,"b_num_float":0.1,"b_bool":true,"b_null":null,"b_empty_obj":{},"b_empty_array":[],"b_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"b_empty_array_nested":[{},[],null]},"b_array":[{"b_str":"A","b_num_int":1,"b_num_float":0.1,"b_bool":true,"b_null":null,"b_empty_obj":{},"b_empty_array":[],"b_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"b_empty_array_nested":[{},[],null]},{"b_str":"A","b_num_int":1,"b_num_float":0.1,"b_bool":true,"b_null":null,"b_empty_obj":{},"b_empty_array":[],"b_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"b_empty_array_nested":[{},[],null]}]},"b_array":[{"b_str":"A","b_num_int":1,"b_num_float":0.1,"b_bool":true,"b_null":null,"b_empty_obj":{},"b_empty_array":[],"b_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"b_empty_array_nested":[{},[],null],"b_obj":{"b_str":"A","b_num_int":1,"b_num_float":0.1,"b_bool":true,"b_null":null,"b_empty_obj":{},"b_empty_array":[],"b_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"b_empty_array_nested":[{},[],null]},"b_array":[{"b_str":"A","b_num_int":1,"b_num_float":0.1,"b_bool":true,"b_null":null,"b_empty_obj":{},"b_empty_array":[],"b_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"b_empty_array_nested":[{},[],null]},{"b_str":"A","b_num_int":1,"b_num_float":0.1,"b_bool":true,"b_null":null,"b_empty_obj":{},"b_empty_array":[],"b_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"b_empty_array_nested":[{},[],null]}]},{"b_str":"A","b_num_int":1,"b_num_float":0.1,"b_bool":true,"b_null":null,"b_empty_obj":{},"b_empty_array":[],"b_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"b_empty_array_nested":[{},[],null],"b_obj":{"b_str":"A","b_num_int":1,"b_num_float":0.1,"b_bool":true,"b_null":null,"b_empty_obj":{},"b_empty_array":[],"b_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"b_empty_array_nested":[{},[],null]},"b_array":[{"b_str":"A","b_num_int":1,"b_num_float":0.1,"b_bool":true,"b_null":null,"b_empty_obj":{},"b_empty_array":[],"b_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"b_empty_array_nested":[{},[],null]},{"b_str":"A","b_num_int":1,"b_num_float":0.1,"b_bool":true,"b_null":null,"b_empty_obj":{},"b_empty_array":[],"b_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"b_empty_array_nested":[{},[],null]}]}]}} |

(4 rows)

!ok

{
  "queryType" : "scan",
  "dataSource" : {
    "type" : "table",
    "name" : "test_json_cols"
  },
  "intervals" : {
    "type" : "intervals",
    "intervals" : [ "-146136543-09-08T08:23:32.096Z/146140482-04-24T15:36:27.903Z" ]
  },
  "virtualColumns" : [ {
    "type" : "expression",
    "name" : "v0",
    "expression" : "json_object('a',\"c1\")",
    "outputType" : "COMPLEX<json>"
  } ],
  "resultFormat" : "compactedList",
  "columns" : [ "v0" ],
  "columnTypes" : [ "COMPLEX<json>" ],
  "granularity" : {
    "type" : "all"
  },
  "legacy" : false
}
!nativePlan

#-------------------------------------------------------------------------
# TESTCASE: test_func_json_object TEST_ID: A142 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------

SELECT json_object('a':c1)
FROM test_json_cols;

||

| {"a":{"a_str":"A","a_num_int":1,"a_num_float":0.1,"a_bool":true,"a_null":null,"a_empty_obj":{},"a_empty_array":[],"a_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"a_empty_array_nested":[{},[],null],"a_obj":{"a_str":"A","a_num_int":1,"a_num_float":0.1,"a_bool":true,"a_null":null,"a_empty_obj":{},"a_empty_array":[],"a_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"a_empty_array_nested":[{},[],null],"a_obj":{"a_str":"A","a_num_int":1,"a_num_float":0.1,"a_bool":true,"a_null":null,"a_empty_obj":{},"a_empty_array":[],"a_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"a_empty_array_nested":[{},[],null]},"a_array":[{"a_str":"A","a_num_int":1,"a_num_float":0.1,"a_bool":true,"a_null":null,"a_empty_obj":{},"a_empty_array":[],"a_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"a_empty_array_nested":[{},[],null]},{"a_str":"A","a_num_int":1,"a_num_float":0.1,"a_bool":true,"a_null":null,"a_empty_obj":{},"a_empty_array":[],"a_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"a_empty_array_nested":[{},[],null]}]},"a_array":[{"a_str":"A","a_num_int":1,"a_num_float":0.1,"a_bool":true,"a_null":null,"a_empty_obj":{},"a_empty_array":[],"a_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"a_empty_array_nested":[{},[],null],"a_obj":{"a_str":"A","a_num_int":1,"a_num_float":0.1,"a_bool":true,"a_null":null,"a_empty_obj":{},"a_empty_array":[],"a_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"a_empty_array_nested":[{},[],null]},"a_array":[{"a_str":"A","a_num_int":1,"a_num_float":0.1,"a_bool":true,"a_null":null,"a_empty_obj":{},"a_empty_array":[],"a_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"a_empty_array_nested":[{},[],null]},{"a_str":"A","a_num_int":1,"a_num_float":0.1,"a_bool":true,"a_null":null,"a_empty_obj":{},"a_empty_array":[],"a_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"a_empty_array_nested":[{},[],null]}]},{"a_str":"A","a_num_int":1,"a_num_float":0.1,"a_bool":true,"a_null":null,"a_empty_obj":{},"a_empty_array":[],"a_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"a_empty_array_nested":[{},[],null],"a_obj":{"a_str":"A","a_num_int":1,"a_num_float":0.1,"a_bool":true,"a_null":null,"a_empty_obj":{},"a_empty_array":[],"a_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"a_empty_array_nested":[{},[],null]},"a_array":[{"a_str":"A","a_num_int":1,"a_num_float":0.1,"a_bool":true,"a_null":null,"a_empty_obj":{},"a_empty_array":[],"a_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"a_empty_array_nested":[{},[],null]},{"a_str":"A","a_num_int":1,"a_num_float":0.1,"a_bool":true,"a_null":null,"a_empty_obj":{},"a_empty_array":[],"a_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"a_empty_array_nested":[{},[],null]}]}]}} |
| {"a":{"a_str":"A","a_num_int":1,"a_num_float":0.1,"a_bool":true,"a_null":null,"a_empty_obj":{},"a_empty_array":[],"a_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"a_empty_array_nested":[{},[],null],"a_obj":{"a_str":"A","a_num_int":1,"a_num_float":0.1,"a_bool":true,"a_null":null,"a_empty_obj":{},"a_empty_array":[],"a_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"a_empty_array_nested":[{},[],null],"a_obj":{"a_str":"A","a_num_int":1,"a_num_float":0.1,"a_bool":true,"a_null":null,"a_empty_obj":{},"a_empty_array":[],"a_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"a_empty_array_nested":[{},[],null]},"a_array":[{"a_str":"A","a_num_int":1,"a_num_float":0.1,"a_bool":true,"a_null":null,"a_empty_obj":{},"a_empty_array":[],"a_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"a_empty_array_nested":[{},[],null]},{"a_str":"A","a_num_int":1,"a_num_float":0.1,"a_bool":true,"a_null":null,"a_empty_obj":{},"a_empty_array":[],"a_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"a_empty_array_nested":[{},[],null]}]},"a_array":[{"a_str":"A","a_num_int":1,"a_num_float":0.1,"a_bool":true,"a_null":null,"a_empty_obj":{},"a_empty_array":[],"a_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"a_empty_array_nested":[{},[],null],"a_obj":{"a_str":"A","a_num_int":1,"a_num_float":0.1,"a_bool":true,"a_null":null,"a_empty_obj":{},"a_empty_array":[],"a_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"a_empty_array_nested":[{},[],null]},"a_array":[{"a_str":"A","a_num_int":1,"a_num_float":0.1,"a_bool":true,"a_null":null,"a_empty_obj":{},"a_empty_array":[],"a_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"a_empty_array_nested":[{},[],null]},{"a_str":"A","a_num_int":1,"a_num_float":0.1,"a_bool":true,"a_null":null,"a_empty_obj":{},"a_empty_array":[],"a_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"a_empty_array_nested":[{},[],null]}]},{"a_str":"A","a_num_int":1,"a_num_float":0.1,"a_bool":true,"a_null":null,"a_empty_obj":{},"a_empty_array":[],"a_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"a_empty_array_nested":[{},[],null],"a_obj":{"a_str":"A","a_num_int":1,"a_num_float":0.1,"a_bool":true,"a_null":null,"a_empty_obj":{},"a_empty_array":[],"a_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"a_empty_array_nested":[{},[],null]},"a_array":[{"a_str":"A","a_num_int":1,"a_num_float":0.1,"a_bool":true,"a_null":null,"a_empty_obj":{},"a_empty_array":[],"a_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"a_empty_array_nested":[{},[],null]},{"a_str":"A","a_num_int":1,"a_num_float":0.1,"a_bool":true,"a_null":null,"a_empty_obj":{},"a_empty_array":[],"a_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"a_empty_array_nested":[{},[],null]}]}]}} |
| {"a":{"b_str":"A","b_num_int":1,"b_num_float":0.1,"b_bool":true,"b_null":null,"b_empty_obj":{},"b_empty_array":[],"b_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"b_empty_array_nested":[{},[],null],"b_obj":{"b_str":"A","b_num_int":1,"b_num_float":0.1,"b_bool":true,"b_null":null,"b_empty_obj":{},"b_empty_array":[],"b_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"b_empty_array_nested":[{},[],null],"b_obj":{"b_str":"A","b_num_int":1,"b_num_float":0.1,"b_bool":true,"b_null":null,"b_empty_obj":{},"b_empty_array":[],"b_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"b_empty_array_nested":[{},[],null]},"b_array":[{"b_str":"A","b_num_int":1,"b_num_float":0.1,"b_bool":true,"b_null":null,"b_empty_obj":{},"b_empty_array":[],"b_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"b_empty_array_nested":[{},[],null]},{"b_str":"A","b_num_int":1,"b_num_float":0.1,"b_bool":true,"b_null":null,"b_empty_obj":{},"b_empty_array":[],"b_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"b_empty_array_nested":[{},[],null]}]},"b_array":[{"b_str":"A","b_num_int":1,"b_num_float":0.1,"b_bool":true,"b_null":null,"b_empty_obj":{},"b_empty_array":[],"b_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"b_empty_array_nested":[{},[],null],"b_obj":{"b_str":"A","b_num_int":1,"b_num_float":0.1,"b_bool":true,"b_null":null,"b_empty_obj":{},"b_empty_array":[],"b_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"b_empty_array_nested":[{},[],null]},"b_array":[{"b_str":"A","b_num_int":1,"b_num_float":0.1,"b_bool":true,"b_null":null,"b_empty_obj":{},"b_empty_array":[],"b_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"b_empty_array_nested":[{},[],null]},{"b_str":"A","b_num_int":1,"b_num_float":0.1,"b_bool":true,"b_null":null,"b_empty_obj":{},"b_empty_array":[],"b_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"b_empty_array_nested":[{},[],null]}]},{"b_str":"A","b_num_int":1,"b_num_float":0.1,"b_bool":true,"b_null":null,"b_empty_obj":{},"b_empty_array":[],"b_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"b_empty_array_nested":[{},[],null],"b_obj":{"b_str":"A","b_num_int":1,"b_num_float":0.1,"b_bool":true,"b_null":null,"b_empty_obj":{},"b_empty_array":[],"b_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"b_empty_array_nested":[{},[],null]},"b_array":[{"b_str":"A","b_num_int":1,"b_num_float":0.1,"b_bool":true,"b_null":null,"b_empty_obj":{},"b_empty_array":[],"b_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"b_empty_array_nested":[{},[],null]},{"b_str":"A","b_num_int":1,"b_num_float":0.1,"b_bool":true,"b_null":null,"b_empty_obj":{},"b_empty_array":[],"b_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"b_empty_array_nested":[{},[],null]}]}]}} |
| {"a":{"b_str":"A","b_num_int":1,"b_num_float":0.1,"b_bool":true,"b_null":null,"b_empty_obj":{},"b_empty_array":[],"b_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"b_empty_array_nested":[{},[],null],"b_obj":{"b_str":"A","b_num_int":1,"b_num_float":0.1,"b_bool":true,"b_null":null,"b_empty_obj":{},"b_empty_array":[],"b_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"b_empty_array_nested":[{},[],null],"b_obj":{"b_str":"A","b_num_int":1,"b_num_float":0.1,"b_bool":true,"b_null":null,"b_empty_obj":{},"b_empty_array":[],"b_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"b_empty_array_nested":[{},[],null]},"b_array":[{"b_str":"A","b_num_int":1,"b_num_float":0.1,"b_bool":true,"b_null":null,"b_empty_obj":{},"b_empty_array":[],"b_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"b_empty_array_nested":[{},[],null]},{"b_str":"A","b_num_int":1,"b_num_float":0.1,"b_bool":true,"b_null":null,"b_empty_obj":{},"b_empty_array":[],"b_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"b_empty_array_nested":[{},[],null]}]},"b_array":[{"b_str":"A","b_num_int":1,"b_num_float":0.1,"b_bool":true,"b_null":null,"b_empty_obj":{},"b_empty_array":[],"b_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"b_empty_array_nested":[{},[],null],"b_obj":{"b_str":"A","b_num_int":1,"b_num_float":0.1,"b_bool":true,"b_null":null,"b_empty_obj":{},"b_empty_array":[],"b_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"b_empty_array_nested":[{},[],null]},"b_array":[{"b_str":"A","b_num_int":1,"b_num_float":0.1,"b_bool":true,"b_null":null,"b_empty_obj":{},"b_empty_array":[],"b_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"b_empty_array_nested":[{},[],null]},{"b_str":"A","b_num_int":1,"b_num_float":0.1,"b_bool":true,"b_null":null,"b_empty_obj":{},"b_empty_array":[],"b_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"b_empty_array_nested":[{},[],null]}]},{"b_str":"A","b_num_int":1,"b_num_float":0.1,"b_bool":true,"b_null":null,"b_empty_obj":{},"b_empty_array":[],"b_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"b_empty_array_nested":[{},[],null],"b_obj":{"b_str":"A","b_num_int":1,"b_num_float":0.1,"b_bool":true,"b_null":null,"b_empty_obj":{},"b_empty_array":[],"b_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"b_empty_array_nested":[{},[],null]},"b_array":[{"b_str":"A","b_num_int":1,"b_num_float":0.1,"b_bool":true,"b_null":null,"b_empty_obj":{},"b_empty_array":[],"b_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"b_empty_array_nested":[{},[],null]},{"b_str":"A","b_num_int":1,"b_num_float":0.1,"b_bool":true,"b_null":null,"b_empty_obj":{},"b_empty_array":[],"b_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"b_empty_array_nested":[{},[],null]}]}]}} |

(4 rows)

!ok

{
  "queryType" : "scan",
  "dataSource" : {
    "type" : "table",
    "name" : "test_json_cols"
  },
  "intervals" : {
    "type" : "intervals",
    "intervals" : [ "-146136543-09-08T08:23:32.096Z/146140482-04-24T15:36:27.903Z" ]
  },
  "virtualColumns" : [ {
    "type" : "expression",
    "name" : "v0",
    "expression" : "json_object('a',\"c1\")",
    "outputType" : "COMPLEX<json>"
  } ],
  "resultFormat" : "compactedList",
  "columns" : [ "v0" ],
  "columnTypes" : [ "COMPLEX<json>" ],
  "granularity" : {
    "type" : "all"
  },
  "legacy" : false
}
!nativePlan

#-------------------------------------------------------------------------
# TESTCASE: test_func_parse_json TEST_ID: A001 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT parse_json('1234') c
FROM test_json_cols;
+------+
| c    |
+------+
| 1234 |
| 1234 |
| 1234 |
| 1234 |
+------+
(4 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_func_parse_json TEST_ID: A002 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT parse_json('"日本"') c
FROM test_json_cols;
+------+
| c    |
+------+
| "日本" |
| "日本" |
| "日本" |
| "日本" |
+------+
(4 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_func_parse_json TEST_ID: A003 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT parse_json('"abc"') c
FROM test_json_cols;
+-------+
| c     |
+-------+
| "abc" |
| "abc" |
| "abc" |
| "abc" |
+-------+
(4 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_func_parse_json TEST_ID: A004 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT parse_json('"'||'a'||'b'||'c'||'"') c
FROM test_json_cols;
+-------+
| c     |
+-------+
| "abc" |
| "abc" |
| "abc" |
| "abc" |
+-------+
(4 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_func_parse_json TEST_ID: A005 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT parse_json('"This is My Key"') c
FROM test_json_cols;
+------------------+
| c                |
+------------------+
| "This is My Key" |
| "This is My Key" |
| "This is My Key" |
| "This is My Key" |
+------------------+
(4 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_func_parse_json TEST_ID: A006 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT json_query(parse_json('"AbCd"'), '$') c
FROM test_json_cols;
+--------+
| c      |
+--------+
| "AbCd" |
| "AbCd" |
| "AbCd" |
| "AbCd" |
+--------+
(4 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_func_parse_json TEST_ID: A007 TYPE: NEGATIVE TEST
#-------------------------------------------------------------------------
SELECT parse_json(json_value(s_str, '$')) c
FROM test_json_cols;
ExpressionProcessingException
!error

#-------------------------------------------------------------------------
# TESTCASE: test_func_parse_json TEST_ID: A008 TYPE: NEGATIVE TEST
#-------------------------------------------------------------------------
SELECT parse_json(1234) c
FROM test_json_cols;
Cannot apply
!error

#-------------------------------------------------------------------------
# TESTCASE: test_func_parse_json TEST_ID: A009 TYPE: NEGATIVE TEST
#-------------------------------------------------------------------------
SELECT parse_json(1+1) c
FROM test_json_cols;
Cannot apply
!error

#-------------------------------------------------------------------------
# TESTCASE: test_func_parse_json TEST_ID: A010 TYPE: NEGATIVE TEST
#-------------------------------------------------------------------------
SELECT json_query(parse_json(1234), '$') c
FROM test_json_cols;
Cannot apply
!error

#-------------------------------------------------------------------------
# TESTCASE: test_func_parse_json TEST_ID: A011 TYPE: NEGATIVE TEST
#-------------------------------------------------------------------------
SELECT parse_json(json_value(s_num_int, '$' RETURNING bigint)) c
FROM test_json_cols;
Cannot apply
!error

#-------------------------------------------------------------------------
# TESTCASE: test_func_parse_json TEST_ID: A012 TYPE: NEGATIVE TEST
#-------------------------------------------------------------------------
SELECT parse_json(0.1234) c
FROM test_json_cols;
Cannot apply
!error

#-------------------------------------------------------------------------
# TESTCASE: test_func_parse_json TEST_ID: A013 TYPE: NEGATIVE TEST
#-------------------------------------------------------------------------
SELECT parse_json(0.1+0.1) c
FROM test_json_cols;
Cannot apply
!error

#-------------------------------------------------------------------------
# TESTCASE: test_func_parse_json TEST_ID: A014 TYPE: NEGATIVE TEST
#-------------------------------------------------------------------------
SELECT json_query(parse_json(0.1234), '$') c
FROM test_json_cols;
Cannot apply
!error

#-------------------------------------------------------------------------
# TESTCASE: test_func_parse_json TEST_ID: A015 TYPE: NEGATIVE TEST
#-------------------------------------------------------------------------
SELECT parse_json(json_value(s_num_float, '$' RETURNING DOUBLE)) c
FROM test_json_cols;
Cannot apply
!error

#-------------------------------------------------------------------------
# TESTCASE: test_func_parse_json TEST_ID: A016 TYPE: NEGATIVE TEST
#-------------------------------------------------------------------------
SELECT parse_json(TRUE) c
FROM test_json_cols;
Cannot apply
!error

#-------------------------------------------------------------------------
# TESTCASE: test_func_parse_json TEST_ID: A017 TYPE: NEGATIVE TEST
#-------------------------------------------------------------------------
SELECT parse_json((1=2)) c
FROM test_json_cols;
Cannot apply
!error

#-------------------------------------------------------------------------
# TESTCASE: test_func_parse_json TEST_ID: A018 TYPE: NEGATIVE TEST
#-------------------------------------------------------------------------
SELECT json_query(parse_json(TRUE), '$') c
FROM test_json_cols;
Cannot apply
!error

#-------------------------------------------------------------------------
# TESTCASE: test_func_parse_json TEST_ID: A019 TYPE: NEGATIVE TEST
#-------------------------------------------------------------------------
SELECT parse_json(json_value(s_bool, '$' RETURNING boolean)) c
FROM test_json_cols;
Cannot apply
!error

#-------------------------------------------------------------------------
# TESTCASE: test_func_parse_json TEST_ID: A020 TYPE: NEGATIVE TEST
#-------------------------------------------------------------------------
SELECT parse_json(NULL) c
FROM test_json_cols;
QueryInterruptedException
!error

#-------------------------------------------------------------------------
# TESTCASE: test_func_parse_json TEST_ID: A021 TYPE: NEGATIVE TEST
#-------------------------------------------------------------------------
SELECT json_query(parse_json(NULL), '$') c
FROM test_json_cols;
QueryInterruptedException
!error

#-------------------------------------------------------------------------
# TESTCASE: test_func_parse_json TEST_ID: A022 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT parse_json(json_value(s_null, '$')) c
FROM test_json_cols;
+---+
| c |
+---+
|   |
|   |
|   |
|   |
+---+
(4 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_func_parse_json TEST_ID: A023 TYPE: NEGATIVE TEST
#-------------------------------------------------------------------------
SELECT parse_json(__time) c
FROM test_json_cols;
Cannot apply
!error

#-------------------------------------------------------------------------
# TESTCASE: test_func_parse_json TEST_ID: A024 TYPE: NEGATIVE TEST
#-------------------------------------------------------------------------
SELECT parse_json(CURRENT_TIMESTAMP) c
FROM test_json_cols;
Cannot apply
!error

#-------------------------------------------------------------------------
# TESTCASE: test_func_parse_json TEST_ID: A025 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT parse_json('{}') c
FROM test_json_cols;
+----+
| c  |
+----+
| {} |
| {} |
| {} |
| {} |
+----+
(4 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_func_parse_json TEST_ID: A026 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT parse_json('{"a": "A", "b": {}}') c
FROM test_json_cols;
+------------------+
| c                |
+------------------+
| {"a":"A","b":{}} |
| {"a":"A","b":{}} |
| {"a":"A","b":{}} |
| {"a":"A","b":{}} |
+------------------+
(4 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_func_parse_json TEST_ID: A027 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT parse_json('[]') c
FROM test_json_cols;
+----+
| c  |
+----+
| [] |
| [] |
| [] |
| [] |
+----+
(4 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_func_parse_json TEST_ID: A028 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT parse_json('{"a": "A", "b": []}') c
FROM test_json_cols;
+------------------+
| c                |
+------------------+
| {"a":"A","b":[]} |
| {"a":"A","b":[]} |
| {"a":"A","b":[]} |
| {"a":"A","b":[]} |
+------------------+
(4 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_func_parse_json TEST_ID: A029 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT parse_json('{"a": "A", "b": 1, "c": 0.1, "d": true, "e": null}') c
FROM test_json_cols;
+-------------------------------------------+
| c                                         |
+-------------------------------------------+
| {"a":"A","b":1,"c":0.1,"d":true,"e":null} |
| {"a":"A","b":1,"c":0.1,"d":true,"e":null} |
| {"a":"A","b":1,"c":0.1,"d":true,"e":null} |
| {"a":"A","b":1,"c":0.1,"d":true,"e":null} |
+-------------------------------------------+
(4 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_func_parse_json TEST_ID: A030 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT parse_json('{"a": "A", "b": [{"c": 123}, {"d": null, "e": [1, 2, 3]}]}') c
FROM test_json_cols;
+--------------------------------------------------+
| c                                                |
+--------------------------------------------------+
| {"a":"A","b":[{"c":123},{"d":null,"e":[1,2,3]}]} |
| {"a":"A","b":[{"c":123},{"d":null,"e":[1,2,3]}]} |
| {"a":"A","b":[{"c":123},{"d":null,"e":[1,2,3]}]} |
| {"a":"A","b":[{"c":123},{"d":null,"e":[1,2,3]}]} |
+--------------------------------------------------+
(4 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_func_parse_json TEST_ID: A031 TYPE: NEGATIVE TEST
#-------------------------------------------------------------------------
SELECT parse_json(c1) c
FROM test_json_cols;
Cannot apply
!error

#-------------------------------------------------------------------------
# TESTCASE: test_func_parse_json TEST_ID: A032 TYPE: NEGATIVE TEST
#-------------------------------------------------------------------------
SELECT parse_json(json_query(c1, '$.a_array[0].a_obj')) c
FROM test_json_cols;
Cannot apply
!error

#-------------------------------------------------------------------------
# TESTCASE: test_func_parse_json TEST_ID: A033 TYPE: NEGATIVE TEST
#-------------------------------------------------------------------------
SELECT parse_json('{'a': 123}') c
FROM test_json_cols;
QueryInterruptedException
!error

#-------------------------------------------------------------------------
# TESTCASE: test_func_parse_json TEST_ID: A034 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT parse_json('"a": 123') c
FROM test_json_cols;
+-----+
| c   |
+-----+
| "a" |
| "a" |
| "a" |
| "a" |
+-----+
(4 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_func_parse_json TEST_ID: A035 TYPE: NEGATIVE TEST
#-------------------------------------------------------------------------
SELECT parse_json('{"a": 123; "b": 456}') c
FROM test_json_cols;
ExpressionProcessingException
!error

#-------------------------------------------------------------------------
# TESTCASE: test_func_parse_json TEST_ID: A036 TYPE: NEGATIVE TEST
#-------------------------------------------------------------------------
SELECT parse_json('{"a": 123 456}') c
FROM test_json_cols;
ExpressionProcessingException
!error

#-------------------------------------------------------------------------
# TESTCASE: test_func_parse_json TEST_ID: A037 TYPE: NEGATIVE TEST
#-------------------------------------------------------------------------
SELECT parse_json('{"a": "A", "b": ["c": {}, "d": {}]}') c
FROM test_json_cols;
ExpressionProcessingException
!error

#-------------------------------------------------------------------------
# TESTCASE: test_func_parse_json TEST_ID: A038 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT count(*) c
FROM test_json_cols
WHERE parse_json(to_json_string(c1)) IS NULL;
+---+
| c |
+---+
| 0 |
+---+
(1 row)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_func_parse_json TEST_ID: A039 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT count(*) c
FROM test_json_cols
WHERE parse_json(to_json_string(c1)) IS NOT NULL;
+---+
| c |
+---+
| 4 |
+---+
(1 row)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_func_parse_json TEST_ID: A040 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT count(*) c
FROM
  (SELECT parse_json(to_json_string(c1))
   FROM test_json_cols);
+---+
| c |
+---+
| 4 |
+---+
(1 row)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_func_parse_json TEST_ID: A041 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT count(*) c
FROM
  (SELECT ALL parse_json(to_json_string(c1))
   FROM test_json_cols);
+---+
| c |
+---+
| 4 |
+---+
(1 row)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_func_parse_json TEST_ID: A042 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT count(mycol) c
FROM
  (SELECT parse_json(to_json_string(c1)) mycol
   FROM test_json_cols);
+---+
| c |
+---+
| 4 |
+---+
(1 row)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_func_parse_json TEST_ID: A043 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT count(*) c
FROM
  (SELECT DISTINCT parse_json(to_json_string(c1)) c
   FROM test_json_cols);
+---+
| c |
+---+
| 2 |
+---+
(1 row)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_func_parse_json TEST_ID: A044 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT count(*) c
FROM
  (SELECT parse_json(to_json_string(c1)) mycol
   FROM test_json_cols)
GROUP BY mycol;
+---+
| c |
+---+
| 2 |
| 2 |
+---+
(2 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_func_parse_json TEST_ID: A045 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT count(*) c
FROM
  (SELECT c1,
          parse_json(to_json_string(c1)) mycol
   FROM test_json_cols)
GROUP BY mycol
HAVING mycol IS NOT NULL;
+---+
| c |
+---+
| 2 |
| 2 |
+---+
(2 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_func_parse_json TEST_ID: A046 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT count(*) c
FROM test_json_cols
WHERE parse_json(to_json_string(c1)) = parse_json(to_json_string(c1));
+---+
| c |
+---+
| 4 |
+---+
(1 row)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_func_parse_json TEST_ID: A047 TYPE: NEGATIVE TEST
#-------------------------------------------------------------------------
SELECT count(*) c
FROM test_json_cols t1
INNER JOIN test_json_cols t2 ON parse_json(to_json_string(t1.c1))=parse_json(to_json_string(t2.c1));
Cannot join
!error

#-------------------------------------------------------------------------
# TESTCASE: test_func_parse_json TEST_ID: A048 TYPE: NEGATIVE TEST
#-------------------------------------------------------------------------
SELECT count(*) c
FROM test_json_cols t1
LEFT JOIN test_json_cols t2 ON parse_json(to_json_string(t1.c1))=parse_json(to_json_string(t2.c1));
Cannot join
!error

#-------------------------------------------------------------------------
# TESTCASE: test_func_parse_json TEST_ID: A049 TYPE: NEGATIVE TEST
#-------------------------------------------------------------------------
SELECT count(*) c
FROM test_json_cols t1,
     test_json_cols t2
WHERE parse_json(to_json_string(t1.c1))=parse_json(to_json_string(t2.c1));
Cannot join
!error

#-------------------------------------------------------------------------
# TESTCASE: test_func_parse_json TEST_ID: A050 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT parse_json('{"a": "A", "b": 123, "c": true, "d": null}') c
FROM test_json_cols
ORDER BY __time;
+-------------------------------------+
| c                                   |
+-------------------------------------+
| {"a":"A","b":123,"c":true,"d":null} |
| {"a":"A","b":123,"c":true,"d":null} |
| {"a":"A","b":123,"c":true,"d":null} |
| {"a":"A","b":123,"c":true,"d":null} |
+-------------------------------------+
(4 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_func_parse_json TEST_ID: A051 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT parse_json('{"a": "A", "b": 123, "c": true, "d": null}') c
FROM test_json_cols
LIMIT 1;
+-------------------------------------+
| c                                   |
+-------------------------------------+
| {"a":"A","b":123,"c":true,"d":null} |
+-------------------------------------+
(1 row)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_func_parse_json TEST_ID: A052 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT parse_json('{"a": "A", "b": 123, "c": true, "d": null}') c
FROM test_json_cols
OFFSET 1;
+-------------------------------------+
| c                                   |
+-------------------------------------+
| {"a":"A","b":123,"c":true,"d":null} |
| {"a":"A","b":123,"c":true,"d":null} |
| {"a":"A","b":123,"c":true,"d":null} |
+-------------------------------------+
(3 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_func_parse_json TEST_ID: A053 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT parse_json('{"a": "A", "b": 123, "c": true, "d": null}') c
FROM test_json_cols
UNION ALL
SELECT parse_json('{"a": "A", "b": 123, "c": true, "d": null}') c
FROM test_json_cols;
+-------------------------------------+
| c                                   |
+-------------------------------------+
| {"a":"A","b":123,"c":true,"d":null} |
| {"a":"A","b":123,"c":true,"d":null} |
| {"a":"A","b":123,"c":true,"d":null} |
| {"a":"A","b":123,"c":true,"d":null} |
| {"a":"A","b":123,"c":true,"d":null} |
| {"a":"A","b":123,"c":true,"d":null} |
| {"a":"A","b":123,"c":true,"d":null} |
| {"a":"A","b":123,"c":true,"d":null} |
+-------------------------------------+
(8 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_func_parse_json TEST_ID: A054 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------

SELECT parse_json(to_json_string(c1))
FROM test_json_cols;

||

| {"a_str":"A","a_num_int":1,"a_num_float":0.1,"a_bool":true,"a_null":null,"a_empty_obj":{},"a_empty_array":[],"a_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"a_empty_array_nested":[{},[],null],"a_obj":{"a_str":"A","a_num_int":1,"a_num_float":0.1,"a_bool":true,"a_null":null,"a_empty_obj":{},"a_empty_array":[],"a_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"a_empty_array_nested":[{},[],null],"a_obj":{"a_str":"A","a_num_int":1,"a_num_float":0.1,"a_bool":true,"a_null":null,"a_empty_obj":{},"a_empty_array":[],"a_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"a_empty_array_nested":[{},[],null]},"a_array":[{"a_str":"A","a_num_int":1,"a_num_float":0.1,"a_bool":true,"a_null":null,"a_empty_obj":{},"a_empty_array":[],"a_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"a_empty_array_nested":[{},[],null]},{"a_str":"A","a_num_int":1,"a_num_float":0.1,"a_bool":true,"a_null":null,"a_empty_obj":{},"a_empty_array":[],"a_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"a_empty_array_nested":[{},[],null]}]},"a_array":[{"a_str":"A","a_num_int":1,"a_num_float":0.1,"a_bool":true,"a_null":null,"a_empty_obj":{},"a_empty_array":[],"a_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"a_empty_array_nested":[{},[],null],"a_obj":{"a_str":"A","a_num_int":1,"a_num_float":0.1,"a_bool":true,"a_null":null,"a_empty_obj":{},"a_empty_array":[],"a_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"a_empty_array_nested":[{},[],null]},"a_array":[{"a_str":"A","a_num_int":1,"a_num_float":0.1,"a_bool":true,"a_null":null,"a_empty_obj":{},"a_empty_array":[],"a_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"a_empty_array_nested":[{},[],null]},{"a_str":"A","a_num_int":1,"a_num_float":0.1,"a_bool":true,"a_null":null,"a_empty_obj":{},"a_empty_array":[],"a_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"a_empty_array_nested":[{},[],null]}]},{"a_str":"A","a_num_int":1,"a_num_float":0.1,"a_bool":true,"a_null":null,"a_empty_obj":{},"a_empty_array":[],"a_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"a_empty_array_nested":[{},[],null],"a_obj":{"a_str":"A","a_num_int":1,"a_num_float":0.1,"a_bool":true,"a_null":null,"a_empty_obj":{},"a_empty_array":[],"a_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"a_empty_array_nested":[{},[],null]},"a_array":[{"a_str":"A","a_num_int":1,"a_num_float":0.1,"a_bool":true,"a_null":null,"a_empty_obj":{},"a_empty_array":[],"a_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"a_empty_array_nested":[{},[],null]},{"a_str":"A","a_num_int":1,"a_num_float":0.1,"a_bool":true,"a_null":null,"a_empty_obj":{},"a_empty_array":[],"a_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"a_empty_array_nested":[{},[],null]}]}]} |
| {"a_str":"A","a_num_int":1,"a_num_float":0.1,"a_bool":true,"a_null":null,"a_empty_obj":{},"a_empty_array":[],"a_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"a_empty_array_nested":[{},[],null],"a_obj":{"a_str":"A","a_num_int":1,"a_num_float":0.1,"a_bool":true,"a_null":null,"a_empty_obj":{},"a_empty_array":[],"a_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"a_empty_array_nested":[{},[],null],"a_obj":{"a_str":"A","a_num_int":1,"a_num_float":0.1,"a_bool":true,"a_null":null,"a_empty_obj":{},"a_empty_array":[],"a_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"a_empty_array_nested":[{},[],null]},"a_array":[{"a_str":"A","a_num_int":1,"a_num_float":0.1,"a_bool":true,"a_null":null,"a_empty_obj":{},"a_empty_array":[],"a_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"a_empty_array_nested":[{},[],null]},{"a_str":"A","a_num_int":1,"a_num_float":0.1,"a_bool":true,"a_null":null,"a_empty_obj":{},"a_empty_array":[],"a_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"a_empty_array_nested":[{},[],null]}]},"a_array":[{"a_str":"A","a_num_int":1,"a_num_float":0.1,"a_bool":true,"a_null":null,"a_empty_obj":{},"a_empty_array":[],"a_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"a_empty_array_nested":[{},[],null],"a_obj":{"a_str":"A","a_num_int":1,"a_num_float":0.1,"a_bool":true,"a_null":null,"a_empty_obj":{},"a_empty_array":[],"a_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"a_empty_array_nested":[{},[],null]},"a_array":[{"a_str":"A","a_num_int":1,"a_num_float":0.1,"a_bool":true,"a_null":null,"a_empty_obj":{},"a_empty_array":[],"a_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"a_empty_array_nested":[{},[],null]},{"a_str":"A","a_num_int":1,"a_num_float":0.1,"a_bool":true,"a_null":null,"a_empty_obj":{},"a_empty_array":[],"a_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"a_empty_array_nested":[{},[],null]}]},{"a_str":"A","a_num_int":1,"a_num_float":0.1,"a_bool":true,"a_null":null,"a_empty_obj":{},"a_empty_array":[],"a_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"a_empty_array_nested":[{},[],null],"a_obj":{"a_str":"A","a_num_int":1,"a_num_float":0.1,"a_bool":true,"a_null":null,"a_empty_obj":{},"a_empty_array":[],"a_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"a_empty_array_nested":[{},[],null]},"a_array":[{"a_str":"A","a_num_int":1,"a_num_float":0.1,"a_bool":true,"a_null":null,"a_empty_obj":{},"a_empty_array":[],"a_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"a_empty_array_nested":[{},[],null]},{"a_str":"A","a_num_int":1,"a_num_float":0.1,"a_bool":true,"a_null":null,"a_empty_obj":{},"a_empty_array":[],"a_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"a_empty_array_nested":[{},[],null]}]}]} |
| {"b_str":"A","b_num_int":1,"b_num_float":0.1,"b_bool":true,"b_null":null,"b_empty_obj":{},"b_empty_array":[],"b_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"b_empty_array_nested":[{},[],null],"b_obj":{"b_str":"A","b_num_int":1,"b_num_float":0.1,"b_bool":true,"b_null":null,"b_empty_obj":{},"b_empty_array":[],"b_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"b_empty_array_nested":[{},[],null],"b_obj":{"b_str":"A","b_num_int":1,"b_num_float":0.1,"b_bool":true,"b_null":null,"b_empty_obj":{},"b_empty_array":[],"b_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"b_empty_array_nested":[{},[],null]},"b_array":[{"b_str":"A","b_num_int":1,"b_num_float":0.1,"b_bool":true,"b_null":null,"b_empty_obj":{},"b_empty_array":[],"b_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"b_empty_array_nested":[{},[],null]},{"b_str":"A","b_num_int":1,"b_num_float":0.1,"b_bool":true,"b_null":null,"b_empty_obj":{},"b_empty_array":[],"b_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"b_empty_array_nested":[{},[],null]}]},"b_array":[{"b_str":"A","b_num_int":1,"b_num_float":0.1,"b_bool":true,"b_null":null,"b_empty_obj":{},"b_empty_array":[],"b_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"b_empty_array_nested":[{},[],null],"b_obj":{"b_str":"A","b_num_int":1,"b_num_float":0.1,"b_bool":true,"b_null":null,"b_empty_obj":{},"b_empty_array":[],"b_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"b_empty_array_nested":[{},[],null]},"b_array":[{"b_str":"A","b_num_int":1,"b_num_float":0.1,"b_bool":true,"b_null":null,"b_empty_obj":{},"b_empty_array":[],"b_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"b_empty_array_nested":[{},[],null]},{"b_str":"A","b_num_int":1,"b_num_float":0.1,"b_bool":true,"b_null":null,"b_empty_obj":{},"b_empty_array":[],"b_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"b_empty_array_nested":[{},[],null]}]},{"b_str":"A","b_num_int":1,"b_num_float":0.1,"b_bool":true,"b_null":null,"b_empty_obj":{},"b_empty_array":[],"b_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"b_empty_array_nested":[{},[],null],"b_obj":{"b_str":"A","b_num_int":1,"b_num_float":0.1,"b_bool":true,"b_null":null,"b_empty_obj":{},"b_empty_array":[],"b_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"b_empty_array_nested":[{},[],null]},"b_array":[{"b_str":"A","b_num_int":1,"b_num_float":0.1,"b_bool":true,"b_null":null,"b_empty_obj":{},"b_empty_array":[],"b_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"b_empty_array_nested":[{},[],null]},{"b_str":"A","b_num_int":1,"b_num_float":0.1,"b_bool":true,"b_null":null,"b_empty_obj":{},"b_empty_array":[],"b_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"b_empty_array_nested":[{},[],null]}]}]} |
| {"b_str":"A","b_num_int":1,"b_num_float":0.1,"b_bool":true,"b_null":null,"b_empty_obj":{},"b_empty_array":[],"b_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"b_empty_array_nested":[{},[],null],"b_obj":{"b_str":"A","b_num_int":1,"b_num_float":0.1,"b_bool":true,"b_null":null,"b_empty_obj":{},"b_empty_array":[],"b_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"b_empty_array_nested":[{},[],null],"b_obj":{"b_str":"A","b_num_int":1,"b_num_float":0.1,"b_bool":true,"b_null":null,"b_empty_obj":{},"b_empty_array":[],"b_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"b_empty_array_nested":[{},[],null]},"b_array":[{"b_str":"A","b_num_int":1,"b_num_float":0.1,"b_bool":true,"b_null":null,"b_empty_obj":{},"b_empty_array":[],"b_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"b_empty_array_nested":[{},[],null]},{"b_str":"A","b_num_int":1,"b_num_float":0.1,"b_bool":true,"b_null":null,"b_empty_obj":{},"b_empty_array":[],"b_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"b_empty_array_nested":[{},[],null]}]},"b_array":[{"b_str":"A","b_num_int":1,"b_num_float":0.1,"b_bool":true,"b_null":null,"b_empty_obj":{},"b_empty_array":[],"b_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"b_empty_array_nested":[{},[],null],"b_obj":{"b_str":"A","b_num_int":1,"b_num_float":0.1,"b_bool":true,"b_null":null,"b_empty_obj":{},"b_empty_array":[],"b_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"b_empty_array_nested":[{},[],null]},"b_array":[{"b_str":"A","b_num_int":1,"b_num_float":0.1,"b_bool":true,"b_null":null,"b_empty_obj":{},"b_empty_array":[],"b_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"b_empty_array_nested":[{},[],null]},{"b_str":"A","b_num_int":1,"b_num_float":0.1,"b_bool":true,"b_null":null,"b_empty_obj":{},"b_empty_array":[],"b_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"b_empty_array_nested":[{},[],null]}]},{"b_str":"A","b_num_int":1,"b_num_float":0.1,"b_bool":true,"b_null":null,"b_empty_obj":{},"b_empty_array":[],"b_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"b_empty_array_nested":[{},[],null],"b_obj":{"b_str":"A","b_num_int":1,"b_num_float":0.1,"b_bool":true,"b_null":null,"b_empty_obj":{},"b_empty_array":[],"b_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"b_empty_array_nested":[{},[],null]},"b_array":[{"b_str":"A","b_num_int":1,"b_num_float":0.1,"b_bool":true,"b_null":null,"b_empty_obj":{},"b_empty_array":[],"b_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"b_empty_array_nested":[{},[],null]},{"b_str":"A","b_num_int":1,"b_num_float":0.1,"b_bool":true,"b_null":null,"b_empty_obj":{},"b_empty_array":[],"b_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"b_empty_array_nested":[{},[],null]}]}]} |

(4 rows)

!ok

{
  "queryType" : "scan",
  "dataSource" : {
    "type" : "table",
    "name" : "test_json_cols"
  },
  "intervals" : {
    "type" : "intervals",
    "intervals" : [ "-146136543-09-08T08:23:32.096Z/146140482-04-24T15:36:27.903Z" ]
  },
  "virtualColumns" : [ {
    "type" : "expression",
    "name" : "v0",
    "expression" : "parse_json(to_json_string(\"c1\"))",
    "outputType" : "COMPLEX<json>"
  } ],
  "resultFormat" : "compactedList",
  "columns" : [ "v0" ],
  "columnTypes" : [ "COMPLEX<json>" ],
  "granularity" : {
    "type" : "all"
  },
  "legacy" : false
}
!nativePlan

#-------------------------------------------------------------------------
# TESTCASE: test_func_try_parse_json TEST_ID: A001 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT try_parse_json('1234') c
FROM test_json_cols;
+------+
| c    |
+------+
| 1234 |
| 1234 |
| 1234 |
| 1234 |
+------+
(4 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_func_try_parse_json TEST_ID: A002 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT try_parse_json('"日本"') c
FROM test_json_cols;
+------+
| c    |
+------+
| "日本" |
| "日本" |
| "日本" |
| "日本" |
+------+
(4 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_func_try_parse_json TEST_ID: A003 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT try_parse_json('"abc"') c
FROM test_json_cols;
+-------+
| c     |
+-------+
| "abc" |
| "abc" |
| "abc" |
| "abc" |
+-------+
(4 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_func_try_parse_json TEST_ID: A004 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT try_parse_json('"'||'a'||'b'||'c'||'"') c
FROM test_json_cols;
+-------+
| c     |
+-------+
| "abc" |
| "abc" |
| "abc" |
| "abc" |
+-------+
(4 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_func_try_parse_json TEST_ID: A005 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT try_parse_json('"This is My Key"') c
FROM test_json_cols;
+------------------+
| c                |
+------------------+
| "This is My Key" |
| "This is My Key" |
| "This is My Key" |
| "This is My Key" |
+------------------+
(4 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_func_try_parse_json TEST_ID: A006 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT json_query(try_parse_json('"AbCd"'), '$') c
FROM test_json_cols;
+--------+
| c      |
+--------+
| "AbCd" |
| "AbCd" |
| "AbCd" |
| "AbCd" |
+--------+
(4 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_func_try_parse_json TEST_ID: A007 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT try_parse_json(json_value(s_str, '$')) c
FROM test_json_cols;
+---+
| c |
+---+
|   |
|   |
|   |
|   |
+---+
(4 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_func_try_parse_json TEST_ID: A008 TYPE: NEGATIVE TEST
#-------------------------------------------------------------------------
SELECT try_parse_json(1234) c
FROM test_json_cols;
Cannot apply
!error

#-------------------------------------------------------------------------
# TESTCASE: test_func_try_parse_json TEST_ID: A009 TYPE: NEGATIVE TEST
#-------------------------------------------------------------------------
SELECT try_parse_json(1+1) c
FROM test_json_cols;
Cannot apply
!error

#-------------------------------------------------------------------------
# TESTCASE: test_func_try_parse_json TEST_ID: A010 TYPE: NEGATIVE TEST
#-------------------------------------------------------------------------
SELECT json_query(try_parse_json(1234), '$') c
FROM test_json_cols;
Cannot apply
!error

#-------------------------------------------------------------------------
# TESTCASE: test_func_try_parse_json TEST_ID: A011 TYPE: NEGATIVE TEST
#-------------------------------------------------------------------------
SELECT try_parse_json(json_value(s_num_int, '$' RETURNING bigint)) c
FROM test_json_cols;
Cannot apply
!error

#-------------------------------------------------------------------------
# TESTCASE: test_func_try_parse_json TEST_ID: A012 TYPE: NEGATIVE TEST
#-------------------------------------------------------------------------
SELECT try_parse_json(0.1234) c
FROM test_json_cols;
Cannot apply
!error

#-------------------------------------------------------------------------
# TESTCASE: test_func_try_parse_json TEST_ID: A013 TYPE: NEGATIVE TEST
#-------------------------------------------------------------------------
SELECT try_parse_json(0.1+0.1) c
FROM test_json_cols;
Cannot apply
!error

#-------------------------------------------------------------------------
# TESTCASE: test_func_try_parse_json TEST_ID: A014 TYPE: NEGATIVE TEST
#-------------------------------------------------------------------------
SELECT json_query(try_parse_json(0.1234), '$') c
FROM test_json_cols;
Cannot apply
!error

#-------------------------------------------------------------------------
# TESTCASE: test_func_try_parse_json TEST_ID: A015 TYPE: NEGATIVE TEST
#-------------------------------------------------------------------------
SELECT try_parse_json(json_value(s_num_float, '$' RETURNING DOUBLE)) c
FROM test_json_cols;
Cannot apply
!error

#-------------------------------------------------------------------------
# TESTCASE: test_func_try_parse_json TEST_ID: A016 TYPE: NEGATIVE TEST
#-------------------------------------------------------------------------
SELECT try_parse_json(TRUE) c
FROM test_json_cols;
Cannot apply
!error

#-------------------------------------------------------------------------
# TESTCASE: test_func_try_parse_json TEST_ID: A017 TYPE: NEGATIVE TEST
#-------------------------------------------------------------------------
SELECT try_parse_json((1=2)) c
FROM test_json_cols;
Cannot apply
!error

#-------------------------------------------------------------------------
# TESTCASE: test_func_try_parse_json TEST_ID: A018 TYPE: NEGATIVE TEST
#-------------------------------------------------------------------------
SELECT json_query(try_parse_json(TRUE), '$') c
FROM test_json_cols;
Cannot apply
!error

#-------------------------------------------------------------------------
# TESTCASE: test_func_try_parse_json TEST_ID: A019 TYPE: NEGATIVE TEST
#-------------------------------------------------------------------------
SELECT try_parse_json(json_value(s_bool, '$' RETURNING boolean)) c
FROM test_json_cols;
Cannot apply
!error

#-------------------------------------------------------------------------
# TESTCASE: test_func_try_parse_json TEST_ID: A020 TYPE: NEGATIVE TEST
#-------------------------------------------------------------------------
SELECT try_parse_json(NULL) c
FROM test_json_cols;
QueryInterruptedException
!error

#-------------------------------------------------------------------------
# TESTCASE: test_func_try_parse_json TEST_ID: A021 TYPE: NEGATIVE TEST
#-------------------------------------------------------------------------
SELECT json_query(try_parse_json(NULL), '$') c
FROM test_json_cols;
QueryInterruptedException
!error

#-------------------------------------------------------------------------
# TESTCASE: test_func_try_parse_json TEST_ID: A022 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT try_parse_json(json_value(s_null, '$')) c
FROM test_json_cols;
+---+
| c |
+---+
|   |
|   |
|   |
|   |
+---+
(4 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_func_try_parse_json TEST_ID: A023 TYPE: NEGATIVE TEST
#-------------------------------------------------------------------------
SELECT try_parse_json(__time) c
FROM test_json_cols;
Cannot apply
!error

#-------------------------------------------------------------------------
# TESTCASE: test_func_try_parse_json TEST_ID: A024 TYPE: NEGATIVE TEST
#-------------------------------------------------------------------------
SELECT try_parse_json(CURRENT_TIMESTAMP) c
FROM test_json_cols;
Cannot apply
!error

#-------------------------------------------------------------------------
# TESTCASE: test_func_try_parse_json TEST_ID: A025 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT try_parse_json('{}') c
FROM test_json_cols;
+----+
| c  |
+----+
| {} |
| {} |
| {} |
| {} |
+----+
(4 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_func_try_parse_json TEST_ID: A026 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT try_parse_json('{"a": "A", "b": {}}') c
FROM test_json_cols;
+------------------+
| c                |
+------------------+
| {"a":"A","b":{}} |
| {"a":"A","b":{}} |
| {"a":"A","b":{}} |
| {"a":"A","b":{}} |
+------------------+
(4 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_func_try_parse_json TEST_ID: A027 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT try_parse_json('[]') c
FROM test_json_cols;
+----+
| c  |
+----+
| [] |
| [] |
| [] |
| [] |
+----+
(4 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_func_try_parse_json TEST_ID: A028 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT try_parse_json('{"a": "A", "b": []}') c
FROM test_json_cols;
+------------------+
| c                |
+------------------+
| {"a":"A","b":[]} |
| {"a":"A","b":[]} |
| {"a":"A","b":[]} |
| {"a":"A","b":[]} |
+------------------+
(4 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_func_try_parse_json TEST_ID: A029 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT try_parse_json('{"a": "A", "b": 1, "c": 0.1, "d": true, "e": null}') c
FROM test_json_cols;
+-------------------------------------------+
| c                                         |
+-------------------------------------------+
| {"a":"A","b":1,"c":0.1,"d":true,"e":null} |
| {"a":"A","b":1,"c":0.1,"d":true,"e":null} |
| {"a":"A","b":1,"c":0.1,"d":true,"e":null} |
| {"a":"A","b":1,"c":0.1,"d":true,"e":null} |
+-------------------------------------------+
(4 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_func_try_parse_json TEST_ID: A030 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT try_parse_json('{"a": "A", "b": [{"c": 123}, {"d": null, "e": [1, 2, 3]}]}') c
FROM test_json_cols;
+--------------------------------------------------+
| c                                                |
+--------------------------------------------------+
| {"a":"A","b":[{"c":123},{"d":null,"e":[1,2,3]}]} |
| {"a":"A","b":[{"c":123},{"d":null,"e":[1,2,3]}]} |
| {"a":"A","b":[{"c":123},{"d":null,"e":[1,2,3]}]} |
| {"a":"A","b":[{"c":123},{"d":null,"e":[1,2,3]}]} |
+--------------------------------------------------+
(4 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_func_try_parse_json TEST_ID: A031 TYPE: NEGATIVE TEST
#-------------------------------------------------------------------------
SELECT try_parse_json(c1) c
FROM test_json_cols;
Cannot apply
!error

#-------------------------------------------------------------------------
# TESTCASE: test_func_try_parse_json TEST_ID: A032 TYPE: NEGATIVE TEST
#-------------------------------------------------------------------------
SELECT try_parse_json(json_query(c1, '$.a_array[0].a_obj')) c
FROM test_json_cols;
Cannot apply
!error

#-------------------------------------------------------------------------
# TESTCASE: test_func_try_parse_json TEST_ID: A033 TYPE: NEGATIVE TEST
#-------------------------------------------------------------------------
SELECT try_parse_json('{'a': 123}') c
FROM test_json_cols;
QueryInterruptedException
!error

#-------------------------------------------------------------------------
# TESTCASE: test_func_try_parse_json TEST_ID: A034 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT try_parse_json('"a": 123') c
FROM test_json_cols;
+-----+
| c   |
+-----+
| "a" |
| "a" |
| "a" |
| "a" |
+-----+
(4 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_func_try_parse_json TEST_ID: A035 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT try_parse_json('{"a": 123; "b": 456}') c
FROM test_json_cols;
+---+
| c |
+---+
|   |
|   |
|   |
|   |
+---+
(4 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_func_try_parse_json TEST_ID: A036 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT try_parse_json('{"a": 123 456}') c
FROM test_json_cols;
+---+
| c |
+---+
|   |
|   |
|   |
|   |
+---+
(4 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_func_try_parse_json TEST_ID: A037 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT try_parse_json('{"a": "A", "b": ["c": {}, "d": {}]}') c
FROM test_json_cols;
+---+
| c |
+---+
|   |
|   |
|   |
|   |
+---+
(4 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_func_try_parse_json TEST_ID: A038 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT try_parse_json(to_json_string(c_empty_obj)) c
FROM test_json_cols;
+----+
| c  |
+----+
| {} |
| {} |
|    |
|    |
+----+
(4 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_func_try_parse_json TEST_ID: A039 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT try_parse_json(to_json_string(c_empty_array)) c
FROM test_json_cols;
+----+
| c  |
+----+
| [] |
| [] |
|    |
|    |
+----+
(4 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_func_try_parse_json TEST_ID: A040 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT try_parse_json(to_json_string(c_empty_obj_nested)) c
FROM test_json_cols;
+-----------------------------+
| c                           |
+-----------------------------+
| {"o1":{},"o2":[],"o3":null} |
| {"o1":{},"o2":[],"o3":null} |
|                             |
|                             |
+-----------------------------+
(4 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_func_try_parse_json TEST_ID: A041 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT try_parse_json(to_json_string(c_empty_array_nested)) c
FROM test_json_cols;
+--------------+
| c            |
+--------------+
| [{},[],null] |
| [{},[],null] |
|              |
|              |
+--------------+
(4 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_func_try_parse_json TEST_ID: A042 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT count(*) c
FROM test_json_cols
WHERE try_parse_json(to_json_string(c1)) IS NULL;
+---+
| c |
+---+
| 0 |
+---+
(1 row)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_func_try_parse_json TEST_ID: A043 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT count(*) c
FROM test_json_cols
WHERE try_parse_json(to_json_string(c1)) IS NOT NULL;
+---+
| c |
+---+
| 4 |
+---+
(1 row)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_func_try_parse_json TEST_ID: A044 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT count(*) c
FROM
  (SELECT try_parse_json(to_json_string(c1))
   FROM test_json_cols);
+---+
| c |
+---+
| 4 |
+---+
(1 row)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_func_try_parse_json TEST_ID: A045 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT count(*) c
FROM
  (SELECT ALL try_parse_json(to_json_string(c1))
   FROM test_json_cols);
+---+
| c |
+---+
| 4 |
+---+
(1 row)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_func_try_parse_json TEST_ID: A046 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT count(mycol) c
FROM
  (SELECT try_parse_json(to_json_string(c1)) mycol
   FROM test_json_cols);
+---+
| c |
+---+
| 4 |
+---+
(1 row)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_func_try_parse_json TEST_ID: A047 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT count(*) c
FROM
  (SELECT DISTINCT try_parse_json(to_json_string(c1)) c
   FROM test_json_cols);
+---+
| c |
+---+
| 2 |
+---+
(1 row)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_func_try_parse_json TEST_ID: A048 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT count(*) c
FROM
  (SELECT try_parse_json(to_json_string(c1)) mycol
   FROM test_json_cols)
GROUP BY mycol;
+---+
| c |
+---+
| 2 |
| 2 |
+---+
(2 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_func_try_parse_json TEST_ID: A049 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT count(*) c
FROM
  (SELECT c1,
          try_parse_json(to_json_string(c1)) mycol
   FROM test_json_cols)
GROUP BY mycol
HAVING mycol IS NOT NULL;
+---+
| c |
+---+
| 2 |
| 2 |
+---+
(2 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_func_try_parse_json TEST_ID: A050 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT count(*) c
FROM test_json_cols
WHERE try_parse_json(to_json_string(c1)) = try_parse_json(to_json_string(c1));
+---+
| c |
+---+
| 4 |
+---+
(1 row)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_func_try_parse_json TEST_ID: A051 TYPE: NEGATIVE TEST
#-------------------------------------------------------------------------
SELECT count(*) c
FROM test_json_cols t1
INNER JOIN test_json_cols t2 ON try_parse_json(to_json_string(t1.c1))=try_parse_json(to_json_string(t2.c1));
Cannot join
!error

#-------------------------------------------------------------------------
# TESTCASE: test_func_try_parse_json TEST_ID: A052 TYPE: NEGATIVE TEST
#-------------------------------------------------------------------------
SELECT count(*) c
FROM test_json_cols t1
LEFT JOIN test_json_cols t2 ON try_parse_json(to_json_string(t1.c1))=try_parse_json(to_json_string(t2.c1));
Cannot join
!error

#-------------------------------------------------------------------------
# TESTCASE: test_func_try_parse_json TEST_ID: A053 TYPE: NEGATIVE TEST
#-------------------------------------------------------------------------
SELECT count(*) c
FROM test_json_cols t1,
     test_json_cols t2
WHERE try_parse_json(to_json_string(t1.c1))=try_parse_json(to_json_string(t2.c1));
Cannot join
!error

#-------------------------------------------------------------------------
# TESTCASE: test_func_try_parse_json TEST_ID: A054 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT try_parse_json('{"a": "A", "b": 123, "c": true, "d": null}') c
FROM test_json_cols
ORDER BY __time;
+-------------------------------------+
| c                                   |
+-------------------------------------+
| {"a":"A","b":123,"c":true,"d":null} |
| {"a":"A","b":123,"c":true,"d":null} |
| {"a":"A","b":123,"c":true,"d":null} |
| {"a":"A","b":123,"c":true,"d":null} |
+-------------------------------------+
(4 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_func_try_parse_json TEST_ID: A055 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT try_parse_json('{"a": "A", "b": 123, "c": true, "d": null}') c
FROM test_json_cols
LIMIT 1;
+-------------------------------------+
| c                                   |
+-------------------------------------+
| {"a":"A","b":123,"c":true,"d":null} |
+-------------------------------------+
(1 row)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_func_try_parse_json TEST_ID: A056 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT try_parse_json('{"a": "A", "b": 123, "c": true, "d": null}') c
FROM test_json_cols
OFFSET 1;
+-------------------------------------+
| c                                   |
+-------------------------------------+
| {"a":"A","b":123,"c":true,"d":null} |
| {"a":"A","b":123,"c":true,"d":null} |
| {"a":"A","b":123,"c":true,"d":null} |
+-------------------------------------+
(3 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_func_try_parse_json TEST_ID: A057 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT try_parse_json('{"a": "A", "b": 123, "c": true, "d": null}') c
FROM test_json_cols
UNION ALL
SELECT parse_json('{"a": "A", "b": 123, "c": true, "d": null}') c
FROM test_json_cols;
+-------------------------------------+
| c                                   |
+-------------------------------------+
| {"a":"A","b":123,"c":true,"d":null} |
| {"a":"A","b":123,"c":true,"d":null} |
| {"a":"A","b":123,"c":true,"d":null} |
| {"a":"A","b":123,"c":true,"d":null} |
| {"a":"A","b":123,"c":true,"d":null} |
| {"a":"A","b":123,"c":true,"d":null} |
| {"a":"A","b":123,"c":true,"d":null} |
| {"a":"A","b":123,"c":true,"d":null} |
+-------------------------------------+
(8 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_func_try_parse_json TEST_ID: A058 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------

SELECT try_parse_json(to_json_string(c1))
FROM test_json_cols;

||

| {"a_str":"A","a_num_int":1,"a_num_float":0.1,"a_bool":true,"a_null":null,"a_empty_obj":{},"a_empty_array":[],"a_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"a_empty_array_nested":[{},[],null],"a_obj":{"a_str":"A","a_num_int":1,"a_num_float":0.1,"a_bool":true,"a_null":null,"a_empty_obj":{},"a_empty_array":[],"a_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"a_empty_array_nested":[{},[],null],"a_obj":{"a_str":"A","a_num_int":1,"a_num_float":0.1,"a_bool":true,"a_null":null,"a_empty_obj":{},"a_empty_array":[],"a_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"a_empty_array_nested":[{},[],null]},"a_array":[{"a_str":"A","a_num_int":1,"a_num_float":0.1,"a_bool":true,"a_null":null,"a_empty_obj":{},"a_empty_array":[],"a_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"a_empty_array_nested":[{},[],null]},{"a_str":"A","a_num_int":1,"a_num_float":0.1,"a_bool":true,"a_null":null,"a_empty_obj":{},"a_empty_array":[],"a_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"a_empty_array_nested":[{},[],null]}]},"a_array":[{"a_str":"A","a_num_int":1,"a_num_float":0.1,"a_bool":true,"a_null":null,"a_empty_obj":{},"a_empty_array":[],"a_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"a_empty_array_nested":[{},[],null],"a_obj":{"a_str":"A","a_num_int":1,"a_num_float":0.1,"a_bool":true,"a_null":null,"a_empty_obj":{},"a_empty_array":[],"a_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"a_empty_array_nested":[{},[],null]},"a_array":[{"a_str":"A","a_num_int":1,"a_num_float":0.1,"a_bool":true,"a_null":null,"a_empty_obj":{},"a_empty_array":[],"a_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"a_empty_array_nested":[{},[],null]},{"a_str":"A","a_num_int":1,"a_num_float":0.1,"a_bool":true,"a_null":null,"a_empty_obj":{},"a_empty_array":[],"a_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"a_empty_array_nested":[{},[],null]}]},{"a_str":"A","a_num_int":1,"a_num_float":0.1,"a_bool":true,"a_null":null,"a_empty_obj":{},"a_empty_array":[],"a_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"a_empty_array_nested":[{},[],null],"a_obj":{"a_str":"A","a_num_int":1,"a_num_float":0.1,"a_bool":true,"a_null":null,"a_empty_obj":{},"a_empty_array":[],"a_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"a_empty_array_nested":[{},[],null]},"a_array":[{"a_str":"A","a_num_int":1,"a_num_float":0.1,"a_bool":true,"a_null":null,"a_empty_obj":{},"a_empty_array":[],"a_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"a_empty_array_nested":[{},[],null]},{"a_str":"A","a_num_int":1,"a_num_float":0.1,"a_bool":true,"a_null":null,"a_empty_obj":{},"a_empty_array":[],"a_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"a_empty_array_nested":[{},[],null]}]}]} |
| {"a_str":"A","a_num_int":1,"a_num_float":0.1,"a_bool":true,"a_null":null,"a_empty_obj":{},"a_empty_array":[],"a_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"a_empty_array_nested":[{},[],null],"a_obj":{"a_str":"A","a_num_int":1,"a_num_float":0.1,"a_bool":true,"a_null":null,"a_empty_obj":{},"a_empty_array":[],"a_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"a_empty_array_nested":[{},[],null],"a_obj":{"a_str":"A","a_num_int":1,"a_num_float":0.1,"a_bool":true,"a_null":null,"a_empty_obj":{},"a_empty_array":[],"a_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"a_empty_array_nested":[{},[],null]},"a_array":[{"a_str":"A","a_num_int":1,"a_num_float":0.1,"a_bool":true,"a_null":null,"a_empty_obj":{},"a_empty_array":[],"a_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"a_empty_array_nested":[{},[],null]},{"a_str":"A","a_num_int":1,"a_num_float":0.1,"a_bool":true,"a_null":null,"a_empty_obj":{},"a_empty_array":[],"a_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"a_empty_array_nested":[{},[],null]}]},"a_array":[{"a_str":"A","a_num_int":1,"a_num_float":0.1,"a_bool":true,"a_null":null,"a_empty_obj":{},"a_empty_array":[],"a_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"a_empty_array_nested":[{},[],null],"a_obj":{"a_str":"A","a_num_int":1,"a_num_float":0.1,"a_bool":true,"a_null":null,"a_empty_obj":{},"a_empty_array":[],"a_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"a_empty_array_nested":[{},[],null]},"a_array":[{"a_str":"A","a_num_int":1,"a_num_float":0.1,"a_bool":true,"a_null":null,"a_empty_obj":{},"a_empty_array":[],"a_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"a_empty_array_nested":[{},[],null]},{"a_str":"A","a_num_int":1,"a_num_float":0.1,"a_bool":true,"a_null":null,"a_empty_obj":{},"a_empty_array":[],"a_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"a_empty_array_nested":[{},[],null]}]},{"a_str":"A","a_num_int":1,"a_num_float":0.1,"a_bool":true,"a_null":null,"a_empty_obj":{},"a_empty_array":[],"a_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"a_empty_array_nested":[{},[],null],"a_obj":{"a_str":"A","a_num_int":1,"a_num_float":0.1,"a_bool":true,"a_null":null,"a_empty_obj":{},"a_empty_array":[],"a_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"a_empty_array_nested":[{},[],null]},"a_array":[{"a_str":"A","a_num_int":1,"a_num_float":0.1,"a_bool":true,"a_null":null,"a_empty_obj":{},"a_empty_array":[],"a_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"a_empty_array_nested":[{},[],null]},{"a_str":"A","a_num_int":1,"a_num_float":0.1,"a_bool":true,"a_null":null,"a_empty_obj":{},"a_empty_array":[],"a_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"a_empty_array_nested":[{},[],null]}]}]} |
| {"b_str":"A","b_num_int":1,"b_num_float":0.1,"b_bool":true,"b_null":null,"b_empty_obj":{},"b_empty_array":[],"b_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"b_empty_array_nested":[{},[],null],"b_obj":{"b_str":"A","b_num_int":1,"b_num_float":0.1,"b_bool":true,"b_null":null,"b_empty_obj":{},"b_empty_array":[],"b_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"b_empty_array_nested":[{},[],null],"b_obj":{"b_str":"A","b_num_int":1,"b_num_float":0.1,"b_bool":true,"b_null":null,"b_empty_obj":{},"b_empty_array":[],"b_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"b_empty_array_nested":[{},[],null]},"b_array":[{"b_str":"A","b_num_int":1,"b_num_float":0.1,"b_bool":true,"b_null":null,"b_empty_obj":{},"b_empty_array":[],"b_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"b_empty_array_nested":[{},[],null]},{"b_str":"A","b_num_int":1,"b_num_float":0.1,"b_bool":true,"b_null":null,"b_empty_obj":{},"b_empty_array":[],"b_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"b_empty_array_nested":[{},[],null]}]},"b_array":[{"b_str":"A","b_num_int":1,"b_num_float":0.1,"b_bool":true,"b_null":null,"b_empty_obj":{},"b_empty_array":[],"b_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"b_empty_array_nested":[{},[],null],"b_obj":{"b_str":"A","b_num_int":1,"b_num_float":0.1,"b_bool":true,"b_null":null,"b_empty_obj":{},"b_empty_array":[],"b_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"b_empty_array_nested":[{},[],null]},"b_array":[{"b_str":"A","b_num_int":1,"b_num_float":0.1,"b_bool":true,"b_null":null,"b_empty_obj":{},"b_empty_array":[],"b_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"b_empty_array_nested":[{},[],null]},{"b_str":"A","b_num_int":1,"b_num_float":0.1,"b_bool":true,"b_null":null,"b_empty_obj":{},"b_empty_array":[],"b_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"b_empty_array_nested":[{},[],null]}]},{"b_str":"A","b_num_int":1,"b_num_float":0.1,"b_bool":true,"b_null":null,"b_empty_obj":{},"b_empty_array":[],"b_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"b_empty_array_nested":[{},[],null],"b_obj":{"b_str":"A","b_num_int":1,"b_num_float":0.1,"b_bool":true,"b_null":null,"b_empty_obj":{},"b_empty_array":[],"b_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"b_empty_array_nested":[{},[],null]},"b_array":[{"b_str":"A","b_num_int":1,"b_num_float":0.1,"b_bool":true,"b_null":null,"b_empty_obj":{},"b_empty_array":[],"b_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"b_empty_array_nested":[{},[],null]},{"b_str":"A","b_num_int":1,"b_num_float":0.1,"b_bool":true,"b_null":null,"b_empty_obj":{},"b_empty_array":[],"b_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"b_empty_array_nested":[{},[],null]}]}]} |
| {"b_str":"A","b_num_int":1,"b_num_float":0.1,"b_bool":true,"b_null":null,"b_empty_obj":{},"b_empty_array":[],"b_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"b_empty_array_nested":[{},[],null],"b_obj":{"b_str":"A","b_num_int":1,"b_num_float":0.1,"b_bool":true,"b_null":null,"b_empty_obj":{},"b_empty_array":[],"b_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"b_empty_array_nested":[{},[],null],"b_obj":{"b_str":"A","b_num_int":1,"b_num_float":0.1,"b_bool":true,"b_null":null,"b_empty_obj":{},"b_empty_array":[],"b_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"b_empty_array_nested":[{},[],null]},"b_array":[{"b_str":"A","b_num_int":1,"b_num_float":0.1,"b_bool":true,"b_null":null,"b_empty_obj":{},"b_empty_array":[],"b_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"b_empty_array_nested":[{},[],null]},{"b_str":"A","b_num_int":1,"b_num_float":0.1,"b_bool":true,"b_null":null,"b_empty_obj":{},"b_empty_array":[],"b_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"b_empty_array_nested":[{},[],null]}]},"b_array":[{"b_str":"A","b_num_int":1,"b_num_float":0.1,"b_bool":true,"b_null":null,"b_empty_obj":{},"b_empty_array":[],"b_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"b_empty_array_nested":[{},[],null],"b_obj":{"b_str":"A","b_num_int":1,"b_num_float":0.1,"b_bool":true,"b_null":null,"b_empty_obj":{},"b_empty_array":[],"b_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"b_empty_array_nested":[{},[],null]},"b_array":[{"b_str":"A","b_num_int":1,"b_num_float":0.1,"b_bool":true,"b_null":null,"b_empty_obj":{},"b_empty_array":[],"b_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"b_empty_array_nested":[{},[],null]},{"b_str":"A","b_num_int":1,"b_num_float":0.1,"b_bool":true,"b_null":null,"b_empty_obj":{},"b_empty_array":[],"b_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"b_empty_array_nested":[{},[],null]}]},{"b_str":"A","b_num_int":1,"b_num_float":0.1,"b_bool":true,"b_null":null,"b_empty_obj":{},"b_empty_array":[],"b_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"b_empty_array_nested":[{},[],null],"b_obj":{"b_str":"A","b_num_int":1,"b_num_float":0.1,"b_bool":true,"b_null":null,"b_empty_obj":{},"b_empty_array":[],"b_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"b_empty_array_nested":[{},[],null]},"b_array":[{"b_str":"A","b_num_int":1,"b_num_float":0.1,"b_bool":true,"b_null":null,"b_empty_obj":{},"b_empty_array":[],"b_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"b_empty_array_nested":[{},[],null]},{"b_str":"A","b_num_int":1,"b_num_float":0.1,"b_bool":true,"b_null":null,"b_empty_obj":{},"b_empty_array":[],"b_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"b_empty_array_nested":[{},[],null]}]}]} |

(4 rows)

!ok

{
  "queryType" : "scan",
  "dataSource" : {
    "type" : "table",
    "name" : "test_json_cols"
  },
  "intervals" : {
    "type" : "intervals",
    "intervals" : [ "-146136543-09-08T08:23:32.096Z/146140482-04-24T15:36:27.903Z" ]
  },
  "virtualColumns" : [ {
    "type" : "expression",
    "name" : "v0",
    "expression" : "try_parse_json(to_json_string(\"c1\"))",
    "outputType" : "COMPLEX<json>"
  } ],
  "resultFormat" : "compactedList",
  "columns" : [ "v0" ],
  "columnTypes" : [ "COMPLEX<json>" ],
  "granularity" : {
    "type" : "all"
  },
  "legacy" : false
}
!nativePlan

#-------------------------------------------------------------------------
# TESTCASE: test_func_to_json_string TEST_ID: A001 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT to_json_string('1234') c
FROM test_json_cols;
+--------+
| c      |
+--------+
| "1234" |
| "1234" |
| "1234" |
| "1234" |
+--------+
(4 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_func_to_json_string TEST_ID: A002 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT to_json_string('日本') c
FROM test_json_cols;
+------+
| c    |
+------+
| "日本" |
| "日本" |
| "日本" |
| "日本" |
+------+
(4 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_func_to_json_string TEST_ID: A003 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT to_json_string('abc') c
FROM test_json_cols;
+-------+
| c     |
+-------+
| "abc" |
| "abc" |
| "abc" |
| "abc" |
+-------+
(4 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_func_to_json_string TEST_ID: A004 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT to_json_string('a'||'b'||'c') c
FROM test_json_cols;
+-------+
| c     |
+-------+
| "abc" |
| "abc" |
| "abc" |
| "abc" |
+-------+
(4 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_func_to_json_string TEST_ID: A005 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT to_json_string('"This is My Key"') c
FROM test_json_cols;
+----------------------+
| c                    |
+----------------------+
| "\"This is My Key\"" |
| "\"This is My Key\"" |
| "\"This is My Key\"" |
| "\"This is My Key\"" |
+----------------------+
(4 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_func_to_json_string TEST_ID: A006 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT parse_json(to_json_string('AbCd')) c
FROM test_json_cols;
+--------+
| c      |
+--------+
| "AbCd" |
| "AbCd" |
| "AbCd" |
| "AbCd" |
+--------+
(4 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_func_to_json_string TEST_ID: A007 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT to_json_string(json_value(s_str, '$')) c
FROM test_json_cols;
+-----+
| c   |
+-----+
| "A" |
| "A" |
|     |
|     |
+-----+
(4 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_func_to_json_string TEST_ID: A008 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT to_json_string(1234) c
FROM test_json_cols;
+------+
| c    |
+------+
| 1234 |
| 1234 |
| 1234 |
| 1234 |
+------+
(4 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_func_to_json_string TEST_ID: A009 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT to_json_string(1+1) c
FROM test_json_cols;
+---+
| c |
+---+
| 2 |
| 2 |
| 2 |
| 2 |
+---+
(4 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_func_to_json_string TEST_ID: A010 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT parse_json(to_json_string(1234)) c
FROM test_json_cols;
+------+
| c    |
+------+
| 1234 |
| 1234 |
| 1234 |
| 1234 |
+------+
(4 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_func_to_json_string TEST_ID: A011 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT to_json_string(json_value(s_num_int, '$' RETURNING bigint)) c
FROM test_json_cols;
+---+
| c |
+---+
| 1 |
| 1 |
|   |
|   |
+---+
(4 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_func_to_json_string TEST_ID: A012 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT to_json_string(0.1234) c
FROM test_json_cols;
+--------+
| c      |
+--------+
| 0.1234 |
| 0.1234 |
| 0.1234 |
| 0.1234 |
+--------+
(4 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_func_to_json_string TEST_ID: A013 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT to_json_string(0.1+0.1) c
FROM test_json_cols;
+-----+
| c   |
+-----+
| 0.2 |
| 0.2 |
| 0.2 |
| 0.2 |
+-----+
(4 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_func_to_json_string TEST_ID: A014 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT parse_json(to_json_string(0.1234)) c
FROM test_json_cols;
+--------+
| c      |
+--------+
| 0.1234 |
| 0.1234 |
| 0.1234 |
| 0.1234 |
+--------+
(4 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_func_to_json_string TEST_ID: A015 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT to_json_string(json_value(s_num_float, '$' RETURNING DOUBLE)) c
FROM test_json_cols;
+-----+
| c   |
+-----+
| 0.1 |
| 0.1 |
|     |
|     |
+-----+
(4 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_func_to_json_string TEST_ID: A016 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT to_json_string(TRUE) c
FROM test_json_cols;
+---+
| c |
+---+
| 1 |
| 1 |
| 1 |
| 1 |
+---+
(4 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_func_to_json_string TEST_ID: A017 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT to_json_string((1=2)) c
FROM test_json_cols;
+---+
| c |
+---+
| 0 |
| 0 |
| 0 |
| 0 |
+---+
(4 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_func_to_json_string TEST_ID: A018 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT parse_json(to_json_string(TRUE)) c
FROM test_json_cols;
+---+
| c |
+---+
| 1 |
| 1 |
| 1 |
| 1 |
+---+
(4 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_func_to_json_string TEST_ID: A019 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT to_json_string(json_value(s_bool, '$' RETURNING boolean)) c
FROM test_json_cols;
+---+
| c |
+---+
| 1 |
| 1 |
|   |
|   |
+---+
(4 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_func_to_json_string TEST_ID: A020 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT to_json_string(NULL) c
FROM test_json_cols;
+---+
| c |
+---+
|   |
|   |
|   |
|   |
+---+
(4 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_func_to_json_string TEST_ID: A021 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT parse_json(to_json_string(NULL)) c
FROM test_json_cols;
+---+
| c |
+---+
|   |
|   |
|   |
|   |
+---+
(4 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_func_to_json_string TEST_ID: A022 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT to_json_string(json_value(s_null, '$')) c
FROM test_json_cols;
+---+
| c |
+---+
|   |
|   |
|   |
|   |
+---+
(4 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_func_to_json_string TEST_ID: A023 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT to_json_string(__time) c
FROM test_json_cols;
+---------------+
| c             |
+---------------+
| 1640995200000 |
| 1640995200000 |
| 1643673600000 |
| 1643673600000 |
+---------------+
(4 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_func_to_json_string TEST_ID: A024 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT count(*)
FROM
  (SELECT to_json_string(CURRENT_TIMESTAMP) c
   FROM test_json_cols);
+--------+
| EXPR$0 |
+--------+
|      4 |
+--------+
(1 row)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_func_to_json_string TEST_ID: A025 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT to_json_string('{}') c
FROM test_json_cols;
+------+
| c    |
+------+
| "{}" |
| "{}" |
| "{}" |
| "{}" |
+------+
(4 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_func_to_json_string TEST_ID: A026 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT to_json_string('{"a": "A", "b": {}}') c
FROM test_json_cols;
+-----------------------------+
| c                           |
+-----------------------------+
| "{\"a\": \"A\", \"b\": {}}" |
| "{\"a\": \"A\", \"b\": {}}" |
| "{\"a\": \"A\", \"b\": {}}" |
| "{\"a\": \"A\", \"b\": {}}" |
+-----------------------------+
(4 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_func_to_json_string TEST_ID: A027 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT to_json_string('[]') c
FROM test_json_cols;
+------+
| c    |
+------+
| "[]" |
| "[]" |
| "[]" |
| "[]" |
+------+
(4 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_func_to_json_string TEST_ID: A028 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT to_json_string('{"a": "A", "b": []}') c
FROM test_json_cols;
+-----------------------------+
| c                           |
+-----------------------------+
| "{\"a\": \"A\", \"b\": []}" |
| "{\"a\": \"A\", \"b\": []}" |
| "{\"a\": \"A\", \"b\": []}" |
| "{\"a\": \"A\", \"b\": []}" |
+-----------------------------+
(4 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_func_to_json_string TEST_ID: A029 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT to_json_string('{"a": "A", "b": 1, "c": 0.1, "d": true, "e": null}') c
FROM test_json_cols;
+------------------------------------------------------------------+
| c                                                                |
+------------------------------------------------------------------+
| "{\"a\": \"A\", \"b\": 1, \"c\": 0.1, \"d\": true, \"e\": null}" |
| "{\"a\": \"A\", \"b\": 1, \"c\": 0.1, \"d\": true, \"e\": null}" |
| "{\"a\": \"A\", \"b\": 1, \"c\": 0.1, \"d\": true, \"e\": null}" |
| "{\"a\": \"A\", \"b\": 1, \"c\": 0.1, \"d\": true, \"e\": null}" |
+------------------------------------------------------------------+
(4 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_func_to_json_string TEST_ID: A030 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT to_json_string('{"a": "A", "b": [{"c": 123}, {"d": null, "e": [1, 2, 3]}]}') c
FROM test_json_cols;
+--------------------------------------------------------------------------+
| c                                                                        |
+--------------------------------------------------------------------------+
| "{\"a\": \"A\", \"b\": [{\"c\": 123}, {\"d\": null, \"e\": [1, 2, 3]}]}" |
| "{\"a\": \"A\", \"b\": [{\"c\": 123}, {\"d\": null, \"e\": [1, 2, 3]}]}" |
| "{\"a\": \"A\", \"b\": [{\"c\": 123}, {\"d\": null, \"e\": [1, 2, 3]}]}" |
| "{\"a\": \"A\", \"b\": [{\"c\": 123}, {\"d\": null, \"e\": [1, 2, 3]}]}" |
+--------------------------------------------------------------------------+
(4 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_func_to_json_string TEST_ID: A031 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT to_json_string(c1) c
FROM test_json_cols;

| c|

| {"a_str":"A","a_num_int":1,"a_num_float":0.1,"a_bool":true,"a_null":null,"a_empty_obj":{},"a_empty_array":[],"a_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"a_empty_array_nested":[{},[],null],"a_obj":{"a_str":"A","a_num_int":1,"a_num_float":0.1,"a_bool":true,"a_null":null,"a_empty_obj":{},"a_empty_array":[],"a_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"a_empty_array_nested":[{},[],null],"a_obj":{"a_str":"A","a_num_int":1,"a_num_float":0.1,"a_bool":true,"a_null":null,"a_empty_obj":{},"a_empty_array":[],"a_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"a_empty_array_nested":[{},[],null]},"a_array":[{"a_str":"A","a_num_int":1,"a_num_float":0.1,"a_bool":true,"a_null":null,"a_empty_obj":{},"a_empty_array":[],"a_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"a_empty_array_nested":[{},[],null]},{"a_str":"A","a_num_int":1,"a_num_float":0.1,"a_bool":true,"a_null":null,"a_empty_obj":{},"a_empty_array":[],"a_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"a_empty_array_nested":[{},[],null]}]},"a_array":[{"a_str":"A","a_num_int":1,"a_num_float":0.1,"a_bool":true,"a_null":null,"a_empty_obj":{},"a_empty_array":[],"a_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"a_empty_array_nested":[{},[],null],"a_obj":{"a_str":"A","a_num_int":1,"a_num_float":0.1,"a_bool":true,"a_null":null,"a_empty_obj":{},"a_empty_array":[],"a_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"a_empty_array_nested":[{},[],null]},"a_array":[{"a_str":"A","a_num_int":1,"a_num_float":0.1,"a_bool":true,"a_null":null,"a_empty_obj":{},"a_empty_array":[],"a_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"a_empty_array_nested":[{},[],null]},{"a_str":"A","a_num_int":1,"a_num_float":0.1,"a_bool":true,"a_null":null,"a_empty_obj":{},"a_empty_array":[],"a_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"a_empty_array_nested":[{},[],null]}]},{"a_str":"A","a_num_int":1,"a_num_float":0.1,"a_bool":true,"a_null":null,"a_empty_obj":{},"a_empty_array":[],"a_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"a_empty_array_nested":[{},[],null],"a_obj":{"a_str":"A","a_num_int":1,"a_num_float":0.1,"a_bool":true,"a_null":null,"a_empty_obj":{},"a_empty_array":[],"a_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"a_empty_array_nested":[{},[],null]},"a_array":[{"a_str":"A","a_num_int":1,"a_num_float":0.1,"a_bool":true,"a_null":null,"a_empty_obj":{},"a_empty_array":[],"a_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"a_empty_array_nested":[{},[],null]},{"a_str":"A","a_num_int":1,"a_num_float":0.1,"a_bool":true,"a_null":null,"a_empty_obj":{},"a_empty_array":[],"a_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"a_empty_array_nested":[{},[],null]}]}]} |
| {"a_str":"A","a_num_int":1,"a_num_float":0.1,"a_bool":true,"a_null":null,"a_empty_obj":{},"a_empty_array":[],"a_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"a_empty_array_nested":[{},[],null],"a_obj":{"a_str":"A","a_num_int":1,"a_num_float":0.1,"a_bool":true,"a_null":null,"a_empty_obj":{},"a_empty_array":[],"a_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"a_empty_array_nested":[{},[],null],"a_obj":{"a_str":"A","a_num_int":1,"a_num_float":0.1,"a_bool":true,"a_null":null,"a_empty_obj":{},"a_empty_array":[],"a_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"a_empty_array_nested":[{},[],null]},"a_array":[{"a_str":"A","a_num_int":1,"a_num_float":0.1,"a_bool":true,"a_null":null,"a_empty_obj":{},"a_empty_array":[],"a_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"a_empty_array_nested":[{},[],null]},{"a_str":"A","a_num_int":1,"a_num_float":0.1,"a_bool":true,"a_null":null,"a_empty_obj":{},"a_empty_array":[],"a_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"a_empty_array_nested":[{},[],null]}]},"a_array":[{"a_str":"A","a_num_int":1,"a_num_float":0.1,"a_bool":true,"a_null":null,"a_empty_obj":{},"a_empty_array":[],"a_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"a_empty_array_nested":[{},[],null],"a_obj":{"a_str":"A","a_num_int":1,"a_num_float":0.1,"a_bool":true,"a_null":null,"a_empty_obj":{},"a_empty_array":[],"a_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"a_empty_array_nested":[{},[],null]},"a_array":[{"a_str":"A","a_num_int":1,"a_num_float":0.1,"a_bool":true,"a_null":null,"a_empty_obj":{},"a_empty_array":[],"a_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"a_empty_array_nested":[{},[],null]},{"a_str":"A","a_num_int":1,"a_num_float":0.1,"a_bool":true,"a_null":null,"a_empty_obj":{},"a_empty_array":[],"a_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"a_empty_array_nested":[{},[],null]}]},{"a_str":"A","a_num_int":1,"a_num_float":0.1,"a_bool":true,"a_null":null,"a_empty_obj":{},"a_empty_array":[],"a_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"a_empty_array_nested":[{},[],null],"a_obj":{"a_str":"A","a_num_int":1,"a_num_float":0.1,"a_bool":true,"a_null":null,"a_empty_obj":{},"a_empty_array":[],"a_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"a_empty_array_nested":[{},[],null]},"a_array":[{"a_str":"A","a_num_int":1,"a_num_float":0.1,"a_bool":true,"a_null":null,"a_empty_obj":{},"a_empty_array":[],"a_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"a_empty_array_nested":[{},[],null]},{"a_str":"A","a_num_int":1,"a_num_float":0.1,"a_bool":true,"a_null":null,"a_empty_obj":{},"a_empty_array":[],"a_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"a_empty_array_nested":[{},[],null]}]}]} |
| {"b_str":"A","b_num_int":1,"b_num_float":0.1,"b_bool":true,"b_null":null,"b_empty_obj":{},"b_empty_array":[],"b_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"b_empty_array_nested":[{},[],null],"b_obj":{"b_str":"A","b_num_int":1,"b_num_float":0.1,"b_bool":true,"b_null":null,"b_empty_obj":{},"b_empty_array":[],"b_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"b_empty_array_nested":[{},[],null],"b_obj":{"b_str":"A","b_num_int":1,"b_num_float":0.1,"b_bool":true,"b_null":null,"b_empty_obj":{},"b_empty_array":[],"b_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"b_empty_array_nested":[{},[],null]},"b_array":[{"b_str":"A","b_num_int":1,"b_num_float":0.1,"b_bool":true,"b_null":null,"b_empty_obj":{},"b_empty_array":[],"b_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"b_empty_array_nested":[{},[],null]},{"b_str":"A","b_num_int":1,"b_num_float":0.1,"b_bool":true,"b_null":null,"b_empty_obj":{},"b_empty_array":[],"b_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"b_empty_array_nested":[{},[],null]}]},"b_array":[{"b_str":"A","b_num_int":1,"b_num_float":0.1,"b_bool":true,"b_null":null,"b_empty_obj":{},"b_empty_array":[],"b_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"b_empty_array_nested":[{},[],null],"b_obj":{"b_str":"A","b_num_int":1,"b_num_float":0.1,"b_bool":true,"b_null":null,"b_empty_obj":{},"b_empty_array":[],"b_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"b_empty_array_nested":[{},[],null]},"b_array":[{"b_str":"A","b_num_int":1,"b_num_float":0.1,"b_bool":true,"b_null":null,"b_empty_obj":{},"b_empty_array":[],"b_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"b_empty_array_nested":[{},[],null]},{"b_str":"A","b_num_int":1,"b_num_float":0.1,"b_bool":true,"b_null":null,"b_empty_obj":{},"b_empty_array":[],"b_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"b_empty_array_nested":[{},[],null]}]},{"b_str":"A","b_num_int":1,"b_num_float":0.1,"b_bool":true,"b_null":null,"b_empty_obj":{},"b_empty_array":[],"b_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"b_empty_array_nested":[{},[],null],"b_obj":{"b_str":"A","b_num_int":1,"b_num_float":0.1,"b_bool":true,"b_null":null,"b_empty_obj":{},"b_empty_array":[],"b_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"b_empty_array_nested":[{},[],null]},"b_array":[{"b_str":"A","b_num_int":1,"b_num_float":0.1,"b_bool":true,"b_null":null,"b_empty_obj":{},"b_empty_array":[],"b_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"b_empty_array_nested":[{},[],null]},{"b_str":"A","b_num_int":1,"b_num_float":0.1,"b_bool":true,"b_null":null,"b_empty_obj":{},"b_empty_array":[],"b_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"b_empty_array_nested":[{},[],null]}]}]} |
| {"b_str":"A","b_num_int":1,"b_num_float":0.1,"b_bool":true,"b_null":null,"b_empty_obj":{},"b_empty_array":[],"b_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"b_empty_array_nested":[{},[],null],"b_obj":{"b_str":"A","b_num_int":1,"b_num_float":0.1,"b_bool":true,"b_null":null,"b_empty_obj":{},"b_empty_array":[],"b_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"b_empty_array_nested":[{},[],null],"b_obj":{"b_str":"A","b_num_int":1,"b_num_float":0.1,"b_bool":true,"b_null":null,"b_empty_obj":{},"b_empty_array":[],"b_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"b_empty_array_nested":[{},[],null]},"b_array":[{"b_str":"A","b_num_int":1,"b_num_float":0.1,"b_bool":true,"b_null":null,"b_empty_obj":{},"b_empty_array":[],"b_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"b_empty_array_nested":[{},[],null]},{"b_str":"A","b_num_int":1,"b_num_float":0.1,"b_bool":true,"b_null":null,"b_empty_obj":{},"b_empty_array":[],"b_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"b_empty_array_nested":[{},[],null]}]},"b_array":[{"b_str":"A","b_num_int":1,"b_num_float":0.1,"b_bool":true,"b_null":null,"b_empty_obj":{},"b_empty_array":[],"b_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"b_empty_array_nested":[{},[],null],"b_obj":{"b_str":"A","b_num_int":1,"b_num_float":0.1,"b_bool":true,"b_null":null,"b_empty_obj":{},"b_empty_array":[],"b_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"b_empty_array_nested":[{},[],null]},"b_array":[{"b_str":"A","b_num_int":1,"b_num_float":0.1,"b_bool":true,"b_null":null,"b_empty_obj":{},"b_empty_array":[],"b_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"b_empty_array_nested":[{},[],null]},{"b_str":"A","b_num_int":1,"b_num_float":0.1,"b_bool":true,"b_null":null,"b_empty_obj":{},"b_empty_array":[],"b_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"b_empty_array_nested":[{},[],null]}]},{"b_str":"A","b_num_int":1,"b_num_float":0.1,"b_bool":true,"b_null":null,"b_empty_obj":{},"b_empty_array":[],"b_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"b_empty_array_nested":[{},[],null],"b_obj":{"b_str":"A","b_num_int":1,"b_num_float":0.1,"b_bool":true,"b_null":null,"b_empty_obj":{},"b_empty_array":[],"b_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"b_empty_array_nested":[{},[],null]},"b_array":[{"b_str":"A","b_num_int":1,"b_num_float":0.1,"b_bool":true,"b_null":null,"b_empty_obj":{},"b_empty_array":[],"b_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"b_empty_array_nested":[{},[],null]},{"b_str":"A","b_num_int":1,"b_num_float":0.1,"b_bool":true,"b_null":null,"b_empty_obj":{},"b_empty_array":[],"b_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"b_empty_array_nested":[{},[],null]}]}]} |

(4 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_func_to_json_string TEST_ID: A032 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT to_json_string(json_query(c1, '$.a_array[0].a_obj')) c
FROM test_json_cols;
+----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| c                                                                                                                                                                                                  |
+----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| {"a_str":"A","a_num_int":1,"a_num_float":0.1,"a_bool":true,"a_null":null,"a_empty_obj":{},"a_empty_array":[],"a_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"a_empty_array_nested":[{},[],null]} |
| {"a_str":"A","a_num_int":1,"a_num_float":0.1,"a_bool":true,"a_null":null,"a_empty_obj":{},"a_empty_array":[],"a_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"a_empty_array_nested":[{},[],null]} |
|                                                                                                                                                                                                    |
|                                                                                                                                                                                                    |
+----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
(4 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_func_to_json_string TEST_ID: A033 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT to_json_string(json_object('c1': c1, 'c2': c2)) c
FROM test_json_cols;

| c|

| {"c1":{"a_str":"A","a_num_int":1,"a_num_float":0.1,"a_bool":true,"a_null":null,"a_empty_obj":{},"a_empty_array":[],"a_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"a_empty_array_nested":[{},[],null],"a_obj":{"a_str":"A","a_num_int":1,"a_num_float":0.1,"a_bool":true,"a_null":null,"a_empty_obj":{},"a_empty_array":[],"a_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"a_empty_array_nested":[{},[],null],"a_obj":{"a_str":"A","a_num_int":1,"a_num_float":0.1,"a_bool":true,"a_null":null,"a_empty_obj":{},"a_empty_array":[],"a_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"a_empty_array_nested":[{},[],null]},"a_array":[{"a_str":"A","a_num_int":1,"a_num_float":0.1,"a_bool":true,"a_null":null,"a_empty_obj":{},"a_empty_array":[],"a_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"a_empty_array_nested":[{},[],null]},{"a_str":"A","a_num_int":1,"a_num_float":0.1,"a_bool":true,"a_null":null,"a_empty_obj":{},"a_empty_array":[],"a_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"a_empty_array_nested":[{},[],null]}]},"a_array":[{"a_str":"A","a_num_int":1,"a_num_float":0.1,"a_bool":true,"a_null":null,"a_empty_obj":{},"a_empty_array":[],"a_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"a_empty_array_nested":[{},[],null],"a_obj":{"a_str":"A","a_num_int":1,"a_num_float":0.1,"a_bool":true,"a_null":null,"a_empty_obj":{},"a_empty_array":[],"a_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"a_empty_array_nested":[{},[],null]},"a_array":[{"a_str":"A","a_num_int":1,"a_num_float":0.1,"a_bool":true,"a_null":null,"a_empty_obj":{},"a_empty_array":[],"a_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"a_empty_array_nested":[{},[],null]},{"a_str":"A","a_num_int":1,"a_num_float":0.1,"a_bool":true,"a_null":null,"a_empty_obj":{},"a_empty_array":[],"a_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"a_empty_array_nested":[{},[],null]}]},{"a_str":"A","a_num_int":1,"a_num_float":0.1,"a_bool":true,"a_null":null,"a_empty_obj":{},"a_empty_array":[],"a_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"a_empty_array_nested":[{},[],null],"a_obj":{"a_str":"A","a_num_int":1,"a_num_float":0.1,"a_bool":true,"a_null":null,"a_empty_obj":{},"a_empty_array":[],"a_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"a_empty_array_nested":[{},[],null]},"a_array":[{"a_str":"A","a_num_int":1,"a_num_float":0.1,"a_bool":true,"a_null":null,"a_empty_obj":{},"a_empty_array":[],"a_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"a_empty_array_nested":[{},[],null]},{"a_str":"A","a_num_int":1,"a_num_float":0.1,"a_bool":true,"a_null":null,"a_empty_obj":{},"a_empty_array":[],"a_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"a_empty_array_nested":[{},[],null]}]}]},"c2":{"a_str":"A","a_num_int":1,"a_num_float":0.1,"a_bool":true,"a_null":null,"a_empty_obj":{},"a_empty_array":[],"a_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"a_empty_array_nested":[{},[],null],"a_obj":{"a_str":"A","a_num_int":1,"a_num_float":0.1,"a_bool":true,"a_null":null,"a_empty_obj":{},"a_empty_array":[],"a_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"a_empty_array_nested":[{},[],null],"a_obj":{"a_str":"A","a_num_int":1,"a_num_float":0.1,"a_bool":true,"a_null":null,"a_empty_obj":{},"a_empty_array":[],"a_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"a_empty_array_nested":[{},[],null]},"a_array":[{"a_str":"A","a_num_int":1,"a_num_float":0.1,"a_bool":true,"a_null":null,"a_empty_obj":{},"a_empty_array":[],"a_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"a_empty_array_nested":[{},[],null]},{"a_str":"A","a_num_int":1,"a_num_float":0.1,"a_bool":true,"a_null":null,"a_empty_obj":{},"a_empty_array":[],"a_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"a_empty_array_nested":[{},[],null]}]},"a_array":[{"a_str":"A","a_num_int":1,"a_num_float":0.1,"a_bool":true,"a_null":null,"a_empty_obj":{},"a_empty_array":[],"a_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"a_empty_array_nested":[{},[],null],"a_obj":{"a_str":"A","a_num_int":1,"a_num_float":0.1,"a_bool":true,"a_null":null,"a_empty_obj":{},"a_empty_array":[],"a_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"a_empty_array_nested":[{},[],null]},"a_array":[{"a_str":"A","a_num_int":1,"a_num_float":0.1,"a_bool":true,"a_null":null,"a_empty_obj":{},"a_empty_array":[],"a_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"a_empty_array_nested":[{},[],null]},{"a_str":"A","a_num_int":1,"a_num_float":0.1,"a_bool":true,"a_null":null,"a_empty_obj":{},"a_empty_array":[],"a_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"a_empty_array_nested":[{},[],null]}]},{"a_str":"A","a_num_int":1,"a_num_float":0.1,"a_bool":true,"a_null":null,"a_empty_obj":{},"a_empty_array":[],"a_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"a_empty_array_nested":[{},[],null],"a_obj":{"a_str":"A","a_num_int":1,"a_num_float":0.1,"a_bool":true,"a_null":null,"a_empty_obj":{},"a_empty_array":[],"a_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"a_empty_array_nested":[{},[],null]},"a_array":[{"a_str":"A","a_num_int":1,"a_num_float":0.1,"a_bool":true,"a_null":null,"a_empty_obj":{},"a_empty_array":[],"a_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"a_empty_array_nested":[{},[],null]},{"a_str":"A","a_num_int":1,"a_num_float":0.1,"a_bool":true,"a_null":null,"a_empty_obj":{},"a_empty_array":[],"a_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"a_empty_array_nested":[{},[],null]}]}]}} |
| {"c1":{"a_str":"A","a_num_int":1,"a_num_float":0.1,"a_bool":true,"a_null":null,"a_empty_obj":{},"a_empty_array":[],"a_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"a_empty_array_nested":[{},[],null],"a_obj":{"a_str":"A","a_num_int":1,"a_num_float":0.1,"a_bool":true,"a_null":null,"a_empty_obj":{},"a_empty_array":[],"a_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"a_empty_array_nested":[{},[],null],"a_obj":{"a_str":"A","a_num_int":1,"a_num_float":0.1,"a_bool":true,"a_null":null,"a_empty_obj":{},"a_empty_array":[],"a_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"a_empty_array_nested":[{},[],null]},"a_array":[{"a_str":"A","a_num_int":1,"a_num_float":0.1,"a_bool":true,"a_null":null,"a_empty_obj":{},"a_empty_array":[],"a_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"a_empty_array_nested":[{},[],null]},{"a_str":"A","a_num_int":1,"a_num_float":0.1,"a_bool":true,"a_null":null,"a_empty_obj":{},"a_empty_array":[],"a_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"a_empty_array_nested":[{},[],null]}]},"a_array":[{"a_str":"A","a_num_int":1,"a_num_float":0.1,"a_bool":true,"a_null":null,"a_empty_obj":{},"a_empty_array":[],"a_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"a_empty_array_nested":[{},[],null],"a_obj":{"a_str":"A","a_num_int":1,"a_num_float":0.1,"a_bool":true,"a_null":null,"a_empty_obj":{},"a_empty_array":[],"a_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"a_empty_array_nested":[{},[],null]},"a_array":[{"a_str":"A","a_num_int":1,"a_num_float":0.1,"a_bool":true,"a_null":null,"a_empty_obj":{},"a_empty_array":[],"a_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"a_empty_array_nested":[{},[],null]},{"a_str":"A","a_num_int":1,"a_num_float":0.1,"a_bool":true,"a_null":null,"a_empty_obj":{},"a_empty_array":[],"a_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"a_empty_array_nested":[{},[],null]}]},{"a_str":"A","a_num_int":1,"a_num_float":0.1,"a_bool":true,"a_null":null,"a_empty_obj":{},"a_empty_array":[],"a_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"a_empty_array_nested":[{},[],null],"a_obj":{"a_str":"A","a_num_int":1,"a_num_float":0.1,"a_bool":true,"a_null":null,"a_empty_obj":{},"a_empty_array":[],"a_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"a_empty_array_nested":[{},[],null]},"a_array":[{"a_str":"A","a_num_int":1,"a_num_float":0.1,"a_bool":true,"a_null":null,"a_empty_obj":{},"a_empty_array":[],"a_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"a_empty_array_nested":[{},[],null]},{"a_str":"A","a_num_int":1,"a_num_float":0.1,"a_bool":true,"a_null":null,"a_empty_obj":{},"a_empty_array":[],"a_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"a_empty_array_nested":[{},[],null]}]}]},"c2":{"a_str":"A","a_num_int":1,"a_num_float":0.1,"a_bool":true,"a_null":null,"a_empty_obj":{},"a_empty_array":[],"a_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"a_empty_array_nested":[{},[],null],"a_obj":{"a_str":"A","a_num_int":1,"a_num_float":0.1,"a_bool":true,"a_null":null,"a_empty_obj":{},"a_empty_array":[],"a_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"a_empty_array_nested":[{},[],null],"a_obj":{"a_str":"A","a_num_int":1,"a_num_float":0.1,"a_bool":true,"a_null":null,"a_empty_obj":{},"a_empty_array":[],"a_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"a_empty_array_nested":[{},[],null]},"a_array":[{"a_str":"A","a_num_int":1,"a_num_float":0.1,"a_bool":true,"a_null":null,"a_empty_obj":{},"a_empty_array":[],"a_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"a_empty_array_nested":[{},[],null]},{"a_str":"A","a_num_int":1,"a_num_float":0.1,"a_bool":true,"a_null":null,"a_empty_obj":{},"a_empty_array":[],"a_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"a_empty_array_nested":[{},[],null]}]},"a_array":[{"a_str":"A","a_num_int":1,"a_num_float":0.1,"a_bool":true,"a_null":null,"a_empty_obj":{},"a_empty_array":[],"a_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"a_empty_array_nested":[{},[],null],"a_obj":{"a_str":"A","a_num_int":1,"a_num_float":0.1,"a_bool":true,"a_null":null,"a_empty_obj":{},"a_empty_array":[],"a_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"a_empty_array_nested":[{},[],null]},"a_array":[{"a_str":"A","a_num_int":1,"a_num_float":0.1,"a_bool":true,"a_null":null,"a_empty_obj":{},"a_empty_array":[],"a_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"a_empty_array_nested":[{},[],null]},{"a_str":"A","a_num_int":1,"a_num_float":0.1,"a_bool":true,"a_null":null,"a_empty_obj":{},"a_empty_array":[],"a_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"a_empty_array_nested":[{},[],null]}]},{"a_str":"A","a_num_int":1,"a_num_float":0.1,"a_bool":true,"a_null":null,"a_empty_obj":{},"a_empty_array":[],"a_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"a_empty_array_nested":[{},[],null],"a_obj":{"a_str":"A","a_num_int":1,"a_num_float":0.1,"a_bool":true,"a_null":null,"a_empty_obj":{},"a_empty_array":[],"a_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"a_empty_array_nested":[{},[],null]},"a_array":[{"a_str":"A","a_num_int":1,"a_num_float":0.1,"a_bool":true,"a_null":null,"a_empty_obj":{},"a_empty_array":[],"a_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"a_empty_array_nested":[{},[],null]},{"a_str":"A","a_num_int":1,"a_num_float":0.1,"a_bool":true,"a_null":null,"a_empty_obj":{},"a_empty_array":[],"a_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"a_empty_array_nested":[{},[],null]}]}]}} |
| {"c1":{"b_str":"A","b_num_int":1,"b_num_float":0.1,"b_bool":true,"b_null":null,"b_empty_obj":{},"b_empty_array":[],"b_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"b_empty_array_nested":[{},[],null],"b_obj":{"b_str":"A","b_num_int":1,"b_num_float":0.1,"b_bool":true,"b_null":null,"b_empty_obj":{},"b_empty_array":[],"b_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"b_empty_array_nested":[{},[],null],"b_obj":{"b_str":"A","b_num_int":1,"b_num_float":0.1,"b_bool":true,"b_null":null,"b_empty_obj":{},"b_empty_array":[],"b_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"b_empty_array_nested":[{},[],null]},"b_array":[{"b_str":"A","b_num_int":1,"b_num_float":0.1,"b_bool":true,"b_null":null,"b_empty_obj":{},"b_empty_array":[],"b_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"b_empty_array_nested":[{},[],null]},{"b_str":"A","b_num_int":1,"b_num_float":0.1,"b_bool":true,"b_null":null,"b_empty_obj":{},"b_empty_array":[],"b_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"b_empty_array_nested":[{},[],null]}]},"b_array":[{"b_str":"A","b_num_int":1,"b_num_float":0.1,"b_bool":true,"b_null":null,"b_empty_obj":{},"b_empty_array":[],"b_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"b_empty_array_nested":[{},[],null],"b_obj":{"b_str":"A","b_num_int":1,"b_num_float":0.1,"b_bool":true,"b_null":null,"b_empty_obj":{},"b_empty_array":[],"b_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"b_empty_array_nested":[{},[],null]},"b_array":[{"b_str":"A","b_num_int":1,"b_num_float":0.1,"b_bool":true,"b_null":null,"b_empty_obj":{},"b_empty_array":[],"b_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"b_empty_array_nested":[{},[],null]},{"b_str":"A","b_num_int":1,"b_num_float":0.1,"b_bool":true,"b_null":null,"b_empty_obj":{},"b_empty_array":[],"b_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"b_empty_array_nested":[{},[],null]}]},{"b_str":"A","b_num_int":1,"b_num_float":0.1,"b_bool":true,"b_null":null,"b_empty_obj":{},"b_empty_array":[],"b_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"b_empty_array_nested":[{},[],null],"b_obj":{"b_str":"A","b_num_int":1,"b_num_float":0.1,"b_bool":true,"b_null":null,"b_empty_obj":{},"b_empty_array":[],"b_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"b_empty_array_nested":[{},[],null]},"b_array":[{"b_str":"A","b_num_int":1,"b_num_float":0.1,"b_bool":true,"b_null":null,"b_empty_obj":{},"b_empty_array":[],"b_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"b_empty_array_nested":[{},[],null]},{"b_str":"A","b_num_int":1,"b_num_float":0.1,"b_bool":true,"b_null":null,"b_empty_obj":{},"b_empty_array":[],"b_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"b_empty_array_nested":[{},[],null]}]}]},"c2":{"b_str":"A","b_num_int":1,"b_num_float":0.1,"b_bool":true,"b_null":null,"b_empty_obj":{},"b_empty_array":[],"b_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"b_empty_array_nested":[{},[],null],"b_obj":{"b_str":"A","b_num_int":1,"b_num_float":0.1,"b_bool":true,"b_null":null,"b_empty_obj":{},"b_empty_array":[],"b_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"b_empty_array_nested":[{},[],null],"b_obj":{"b_str":"A","b_num_int":1,"b_num_float":0.1,"b_bool":true,"b_null":null,"b_empty_obj":{},"b_empty_array":[],"b_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"b_empty_array_nested":[{},[],null]},"b_array":[{"b_str":"A","b_num_int":1,"b_num_float":0.1,"b_bool":true,"b_null":null,"b_empty_obj":{},"b_empty_array":[],"b_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"b_empty_array_nested":[{},[],null]},{"b_str":"A","b_num_int":1,"b_num_float":0.1,"b_bool":true,"b_null":null,"b_empty_obj":{},"b_empty_array":[],"b_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"b_empty_array_nested":[{},[],null]}]},"b_array":[{"b_str":"A","b_num_int":1,"b_num_float":0.1,"b_bool":true,"b_null":null,"b_empty_obj":{},"b_empty_array":[],"b_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"b_empty_array_nested":[{},[],null],"b_obj":{"b_str":"A","b_num_int":1,"b_num_float":0.1,"b_bool":true,"b_null":null,"b_empty_obj":{},"b_empty_array":[],"b_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"b_empty_array_nested":[{},[],null]},"b_array":[{"b_str":"A","b_num_int":1,"b_num_float":0.1,"b_bool":true,"b_null":null,"b_empty_obj":{},"b_empty_array":[],"b_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"b_empty_array_nested":[{},[],null]},{"b_str":"A","b_num_int":1,"b_num_float":0.1,"b_bool":true,"b_null":null,"b_empty_obj":{},"b_empty_array":[],"b_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"b_empty_array_nested":[{},[],null]}]},{"b_str":"A","b_num_int":1,"b_num_float":0.1,"b_bool":true,"b_null":null,"b_empty_obj":{},"b_empty_array":[],"b_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"b_empty_array_nested":[{},[],null],"b_obj":{"b_str":"A","b_num_int":1,"b_num_float":0.1,"b_bool":true,"b_null":null,"b_empty_obj":{},"b_empty_array":[],"b_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"b_empty_array_nested":[{},[],null]},"b_array":[{"b_str":"A","b_num_int":1,"b_num_float":0.1,"b_bool":true,"b_null":null,"b_empty_obj":{},"b_empty_array":[],"b_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"b_empty_array_nested":[{},[],null]},{"b_str":"A","b_num_int":1,"b_num_float":0.1,"b_bool":true,"b_null":null,"b_empty_obj":{},"b_empty_array":[],"b_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"b_empty_array_nested":[{},[],null]}]}]}} |
| {"c1":{"b_str":"A","b_num_int":1,"b_num_float":0.1,"b_bool":true,"b_null":null,"b_empty_obj":{},"b_empty_array":[],"b_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"b_empty_array_nested":[{},[],null],"b_obj":{"b_str":"A","b_num_int":1,"b_num_float":0.1,"b_bool":true,"b_null":null,"b_empty_obj":{},"b_empty_array":[],"b_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"b_empty_array_nested":[{},[],null],"b_obj":{"b_str":"A","b_num_int":1,"b_num_float":0.1,"b_bool":true,"b_null":null,"b_empty_obj":{},"b_empty_array":[],"b_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"b_empty_array_nested":[{},[],null]},"b_array":[{"b_str":"A","b_num_int":1,"b_num_float":0.1,"b_bool":true,"b_null":null,"b_empty_obj":{},"b_empty_array":[],"b_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"b_empty_array_nested":[{},[],null]},{"b_str":"A","b_num_int":1,"b_num_float":0.1,"b_bool":true,"b_null":null,"b_empty_obj":{},"b_empty_array":[],"b_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"b_empty_array_nested":[{},[],null]}]},"b_array":[{"b_str":"A","b_num_int":1,"b_num_float":0.1,"b_bool":true,"b_null":null,"b_empty_obj":{},"b_empty_array":[],"b_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"b_empty_array_nested":[{},[],null],"b_obj":{"b_str":"A","b_num_int":1,"b_num_float":0.1,"b_bool":true,"b_null":null,"b_empty_obj":{},"b_empty_array":[],"b_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"b_empty_array_nested":[{},[],null]},"b_array":[{"b_str":"A","b_num_int":1,"b_num_float":0.1,"b_bool":true,"b_null":null,"b_empty_obj":{},"b_empty_array":[],"b_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"b_empty_array_nested":[{},[],null]},{"b_str":"A","b_num_int":1,"b_num_float":0.1,"b_bool":true,"b_null":null,"b_empty_obj":{},"b_empty_array":[],"b_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"b_empty_array_nested":[{},[],null]}]},{"b_str":"A","b_num_int":1,"b_num_float":0.1,"b_bool":true,"b_null":null,"b_empty_obj":{},"b_empty_array":[],"b_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"b_empty_array_nested":[{},[],null],"b_obj":{"b_str":"A","b_num_int":1,"b_num_float":0.1,"b_bool":true,"b_null":null,"b_empty_obj":{},"b_empty_array":[],"b_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"b_empty_array_nested":[{},[],null]},"b_array":[{"b_str":"A","b_num_int":1,"b_num_float":0.1,"b_bool":true,"b_null":null,"b_empty_obj":{},"b_empty_array":[],"b_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"b_empty_array_nested":[{},[],null]},{"b_str":"A","b_num_int":1,"b_num_float":0.1,"b_bool":true,"b_null":null,"b_empty_obj":{},"b_empty_array":[],"b_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"b_empty_array_nested":[{},[],null]}]}]},"c2":{"b_str":"A","b_num_int":1,"b_num_float":0.1,"b_bool":true,"b_null":null,"b_empty_obj":{},"b_empty_array":[],"b_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"b_empty_array_nested":[{},[],null],"b_obj":{"b_str":"A","b_num_int":1,"b_num_float":0.1,"b_bool":true,"b_null":null,"b_empty_obj":{},"b_empty_array":[],"b_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"b_empty_array_nested":[{},[],null],"b_obj":{"b_str":"A","b_num_int":1,"b_num_float":0.1,"b_bool":true,"b_null":null,"b_empty_obj":{},"b_empty_array":[],"b_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"b_empty_array_nested":[{},[],null]},"b_array":[{"b_str":"A","b_num_int":1,"b_num_float":0.1,"b_bool":true,"b_null":null,"b_empty_obj":{},"b_empty_array":[],"b_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"b_empty_array_nested":[{},[],null]},{"b_str":"A","b_num_int":1,"b_num_float":0.1,"b_bool":true,"b_null":null,"b_empty_obj":{},"b_empty_array":[],"b_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"b_empty_array_nested":[{},[],null]}]},"b_array":[{"b_str":"A","b_num_int":1,"b_num_float":0.1,"b_bool":true,"b_null":null,"b_empty_obj":{},"b_empty_array":[],"b_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"b_empty_array_nested":[{},[],null],"b_obj":{"b_str":"A","b_num_int":1,"b_num_float":0.1,"b_bool":true,"b_null":null,"b_empty_obj":{},"b_empty_array":[],"b_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"b_empty_array_nested":[{},[],null]},"b_array":[{"b_str":"A","b_num_int":1,"b_num_float":0.1,"b_bool":true,"b_null":null,"b_empty_obj":{},"b_empty_array":[],"b_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"b_empty_array_nested":[{},[],null]},{"b_str":"A","b_num_int":1,"b_num_float":0.1,"b_bool":true,"b_null":null,"b_empty_obj":{},"b_empty_array":[],"b_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"b_empty_array_nested":[{},[],null]}]},{"b_str":"A","b_num_int":1,"b_num_float":0.1,"b_bool":true,"b_null":null,"b_empty_obj":{},"b_empty_array":[],"b_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"b_empty_array_nested":[{},[],null],"b_obj":{"b_str":"A","b_num_int":1,"b_num_float":0.1,"b_bool":true,"b_null":null,"b_empty_obj":{},"b_empty_array":[],"b_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"b_empty_array_nested":[{},[],null]},"b_array":[{"b_str":"A","b_num_int":1,"b_num_float":0.1,"b_bool":true,"b_null":null,"b_empty_obj":{},"b_empty_array":[],"b_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"b_empty_array_nested":[{},[],null]},{"b_str":"A","b_num_int":1,"b_num_float":0.1,"b_bool":true,"b_null":null,"b_empty_obj":{},"b_empty_array":[],"b_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"b_empty_array_nested":[{},[],null]}]}]}} |

(4 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_func_to_json_string TEST_ID: A034 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT to_json_string(c_empty_obj) c
FROM test_json_cols;
+----+
| c  |
+----+
| {} |
| {} |
|    |
|    |
+----+
(4 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_func_to_json_string TEST_ID: A035 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT to_json_string(c_empty_array) c
FROM test_json_cols;
+----+
| c  |
+----+
| [] |
| [] |
|    |
|    |
+----+
(4 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_func_to_json_string TEST_ID: A036 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT to_json_string(c_empty_obj_nested) c
FROM test_json_cols;
+-----------------------------+
| c                           |
+-----------------------------+
| {"o1":{},"o2":[],"o3":null} |
| {"o1":{},"o2":[],"o3":null} |
|                             |
|                             |
+-----------------------------+
(4 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_func_to_json_string TEST_ID: A037 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT to_json_string(c_empty_array_nested) c
FROM test_json_cols;
+--------------+
| c            |
+--------------+
| [{},[],null] |
| [{},[],null] |
|              |
|              |
+--------------+
(4 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_func_to_json_string TEST_ID: A038 TYPE: NEGATIVE TEST
#-------------------------------------------------------------------------
SELECT to_json_string('{'a': 123}') c
FROM test_json_cols;
QueryInterruptedException
!error

#-------------------------------------------------------------------------
# TESTCASE: test_func_to_json_string TEST_ID: A039 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT to_json_string('"a": 123') c
FROM test_json_cols;
+--------------+
| c            |
+--------------+
| "\"a\": 123" |
| "\"a\": 123" |
| "\"a\": 123" |
| "\"a\": 123" |
+--------------+
(4 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_func_to_json_string TEST_ID: A040 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT to_json_string('{"a": 123; "b": 456}') c
FROM test_json_cols;
+----------------------------+
| c                          |
+----------------------------+
| "{\"a\": 123; \"b\": 456}" |
| "{\"a\": 123; \"b\": 456}" |
| "{\"a\": 123; \"b\": 456}" |
| "{\"a\": 123; \"b\": 456}" |
+----------------------------+
(4 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_func_to_json_string TEST_ID: A041 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT to_json_string('{"a": 123 456}') c
FROM test_json_cols;
+--------------------+
| c                  |
+--------------------+
| "{\"a\": 123 456}" |
| "{\"a\": 123 456}" |
| "{\"a\": 123 456}" |
| "{\"a\": 123 456}" |
+--------------------+
(4 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_func_to_json_string TEST_ID: A042 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT to_json_string('{"a": "A", "b": ["c": {}, "d": {}]}') c
FROM test_json_cols;
+-------------------------------------------------+
| c                                               |
+-------------------------------------------------+
| "{\"a\": \"A\", \"b\": [\"c\": {}, \"d\": {}]}" |
| "{\"a\": \"A\", \"b\": [\"c\": {}, \"d\": {}]}" |
| "{\"a\": \"A\", \"b\": [\"c\": {}, \"d\": {}]}" |
| "{\"a\": \"A\", \"b\": [\"c\": {}, \"d\": {}]}" |
+-------------------------------------------------+
(4 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_func_to_json_string TEST_ID: A043 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT count(*) c
FROM test_json_cols
WHERE to_json_string(c1) IS NULL;
+---+
| c |
+---+
| 0 |
+---+
(1 row)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_func_to_json_string TEST_ID: A044 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT count(*) c
FROM test_json_cols
WHERE to_json_string(c1) IS NOT NULL;
+---+
| c |
+---+
| 4 |
+---+
(1 row)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_func_to_json_string TEST_ID: A045 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT count(*) c
FROM
  (SELECT to_json_string(c1)
   FROM test_json_cols);
+---+
| c |
+---+
| 4 |
+---+
(1 row)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_func_to_json_string TEST_ID: A046 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT count(*) c
FROM
  (SELECT ALL to_json_string(c1)
   FROM test_json_cols);
+---+
| c |
+---+
| 4 |
+---+
(1 row)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_func_to_json_string TEST_ID: A047 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT count(mycol) c
FROM
  (SELECT to_json_string(c1) mycol
   FROM test_json_cols);
+---+
| c |
+---+
| 4 |
+---+
(1 row)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_func_to_json_string TEST_ID: A048 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT DISTINCT to_json_string(json_query(c1, '$.a_array[0].a_obj')) c
FROM test_json_cols;
+----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| c                                                                                                                                                                                                  |
+----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| {"a_str":"A","a_num_int":1,"a_num_float":0.1,"a_bool":true,"a_null":null,"a_empty_obj":{},"a_empty_array":[],"a_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"a_empty_array_nested":[{},[],null]} |
|                                                                                                                                                                                                    |
+----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
(2 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_func_to_json_string TEST_ID: A049 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT mycol,
       count(*) c
FROM
  (SELECT to_json_string(json_query(c1, '$.a_array[0].a_obj')) mycol
   FROM test_json_cols)
GROUP BY mycol;
+----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+---+
| mycol                                                                                                                                                                                              | c |
+----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+---+
| {"a_str":"A","a_num_int":1,"a_num_float":0.1,"a_bool":true,"a_null":null,"a_empty_obj":{},"a_empty_array":[],"a_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"a_empty_array_nested":[{},[],null]} | 2 |
|                                                                                                                                                                                                    | 2 |
+----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+---+
(2 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_func_to_json_string TEST_ID: A050 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT mycol,
       count(*) c
FROM
  (SELECT c1,
          to_json_string(json_query(c1, '$.a_array[0].a_obj')) mycol
   FROM test_json_cols)
GROUP BY mycol
HAVING mycol IS NOT NULL;
+----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+---+
| mycol                                                                                                                                                                                              | c |
+----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+---+
| {"a_str":"A","a_num_int":1,"a_num_float":0.1,"a_bool":true,"a_null":null,"a_empty_obj":{},"a_empty_array":[],"a_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"a_empty_array_nested":[{},[],null]} | 2 |
+----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+---+
(1 row)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_func_to_json_string TEST_ID: A051 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT count(*) c
FROM test_json_cols
WHERE to_json_string(c1) = to_json_string(c1);
+---+
| c |
+---+
| 4 |
+---+
(1 row)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_func_to_json_string TEST_ID: A052 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT count(*) c
FROM test_json_cols t1
INNER JOIN test_json_cols t2 ON to_json_string(t1.c1)=to_json_string(t2.c1);
+---+
| c |
+---+
| 8 |
+---+
(1 row)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_func_to_json_string TEST_ID: A053 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT count(*) c
FROM test_json_cols t1
LEFT JOIN test_json_cols t2 ON to_json_string(t1.c1)=to_json_string(t2.c1);
+---+
| c |
+---+
| 8 |
+---+
(1 row)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_func_to_json_string TEST_ID: A054 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT count(*) c
FROM test_json_cols t1,
     test_json_cols t2
WHERE to_json_string(t1.c1)=to_json_string(t2.c1);
+---+
| c |
+---+
| 8 |
+---+
(1 row)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_func_to_json_string TEST_ID: A055 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT to_json_string('{"a": "A", "b": 123, "c": true, "d": null}') c
FROM test_json_cols
ORDER BY __time;
+--------------------------------------------------------+
| c                                                      |
+--------------------------------------------------------+
| "{\"a\": \"A\", \"b\": 123, \"c\": true, \"d\": null}" |
| "{\"a\": \"A\", \"b\": 123, \"c\": true, \"d\": null}" |
| "{\"a\": \"A\", \"b\": 123, \"c\": true, \"d\": null}" |
| "{\"a\": \"A\", \"b\": 123, \"c\": true, \"d\": null}" |
+--------------------------------------------------------+
(4 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_func_to_json_string TEST_ID: A056 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT to_json_string('{"a": "A", "b": 123, "c": true, "d": null}') c
FROM test_json_cols
LIMIT 1;
+--------------------------------------------------------+
| c                                                      |
+--------------------------------------------------------+
| "{\"a\": \"A\", \"b\": 123, \"c\": true, \"d\": null}" |
+--------------------------------------------------------+
(1 row)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_func_to_json_string TEST_ID: A057 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT to_json_string('{"a": "A", "b": 123, "c": true, "d": null}') c
FROM test_json_cols
OFFSET 1;
+--------------------------------------------------------+
| c                                                      |
+--------------------------------------------------------+
| "{\"a\": \"A\", \"b\": 123, \"c\": true, \"d\": null}" |
| "{\"a\": \"A\", \"b\": 123, \"c\": true, \"d\": null}" |
| "{\"a\": \"A\", \"b\": 123, \"c\": true, \"d\": null}" |
+--------------------------------------------------------+
(3 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_func_to_json_string TEST_ID: A058 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT to_json_string('{"a": "A", "b": 123, "c": true, "d": null}') c
FROM test_json_cols
UNION ALL
SELECT to_json_string('{"a": "A", "b": 123, "c": true, "d": null}') c
FROM test_json_cols;
+--------------------------------------------------------+
| c                                                      |
+--------------------------------------------------------+
| "{\"a\": \"A\", \"b\": 123, \"c\": true, \"d\": null}" |
| "{\"a\": \"A\", \"b\": 123, \"c\": true, \"d\": null}" |
| "{\"a\": \"A\", \"b\": 123, \"c\": true, \"d\": null}" |
| "{\"a\": \"A\", \"b\": 123, \"c\": true, \"d\": null}" |
| "{\"a\": \"A\", \"b\": 123, \"c\": true, \"d\": null}" |
| "{\"a\": \"A\", \"b\": 123, \"c\": true, \"d\": null}" |
| "{\"a\": \"A\", \"b\": 123, \"c\": true, \"d\": null}" |
| "{\"a\": \"A\", \"b\": 123, \"c\": true, \"d\": null}" |
+--------------------------------------------------------+
(8 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_func_to_json_string TEST_ID: A059 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------

SELECT to_json_string(c1)
FROM test_json_cols;

||
+------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| {"a_str":"A","a_num_int":1,"a_num_float":0.1,"a_bool":true,"a_null":null,"a_empty_obj":{},"a_empty_array":[],"a_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"a_empty_array_nested":[{},[],null],"a_obj":{"a_str":"A","a_num_int":1,"a_num_float":0.1,"a_bool":true,"a_null":null,"a_empty_obj":{},"a_empty_array":[],"a_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"a_empty_array_nested":[{},[],null],"a_obj":{"a_str":"A","a_num_int":1,"a_num_float":0.1,"a_bool":true,"a_null":null,"a_empty_obj":{},"a_empty_array":[],"a_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"a_empty_array_nested":[{},[],null]},"a_array":[{"a_str":"A","a_num_int":1,"a_num_float":0.1,"a_bool":true,"a_null":null,"a_empty_obj":{},"a_empty_array":[],"a_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"a_empty_array_nested":[{},[],null]},{"a_str":"A","a_num_int":1,"a_num_float":0.1,"a_bool":true,"a_null":null,"a_empty_obj":{},"a_empty_array":[],"a_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"a_empty_array_nested":[{},[],null]}]},"a_array":[{"a_str":"A","a_num_int":1,"a_num_float":0.1,"a_bool":true,"a_null":null,"a_empty_obj":{},"a_empty_array":[],"a_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"a_empty_array_nested":[{},[],null],"a_obj":{"a_str":"A","a_num_int":1,"a_num_float":0.1,"a_bool":true,"a_null":null,"a_empty_obj":{},"a_empty_array":[],"a_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"a_empty_array_nested":[{},[],null]},"a_array":[{"a_str":"A","a_num_int":1,"a_num_float":0.1,"a_bool":true,"a_null":null,"a_empty_obj":{},"a_empty_array":[],"a_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"a_empty_array_nested":[{},[],null]},{"a_str":"A","a_num_int":1,"a_num_float":0.1,"a_bool":true,"a_null":null,"a_empty_obj":{},"a_empty_array":[],"a_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"a_empty_array_nested":[{},[],null]}]},{"a_str":"A","a_num_int":1,"a_num_float":0.1,"a_bool":true,"a_null":null,"a_empty_obj":{},"a_empty_array":[],"a_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"a_empty_array_nested":[{},[],null],"a_obj":{"a_str":"A","a_num_int":1,"a_num_float":0.1,"a_bool":true,"a_null":null,"a_empty_obj":{},"a_empty_array":[],"a_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"a_empty_array_nested":[{},[],null]},"a_array":[{"a_str":"A","a_num_int":1,"a_num_float":0.1,"a_bool":true,"a_null":null,"a_empty_obj":{},"a_empty_array":[],"a_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"a_empty_array_nested":[{},[],null]},{"a_str":"A","a_num_int":1,"a_num_float":0.1,"a_bool":true,"a_null":null,"a_empty_obj":{},"a_empty_array":[],"a_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"a_empty_array_nested":[{},[],null]}]}]} |
| {"a_str":"A","a_num_int":1,"a_num_float":0.1,"a_bool":true,"a_null":null,"a_empty_obj":{},"a_empty_array":[],"a_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"a_empty_array_nested":[{},[],null],"a_obj":{"a_str":"A","a_num_int":1,"a_num_float":0.1,"a_bool":true,"a_null":null,"a_empty_obj":{},"a_empty_array":[],"a_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"a_empty_array_nested":[{},[],null],"a_obj":{"a_str":"A","a_num_int":1,"a_num_float":0.1,"a_bool":true,"a_null":null,"a_empty_obj":{},"a_empty_array":[],"a_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"a_empty_array_nested":[{},[],null]},"a_array":[{"a_str":"A","a_num_int":1,"a_num_float":0.1,"a_bool":true,"a_null":null,"a_empty_obj":{},"a_empty_array":[],"a_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"a_empty_array_nested":[{},[],null]},{"a_str":"A","a_num_int":1,"a_num_float":0.1,"a_bool":true,"a_null":null,"a_empty_obj":{},"a_empty_array":[],"a_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"a_empty_array_nested":[{},[],null]}]},"a_array":[{"a_str":"A","a_num_int":1,"a_num_float":0.1,"a_bool":true,"a_null":null,"a_empty_obj":{},"a_empty_array":[],"a_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"a_empty_array_nested":[{},[],null],"a_obj":{"a_str":"A","a_num_int":1,"a_num_float":0.1,"a_bool":true,"a_null":null,"a_empty_obj":{},"a_empty_array":[],"a_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"a_empty_array_nested":[{},[],null]},"a_array":[{"a_str":"A","a_num_int":1,"a_num_float":0.1,"a_bool":true,"a_null":null,"a_empty_obj":{},"a_empty_array":[],"a_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"a_empty_array_nested":[{},[],null]},{"a_str":"A","a_num_int":1,"a_num_float":0.1,"a_bool":true,"a_null":null,"a_empty_obj":{},"a_empty_array":[],"a_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"a_empty_array_nested":[{},[],null]}]},{"a_str":"A","a_num_int":1,"a_num_float":0.1,"a_bool":true,"a_null":null,"a_empty_obj":{},"a_empty_array":[],"a_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"a_empty_array_nested":[{},[],null],"a_obj":{"a_str":"A","a_num_int":1,"a_num_float":0.1,"a_bool":true,"a_null":null,"a_empty_obj":{},"a_empty_array":[],"a_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"a_empty_array_nested":[{},[],null]},"a_array":[{"a_str":"A","a_num_int":1,"a_num_float":0.1,"a_bool":true,"a_null":null,"a_empty_obj":{},"a_empty_array":[],"a_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"a_empty_array_nested":[{},[],null]},{"a_str":"A","a_num_int":1,"a_num_float":0.1,"a_bool":true,"a_null":null,"a_empty_obj":{},"a_empty_array":[],"a_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"a_empty_array_nested":[{},[],null]}]}]} |
| {"b_str":"A","b_num_int":1,"b_num_float":0.1,"b_bool":true,"b_null":null,"b_empty_obj":{},"b_empty_array":[],"b_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"b_empty_array_nested":[{},[],null],"b_obj":{"b_str":"A","b_num_int":1,"b_num_float":0.1,"b_bool":true,"b_null":null,"b_empty_obj":{},"b_empty_array":[],"b_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"b_empty_array_nested":[{},[],null],"b_obj":{"b_str":"A","b_num_int":1,"b_num_float":0.1,"b_bool":true,"b_null":null,"b_empty_obj":{},"b_empty_array":[],"b_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"b_empty_array_nested":[{},[],null]},"b_array":[{"b_str":"A","b_num_int":1,"b_num_float":0.1,"b_bool":true,"b_null":null,"b_empty_obj":{},"b_empty_array":[],"b_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"b_empty_array_nested":[{},[],null]},{"b_str":"A","b_num_int":1,"b_num_float":0.1,"b_bool":true,"b_null":null,"b_empty_obj":{},"b_empty_array":[],"b_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"b_empty_array_nested":[{},[],null]}]},"b_array":[{"b_str":"A","b_num_int":1,"b_num_float":0.1,"b_bool":true,"b_null":null,"b_empty_obj":{},"b_empty_array":[],"b_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"b_empty_array_nested":[{},[],null],"b_obj":{"b_str":"A","b_num_int":1,"b_num_float":0.1,"b_bool":true,"b_null":null,"b_empty_obj":{},"b_empty_array":[],"b_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"b_empty_array_nested":[{},[],null]},"b_array":[{"b_str":"A","b_num_int":1,"b_num_float":0.1,"b_bool":true,"b_null":null,"b_empty_obj":{},"b_empty_array":[],"b_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"b_empty_array_nested":[{},[],null]},{"b_str":"A","b_num_int":1,"b_num_float":0.1,"b_bool":true,"b_null":null,"b_empty_obj":{},"b_empty_array":[],"b_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"b_empty_array_nested":[{},[],null]}]},{"b_str":"A","b_num_int":1,"b_num_float":0.1,"b_bool":true,"b_null":null,"b_empty_obj":{},"b_empty_array":[],"b_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"b_empty_array_nested":[{},[],null],"b_obj":{"b_str":"A","b_num_int":1,"b_num_float":0.1,"b_bool":true,"b_null":null,"b_empty_obj":{},"b_empty_array":[],"b_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"b_empty_array_nested":[{},[],null]},"b_array":[{"b_str":"A","b_num_int":1,"b_num_float":0.1,"b_bool":true,"b_null":null,"b_empty_obj":{},"b_empty_array":[],"b_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"b_empty_array_nested":[{},[],null]},{"b_str":"A","b_num_int":1,"b_num_float":0.1,"b_bool":true,"b_null":null,"b_empty_obj":{},"b_empty_array":[],"b_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"b_empty_array_nested":[{},[],null]}]}]} |
| {"b_str":"A","b_num_int":1,"b_num_float":0.1,"b_bool":true,"b_null":null,"b_empty_obj":{},"b_empty_array":[],"b_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"b_empty_array_nested":[{},[],null],"b_obj":{"b_str":"A","b_num_int":1,"b_num_float":0.1,"b_bool":true,"b_null":null,"b_empty_obj":{},"b_empty_array":[],"b_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"b_empty_array_nested":[{},[],null],"b_obj":{"b_str":"A","b_num_int":1,"b_num_float":0.1,"b_bool":true,"b_null":null,"b_empty_obj":{},"b_empty_array":[],"b_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"b_empty_array_nested":[{},[],null]},"b_array":[{"b_str":"A","b_num_int":1,"b_num_float":0.1,"b_bool":true,"b_null":null,"b_empty_obj":{},"b_empty_array":[],"b_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"b_empty_array_nested":[{},[],null]},{"b_str":"A","b_num_int":1,"b_num_float":0.1,"b_bool":true,"b_null":null,"b_empty_obj":{},"b_empty_array":[],"b_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"b_empty_array_nested":[{},[],null]}]},"b_array":[{"b_str":"A","b_num_int":1,"b_num_float":0.1,"b_bool":true,"b_null":null,"b_empty_obj":{},"b_empty_array":[],"b_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"b_empty_array_nested":[{},[],null],"b_obj":{"b_str":"A","b_num_int":1,"b_num_float":0.1,"b_bool":true,"b_null":null,"b_empty_obj":{},"b_empty_array":[],"b_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"b_empty_array_nested":[{},[],null]},"b_array":[{"b_str":"A","b_num_int":1,"b_num_float":0.1,"b_bool":true,"b_null":null,"b_empty_obj":{},"b_empty_array":[],"b_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"b_empty_array_nested":[{},[],null]},{"b_str":"A","b_num_int":1,"b_num_float":0.1,"b_bool":true,"b_null":null,"b_empty_obj":{},"b_empty_array":[],"b_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"b_empty_array_nested":[{},[],null]}]},{"b_str":"A","b_num_int":1,"b_num_float":0.1,"b_bool":true,"b_null":null,"b_empty_obj":{},"b_empty_array":[],"b_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"b_empty_array_nested":[{},[],null],"b_obj":{"b_str":"A","b_num_int":1,"b_num_float":0.1,"b_bool":true,"b_null":null,"b_empty_obj":{},"b_empty_array":[],"b_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"b_empty_array_nested":[{},[],null]},"b_array":[{"b_str":"A","b_num_int":1,"b_num_float":0.1,"b_bool":true,"b_null":null,"b_empty_obj":{},"b_empty_array":[],"b_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"b_empty_array_nested":[{},[],null]},{"b_str":"A","b_num_int":1,"b_num_float":0.1,"b_bool":true,"b_null":null,"b_empty_obj":{},"b_empty_array":[],"b_empty_obj_nested":{"o1":{},"o2":[],"o3":null},"b_empty_array_nested":[{},[],null]}]}]} |

(4 rows)

!ok

{
  "queryType" : "scan",
  "dataSource" : {
    "type" : "table",
    "name" : "test_json_cols"
  },
  "intervals" : {
    "type" : "intervals",
    "intervals" : [ "-146136543-09-08T08:23:32.096Z/146140482-04-24T15:36:27.903Z" ]
  },
  "virtualColumns" : [ {
    "type" : "expression",
    "name" : "v0",
    "expression" : "to_json_string(\"c1\")",
    "outputType" : "STRING"
  } ],
  "resultFormat" : "compactedList",
  "columns" : [ "v0" ],
  "columnTypes" : [ "STRING" ],
  "granularity" : {
    "type" : "all"
  },
  "legacy" : false
}
!nativePlan

#-------------------------------------------------------------------------
# TESTCASE: test_func_json_keys TEST_ID: A001 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT json_keys(__time, '$') c
FROM test_json_cols;
+---+
| c |
+---+
|   |
|   |
|   |
|   |
+---+
(4 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_func_json_keys TEST_ID: A002 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT count(*) c
FROM test_json_cols
WHERE json_keys(__time, '$') IS NOT NULL;
+---+
| c |
+---+
| 0 |
+---+
(1 row)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_func_json_keys TEST_ID: A003 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT count(*) c
FROM test_json_cols
WHERE json_keys(__time, '$') IS NULL;
+---+
| c |
+---+
| 4 |
+---+
(1 row)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_func_json_keys TEST_ID: A004 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT json_keys('ABCD', '$') c
FROM test_json_cols;
+---+
| c |
+---+
|   |
|   |
|   |
|   |
+---+
(4 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_func_json_keys TEST_ID: A005 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT count(*) c
FROM test_json_cols
WHERE json_keys('ABCD', '$') IS NOT NULL;
+---+
| c |
+---+
| 0 |
+---+
(1 row)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_func_json_keys TEST_ID: A006 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT count(*) c
FROM test_json_cols
WHERE json_keys('ABCD', '$') IS NULL;
+---+
| c |
+---+
| 4 |
+---+
(1 row)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_func_json_keys TEST_ID: A007 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT json_keys(s_str, '$') c
FROM test_json_cols;
+---+
| c |
+---+
|   |
|   |
|   |
|   |
+---+
(4 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_func_json_keys TEST_ID: A008 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT count(*) c
FROM test_json_cols
WHERE json_keys(s_str, '$') IS NOT NULL;
+---+
| c |
+---+
| 0 |
+---+
(1 row)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_func_json_keys TEST_ID: A009 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT count(*) c
FROM test_json_cols
WHERE json_keys(s_str, '$') IS NULL;
+---+
| c |
+---+
| 4 |
+---+
(1 row)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_func_json_keys TEST_ID: A010 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT json_keys(1234, '$') c
FROM test_json_cols;
+---+
| c |
+---+
|   |
|   |
|   |
|   |
+---+
(4 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_func_json_keys TEST_ID: A011 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT count(*) c
FROM test_json_cols
WHERE json_keys(1234, '$') IS NOT NULL;
+---+
| c |
+---+
| 0 |
+---+
(1 row)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_func_json_keys TEST_ID: A012 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT count(*) c
FROM test_json_cols
WHERE json_keys(1234, '$') IS NULL;
+---+
| c |
+---+
| 4 |
+---+
(1 row)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_func_json_keys TEST_ID: A013 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT json_keys(s_num_int, '$') c
FROM test_json_cols;
+---+
| c |
+---+
|   |
|   |
|   |
|   |
+---+
(4 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_func_json_keys TEST_ID: A014 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT count(*) c
FROM test_json_cols
WHERE json_keys(s_num_int, '$') IS NOT NULL;
+---+
| c |
+---+
| 0 |
+---+
(1 row)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_func_json_keys TEST_ID: A015 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT count(*) c
FROM test_json_cols
WHERE json_keys(s_num_int, '$') IS NULL;
+---+
| c |
+---+
| 4 |
+---+
(1 row)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_func_json_keys TEST_ID: A016 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT json_keys(1234.5678, '$') c
FROM test_json_cols;
+---+
| c |
+---+
|   |
|   |
|   |
|   |
+---+
(4 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_func_json_keys TEST_ID: A017 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT count(*) c
FROM test_json_cols
WHERE json_keys(1234.5678, '$') IS NOT NULL;
+---+
| c |
+---+
| 0 |
+---+
(1 row)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_func_json_keys TEST_ID: A018 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT count(*) c
FROM test_json_cols
WHERE json_keys(1234.5678, '$') IS NULL;
+---+
| c |
+---+
| 4 |
+---+
(1 row)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_func_json_keys TEST_ID: A019 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT json_keys(s_num_float, '$') c
FROM test_json_cols;
+---+
| c |
+---+
|   |
|   |
|   |
|   |
+---+
(4 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_func_json_keys TEST_ID: A020 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT count(*) c
FROM test_json_cols
WHERE json_keys(s_num_float, '$') IS NOT NULL;
+---+
| c |
+---+
| 0 |
+---+
(1 row)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_func_json_keys TEST_ID: A021 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT count(*) c
FROM test_json_cols
WHERE json_keys(s_num_float, '$') IS NULL;
+---+
| c |
+---+
| 4 |
+---+
(1 row)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_func_json_keys TEST_ID: A022 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT json_keys(NULL, '$') c
FROM test_json_cols;
+---+
| c |
+---+
|   |
|   |
|   |
|   |
+---+
(4 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_func_json_keys TEST_ID: A023 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT count(*) c
FROM test_json_cols
WHERE json_keys(NULL, '$') IS NULL;
+---+
| c |
+---+
| 4 |
+---+
(1 row)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_func_json_keys TEST_ID: A024 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT count(*) c
FROM test_json_cols
WHERE json_keys(NULL, '$') IS NOT NULL;
+---+
| c |
+---+
| 0 |
+---+
(1 row)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_func_json_keys TEST_ID: A025 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT json_keys(s_null, '$') c
FROM test_json_cols;
+---+
| c |
+---+
|   |
|   |
|   |
|   |
+---+
(4 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_func_json_keys TEST_ID: A026 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT count(*) c
FROM test_json_cols
WHERE json_keys(s_null, '$') IS NULL;
+---+
| c |
+---+
| 4 |
+---+
(1 row)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_func_json_keys TEST_ID: A027 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT count(*) c
FROM test_json_cols
WHERE json_keys(s_null, '$') IS NOT NULL;
+---+
| c |
+---+
| 0 |
+---+
(1 row)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_func_json_keys TEST_ID: A028 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT json_keys(c1, '$.does.not.exist') c
FROM test_json_cols;
+---+
| c |
+---+
|   |
|   |
|   |
|   |
+---+
(4 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_func_json_keys TEST_ID: A029 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT count(*) c
FROM test_json_cols
WHERE json_keys(c1, '$.does.not.exist') IS NULL;
+---+
| c |
+---+
| 4 |
+---+
(1 row)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_func_json_keys TEST_ID: A030 TYPE: NEGATIVE TEST
#-------------------------------------------------------------------------
SELECT json_keys(c1, '$.a_array[0,1]') c
FROM test_json_cols;
QueryInterruptedException
!error

#-------------------------------------------------------------------------
# TESTCASE: test_func_json_keys TEST_ID: A031 TYPE: NEGATIVE TEST
#-------------------------------------------------------------------------
SELECT json_keys(c1, '$.a_array[0:2]') c
FROM test_json_cols;
QueryInterruptedException
!error

#-------------------------------------------------------------------------
# TESTCASE: test_func_json_keys TEST_ID: A032 TYPE: NEGATIVE TEST
#-------------------------------------------------------------------------
SELECT json_keys(c1, '$.a_array[:2]') c
FROM test_json_cols;
QueryInterruptedException
!error

#-------------------------------------------------------------------------
# TESTCASE: test_func_json_keys TEST_ID: A033 TYPE: NEGATIVE TEST
#-------------------------------------------------------------------------
SELECT json_keys(c1, '$.a_array[0:]') c
FROM test_json_cols;
QueryInterruptedException
!error

#-------------------------------------------------------------------------
# TESTCASE: test_func_json_keys TEST_ID: A034 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT json_keys(c1, '$.a_array[-1].a_str') c
FROM test_json_cols;
+---+
| c |
+---+
|   |
|   |
|   |
|   |
+---+
(4 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_func_json_keys TEST_ID: A035 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT json_keys(c1, '$.a_array[-2].a_str') c
FROM test_json_cols;
+---+
| c |
+---+
|   |
|   |
|   |
|   |
+---+
(4 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_func_json_keys TEST_ID: A036 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT json_keys(c1, '$.a_array[-1234567890].a_str') c
FROM test_json_cols;
+---+
| c |
+---+
|   |
|   |
|   |
|   |
+---+
(4 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_func_json_keys TEST_ID: A037 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT json_keys(c1, '$.a_array[0].a_str.length()') c
FROM test_json_cols;
+---+
| c |
+---+
|   |
|   |
|   |
|   |
+---+
(4 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_func_json_keys TEST_ID: A038 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT json_keys(s_str, '$') c
FROM test_json_cols;
+---+
| c |
+---+
|   |
|   |
|   |
|   |
+---+
(4 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_func_json_keys TEST_ID: A039 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT json_keys(s_num_int, '$') c
FROM test_json_cols;
+---+
| c |
+---+
|   |
|   |
|   |
|   |
+---+
(4 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_func_json_keys TEST_ID: A040 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT json_keys(s_num_float, '$') c
FROM test_json_cols;
+---+
| c |
+---+
|   |
|   |
|   |
|   |
+---+
(4 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_func_json_keys TEST_ID: A041 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT json_keys(s_null, '$') c
FROM test_json_cols;
+---+
| c |
+---+
|   |
|   |
|   |
|   |
+---+
(4 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_func_json_keys TEST_ID: A042 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT json_keys(c_empty_obj, '$') c
FROM test_json_cols;
+----+
| c  |
+----+
| [] |
| [] |
|    |
|    |
+----+
(4 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_func_json_keys TEST_ID: A043 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT json_keys(c_empty_array, '$') c
FROM test_json_cols;
+----+
| c  |
+----+
| [] |
| [] |
|    |
|    |
+----+
(4 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_func_json_keys TEST_ID: A044 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT json_keys(c_empty_obj_nested, '$') c
FROM test_json_cols;
+--------------+
| c            |
+--------------+
| [o1, o2, o3] |
| [o1, o2, o3] |
|              |
|              |
+--------------+
(4 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_func_json_keys TEST_ID: A045 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT json_keys(c_empty_array_nested, '$') c
FROM test_json_cols;
+-----------+
| c         |
+-----------+
| [0, 1, 2] |
| [0, 1, 2] |
|           |
|           |
+-----------+
(4 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_func_json_keys TEST_ID: A046 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT json_keys(c1, '$') c
FROM test_json_cols;
+---------------------------------------------------------------------------------------------------------------------------------------+
| c                                                                                                                                     |
+---------------------------------------------------------------------------------------------------------------------------------------+
| [a_str, a_num_int, a_num_float, a_bool, a_null, a_empty_obj, a_empty_array, a_empty_obj_nested, a_empty_array_nested, a_obj, a_array] |
| [a_str, a_num_int, a_num_float, a_bool, a_null, a_empty_obj, a_empty_array, a_empty_obj_nested, a_empty_array_nested, a_obj, a_array] |
| [b_str, b_num_int, b_num_float, b_bool, b_null, b_empty_obj, b_empty_array, b_empty_obj_nested, b_empty_array_nested, b_obj, b_array] |
| [b_str, b_num_int, b_num_float, b_bool, b_null, b_empty_obj, b_empty_array, b_empty_obj_nested, b_empty_array_nested, b_obj, b_array] |
+---------------------------------------------------------------------------------------------------------------------------------------+
(4 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_func_json_keys TEST_ID: A047 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT json_keys(c1, '$.a_obj') c
FROM test_json_cols;
+---------------------------------------------------------------------------------------------------------------------------------------+
| c                                                                                                                                     |
+---------------------------------------------------------------------------------------------------------------------------------------+
| [a_str, a_num_int, a_num_float, a_bool, a_null, a_empty_obj, a_empty_array, a_empty_obj_nested, a_empty_array_nested, a_obj, a_array] |
| [a_str, a_num_int, a_num_float, a_bool, a_null, a_empty_obj, a_empty_array, a_empty_obj_nested, a_empty_array_nested, a_obj, a_array] |
|                                                                                                                                       |
|                                                                                                                                       |
+---------------------------------------------------------------------------------------------------------------------------------------+
(4 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_func_json_keys TEST_ID: A048 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT json_keys(c1, '$.a_obj.a_str') c
FROM test_json_cols;
+---+
| c |
+---+
|   |
|   |
|   |
|   |
+---+
(4 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_func_json_keys TEST_ID: A049 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT json_keys(c1, '$.a_obj.a_num_int') c
FROM test_json_cols;
+---+
| c |
+---+
|   |
|   |
|   |
|   |
+---+
(4 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_func_json_keys TEST_ID: A050 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT json_keys(c1, '$.a_obj.a_num_float') c
FROM test_json_cols;
+---+
| c |
+---+
|   |
|   |
|   |
|   |
+---+
(4 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_func_json_keys TEST_ID: A051 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT json_keys(c1, '$.a_obj.a_null') c
FROM test_json_cols;
+---+
| c |
+---+
|   |
|   |
|   |
|   |
+---+
(4 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_func_json_keys TEST_ID: A052 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT json_keys(c1, '$.a_obj.a_empty_obj') c
FROM test_json_cols;
+----+
| c  |
+----+
| [] |
| [] |
|    |
|    |
+----+
(4 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_func_json_keys TEST_ID: A053 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT json_keys(c1, '$.a_obj.a_empty_array') c
FROM test_json_cols;
+----+
| c  |
+----+
| [] |
| [] |
|    |
|    |
+----+
(4 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_func_json_keys TEST_ID: A054 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT json_keys(c1, '$.a_obj.a_empty_obj_nested') c
FROM test_json_cols;
+--------------+
| c            |
+--------------+
| [o1, o2, o3] |
| [o1, o2, o3] |
|              |
|              |
+--------------+
(4 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_func_json_keys TEST_ID: A055 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT json_keys(c1, '$.a_obj.a_empty_array_nested') c
FROM test_json_cols;
+-----------+
| c         |
+-----------+
| [0, 1, 2] |
| [0, 1, 2] |
|           |
|           |
+-----------+
(4 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_func_json_keys TEST_ID: A056 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT json_keys(c1, '$.a_obj.a_obj') c
FROM test_json_cols;
+-----------------------------------------------------------------------------------------------------------------------+
| c                                                                                                                     |
+-----------------------------------------------------------------------------------------------------------------------+
| [a_str, a_num_int, a_num_float, a_bool, a_null, a_empty_obj, a_empty_array, a_empty_obj_nested, a_empty_array_nested] |
| [a_str, a_num_int, a_num_float, a_bool, a_null, a_empty_obj, a_empty_array, a_empty_obj_nested, a_empty_array_nested] |
|                                                                                                                       |
|                                                                                                                       |
+-----------------------------------------------------------------------------------------------------------------------+
(4 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_func_json_keys TEST_ID: A057 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT json_keys(c1, '$.a_obj.a_array') c
FROM test_json_cols;
+--------+
| c      |
+--------+
| [0, 1] |
| [0, 1] |
|        |
|        |
+--------+
(4 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_func_json_keys TEST_ID: A058 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT json_keys(c1, '$.a_obj.a_array[0]') c
FROM test_json_cols;
+-----------------------------------------------------------------------------------------------------------------------+
| c                                                                                                                     |
+-----------------------------------------------------------------------------------------------------------------------+
| [a_str, a_num_int, a_num_float, a_bool, a_null, a_empty_obj, a_empty_array, a_empty_obj_nested, a_empty_array_nested] |
| [a_str, a_num_int, a_num_float, a_bool, a_null, a_empty_obj, a_empty_array, a_empty_obj_nested, a_empty_array_nested] |
|                                                                                                                       |
|                                                                                                                       |
+-----------------------------------------------------------------------------------------------------------------------+
(4 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_func_json_keys TEST_ID: A059 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT json_keys(c1, '$.a_obj.a_array[0].a_str') c
FROM test_json_cols;
+---+
| c |
+---+
|   |
|   |
|   |
|   |
+---+
(4 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_func_json_keys TEST_ID: A060 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT json_keys(c1, '$.a_obj.a_array[0].a_num_int') c
FROM test_json_cols;
+---+
| c |
+---+
|   |
|   |
|   |
|   |
+---+
(4 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_func_json_keys TEST_ID: A061 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT json_keys(c1, '$.a_obj.a_array[0].a_num_float') c
FROM test_json_cols;
+---+
| c |
+---+
|   |
|   |
|   |
|   |
+---+
(4 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_func_json_keys TEST_ID: A062 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT json_keys(c1, '$.a_obj.a_array[0].a_null') c
FROM test_json_cols;
+---+
| c |
+---+
|   |
|   |
|   |
|   |
+---+
(4 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_func_json_keys TEST_ID: A063 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT json_keys(c1, '$.a_obj.a_array[0].a_empty_obj') c
FROM test_json_cols;
+----+
| c  |
+----+
| [] |
| [] |
|    |
|    |
+----+
(4 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_func_json_keys TEST_ID: A064 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT json_keys(c1, '$.a_obj.a_array[0].a_empty_array') c
FROM test_json_cols;
+----+
| c  |
+----+
| [] |
| [] |
|    |
|    |
+----+
(4 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_func_json_keys TEST_ID: A065 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT json_keys(c1, '$.a_obj.a_array[0].a_empty_obj_nested') c
FROM test_json_cols;
+--------------+
| c            |
+--------------+
| [o1, o2, o3] |
| [o1, o2, o3] |
|              |
|              |
+--------------+
(4 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_func_json_keys TEST_ID: A066 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT json_keys(c1, '$.a_obj.a_array[0].a_empty_array_nested') c
FROM test_json_cols;
+-----------+
| c         |
+-----------+
| [0, 1, 2] |
| [0, 1, 2] |
|           |
|           |
+-----------+
(4 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_func_json_keys TEST_ID: A067 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT json_keys(c1, '$.a_array') c
FROM test_json_cols;
+--------+
| c      |
+--------+
| [0, 1] |
| [0, 1] |
|        |
|        |
+--------+
(4 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_func_json_keys TEST_ID: A068 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT json_keys(c1, '$.a_array[0]') c
FROM test_json_cols;
+---------------------------------------------------------------------------------------------------------------------------------------+
| c                                                                                                                                     |
+---------------------------------------------------------------------------------------------------------------------------------------+
| [a_str, a_num_int, a_num_float, a_bool, a_null, a_empty_obj, a_empty_array, a_empty_obj_nested, a_empty_array_nested, a_obj, a_array] |
| [a_str, a_num_int, a_num_float, a_bool, a_null, a_empty_obj, a_empty_array, a_empty_obj_nested, a_empty_array_nested, a_obj, a_array] |
|                                                                                                                                       |
|                                                                                                                                       |
+---------------------------------------------------------------------------------------------------------------------------------------+
(4 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_func_json_keys TEST_ID: A069 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT json_keys(c1, '$.a_array[0].a_str') c
FROM test_json_cols;
+---+
| c |
+---+
|   |
|   |
|   |
|   |
+---+
(4 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_func_json_keys TEST_ID: A070 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT json_keys(c1, '$.a_array[0].a_num_int') c
FROM test_json_cols;
+---+
| c |
+---+
|   |
|   |
|   |
|   |
+---+
(4 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_func_json_keys TEST_ID: A071 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT json_keys(c1, '$.a_array[0].a_num_float') c
FROM test_json_cols;
+---+
| c |
+---+
|   |
|   |
|   |
|   |
+---+
(4 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_func_json_keys TEST_ID: A072 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT json_keys(c1, '$.a_array[0].a_null') c
FROM test_json_cols;
+---+
| c |
+---+
|   |
|   |
|   |
|   |
+---+
(4 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_func_json_keys TEST_ID: A073 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT json_keys(c1, '$.a_array[0].a_empty_obj') c
FROM test_json_cols;
+----+
| c  |
+----+
| [] |
| [] |
|    |
|    |
+----+
(4 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_func_json_keys TEST_ID: A074 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT json_keys(c1, '$.a_array[0].a_empty_array') c
FROM test_json_cols;
+----+
| c  |
+----+
| [] |
| [] |
|    |
|    |
+----+
(4 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_func_json_keys TEST_ID: A075 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT json_keys(c1, '$.a_array[0].a_empty_obj_nested') c
FROM test_json_cols;
+--------------+
| c            |
+--------------+
| [o1, o2, o3] |
| [o1, o2, o3] |
|              |
|              |
+--------------+
(4 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_func_json_keys TEST_ID: A076 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT json_keys(c1, '$.a_array[0].a_empty_array_nested') c
FROM test_json_cols;
+-----------+
| c         |
+-----------+
| [0, 1, 2] |
| [0, 1, 2] |
|           |
|           |
+-----------+
(4 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_func_json_keys TEST_ID: A077 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT json_keys(c1, '$.a_array[0].a_obj') c
FROM test_json_cols;
+-----------------------------------------------------------------------------------------------------------------------+
| c                                                                                                                     |
+-----------------------------------------------------------------------------------------------------------------------+
| [a_str, a_num_int, a_num_float, a_bool, a_null, a_empty_obj, a_empty_array, a_empty_obj_nested, a_empty_array_nested] |
| [a_str, a_num_int, a_num_float, a_bool, a_null, a_empty_obj, a_empty_array, a_empty_obj_nested, a_empty_array_nested] |
|                                                                                                                       |
|                                                                                                                       |
+-----------------------------------------------------------------------------------------------------------------------+
(4 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_func_json_keys TEST_ID: A078 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT json_keys(c1, '$.a_array[0].a_obj.a_str') c
FROM test_json_cols;
+---+
| c |
+---+
|   |
|   |
|   |
|   |
+---+
(4 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_func_json_keys TEST_ID: A079 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT json_keys(c1, '$.a_array[0].a_obj.a_num_int') c
FROM test_json_cols;
+---+
| c |
+---+
|   |
|   |
|   |
|   |
+---+
(4 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_func_json_keys TEST_ID: A080 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT json_keys(c1, '$.a_array[0].a_obj.a_num_float') c
FROM test_json_cols;
+---+
| c |
+---+
|   |
|   |
|   |
|   |
+---+
(4 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_func_json_keys TEST_ID: A081 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT json_keys(c1, '$.a_array[0].a_obj.a_null') c
FROM test_json_cols;
+---+
| c |
+---+
|   |
|   |
|   |
|   |
+---+
(4 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_func_json_keys TEST_ID: A082 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT json_keys(c1, '$.a_array[0].a_obj.a_empty_obj') c
FROM test_json_cols;
+----+
| c  |
+----+
| [] |
| [] |
|    |
|    |
+----+
(4 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_func_json_keys TEST_ID: A083 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT json_keys(c1, '$.a_array[0].a_obj.a_empty_array') c
FROM test_json_cols;
+----+
| c  |
+----+
| [] |
| [] |
|    |
|    |
+----+
(4 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_func_json_keys TEST_ID: A084 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT json_keys(c1, '$.a_array[0].a_obj.a_empty_obj_nested') c
FROM test_json_cols;
+--------------+
| c            |
+--------------+
| [o1, o2, o3] |
| [o1, o2, o3] |
|              |
|              |
+--------------+
(4 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_func_json_keys TEST_ID: A085 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT json_keys(c1, '$.a_array[0].a_obj.a_empty_array_nested') c
FROM test_json_cols;
+-----------+
| c         |
+-----------+
| [0, 1, 2] |
| [0, 1, 2] |
|           |
|           |
+-----------+
(4 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_func_json_keys TEST_ID: A086 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT json_keys(c1, '$.a_array[1].a_array') c
FROM test_json_cols;
+--------+
| c      |
+--------+
| [0, 1] |
| [0, 1] |
|        |
|        |
+--------+
(4 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_func_json_keys TEST_ID: A087 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT json_keys(c1, '$.a_array[1].a_array[1]') c
FROM test_json_cols;
+-----------------------------------------------------------------------------------------------------------------------+
| c                                                                                                                     |
+-----------------------------------------------------------------------------------------------------------------------+
| [a_str, a_num_int, a_num_float, a_bool, a_null, a_empty_obj, a_empty_array, a_empty_obj_nested, a_empty_array_nested] |
| [a_str, a_num_int, a_num_float, a_bool, a_null, a_empty_obj, a_empty_array, a_empty_obj_nested, a_empty_array_nested] |
|                                                                                                                       |
|                                                                                                                       |
+-----------------------------------------------------------------------------------------------------------------------+
(4 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_func_json_keys TEST_ID: A088 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT json_keys(c1, '$.a_array[1].a_array[1].a_str') c
FROM test_json_cols;
+---+
| c |
+---+
|   |
|   |
|   |
|   |
+---+
(4 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_func_json_keys TEST_ID: A089 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT json_keys(c1, '$.a_array[1].a_array[1].a_num_int') c
FROM test_json_cols;
+---+
| c |
+---+
|   |
|   |
|   |
|   |
+---+
(4 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_func_json_keys TEST_ID: A090 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT json_keys(c1, '$.a_array[1].a_array[1].a_num_float') c
FROM test_json_cols;
+---+
| c |
+---+
|   |
|   |
|   |
|   |
+---+
(4 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_func_json_keys TEST_ID: A091 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT json_keys(c1, '$.a_array[1].a_array[1].a_null') c
FROM test_json_cols;
+---+
| c |
+---+
|   |
|   |
|   |
|   |
+---+
(4 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_func_json_keys TEST_ID: A092 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT json_keys(c1, '$.a_array[1].a_array[1].a_empty_obj') c
FROM test_json_cols;
+----+
| c  |
+----+
| [] |
| [] |
|    |
|    |
+----+
(4 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_func_json_keys TEST_ID: A093 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT json_keys(c1, '$.a_array[1].a_array[1].a_empty_array') c
FROM test_json_cols;
+----+
| c  |
+----+
| [] |
| [] |
|    |
|    |
+----+
(4 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_func_json_keys TEST_ID: A094 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT json_keys(c1, '$.a_array[1].a_array[1].a_empty_obj_nested') c
FROM test_json_cols;
+--------------+
| c            |
+--------------+
| [o1, o2, o3] |
| [o1, o2, o3] |
|              |
|              |
+--------------+
(4 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_func_json_keys TEST_ID: A095 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT json_keys(c1, '$.a_array[1].a_array[1].a_empty_array_nested') c
FROM test_json_cols;
+-----------+
| c         |
+-----------+
| [0, 1, 2] |
| [0, 1, 2] |
|           |
|           |
+-----------+
(4 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_func_json_keys TEST_ID: A096 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT count(*) c
FROM test_json_cols
WHERE json_keys(c1, '$.a_obj') IS NULL;
+---+
| c |
+---+
| 2 |
+---+
(1 row)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_func_json_keys TEST_ID: A097 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT count(*) c
FROM test_json_cols
WHERE json_keys(c1, '$.a_obj.a_str') IS NULL;
+---+
| c |
+---+
| 4 |
+---+
(1 row)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_func_json_keys TEST_ID: A098 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT count(*) c
FROM
  (SELECT json_keys(c1, '$.a_obj')
   FROM test_json_cols);
+---+
| c |
+---+
| 4 |
+---+
(1 row)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_func_json_keys TEST_ID: A099 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT count(*) c
FROM
  (SELECT ALL json_keys(c1, '$.a_array')
   FROM test_json_cols);
+---+
| c |
+---+
| 4 |
+---+
(1 row)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_func_json_keys TEST_ID: A100 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT count(*) c
FROM
  (SELECT json_keys(c1, '$.a_obj.a_str')
   FROM test_json_cols);
+---+
| c |
+---+
| 4 |
+---+
(1 row)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_func_json_keys TEST_ID: A101 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT count(*) c
FROM
  (SELECT ALL json_keys(c1, '$.a_obj.a_num_int')
   FROM test_json_cols);
+---+
| c |
+---+
| 4 |
+---+
(1 row)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_func_json_keys TEST_ID: A102 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT count(mycol) c
FROM
  (SELECT json_keys(c1, '$') mycol
   FROM test_json_cols);
+---+
| c |
+---+
| 4 |
+---+
(1 row)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_func_json_keys TEST_ID: A103 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT count(mycol) c
FROM
  (SELECT json_keys(c1, '$.a_obj') mycol
   FROM test_json_cols);
+---+
| c |
+---+
| 2 |
+---+
(1 row)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_func_json_keys TEST_ID: A104 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT count(mycol) c
FROM
  (SELECT json_keys(c1, '$.a_array') mycol
   FROM test_json_cols);
+---+
| c |
+---+
| 2 |
+---+
(1 row)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_func_json_keys TEST_ID: A105 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT count(mycol) c
FROM
  (SELECT json_keys(c1, '$.a_array[0]') mycol
   FROM test_json_cols);
+---+
| c |
+---+
| 2 |
+---+
(1 row)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_func_json_keys TEST_ID: A106 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT count(mycol) c
FROM
  (SELECT json_keys(c1, '$.a_obj.a_str') mycol
   FROM test_json_cols);
+---+
| c |
+---+
| 0 |
+---+
(1 row)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_func_json_keys TEST_ID: A107 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT count(mycol) c
FROM
  (SELECT json_keys(c1, '$.a_obj.a_num_int') mycol
   FROM test_json_cols);
+---+
| c |
+---+
| 0 |
+---+
(1 row)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_func_json_keys TEST_ID: A108 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT count(mycol) c
FROM
  (SELECT json_keys(c1, '$.a_obj.a_num_float') mycol
   FROM test_json_cols);
+---+
| c |
+---+
| 0 |
+---+
(1 row)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_func_json_keys TEST_ID: A109 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT count(mycol) c
FROM
  (SELECT json_keys(c1, '$.a_obj.a_str') mycol
   FROM test_json_cols);
+---+
| c |
+---+
| 0 |
+---+
(1 row)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_func_json_keys TEST_ID: A110 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT count(mycol) c
FROM
  (SELECT json_keys(c1, '$.a_obj.a_null') mycol
   FROM test_json_cols);
+---+
| c |
+---+
| 0 |
+---+
(1 row)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_func_json_keys TEST_ID: A111 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT count(*) c
FROM
  (SELECT DISTINCT json_keys(c1, '$.a_obj')
   FROM test_json_cols);
+---+
| c |
+---+
| 2 |
+---+
(1 row)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_func_json_keys TEST_ID: A112 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT count(*) c
FROM
  (SELECT DISTINCT json_keys(c1, '$.a_obj.a_str')
   FROM test_json_cols);
+---+
| c |
+---+
| 1 |
+---+
(1 row)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_func_json_keys TEST_ID: A113 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT count(*) c
FROM
  (SELECT DISTINCT json_keys(c1, '$.a_obj.a_num_int')
   FROM test_json_cols);
+---+
| c |
+---+
| 1 |
+---+
(1 row)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_func_json_keys TEST_ID: A114 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT mycol,
       count(*) c
FROM
  (SELECT json_keys(c1, '$.a_obj') mycol
   FROM test_json_cols)
GROUP BY mycol;
+---------------------------------------------------------------------------------------------------------------------------------------+---+
| mycol                                                                                                                                 | c |
+---------------------------------------------------------------------------------------------------------------------------------------+---+
| [a_str, a_num_int, a_num_float, a_bool, a_null, a_empty_obj, a_empty_array, a_empty_obj_nested, a_empty_array_nested, a_obj, a_array] | 2 |
|                                                                                                                                       | 2 |
+---------------------------------------------------------------------------------------------------------------------------------------+---+
(2 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_func_json_keys TEST_ID: A115 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT mycol,
       count(*) c
FROM
  (SELECT json_keys(c1, '$.a_obj.a_str') mycol
   FROM test_json_cols)
GROUP BY mycol;
+-------+---+
| mycol | c |
+-------+---+
|       | 4 |
+-------+---+
(1 row)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_func_json_keys TEST_ID: A116 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT mycol,
       count(*) c
FROM
  (SELECT json_keys(c1, '$.a_obj.a_num_int') mycol
   FROM test_json_cols)
GROUP BY mycol;
+-------+---+
| mycol | c |
+-------+---+
|       | 4 |
+-------+---+
(1 row)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_func_json_keys TEST_ID: A117 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT mycol,
       count(*) c
FROM
  (SELECT c1,
          json_keys(c1, '$.') mycol
   FROM test_json_cols)
GROUP BY mycol
HAVING array_contains(mycol, 'a_str');
+---------------------------------------------------------------------------------------------------------------------------------------+---+
| mycol                                                                                                                                 | c |
+---------------------------------------------------------------------------------------------------------------------------------------+---+
| [a_str, a_num_int, a_num_float, a_bool, a_null, a_empty_obj, a_empty_array, a_empty_obj_nested, a_empty_array_nested, a_obj, a_array] | 2 |
+---------------------------------------------------------------------------------------------------------------------------------------+---+
(1 row)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_func_json_keys TEST_ID: A118 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT mycol,
       count(*) c
FROM
  (SELECT c1,
          json_keys(c1, '$.') mycol
   FROM test_json_cols)
GROUP BY mycol
HAVING NOT array_contains(mycol, 'a_str');
+---------------------------------------------------------------------------------------------------------------------------------------+---+
| mycol                                                                                                                                 | c |
+---------------------------------------------------------------------------------------------------------------------------------------+---+
| [b_str, b_num_int, b_num_float, b_bool, b_null, b_empty_obj, b_empty_array, b_empty_obj_nested, b_empty_array_nested, b_obj, b_array] | 2 |
+---------------------------------------------------------------------------------------------------------------------------------------+---+
(1 row)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_func_json_keys TEST_ID: A119 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT count(*) c
FROM test_json_cols
WHERE json_keys(c1, '$.a_obj') = json_keys(c2, '$.a_obj');
+---+
| c |
+---+
| 2 |
+---+
(1 row)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_func_json_keys TEST_ID: A120 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT count(*) c
FROM test_json_cols
WHERE json_keys(c1, '$.a_obj.a_str') = json_keys(c2, '$.a_obj.a_str');
+---+
| c |
+---+
| 0 |
+---+
(1 row)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_func_json_keys TEST_ID: A121 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT count(*) c
FROM test_json_cols
WHERE json_keys(c1, '$.a_obj.a_num_int') = json_keys(c2, '$.a_obj.a_num_int');
+---+
| c |
+---+
| 0 |
+---+
(1 row)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_func_json_keys TEST_ID: A122 TYPE: NEGATIVE TEST
#-------------------------------------------------------------------------
SELECT count(*) c
FROM test_json_cols t1
INNER JOIN test_json_cols t2 ON json_keys(t1.c1, '$.a_obj')=json_keys(t2.c1, '$.a_obj');
QueryUnsupportedException
!error

#-------------------------------------------------------------------------
# TESTCASE: test_func_json_keys TEST_ID: A123 TYPE: NEGATIVE TEST
#-------------------------------------------------------------------------
SELECT count(*) c
FROM test_json_cols t1
INNER JOIN test_json_cols t2 ON json_keys(t1.c1, '$.a_obj.a_str')=json_keys(t2.c1, '$.a_obj.a_str');
QueryUnsupportedException
!error

#-------------------------------------------------------------------------
# TESTCASE: test_func_json_keys TEST_ID: A124 TYPE: NEGATIVE TEST
#-------------------------------------------------------------------------
SELECT count(*) c
FROM test_json_cols t1
INNER JOIN test_json_cols t2 ON json_keys(t1.c1, '$.a_obj.a_num_int')=json_keys(t2.c1, '$.a_obj.a_num_int');
QueryUnsupportedException
!error

#-------------------------------------------------------------------------
# TESTCASE: test_func_json_keys TEST_ID: A125 TYPE: NEGATIVE TEST
#-------------------------------------------------------------------------
SELECT count(*) c
FROM test_json_cols t1
LEFT JOIN test_json_cols t2 ON json_keys(t1.c1, '$.a_obj')=json_keys(t2.c1, '$.a_obj');
QueryUnsupportedException
!error

#-------------------------------------------------------------------------
# TESTCASE: test_func_json_keys TEST_ID: A126 TYPE: NEGATIVE TEST
#-------------------------------------------------------------------------
SELECT count(*) c
FROM test_json_cols t1
LEFT JOIN test_json_cols t2 ON json_keys(t1.c1, '$.a_obj.a_str')=json_keys(t2.c1, '$.a_obj.a_str');
QueryUnsupportedException
!error

#-------------------------------------------------------------------------
# TESTCASE: test_func_json_keys TEST_ID: A127 TYPE: NEGATIVE TEST
#-------------------------------------------------------------------------
SELECT count(*) c
FROM test_json_cols t1
LEFT JOIN test_json_cols t2 ON json_keys(t1.c1, '$.a_obj.a_num_int')=json_keys(t2.c1, '$.a_obj.a_num_int');
QueryUnsupportedException
!error

#-------------------------------------------------------------------------
# TESTCASE: test_func_json_keys TEST_ID: A128 TYPE: NEGATIVE TEST
#-------------------------------------------------------------------------
SELECT count(*) c
FROM test_json_cols t1,
     test_json_cols t2
WHERE json_keys(t1.c1, '$.a_obj')=json_keys(t2.c1, '$.a_obj');
QueryUnsupportedException
!error

#-------------------------------------------------------------------------
# TESTCASE: test_func_json_keys TEST_ID: A129 TYPE: NEGATIVE TEST
#-------------------------------------------------------------------------
SELECT count(*) c
FROM test_json_cols t1,
     test_json_cols t2
WHERE json_keys(t1.c1, '$.a_obj.a_str')=json_keys(t2.c1, '$.a_obj.a_str');
QueryUnsupportedException
!error

#-------------------------------------------------------------------------
# TESTCASE: test_func_json_keys TEST_ID: A130 TYPE: NEGATIVE TEST
#-------------------------------------------------------------------------
SELECT count(*) c
FROM test_json_cols t1,
     test_json_cols t2
WHERE json_keys(t1.c1, '$.a_obj.a_num_int')=json_keys(t2.c1, '$.a_obj.a_num_int');
QueryUnsupportedException
!error

#-------------------------------------------------------------------------
# TESTCASE: test_func_json_keys TEST_ID: A131 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT json_keys(c1, '$.a_obj.a_array[0]') c
FROM test_json_cols
ORDER BY __time;
+-----------------------------------------------------------------------------------------------------------------------+
| c                                                                                                                     |
+-----------------------------------------------------------------------------------------------------------------------+
| [a_str, a_num_int, a_num_float, a_bool, a_null, a_empty_obj, a_empty_array, a_empty_obj_nested, a_empty_array_nested] |
| [a_str, a_num_int, a_num_float, a_bool, a_null, a_empty_obj, a_empty_array, a_empty_obj_nested, a_empty_array_nested] |
|                                                                                                                       |
|                                                                                                                       |
+-----------------------------------------------------------------------------------------------------------------------+
(4 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_func_json_keys TEST_ID: A132 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT json_keys(c1, '$.a_obj.a_array[0].a_str') c
FROM test_json_cols
ORDER BY __time;
+---+
| c |
+---+
|   |
|   |
|   |
|   |
+---+
(4 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_func_json_keys TEST_ID: A133 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT json_keys(c1, '$.a_obj.a_array[0].a_num_int') c
FROM test_json_cols
ORDER BY __time;
+---+
| c |
+---+
|   |
|   |
|   |
|   |
+---+
(4 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_func_json_keys TEST_ID: A134 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT json_keys(c1, '$.a_obj') c
FROM test_json_cols
LIMIT 1;
+---------------------------------------------------------------------------------------------------------------------------------------+
| c                                                                                                                                     |
+---------------------------------------------------------------------------------------------------------------------------------------+
| [a_str, a_num_int, a_num_float, a_bool, a_null, a_empty_obj, a_empty_array, a_empty_obj_nested, a_empty_array_nested, a_obj, a_array] |
+---------------------------------------------------------------------------------------------------------------------------------------+
(1 row)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_func_json_keys TEST_ID: A135 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT json_keys(c1, '$.a_obj.a_str') c
FROM test_json_cols
LIMIT 1;
+---+
| c |
+---+
|   |
+---+
(1 row)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_func_json_keys TEST_ID: A136 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT json_keys(c1, '$.a_obj.a_num_int') c
FROM test_json_cols
LIMIT 1;
+---+
| c |
+---+
|   |
+---+
(1 row)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_func_json_keys TEST_ID: A137 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT json_keys(c1, '$.a_obj') c
FROM test_json_cols
OFFSET 1;
+---------------------------------------------------------------------------------------------------------------------------------------+
| c                                                                                                                                     |
+---------------------------------------------------------------------------------------------------------------------------------------+
| [a_str, a_num_int, a_num_float, a_bool, a_null, a_empty_obj, a_empty_array, a_empty_obj_nested, a_empty_array_nested, a_obj, a_array] |
|                                                                                                                                       |
|                                                                                                                                       |
+---------------------------------------------------------------------------------------------------------------------------------------+
(3 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_func_json_keys TEST_ID: A138 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT json_keys(c1, '$.a_obj.a_str') c
FROM test_json_cols
OFFSET 1;
+---+
| c |
+---+
|   |
|   |
|   |
+---+
(3 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_func_json_keys TEST_ID: A139 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT json_keys(c1, '$.a_obj.a_num_int') c
FROM test_json_cols
OFFSET 1;
+---+
| c |
+---+
|   |
|   |
|   |
+---+
(3 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_func_json_keys TEST_ID: A140 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT json_keys(c1, '$.a_obj.a_array[0]') c
FROM test_json_cols
UNION ALL
SELECT json_keys(c1, '$.a_obj.a_array[0]') c
FROM test_json_cols;
+-----------------------------------------------------------------------------------------------------------------------+
| c                                                                                                                     |
+-----------------------------------------------------------------------------------------------------------------------+
| [a_str, a_num_int, a_num_float, a_bool, a_null, a_empty_obj, a_empty_array, a_empty_obj_nested, a_empty_array_nested] |
| [a_str, a_num_int, a_num_float, a_bool, a_null, a_empty_obj, a_empty_array, a_empty_obj_nested, a_empty_array_nested] |
| [a_str, a_num_int, a_num_float, a_bool, a_null, a_empty_obj, a_empty_array, a_empty_obj_nested, a_empty_array_nested] |
| [a_str, a_num_int, a_num_float, a_bool, a_null, a_empty_obj, a_empty_array, a_empty_obj_nested, a_empty_array_nested] |
|                                                                                                                       |
|                                                                                                                       |
|                                                                                                                       |
|                                                                                                                       |
+-----------------------------------------------------------------------------------------------------------------------+
(8 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_func_json_keys TEST_ID: A141 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT json_keys(c1, '$.a_obj.a_array[0].a_str') c
FROM test_json_cols
UNION ALL
SELECT json_keys(c1, '$.a_obj.a_array[0].a_str') c
FROM test_json_cols;
+---+
| c |
+---+
|   |
|   |
|   |
|   |
|   |
|   |
|   |
|   |
+---+
(8 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_func_json_keys TEST_ID: A142 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT json_keys(c1, '$.a_obj.a_array[0].a_num_int') c
FROM test_json_cols
UNION ALL
SELECT json_keys(c1, '$.a_obj.a_array[0].a_num_int') c
FROM test_json_cols;
+---+
| c |
+---+
|   |
|   |
|   |
|   |
|   |
|   |
|   |
|   |
+---+
(8 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_func_json_keys TEST_ID: A143 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------

SELECT json_keys(c1, '$.a_obj')
FROM test_json_cols;
+---------------------------------------------------------------------------------------------------------------------------------------+
| EXPR$0                                                                                                                                |
+---------------------------------------------------------------------------------------------------------------------------------------+
| [a_str, a_num_int, a_num_float, a_bool, a_null, a_empty_obj, a_empty_array, a_empty_obj_nested, a_empty_array_nested, a_obj, a_array] |
| [a_str, a_num_int, a_num_float, a_bool, a_null, a_empty_obj, a_empty_array, a_empty_obj_nested, a_empty_array_nested, a_obj, a_array] |
|                                                                                                                                       |
|                                                                                                                                       |
+---------------------------------------------------------------------------------------------------------------------------------------+
(4 rows)

!ok

{
  "queryType" : "scan",
  "dataSource" : {
    "type" : "table",
    "name" : "test_json_cols"
  },
  "intervals" : {
    "type" : "intervals",
    "intervals" : [ "-146136543-09-08T08:23:32.096Z/146140482-04-24T15:36:27.903Z" ]
  },
  "virtualColumns" : [ {
    "type" : "expression",
    "name" : "v0",
    "expression" : "json_keys(\"c1\",'$.a_obj')",
    "outputType" : "ARRAY<STRING>"
  } ],
  "resultFormat" : "compactedList",
  "columns" : [ "v0" ],
  "columnTypes" : [ "ARRAY<STRING>" ],
  "granularity" : {
    "type" : "all"
  },
  "legacy" : false
}
!nativePlan

#-------------------------------------------------------------------------
# TESTCASE: test_func_json_keys TEST_ID: A144 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------

SELECT json_keys(c1, '$.a_obj.a_str')
FROM test_json_cols;
+--------+
| EXPR$0 |
+--------+
|        |
|        |
|        |
|        |
+--------+
(4 rows)

!ok

{
  "queryType" : "scan",
  "dataSource" : {
    "type" : "table",
    "name" : "test_json_cols"
  },
  "intervals" : {
    "type" : "intervals",
    "intervals" : [ "-146136543-09-08T08:23:32.096Z/146140482-04-24T15:36:27.903Z" ]
  },
  "virtualColumns" : [ {
    "type" : "expression",
    "name" : "v0",
    "expression" : "json_keys(\"c1\",'$.a_obj.a_str')",
    "outputType" : "ARRAY<STRING>"
  } ],
  "resultFormat" : "compactedList",
  "columns" : [ "v0" ],
  "columnTypes" : [ "ARRAY<STRING>" ],
  "granularity" : {
    "type" : "all"
  },
  "legacy" : false
}
!nativePlan

#-------------------------------------------------------------------------
# TESTCASE: test_func_json_keys TEST_ID: A145 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------

SELECT json_keys(c1, '$.a_obj.a_num_int')
FROM test_json_cols;
+--------+
| EXPR$0 |
+--------+
|        |
|        |
|        |
|        |
+--------+
(4 rows)

!ok

{
  "queryType" : "scan",
  "dataSource" : {
    "type" : "table",
    "name" : "test_json_cols"
  },
  "intervals" : {
    "type" : "intervals",
    "intervals" : [ "-146136543-09-08T08:23:32.096Z/146140482-04-24T15:36:27.903Z" ]
  },
  "virtualColumns" : [ {
    "type" : "expression",
    "name" : "v0",
    "expression" : "json_keys(\"c1\",'$.a_obj.a_num_int')",
    "outputType" : "ARRAY<STRING>"
  } ],
  "resultFormat" : "compactedList",
  "columns" : [ "v0" ],
  "columnTypes" : [ "ARRAY<STRING>" ],
  "granularity" : {
    "type" : "all"
  },
  "legacy" : false
}
!nativePlan

#-------------------------------------------------------------------------
# TESTCASE: test_func_json_paths TEST_ID: A001 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT json_paths(__time) c
FROM test_json_cols;
+-----+
| c   |
+-----+
| [$] |
| [$] |
| [$] |
| [$] |
+-----+
(4 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_func_json_paths TEST_ID: A002 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT count(*) c
FROM test_json_cols
WHERE json_paths(__time) IS NOT NULL;
+---+
| c |
+---+
| 4 |
+---+
(1 row)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_func_json_paths TEST_ID: A003 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT count(*) c
FROM test_json_cols
WHERE json_paths(__time) IS NULL;
+---+
| c |
+---+
| 0 |
+---+
(1 row)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_func_json_paths TEST_ID: A004 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT json_paths('ABCD') c
FROM test_json_cols;
+-----+
| c   |
+-----+
| [$] |
| [$] |
| [$] |
| [$] |
+-----+
(4 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_func_json_paths TEST_ID: A005 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT count(*) c
FROM test_json_cols
WHERE json_paths('ABCD') IS NOT NULL;
+---+
| c |
+---+
| 4 |
+---+
(1 row)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_func_json_paths TEST_ID: A006 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT count(*) c
FROM test_json_cols
WHERE json_paths('ABCD') IS NULL;
+---+
| c |
+---+
| 0 |
+---+
(1 row)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_func_json_paths TEST_ID: A007 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT json_paths(s_str) c
FROM test_json_cols;
+-----+
| c   |
+-----+
| [$] |
| [$] |
| [$] |
| [$] |
+-----+
(4 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_func_json_paths TEST_ID: A008 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT count(*) c
FROM test_json_cols
WHERE json_paths(s_str) IS NOT NULL;
+---+
| c |
+---+
| 4 |
+---+
(1 row)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_func_json_paths TEST_ID: A009 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT count(*) c
FROM test_json_cols
WHERE json_paths(s_str) IS NULL;
+---+
| c |
+---+
| 0 |
+---+
(1 row)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_func_json_paths TEST_ID: A010 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT json_paths(1234) c
FROM test_json_cols;
+-----+
| c   |
+-----+
| [$] |
| [$] |
| [$] |
| [$] |
+-----+
(4 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_func_json_paths TEST_ID: A011 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT count(*) c
FROM test_json_cols
WHERE json_paths(1234) IS NOT NULL;
+---+
| c |
+---+
| 4 |
+---+
(1 row)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_func_json_paths TEST_ID: A012 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT count(*) c
FROM test_json_cols
WHERE json_paths(1234) IS NULL;
+---+
| c |
+---+
| 0 |
+---+
(1 row)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_func_json_paths TEST_ID: A013 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT json_paths(s_num_int) c
FROM test_json_cols;
+-----+
| c   |
+-----+
| [$] |
| [$] |
| [$] |
| [$] |
+-----+
(4 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_func_json_paths TEST_ID: A014 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT count(*) c
FROM test_json_cols
WHERE json_paths(s_num_int) IS NOT NULL;
+---+
| c |
+---+
| 4 |
+---+
(1 row)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_func_json_paths TEST_ID: A015 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT count(*) c
FROM test_json_cols
WHERE json_paths(s_num_int) IS NULL;
+---+
| c |
+---+
| 0 |
+---+
(1 row)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_func_json_paths TEST_ID: A016 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT json_paths(1234.5678) c
FROM test_json_cols;
+-----+
| c   |
+-----+
| [$] |
| [$] |
| [$] |
| [$] |
+-----+
(4 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_func_json_paths TEST_ID: A017 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT count(*) c
FROM test_json_cols
WHERE json_paths(1234.5678) IS NOT NULL;
+---+
| c |
+---+
| 4 |
+---+
(1 row)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_func_json_paths TEST_ID: A018 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT count(*) c
FROM test_json_cols
WHERE json_paths(1234.5678) IS NULL;
+---+
| c |
+---+
| 0 |
+---+
(1 row)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_func_json_paths TEST_ID: A019 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT json_paths(s_num_float) c
FROM test_json_cols;
+-----+
| c   |
+-----+
| [$] |
| [$] |
| [$] |
| [$] |
+-----+
(4 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_func_json_paths TEST_ID: A020 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT count(*) c
FROM test_json_cols
WHERE json_paths(s_num_float) IS NOT NULL;
+---+
| c |
+---+
| 4 |
+---+
(1 row)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_func_json_paths TEST_ID: A021 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT count(*) c
FROM test_json_cols
WHERE json_paths(s_num_float) IS NULL;
+---+
| c |
+---+
| 0 |
+---+
(1 row)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_func_json_paths TEST_ID: A022 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT json_paths(NULL) c
FROM test_json_cols;
+-----+
| c   |
+-----+
| [$] |
| [$] |
| [$] |
| [$] |
+-----+
(4 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_func_json_paths TEST_ID: A023 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT count(*) c
FROM test_json_cols
WHERE json_paths(NULL) IS NULL;
+---+
| c |
+---+
| 0 |
+---+
(1 row)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_func_json_paths TEST_ID: A024 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT count(*) c
FROM test_json_cols
WHERE json_paths(NULL) IS NOT NULL;
+---+
| c |
+---+
| 4 |
+---+
(1 row)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_func_json_paths TEST_ID: A025 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT json_paths(json_query(s_str, '$')) c
FROM test_json_cols;
+-----+
| c   |
+-----+
| [$] |
| [$] |
| [$] |
| [$] |
+-----+
(4 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_func_json_paths TEST_ID: A026 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT json_paths(json_query(s_num_int, '$')) c
FROM test_json_cols;
+-----+
| c   |
+-----+
| [$] |
| [$] |
| [$] |
| [$] |
+-----+
(4 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_func_json_paths TEST_ID: A027 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT json_paths(json_query(s_num_float, '$')) c
FROM test_json_cols;
+-----+
| c   |
+-----+
| [$] |
| [$] |
| [$] |
| [$] |
+-----+
(4 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_func_json_paths TEST_ID: A028 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT json_paths(json_query(s_null, '$')) c
FROM test_json_cols;
+-----+
| c   |
+-----+
| [$] |
| [$] |
| [$] |
| [$] |
+-----+
(4 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_func_json_paths TEST_ID: A029 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT json_paths(json_query(c_empty_obj, '$')) c
FROM test_json_cols;
+-----+
| c   |
+-----+
| [$] |
| [$] |
| []  |
| []  |
+-----+
(4 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_func_json_paths TEST_ID: A030 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT json_paths(json_query(c_empty_array, '$')) c
FROM test_json_cols;
+-----+
| c   |
+-----+
| [$] |
| [$] |
| [$] |
| [$] |
+-----+
(4 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_func_json_paths TEST_ID: A031 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT json_paths(json_query(c_empty_obj_nested, '$')) c
FROM test_json_cols;
+--------------+
| c            |
+--------------+
| [$.o2, $.o3] |
| [$.o2, $.o3] |
| [$]          |
| [$]          |
+--------------+
(4 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_func_json_paths TEST_ID: A032 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT json_paths(json_query(c_empty_array_nested, '$')) c
FROM test_json_cols;
+--------------+
| c            |
+--------------+
| [$[2], $[1]] |
| [$[2], $[1]] |
| [$]          |
| [$]          |
+--------------+
(4 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_func_json_paths TEST_ID: A033 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT array_length(json_paths(c1)) c
FROM test_json_cols;
+-----+
| c   |
+-----+
| 130 |
| 130 |
| 130 |
| 130 |
+-----+
(4 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_func_json_paths TEST_ID: A034 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT array_length(json_paths(json_query(c1, '$.a_obj'))) c
FROM test_json_cols;
+----+
| c  |
+----+
|  1 |
|  1 |
| 40 |
| 40 |
+----+
(4 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_func_json_paths TEST_ID: A035 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT json_paths(json_query(c1, '$.a_obj.a_str')) c
FROM test_json_cols;
+-----+
| c   |
+-----+
| [$] |
| [$] |
| [$] |
| [$] |
+-----+
(4 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_func_json_paths TEST_ID: A036 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT json_paths(json_query(c1, '$.a_obj.a_num_int')) c
FROM test_json_cols;
+-----+
| c   |
+-----+
| [$] |
| [$] |
| [$] |
| [$] |
+-----+
(4 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_func_json_paths TEST_ID: A037 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT json_paths(json_query(c1, '$.a_obj.a_num_float')) c
FROM test_json_cols;
+-----+
| c   |
+-----+
| [$] |
| [$] |
| [$] |
| [$] |
+-----+
(4 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_func_json_paths TEST_ID: A038 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT json_paths(json_query(c1, '$.a_obj.a_null')) c
FROM test_json_cols;
+-----+
| c   |
+-----+
| [$] |
| [$] |
| [$] |
| [$] |
+-----+
(4 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_func_json_paths TEST_ID: A039 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT json_paths(json_query(c1, '$.a_obj.a_empty_obj')) c
FROM test_json_cols;
+-----+
| c   |
+-----+
| [$] |
| [$] |
| []  |
| []  |
+-----+
(4 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_func_json_paths TEST_ID: A040 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT json_paths(json_query(c1, '$.a_obj.a_empty_array')) c
FROM test_json_cols;
+-----+
| c   |
+-----+
| [$] |
| [$] |
| [$] |
| [$] |
+-----+
(4 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_func_json_paths TEST_ID: A041 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT json_paths(json_query(c1, '$.a_obj.a_empty_obj_nested')) c
FROM test_json_cols;
+--------------+
| c            |
+--------------+
| [$.o2, $.o3] |
| [$.o2, $.o3] |
| [$]          |
| [$]          |
+--------------+
(4 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_func_json_paths TEST_ID: A042 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT json_paths(json_query(c1, '$.a_obj.a_empty_array_nested')) c
FROM test_json_cols;
+--------------+
| c            |
+--------------+
| [$[2], $[1]] |
| [$[2], $[1]] |
| [$]          |
| [$]          |
+--------------+
(4 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_func_json_paths TEST_ID: A043 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT json_paths(json_query(c1, '$.a_obj.a_obj')) c
FROM test_json_cols;
+------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| c                                                                                                                                                                                  |
+------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| [$.a_str, $.a_empty_array, $.a_null, $.a_num_int, $.a_bool, $.a_empty_array_nested[1], $.a_empty_array_nested[2], $.a_empty_obj_nested.o2, $.a_num_float, $.a_empty_obj_nested.o3] |
| [$.a_str, $.a_empty_array, $.a_null, $.a_num_int, $.a_bool, $.a_empty_array_nested[1], $.a_empty_array_nested[2], $.a_empty_obj_nested.o2, $.a_num_float, $.a_empty_obj_nested.o3] |
| [$]                                                                                                                                                                                |
| [$]                                                                                                                                                                                |
+------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
(4 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_func_json_paths TEST_ID: A044 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT json_paths(json_query(c1, '$.a_obj.a_array')) c
FROM test_json_cols;
+----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| c                                                                                                                                                                                                                                                                                                                                                                                                                                |
+----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| [$[0].a_bool, $[1].a_num_int, $[0].a_num_int, $[1].a_bool, $[1].a_num_float, $[0].a_num_float, $[1].a_empty_array, $[0].a_empty_array, $[1].a_str, $[1].a_null, $[0].a_null, $[0].a_str, $[1].a_empty_array_nested[2], $[0].a_empty_obj_nested.o3, $[1].a_empty_obj_nested.o2, $[0].a_empty_obj_nested.o2, $[1].a_empty_obj_nested.o3, $[0].a_empty_array_nested[2], $[1].a_empty_array_nested[1], $[0].a_empty_array_nested[1]] |
| [$[0].a_bool, $[1].a_num_int, $[0].a_num_int, $[1].a_bool, $[1].a_num_float, $[0].a_num_float, $[1].a_empty_array, $[0].a_empty_array, $[1].a_str, $[1].a_null, $[0].a_null, $[0].a_str, $[1].a_empty_array_nested[2], $[0].a_empty_obj_nested.o3, $[1].a_empty_obj_nested.o2, $[0].a_empty_obj_nested.o2, $[1].a_empty_obj_nested.o3, $[0].a_empty_array_nested[2], $[1].a_empty_array_nested[1], $[0].a_empty_array_nested[1]] |
| [$]                                                                                                                                                                                                                                                                                                                                                                                                                              |
| [$]                                                                                                                                                                                                                                                                                                                                                                                                                              |
+----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
(4 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_func_json_paths TEST_ID: A045 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT json_paths(json_query(c1, '$.a_obj.a_array[0]')) c
FROM test_json_cols;
+------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| c                                                                                                                                                                                  |
+------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| [$.a_str, $.a_empty_array, $.a_null, $.a_num_int, $.a_bool, $.a_empty_array_nested[1], $.a_empty_array_nested[2], $.a_empty_obj_nested.o2, $.a_num_float, $.a_empty_obj_nested.o3] |
| [$.a_str, $.a_empty_array, $.a_null, $.a_num_int, $.a_bool, $.a_empty_array_nested[1], $.a_empty_array_nested[2], $.a_empty_obj_nested.o2, $.a_num_float, $.a_empty_obj_nested.o3] |
| [$]                                                                                                                                                                                |
| [$]                                                                                                                                                                                |
+------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
(4 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_func_json_paths TEST_ID: A046 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT json_paths(json_query(c1, '$.a_obj.a_array[0].a_str')) c
FROM test_json_cols;
+-----+
| c   |
+-----+
| [$] |
| [$] |
| [$] |
| [$] |
+-----+
(4 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_func_json_paths TEST_ID: A047 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT json_paths(json_query(c1, '$.a_obj.a_array[0].a_num_int')) c
FROM test_json_cols;
+-----+
| c   |
+-----+
| [$] |
| [$] |
| [$] |
| [$] |
+-----+
(4 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_func_json_paths TEST_ID: A048 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT json_paths(json_query(c1, '$.a_obj.a_array[0].a_num_float')) c
FROM test_json_cols;
+-----+
| c   |
+-----+
| [$] |
| [$] |
| [$] |
| [$] |
+-----+
(4 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_func_json_paths TEST_ID: A049 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT json_paths(json_query(c1, '$.a_obj.a_array[0].a_null')) c
FROM test_json_cols;
+-----+
| c   |
+-----+
| [$] |
| [$] |
| [$] |
| [$] |
+-----+
(4 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_func_json_paths TEST_ID: A050 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT json_paths(json_query(c1, '$.a_obj.a_array[0].a_empty_obj')) c
FROM test_json_cols;
+-----+
| c   |
+-----+
| [$] |
| [$] |
| []  |
| []  |
+-----+
(4 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_func_json_paths TEST_ID: A051 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT json_paths(json_query(c1, '$.a_obj.a_array[0].a_empty_array')) c
FROM test_json_cols;
+-----+
| c   |
+-----+
| [$] |
| [$] |
| [$] |
| [$] |
+-----+
(4 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_func_json_paths TEST_ID: A052 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT json_paths(json_query(c1, '$.a_obj.a_array[0].a_empty_obj_nested')) c
FROM test_json_cols;
+--------------+
| c            |
+--------------+
| [$.o2, $.o3] |
| [$.o2, $.o3] |
| [$]          |
| [$]          |
+--------------+
(4 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_func_json_paths TEST_ID: A053 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT json_paths(json_query(c1, '$.a_obj.a_array[0].a_empty_array_nested')) c
FROM test_json_cols;
+--------------+
| c            |
+--------------+
| [$[2], $[1]] |
| [$[2], $[1]] |
| [$]          |
| [$]          |
+--------------+
(4 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_func_json_paths TEST_ID: A054 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT array_length(json_paths(json_query(c1, '$.a_array'))) c
FROM test_json_cols;
+----+
| c  |
+----+
|  1 |
|  1 |
| 80 |
| 80 |
+----+
(4 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_func_json_paths TEST_ID: A055 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT array_length(json_paths(json_query(c1, '$.a_array[0]'))) c
FROM test_json_cols;
+----+
| c  |
+----+
|  1 |
|  1 |
| 40 |
| 40 |
+----+
(4 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_func_json_paths TEST_ID: A056 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT json_paths(json_query(c1, '$.a_array[0].a_str')) c
FROM test_json_cols;
+-----+
| c   |
+-----+
| [$] |
| [$] |
| [$] |
| [$] |
+-----+
(4 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_func_json_paths TEST_ID: A057 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT json_paths(json_query(c1, '$.a_array[0].a_num_int')) c
FROM test_json_cols;
+-----+
| c   |
+-----+
| [$] |
| [$] |
| [$] |
| [$] |
+-----+
(4 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_func_json_paths TEST_ID: A058 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT json_paths(json_query(c1, '$.a_array[0].a_num_float')) c
FROM test_json_cols;
+-----+
| c   |
+-----+
| [$] |
| [$] |
| [$] |
| [$] |
+-----+
(4 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_func_json_paths TEST_ID: A059 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT json_paths(json_query(c1, '$.a_array[0].a_null')) c
FROM test_json_cols;
+-----+
| c   |
+-----+
| [$] |
| [$] |
| [$] |
| [$] |
+-----+
(4 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_func_json_paths TEST_ID: A060 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT json_paths(json_query(c1, '$.a_array[0].a_empty_obj')) c
FROM test_json_cols;
+-----+
| c   |
+-----+
| [$] |
| [$] |
| []  |
| []  |
+-----+
(4 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_func_json_paths TEST_ID: A061 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT json_paths(json_query(c1, '$.a_array[0].a_empty_array')) c
FROM test_json_cols;
+-----+
| c   |
+-----+
| [$] |
| [$] |
| [$] |
| [$] |
+-----+
(4 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_func_json_paths TEST_ID: A062 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT json_paths(json_query(c1, '$.a_array[0].a_empty_obj_nested')) c
FROM test_json_cols;
+--------------+
| c            |
+--------------+
| [$.o2, $.o3] |
| [$.o2, $.o3] |
| [$]          |
| [$]          |
+--------------+
(4 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_func_json_paths TEST_ID: A063 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT json_paths(json_query(c1, '$.a_array[0].a_empty_array_nested')) c
FROM test_json_cols;
+--------------+
| c            |
+--------------+
| [$[2], $[1]] |
| [$[2], $[1]] |
| [$]          |
| [$]          |
+--------------+
(4 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_func_json_paths TEST_ID: A064 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT json_paths(json_query(c1, '$.a_array[0].a_obj')) c
FROM test_json_cols;
+------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| c                                                                                                                                                                                  |
+------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| [$.a_str, $.a_empty_array, $.a_null, $.a_num_int, $.a_bool, $.a_empty_array_nested[1], $.a_empty_array_nested[2], $.a_empty_obj_nested.o2, $.a_num_float, $.a_empty_obj_nested.o3] |
| [$.a_str, $.a_empty_array, $.a_null, $.a_num_int, $.a_bool, $.a_empty_array_nested[1], $.a_empty_array_nested[2], $.a_empty_obj_nested.o2, $.a_num_float, $.a_empty_obj_nested.o3] |
| [$]                                                                                                                                                                                |
| [$]                                                                                                                                                                                |
+------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
(4 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_func_json_paths TEST_ID: A065 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT json_paths(json_query(c1, '$.a_array[0].a_obj.a_str')) c
FROM test_json_cols;
+-----+
| c   |
+-----+
| [$] |
| [$] |
| [$] |
| [$] |
+-----+
(4 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_func_json_paths TEST_ID: A066 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT json_paths(json_query(c1, '$.a_array[0].a_obj.a_num_int')) c
FROM test_json_cols;
+-----+
| c   |
+-----+
| [$] |
| [$] |
| [$] |
| [$] |
+-----+
(4 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_func_json_paths TEST_ID: A067 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT json_paths(json_query(c1, '$.a_array[0].a_obj.a_num_float')) c
FROM test_json_cols;
+-----+
| c   |
+-----+
| [$] |
| [$] |
| [$] |
| [$] |
+-----+
(4 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_func_json_paths TEST_ID: A068 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT json_paths(json_query(c1, '$.a_array[0].a_obj.a_null')) c
FROM test_json_cols;
+-----+
| c   |
+-----+
| [$] |
| [$] |
| [$] |
| [$] |
+-----+
(4 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_func_json_paths TEST_ID: A069 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT json_paths(json_query(c1, '$.a_array[0].a_obj.a_empty_obj')) c
FROM test_json_cols;
+-----+
| c   |
+-----+
| [$] |
| [$] |
| []  |
| []  |
+-----+
(4 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_func_json_paths TEST_ID: A070 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT json_paths(json_query(c1, '$.a_array[0].a_obj.a_empty_array')) c
FROM test_json_cols;
+-----+
| c   |
+-----+
| [$] |
| [$] |
| [$] |
| [$] |
+-----+
(4 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_func_json_paths TEST_ID: A071 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT json_paths(json_query(c1, '$.a_array[0].a_obj.a_empty_obj_nested')) c
FROM test_json_cols;
+--------------+
| c            |
+--------------+
| [$.o2, $.o3] |
| [$.o2, $.o3] |
| [$]          |
| [$]          |
+--------------+
(4 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_func_json_paths TEST_ID: A072 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT json_paths(json_query(c1, '$.a_array[0].a_obj.a_empty_array_nested')) c
FROM test_json_cols;
+--------------+
| c            |
+--------------+
| [$[2], $[1]] |
| [$[2], $[1]] |
| [$]          |
| [$]          |
+--------------+
(4 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_func_json_paths TEST_ID: A073 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT json_paths(json_query(c1, '$.a_array[1].a_array')) c
FROM test_json_cols;
+----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| c                                                                                                                                                                                                                                                                                                                                                                                                                                |
+----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| [$[0].a_bool, $[1].a_num_int, $[0].a_num_int, $[1].a_bool, $[1].a_num_float, $[0].a_num_float, $[1].a_empty_array, $[0].a_empty_array, $[1].a_str, $[1].a_null, $[0].a_null, $[0].a_str, $[1].a_empty_array_nested[2], $[0].a_empty_obj_nested.o3, $[1].a_empty_obj_nested.o2, $[0].a_empty_obj_nested.o2, $[1].a_empty_obj_nested.o3, $[0].a_empty_array_nested[2], $[1].a_empty_array_nested[1], $[0].a_empty_array_nested[1]] |
| [$[0].a_bool, $[1].a_num_int, $[0].a_num_int, $[1].a_bool, $[1].a_num_float, $[0].a_num_float, $[1].a_empty_array, $[0].a_empty_array, $[1].a_str, $[1].a_null, $[0].a_null, $[0].a_str, $[1].a_empty_array_nested[2], $[0].a_empty_obj_nested.o3, $[1].a_empty_obj_nested.o2, $[0].a_empty_obj_nested.o2, $[1].a_empty_obj_nested.o3, $[0].a_empty_array_nested[2], $[1].a_empty_array_nested[1], $[0].a_empty_array_nested[1]] |
| [$]                                                                                                                                                                                                                                                                                                                                                                                                                              |
| [$]                                                                                                                                                                                                                                                                                                                                                                                                                              |
+----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
(4 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_func_json_paths TEST_ID: A074 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT json_paths(json_query(c1, '$.a_array[1].a_array[1]')) c
FROM test_json_cols;
+------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| c                                                                                                                                                                                  |
+------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| [$.a_str, $.a_empty_array, $.a_null, $.a_num_int, $.a_bool, $.a_empty_array_nested[1], $.a_empty_array_nested[2], $.a_empty_obj_nested.o2, $.a_num_float, $.a_empty_obj_nested.o3] |
| [$.a_str, $.a_empty_array, $.a_null, $.a_num_int, $.a_bool, $.a_empty_array_nested[1], $.a_empty_array_nested[2], $.a_empty_obj_nested.o2, $.a_num_float, $.a_empty_obj_nested.o3] |
| [$]                                                                                                                                                                                |
| [$]                                                                                                                                                                                |
+------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
(4 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_func_json_paths TEST_ID: A075 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT json_paths(json_query(c1, '$.a_array[1].a_array[1].a_str')) c
FROM test_json_cols;
+-----+
| c   |
+-----+
| [$] |
| [$] |
| [$] |
| [$] |
+-----+
(4 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_func_json_paths TEST_ID: A076 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT json_paths(json_query(c1, '$.a_array[1].a_array[1].a_num_int')) c
FROM test_json_cols;
+-----+
| c   |
+-----+
| [$] |
| [$] |
| [$] |
| [$] |
+-----+
(4 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_func_json_paths TEST_ID: A077 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT json_paths(json_query(c1, '$.a_array[1].a_array[1].a_num_float')) c
FROM test_json_cols;
+-----+
| c   |
+-----+
| [$] |
| [$] |
| [$] |
| [$] |
+-----+
(4 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_func_json_paths TEST_ID: A078 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT json_paths(json_query(c1, '$.a_array[1].a_array[1].a_null')) c
FROM test_json_cols;
+-----+
| c   |
+-----+
| [$] |
| [$] |
| [$] |
| [$] |
+-----+
(4 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_func_json_paths TEST_ID: A079 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT json_paths(json_query(c1, '$.a_array[1].a_array[1].a_empty_obj')) c
FROM test_json_cols;
+-----+
| c   |
+-----+
| [$] |
| [$] |
| []  |
| []  |
+-----+
(4 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_func_json_paths TEST_ID: A080 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT json_paths(json_query(c1, '$.a_array[1].a_array[1].a_empty_array')) c
FROM test_json_cols;
+-----+
| c   |
+-----+
| [$] |
| [$] |
| [$] |
| [$] |
+-----+
(4 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_func_json_paths TEST_ID: A081 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT json_paths(json_query(c1, '$.a_array[1].a_array[1].a_empty_obj_nested')) c
FROM test_json_cols;
+--------------+
| c            |
+--------------+
| [$.o2, $.o3] |
| [$.o2, $.o3] |
| [$]          |
| [$]          |
+--------------+
(4 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_func_json_paths TEST_ID: A082 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT json_paths(json_query(c1, '$.a_array[1].a_array[1].a_empty_array_nested')) c
FROM test_json_cols;
+--------------+
| c            |
+--------------+
| [$[2], $[1]] |
| [$[2], $[1]] |
| [$]          |
| [$]          |
+--------------+
(4 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_func_json_paths TEST_ID: A083 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT count(*) c
FROM test_json_cols
WHERE json_paths(c1) IS NULL;
+---+
| c |
+---+
| 0 |
+---+
(1 row)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_func_json_paths TEST_ID: A084 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT count(*) c
FROM test_json_cols
WHERE json_paths(c1) IS NULL;
+---+
| c |
+---+
| 0 |
+---+
(1 row)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_func_json_paths TEST_ID: A085 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT count(*) c
FROM
  (SELECT json_paths(c1)
   FROM test_json_cols);
+---+
| c |
+---+
| 4 |
+---+
(1 row)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_func_json_paths TEST_ID: A086 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT count(*) c
FROM
  (SELECT ALL json_paths(c1)
   FROM test_json_cols);
+---+
| c |
+---+
| 4 |
+---+
(1 row)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_func_json_paths TEST_ID: A087 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT count(mycol) c
FROM
  (SELECT json_paths(c1) mycol
   FROM test_json_cols);
+---+
| c |
+---+
| 4 |
+---+
(1 row)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_func_json_paths TEST_ID: A088 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT count(mycol) c
FROM
  (SELECT json_paths(c1) mycol
   FROM test_json_cols);
+---+
| c |
+---+
| 4 |
+---+
(1 row)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_func_json_paths TEST_ID: A089 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT count(*) c
FROM
  (SELECT DISTINCT json_paths(c1)
   FROM test_json_cols);
+---+
| c |
+---+
| 2 |
+---+
(1 row)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_func_json_paths TEST_ID: A090 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT mycol,
       count(*) c
FROM
  (SELECT json_paths(json_query(c1, '$.a_obj.a_obj')) mycol
   FROM test_json_cols)
GROUP BY mycol;
+------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+---+
| mycol                                                                                                                                                                              | c |
+------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+---+
| [$.a_str, $.a_empty_array, $.a_null, $.a_num_int, $.a_bool, $.a_empty_array_nested[1], $.a_empty_array_nested[2], $.a_empty_obj_nested.o2, $.a_num_float, $.a_empty_obj_nested.o3] | 2 |
| [$]                                                                                                                                                                                | 2 |
+------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+---+
(2 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_func_json_paths TEST_ID: A091 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT mycol,
       count(*) c
FROM
  (SELECT c1,
          json_paths(json_query(c1, '$.a_obj.a_obj')) mycol
   FROM test_json_cols)
GROUP BY mycol
HAVING array_contains(mycol, '$.a_str');
+------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+---+
| mycol                                                                                                                                                                              | c |
+------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+---+
| [$.a_str, $.a_empty_array, $.a_null, $.a_num_int, $.a_bool, $.a_empty_array_nested[1], $.a_empty_array_nested[2], $.a_empty_obj_nested.o2, $.a_num_float, $.a_empty_obj_nested.o3] | 2 |
+------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+---+
(1 row)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_func_json_paths TEST_ID: A092 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT count(*) c
FROM test_json_cols
WHERE json_paths(c1) = json_paths(c2);
+---+
| c |
+---+
| 4 |
+---+
(1 row)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_func_json_paths TEST_ID: A093 TYPE: NEGATIVE TEST
#-------------------------------------------------------------------------
SELECT count(*) c
FROM test_json_cols t1
INNER JOIN test_json_cols t2 ON json_paths(t1.c1)=json_paths(t2.c1);
QueryUnsupportedException
!error

#-------------------------------------------------------------------------
# TESTCASE: test_func_json_paths TEST_ID: A094 TYPE: NEGATIVE TEST
#-------------------------------------------------------------------------
SELECT count(*) c
FROM test_json_cols t1
LEFT JOIN test_json_cols t2 ON json_paths(t1.c1)=json_paths(t2.c1);
QueryUnsupportedException
!error

#-------------------------------------------------------------------------
# TESTCASE: test_func_json_paths TEST_ID: A095 TYPE: NEGATIVE TEST
#-------------------------------------------------------------------------
SELECT count(*) c
FROM test_json_cols t1,
     test_json_cols t2
WHERE json_paths(t1.c1)=json_paths(t2.c1);
QueryUnsupportedException
!error

#-------------------------------------------------------------------------
# TESTCASE: test_func_json_paths TEST_ID: A096 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT json_paths(json_query(c1, '$.a_obj.a_obj')) c
FROM test_json_cols
ORDER BY __time;
+------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| c                                                                                                                                                                                  |
+------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| [$.a_str, $.a_empty_array, $.a_null, $.a_num_int, $.a_bool, $.a_empty_array_nested[1], $.a_empty_array_nested[2], $.a_empty_obj_nested.o2, $.a_num_float, $.a_empty_obj_nested.o3] |
| [$.a_str, $.a_empty_array, $.a_null, $.a_num_int, $.a_bool, $.a_empty_array_nested[1], $.a_empty_array_nested[2], $.a_empty_obj_nested.o2, $.a_num_float, $.a_empty_obj_nested.o3] |
| [$]                                                                                                                                                                                |
| [$]                                                                                                                                                                                |
+------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
(4 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_func_json_paths TEST_ID: A097 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT json_paths(c1) c
FROM test_json_cols
LIMIT 1;
+----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| c|

| [$.a_array[1].a_array[1].a_str, $.a_obj.a_obj.a_bool, $.a_array[1].a_array[0].a_empty_obj_nested.o2, $.a_array[1].a_array[0].a_empty_obj_nested.o3, $.a_obj.a_array[0].a_num_float, $.a_array[1].a_array[0].a_empty_array_nested[1], $.a_array[1].a_array[0].a_empty_array_nested[2], $.a_obj.a_array[0].a_str, $.a_obj.a_array[1].a_null, $.a_str, $.a_array[0].a_obj.a_num_float, $.a_null, $.a_array[0].a_str, $.a_array[1].a_num_float, $.a_array[1].a_array[1].a_num_float, $.a_array[1].a_obj.a_bool, $.a_array[1].a_array[1].a_null, $.a_obj.a_array[1].a_num_float, $.a_array[1].a_num_int, $.a_num_int, $.a_array[0].a_empty_array_nested[2], $.a_array[0].a_empty_array_nested[1], $.a_array[0].a_array[1].a_bool, $.a_obj.a_array[1].a_str, $.a_array[1].a_null, $.a_array[0].a_empty_obj_nested.o2, $.a_array[0].a_empty_obj_nested.o3, $.a_array[1].a_array[0].a_num_float, $.a_array[0].a_num_float, $.a_array[0].a_array[0].a_empty_array, $.a_array[1].a_empty_array, $.a_array[1].a_obj.a_str, $.a_array[0].a_obj.a_num_int, $.a_array[0].a_obj.a_null, $.a_array[1].a_array[1].a_empty_obj_nested.o3, $.a_obj.a_obj.a_num_float, $.a_array[0].a_num_int, $.a_array[0].a_bool, $.a_array[1].a_array[1].a_empty_obj_nested.o2, $.a_obj.a_array[0].a_num_int, $.a_obj.a_array[0].a_bool, $.a_array[1].a_array[1].a_num_int, $.a_array[0].a_array[0].a_bool, $.a_array[1].a_array[0].a_null, $.a_array[0].a_obj.a_empty_obj_nested.o2, $.a_array[0].a_obj.a_empty_obj_nested.o3, $.a_obj.a_bool, $.a_array[1].a_obj.a_num_float, $.a_obj.a_array[1].a_empty_obj_nested.o3, $.a_array[0].a_array[1].a_empty_array, $.a_obj.a_array[1].a_empty_obj_nested.o2, $.a_array[0].a_obj.a_bool, $.a_obj.a_array[1].a_num_int, $.a_obj.a_array[1].a_bool, $.a_num_float, $.a_array[1].a_str, $.a_array[1].a_empty_obj_nested.o3, $.a_array[1].a_empty_obj_nested.o2, $.a_obj.a_obj.a_empty_array_nested[1], $.a_obj.a_obj.a_empty_array_nested[2], $.a_array[0].a_array[1].a_empty_array_nested[1], $.a_array[0].a_obj.a_str, $.a_array[0].a_array[1].a_empty_array_nested[2], $.a_array[1].a_obj.a_num_int, $.a_obj.a_obj.a_num_int, $.a_array[0].a_array[0].a_str, $.a_obj.a_str, $.a_array[0].a_array[0].a_empty_array_nested[1], $.a_array[0].a_array[0].a_empty_obj_nested.o2, $.a_array[1].a_obj.a_empty_array, $.a_array[0].a_array[1].a_null, $.a_obj.a_num_float, $.a_array[0].a_array[0].a_num_float, $.a_obj.a_obj.a_empty_array, $.a_obj.a_array[0].a_empty_obj_nested.o2, $.a_obj.a_array[0].a_empty_obj_nested.o3, $.a_array[1].a_array[0].a_empty_array, $.a_obj.a_array[0].a_empty_array_nested[1], $.a_obj.a_array[0].a_empty_array_nested[2], $.a_obj.a_empty_obj_nested.o3, $.a_array[0].a_array[1].a_str, $.a_obj.a_null, $.a_array[1].a_bool, $.a_obj.a_empty_obj_nested.o2, $.a_bool, $.a_array[1].a_array[0].a_num_int, $.a_obj.a_obj.a_null, $.a_array[0].a_array[0].a_null, $.a_array[1].a_obj.a_empty_obj_nested.o3, $.a_obj.a_num_int, $.a_array[1].a_obj.a_empty_obj_nested.o2, $.a_array[0].a_array[0].a_empty_obj_nested.o3, $.a_empty_array_nested[1], $.a_empty_array_nested[2], $.a_obj.a_empty_array_nested[1], $.a_obj.a_empty_array_nested[2], $.a_array[1].a_obj.a_empty_array_nested[2], $.a_array[0].a_array[0].a_empty_array_nested[2], $.a_array[1].a_array[1].a_empty_array, $.a_empty_obj_nested.o2, $.a_empty_obj_nested.o3, $.a_array[1].a_obj.a_empty_array_nested[1], $.a_empty_array, $.a_array[0].a_obj.a_empty_array, $.a_array[1].a_array[1].a_empty_array_nested[2], $.a_obj.a_empty_array, $.a_array[1].a_array[1].a_bool, $.a_array[1].a_array[1].a_empty_array_nested[1], $.a_array[0].a_array[0].a_num_int, $.a_obj.a_obj.a_str, $.a_array[0].a_null, $.a_obj.a_array[0].a_empty_array, $.a_obj.a_array[1].a_empty_array_nested[2], $.a_array[0].a_obj.a_empty_array_nested[1], $.a_array[0].a_obj.a_empty_array_nested[2], $.a_array[0].a_empty_array, $.a_obj.a_array[1].a_empty_array_nested[1], $.a_obj.a_array[0].a_null, $.a_array[1].a_array[0].a_str, $.a_array[1].a_empty_array_nested[1], $.a_array[1].a_array[0].a_bool, $.a_array[0].a_array[1].a_num_int, $.a_array[1].a_empty_array_nested[2], $.a_obj.a_array[1].a_empty_array, $.a_array[0].a_array[1].a_num_float, $.a_array[0].a_array[1].a_empty_obj_nested.o2, $.a_array[0].a_array[1].a_empty_obj_nested.o3, $.a_obj.a_obj.a_empty_obj_nested.o2, $.a_array[1].a_obj.a_null, $.a_obj.a_obj.a_empty_obj_nested.o3] |

(1 row)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_func_json_paths TEST_ID: A098 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT json_paths(c1) c
FROM test_json_cols
OFFSET 1;

| c|

| [$.a_array[1].a_array[1].a_str, $.a_obj.a_obj.a_bool, $.a_array[1].a_array[0].a_empty_obj_nested.o2, $.a_array[1].a_array[0].a_empty_obj_nested.o3, $.a_obj.a_array[0].a_num_float, $.a_array[1].a_array[0].a_empty_array_nested[1], $.a_array[1].a_array[0].a_empty_array_nested[2], $.a_obj.a_array[0].a_str, $.a_obj.a_array[1].a_null, $.a_str, $.a_array[0].a_obj.a_num_float, $.a_null, $.a_array[0].a_str, $.a_array[1].a_num_float, $.a_array[1].a_array[1].a_num_float, $.a_array[1].a_obj.a_bool, $.a_array[1].a_array[1].a_null, $.a_obj.a_array[1].a_num_float, $.a_array[1].a_num_int, $.a_num_int, $.a_array[0].a_empty_array_nested[2], $.a_array[0].a_empty_array_nested[1], $.a_array[0].a_array[1].a_bool, $.a_obj.a_array[1].a_str, $.a_array[1].a_null, $.a_array[0].a_empty_obj_nested.o2, $.a_array[0].a_empty_obj_nested.o3, $.a_array[1].a_array[0].a_num_float, $.a_array[0].a_num_float, $.a_array[0].a_array[0].a_empty_array, $.a_array[1].a_empty_array, $.a_array[1].a_obj.a_str, $.a_array[0].a_obj.a_num_int, $.a_array[0].a_obj.a_null, $.a_array[1].a_array[1].a_empty_obj_nested.o3, $.a_obj.a_obj.a_num_float, $.a_array[0].a_num_int, $.a_array[0].a_bool, $.a_array[1].a_array[1].a_empty_obj_nested.o2, $.a_obj.a_array[0].a_num_int, $.a_obj.a_array[0].a_bool, $.a_array[1].a_array[1].a_num_int, $.a_array[0].a_array[0].a_bool, $.a_array[1].a_array[0].a_null, $.a_array[0].a_obj.a_empty_obj_nested.o2, $.a_array[0].a_obj.a_empty_obj_nested.o3, $.a_obj.a_bool, $.a_array[1].a_obj.a_num_float, $.a_obj.a_array[1].a_empty_obj_nested.o3, $.a_array[0].a_array[1].a_empty_array, $.a_obj.a_array[1].a_empty_obj_nested.o2, $.a_array[0].a_obj.a_bool, $.a_obj.a_array[1].a_num_int, $.a_obj.a_array[1].a_bool, $.a_num_float, $.a_array[1].a_str, $.a_array[1].a_empty_obj_nested.o3, $.a_array[1].a_empty_obj_nested.o2, $.a_obj.a_obj.a_empty_array_nested[1], $.a_obj.a_obj.a_empty_array_nested[2], $.a_array[0].a_array[1].a_empty_array_nested[1], $.a_array[0].a_obj.a_str, $.a_array[0].a_array[1].a_empty_array_nested[2], $.a_array[1].a_obj.a_num_int, $.a_obj.a_obj.a_num_int, $.a_array[0].a_array[0].a_str, $.a_obj.a_str, $.a_array[0].a_array[0].a_empty_array_nested[1], $.a_array[0].a_array[0].a_empty_obj_nested.o2, $.a_array[1].a_obj.a_empty_array, $.a_array[0].a_array[1].a_null, $.a_obj.a_num_float, $.a_array[0].a_array[0].a_num_float, $.a_obj.a_obj.a_empty_array, $.a_obj.a_array[0].a_empty_obj_nested.o2, $.a_obj.a_array[0].a_empty_obj_nested.o3, $.a_array[1].a_array[0].a_empty_array, $.a_obj.a_array[0].a_empty_array_nested[1], $.a_obj.a_array[0].a_empty_array_nested[2], $.a_obj.a_empty_obj_nested.o3, $.a_array[0].a_array[1].a_str, $.a_obj.a_null, $.a_array[1].a_bool, $.a_obj.a_empty_obj_nested.o2, $.a_bool, $.a_array[1].a_array[0].a_num_int, $.a_obj.a_obj.a_null, $.a_array[0].a_array[0].a_null, $.a_array[1].a_obj.a_empty_obj_nested.o3, $.a_obj.a_num_int, $.a_array[1].a_obj.a_empty_obj_nested.o2, $.a_array[0].a_array[0].a_empty_obj_nested.o3, $.a_empty_array_nested[1], $.a_empty_array_nested[2], $.a_obj.a_empty_array_nested[1], $.a_obj.a_empty_array_nested[2], $.a_array[1].a_obj.a_empty_array_nested[2], $.a_array[0].a_array[0].a_empty_array_nested[2], $.a_array[1].a_array[1].a_empty_array, $.a_empty_obj_nested.o2, $.a_empty_obj_nested.o3, $.a_array[1].a_obj.a_empty_array_nested[1], $.a_empty_array, $.a_array[0].a_obj.a_empty_array, $.a_array[1].a_array[1].a_empty_array_nested[2], $.a_obj.a_empty_array, $.a_array[1].a_array[1].a_bool, $.a_array[1].a_array[1].a_empty_array_nested[1], $.a_array[0].a_array[0].a_num_int, $.a_obj.a_obj.a_str, $.a_array[0].a_null, $.a_obj.a_array[0].a_empty_array, $.a_obj.a_array[1].a_empty_array_nested[2], $.a_array[0].a_obj.a_empty_array_nested[1], $.a_array[0].a_obj.a_empty_array_nested[2], $.a_array[0].a_empty_array, $.a_obj.a_array[1].a_empty_array_nested[1], $.a_obj.a_array[0].a_null, $.a_array[1].a_array[0].a_str, $.a_array[1].a_empty_array_nested[1], $.a_array[1].a_array[0].a_bool, $.a_array[0].a_array[1].a_num_int, $.a_array[1].a_empty_array_nested[2], $.a_obj.a_array[1].a_empty_array, $.a_array[0].a_array[1].a_num_float, $.a_array[0].a_array[1].a_empty_obj_nested.o2, $.a_array[0].a_array[1].a_empty_obj_nested.o3, $.a_obj.a_obj.a_empty_obj_nested.o2, $.a_array[1].a_obj.a_null, $.a_obj.a_obj.a_empty_obj_nested.o3] |
| [$.b_array[1].b_bool, $.b_array[1].b_array[0].b_num_int, $.b_array[0].b_array[0].b_num_float, $.b_obj.b_array[0].b_empty_array_nested[1], $.b_obj.b_array[0].b_empty_array_nested[2], $.b_array[0].b_obj.b_bool, $.b_array[1].b_obj.b_str, $.b_obj.b_num_int, $.b_array[0].b_array[1].b_null, $.b_obj.b_array[0].b_bool, $.b_array[1].b_array[0].b_str, $.b_num_float, $.b_array[0].b_array[1].b_empty_obj_nested.o3, $.b_obj.b_str, $.b_array[0].b_str, $.b_array[0].b_bool, $.b_array[0].b_array[1].b_empty_obj_nested.o2, $.b_null, $.b_obj.b_obj.b_empty_obj_nested.o3, $.b_obj.b_obj.b_empty_obj_nested.o2, $.b_array[0].b_array[1].b_empty_array, $.b_array[0].b_array[0].b_empty_array_nested[1], $.b_array[0].b_array[0].b_empty_array_nested[2], $.b_obj.b_empty_obj_nested.o2, $.b_obj.b_array[1].b_empty_obj_nested.o2, $.b_obj.b_array[1].b_empty_obj_nested.o3, $.b_array[0].b_array[0].b_empty_array, $.b_obj.b_empty_obj_nested.o3, $.b_array[0].b_obj.b_str, $.b_obj.b_array[1].b_bool, $.b_obj.b_array[0].b_str, $.b_obj.b_array[0].b_num_int, $.b_array[1].b_str, $.b_obj.b_array[1].b_num_float, $.b_bool, $.b_array[1].b_obj.b_bool, $.b_array[1].b_obj.b_empty_array, $.b_array[1].b_array[1].b_empty_array, $.b_empty_array_nested[2], $.b_empty_array_nested[1], $.b_array[1].b_array[1].b_bool, $.b_array[0].b_empty_obj_nested.o2, $.b_array[0].b_empty_obj_nested.o3, $.b_array[1].b_array[1].b_empty_array_nested[1], $.b_array[1].b_array[1].b_empty_array_nested[2], $.b_obj.b_empty_array, $.b_array[0].b_empty_array, $.b_obj.b_obj.b_num_float, $.b_array[1].b_array[1].b_num_int, $.b_obj.b_array[1].b_null, $.b_array[0].b_array[1].b_num_float, $.b_array[1].b_empty_array_nested[1], $.b_array[1].b_array[1].b_empty_obj_nested.o3, $.b_array[1].b_array[1].b_empty_obj_nested.o2, $.b_array[1].b_array[0].b_empty_array, $.b_array[0].b_array[0].b_null, $.b_array[1].b_empty_array_nested[2], $.b_array[1].b_array[1].b_str, $.b_obj.b_obj.b_empty_array_nested[2], $.b_obj.b_obj.b_empty_array_nested[1], $.b_obj.b_obj.b_null, $.b_array[1].b_obj.b_num_int, $.b_obj.b_obj.b_num_int, $.b_array[0].b_obj.b_empty_obj_nested.o3, $.b_array[0].b_obj.b_empty_obj_nested.o2, $.b_str, $.b_empty_obj_nested.o2, $.b_obj.b_array[0].b_null, $.b_empty_obj_nested.o3, $.b_array[1].b_empty_array, $.b_array[1].b_array[1].b_num_float, $.b_array[0].b_obj.b_empty_array, $.b_obj.b_array[1].b_empty_array, $.b_array[0].b_obj.b_null, $.b_num_int, $.b_array[1].b_array[0].b_empty_obj_nested.o2, $.b_array[1].b_null, $.b_array[1].b_empty_obj_nested.o2, $.b_array[1].b_empty_obj_nested.o3, $.b_array[1].b_array[0].b_empty_array_nested[2], $.b_array[1].b_array[0].b_empty_array_nested[1], $.b_obj.b_bool, $.b_obj.b_array[0].b_num_float, $.b_obj.b_array[1].b_num_int, $.b_array[1].b_array[0].b_num_float, $.b_array[0].b_empty_array_nested[2], $.b_array[0].b_empty_array_nested[1], $.b_array[1].b_array[0].b_empty_obj_nested.o3, $.b_array[1].b_num_int, $.b_array[0].b_num_float, $.b_array[1].b_num_float, $.b_array[1].b_array[0].b_bool, $.b_array[0].b_obj.b_empty_array_nested[2], $.b_obj.b_num_float, $.b_array[0].b_obj.b_empty_array_nested[1], $.b_array[0].b_obj.b_num_float, $.b_array[0].b_null, $.b_array[0].b_obj.b_num_int, $.b_empty_array, $.b_array[0].b_array[1].b_num_int, $.b_obj.b_array[1].b_empty_array_nested[2], $.b_obj.b_array[1].b_empty_array_nested[1], $.b_array[0].b_num_int, $.b_array[1].b_array[0].b_null, $.b_array[1].b_obj.b_null, $.b_array[0].b_array[1].b_empty_array_nested[2], $.b_obj.b_obj.b_bool, $.b_array[0].b_array[0].b_bool, $.b_obj.b_obj.b_empty_array, $.b_array[0].b_array[1].b_str, $.b_array[1].b_obj.b_empty_array_nested[1], $.b_array[1].b_obj.b_empty_array_nested[2], $.b_obj.b_null, $.b_obj.b_array[1].b_str, $.b_obj.b_empty_array_nested[2], $.b_array[0].b_array[0].b_num_int, $.b_obj.b_empty_array_nested[1], $.b_array[1].b_obj.b_empty_obj_nested.o3, $.b_array[0].b_array[0].b_empty_obj_nested.o3, $.b_array[1].b_obj.b_empty_obj_nested.o2, $.b_array[0].b_array[0].b_empty_obj_nested.o2, $.b_array[1].b_array[1].b_null, $.b_obj.b_array[0].b_empty_array, $.b_array[0].b_array[1].b_empty_array_nested[1], $.b_obj.b_array[0].b_empty_obj_nested.o3, $.b_array[0].b_array[1].b_bool, $.b_obj.b_array[0].b_empty_obj_nested.o2, $.b_array[0].b_array[0].b_str, $.b_obj.b_obj.b_str, $.b_array[1].b_obj.b_num_float] |
| [$.b_array[1].b_bool, $.b_array[1].b_array[0].b_num_int, $.b_array[0].b_array[0].b_num_float, $.b_obj.b_array[0].b_empty_array_nested[1], $.b_obj.b_array[0].b_empty_array_nested[2], $.b_array[0].b_obj.b_bool, $.b_array[1].b_obj.b_str, $.b_obj.b_num_int, $.b_array[0].b_array[1].b_null, $.b_obj.b_array[0].b_bool, $.b_array[1].b_array[0].b_str, $.b_num_float, $.b_array[0].b_array[1].b_empty_obj_nested.o3, $.b_obj.b_str, $.b_array[0].b_str, $.b_array[0].b_bool, $.b_array[0].b_array[1].b_empty_obj_nested.o2, $.b_null, $.b_obj.b_obj.b_empty_obj_nested.o3, $.b_obj.b_obj.b_empty_obj_nested.o2, $.b_array[0].b_array[1].b_empty_array, $.b_array[0].b_array[0].b_empty_array_nested[1], $.b_array[0].b_array[0].b_empty_array_nested[2], $.b_obj.b_empty_obj_nested.o2, $.b_obj.b_array[1].b_empty_obj_nested.o2, $.b_obj.b_array[1].b_empty_obj_nested.o3, $.b_array[0].b_array[0].b_empty_array, $.b_obj.b_empty_obj_nested.o3, $.b_array[0].b_obj.b_str, $.b_obj.b_array[1].b_bool, $.b_obj.b_array[0].b_str, $.b_obj.b_array[0].b_num_int, $.b_array[1].b_str, $.b_obj.b_array[1].b_num_float, $.b_bool, $.b_array[1].b_obj.b_bool, $.b_array[1].b_obj.b_empty_array, $.b_array[1].b_array[1].b_empty_array, $.b_empty_array_nested[2], $.b_empty_array_nested[1], $.b_array[1].b_array[1].b_bool, $.b_array[0].b_empty_obj_nested.o2, $.b_array[0].b_empty_obj_nested.o3, $.b_array[1].b_array[1].b_empty_array_nested[1], $.b_array[1].b_array[1].b_empty_array_nested[2], $.b_obj.b_empty_array, $.b_array[0].b_empty_array, $.b_obj.b_obj.b_num_float, $.b_array[1].b_array[1].b_num_int, $.b_obj.b_array[1].b_null, $.b_array[0].b_array[1].b_num_float, $.b_array[1].b_empty_array_nested[1], $.b_array[1].b_array[1].b_empty_obj_nested.o3, $.b_array[1].b_array[1].b_empty_obj_nested.o2, $.b_array[1].b_array[0].b_empty_array, $.b_array[0].b_array[0].b_null, $.b_array[1].b_empty_array_nested[2], $.b_array[1].b_array[1].b_str, $.b_obj.b_obj.b_empty_array_nested[2], $.b_obj.b_obj.b_empty_array_nested[1], $.b_obj.b_obj.b_null, $.b_array[1].b_obj.b_num_int, $.b_obj.b_obj.b_num_int, $.b_array[0].b_obj.b_empty_obj_nested.o3, $.b_array[0].b_obj.b_empty_obj_nested.o2, $.b_str, $.b_empty_obj_nested.o2, $.b_obj.b_array[0].b_null, $.b_empty_obj_nested.o3, $.b_array[1].b_empty_array, $.b_array[1].b_array[1].b_num_float, $.b_array[0].b_obj.b_empty_array, $.b_obj.b_array[1].b_empty_array, $.b_array[0].b_obj.b_null, $.b_num_int, $.b_array[1].b_array[0].b_empty_obj_nested.o2, $.b_array[1].b_null, $.b_array[1].b_empty_obj_nested.o2, $.b_array[1].b_empty_obj_nested.o3, $.b_array[1].b_array[0].b_empty_array_nested[2], $.b_array[1].b_array[0].b_empty_array_nested[1], $.b_obj.b_bool, $.b_obj.b_array[0].b_num_float, $.b_obj.b_array[1].b_num_int, $.b_array[1].b_array[0].b_num_float, $.b_array[0].b_empty_array_nested[2], $.b_array[0].b_empty_array_nested[1], $.b_array[1].b_array[0].b_empty_obj_nested.o3, $.b_array[1].b_num_int, $.b_array[0].b_num_float, $.b_array[1].b_num_float, $.b_array[1].b_array[0].b_bool, $.b_array[0].b_obj.b_empty_array_nested[2], $.b_obj.b_num_float, $.b_array[0].b_obj.b_empty_array_nested[1], $.b_array[0].b_obj.b_num_float, $.b_array[0].b_null, $.b_array[0].b_obj.b_num_int, $.b_empty_array, $.b_array[0].b_array[1].b_num_int, $.b_obj.b_array[1].b_empty_array_nested[2], $.b_obj.b_array[1].b_empty_array_nested[1], $.b_array[0].b_num_int, $.b_array[1].b_array[0].b_null, $.b_array[1].b_obj.b_null, $.b_array[0].b_array[1].b_empty_array_nested[2], $.b_obj.b_obj.b_bool, $.b_array[0].b_array[0].b_bool, $.b_obj.b_obj.b_empty_array, $.b_array[0].b_array[1].b_str, $.b_array[1].b_obj.b_empty_array_nested[1], $.b_array[1].b_obj.b_empty_array_nested[2], $.b_obj.b_null, $.b_obj.b_array[1].b_str, $.b_obj.b_empty_array_nested[2], $.b_array[0].b_array[0].b_num_int, $.b_obj.b_empty_array_nested[1], $.b_array[1].b_obj.b_empty_obj_nested.o3, $.b_array[0].b_array[0].b_empty_obj_nested.o3, $.b_array[1].b_obj.b_empty_obj_nested.o2, $.b_array[0].b_array[0].b_empty_obj_nested.o2, $.b_array[1].b_array[1].b_null, $.b_obj.b_array[0].b_empty_array, $.b_array[0].b_array[1].b_empty_array_nested[1], $.b_obj.b_array[0].b_empty_obj_nested.o3, $.b_array[0].b_array[1].b_bool, $.b_obj.b_array[0].b_empty_obj_nested.o2, $.b_array[0].b_array[0].b_str, $.b_obj.b_obj.b_str, $.b_array[1].b_obj.b_num_float] |

(3 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_func_json_paths TEST_ID: A099 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT json_paths(json_query(c1, '$.a_obj.a_obj')) c
FROM test_json_cols
UNION ALL
SELECT json_paths(json_query(c1, '$.a_obj.a_obj')) c
FROM test_json_cols;
+------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| c                                                                                                                                                                                  |
+------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| [$.a_str, $.a_empty_array, $.a_null, $.a_num_int, $.a_bool, $.a_empty_array_nested[1], $.a_empty_array_nested[2], $.a_empty_obj_nested.o2, $.a_num_float, $.a_empty_obj_nested.o3] |
| [$.a_str, $.a_empty_array, $.a_null, $.a_num_int, $.a_bool, $.a_empty_array_nested[1], $.a_empty_array_nested[2], $.a_empty_obj_nested.o2, $.a_num_float, $.a_empty_obj_nested.o3] |
| [$.a_str, $.a_empty_array, $.a_null, $.a_num_int, $.a_bool, $.a_empty_array_nested[1], $.a_empty_array_nested[2], $.a_empty_obj_nested.o2, $.a_num_float, $.a_empty_obj_nested.o3] |
| [$.a_str, $.a_empty_array, $.a_null, $.a_num_int, $.a_bool, $.a_empty_array_nested[1], $.a_empty_array_nested[2], $.a_empty_obj_nested.o2, $.a_num_float, $.a_empty_obj_nested.o3] |
| [$]                                                                                                                                                                                |
| [$]                                                                                                                                                                                |
| [$]                                                                                                                                                                                |
| [$]                                                                                                                                                                                |
+------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
(8 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_func_json_paths TEST_ID: A100 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------

SELECT json_paths(c1)
FROM test_json_cols;

| EXPR$0                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                             |

| [$.a_array[1].a_array[1].a_str, $.a_obj.a_obj.a_bool, $.a_array[1].a_array[0].a_empty_obj_nested.o2, $.a_array[1].a_array[0].a_empty_obj_nested.o3, $.a_obj.a_array[0].a_num_float, $.a_array[1].a_array[0].a_empty_array_nested[1], $.a_array[1].a_array[0].a_empty_array_nested[2], $.a_obj.a_array[0].a_str, $.a_obj.a_array[1].a_null, $.a_str, $.a_array[0].a_obj.a_num_float, $.a_null, $.a_array[0].a_str, $.a_array[1].a_num_float, $.a_array[1].a_array[1].a_num_float, $.a_array[1].a_obj.a_bool, $.a_array[1].a_array[1].a_null, $.a_obj.a_array[1].a_num_float, $.a_array[1].a_num_int, $.a_num_int, $.a_array[0].a_empty_array_nested[2], $.a_array[0].a_empty_array_nested[1], $.a_array[0].a_array[1].a_bool, $.a_obj.a_array[1].a_str, $.a_array[1].a_null, $.a_array[0].a_empty_obj_nested.o2, $.a_array[0].a_empty_obj_nested.o3, $.a_array[1].a_array[0].a_num_float, $.a_array[0].a_num_float, $.a_array[0].a_array[0].a_empty_array, $.a_array[1].a_empty_array, $.a_array[1].a_obj.a_str, $.a_array[0].a_obj.a_num_int, $.a_array[0].a_obj.a_null, $.a_array[1].a_array[1].a_empty_obj_nested.o3, $.a_obj.a_obj.a_num_float, $.a_array[0].a_num_int, $.a_array[0].a_bool, $.a_array[1].a_array[1].a_empty_obj_nested.o2, $.a_obj.a_array[0].a_num_int, $.a_obj.a_array[0].a_bool, $.a_array[1].a_array[1].a_num_int, $.a_array[0].a_array[0].a_bool, $.a_array[1].a_array[0].a_null, $.a_array[0].a_obj.a_empty_obj_nested.o2, $.a_array[0].a_obj.a_empty_obj_nested.o3, $.a_obj.a_bool, $.a_array[1].a_obj.a_num_float, $.a_obj.a_array[1].a_empty_obj_nested.o3, $.a_array[0].a_array[1].a_empty_array, $.a_obj.a_array[1].a_empty_obj_nested.o2, $.a_array[0].a_obj.a_bool, $.a_obj.a_array[1].a_num_int, $.a_obj.a_array[1].a_bool, $.a_num_float, $.a_array[1].a_str, $.a_array[1].a_empty_obj_nested.o3, $.a_array[1].a_empty_obj_nested.o2, $.a_obj.a_obj.a_empty_array_nested[1], $.a_obj.a_obj.a_empty_array_nested[2], $.a_array[0].a_array[1].a_empty_array_nested[1], $.a_array[0].a_obj.a_str, $.a_array[0].a_array[1].a_empty_array_nested[2], $.a_array[1].a_obj.a_num_int, $.a_obj.a_obj.a_num_int, $.a_array[0].a_array[0].a_str, $.a_obj.a_str, $.a_array[0].a_array[0].a_empty_array_nested[1], $.a_array[0].a_array[0].a_empty_obj_nested.o2, $.a_array[1].a_obj.a_empty_array, $.a_array[0].a_array[1].a_null, $.a_obj.a_num_float, $.a_array[0].a_array[0].a_num_float, $.a_obj.a_obj.a_empty_array, $.a_obj.a_array[0].a_empty_obj_nested.o2, $.a_obj.a_array[0].a_empty_obj_nested.o3, $.a_array[1].a_array[0].a_empty_array, $.a_obj.a_array[0].a_empty_array_nested[1], $.a_obj.a_array[0].a_empty_array_nested[2], $.a_obj.a_empty_obj_nested.o3, $.a_array[0].a_array[1].a_str, $.a_obj.a_null, $.a_array[1].a_bool, $.a_obj.a_empty_obj_nested.o2, $.a_bool, $.a_array[1].a_array[0].a_num_int, $.a_obj.a_obj.a_null, $.a_array[0].a_array[0].a_null, $.a_array[1].a_obj.a_empty_obj_nested.o3, $.a_obj.a_num_int, $.a_array[1].a_obj.a_empty_obj_nested.o2, $.a_array[0].a_array[0].a_empty_obj_nested.o3, $.a_empty_array_nested[1], $.a_empty_array_nested[2], $.a_obj.a_empty_array_nested[1], $.a_obj.a_empty_array_nested[2], $.a_array[1].a_obj.a_empty_array_nested[2], $.a_array[0].a_array[0].a_empty_array_nested[2], $.a_array[1].a_array[1].a_empty_array, $.a_empty_obj_nested.o2, $.a_empty_obj_nested.o3, $.a_array[1].a_obj.a_empty_array_nested[1], $.a_empty_array, $.a_array[0].a_obj.a_empty_array, $.a_array[1].a_array[1].a_empty_array_nested[2], $.a_obj.a_empty_array, $.a_array[1].a_array[1].a_bool, $.a_array[1].a_array[1].a_empty_array_nested[1], $.a_array[0].a_array[0].a_num_int, $.a_obj.a_obj.a_str, $.a_array[0].a_null, $.a_obj.a_array[0].a_empty_array, $.a_obj.a_array[1].a_empty_array_nested[2], $.a_array[0].a_obj.a_empty_array_nested[1], $.a_array[0].a_obj.a_empty_array_nested[2], $.a_array[0].a_empty_array, $.a_obj.a_array[1].a_empty_array_nested[1], $.a_obj.a_array[0].a_null, $.a_array[1].a_array[0].a_str, $.a_array[1].a_empty_array_nested[1], $.a_array[1].a_array[0].a_bool, $.a_array[0].a_array[1].a_num_int, $.a_array[1].a_empty_array_nested[2], $.a_obj.a_array[1].a_empty_array, $.a_array[0].a_array[1].a_num_float, $.a_array[0].a_array[1].a_empty_obj_nested.o2, $.a_array[0].a_array[1].a_empty_obj_nested.o3, $.a_obj.a_obj.a_empty_obj_nested.o2, $.a_array[1].a_obj.a_null, $.a_obj.a_obj.a_empty_obj_nested.o3] |
| [$.a_array[1].a_array[1].a_str, $.a_obj.a_obj.a_bool, $.a_array[1].a_array[0].a_empty_obj_nested.o2, $.a_array[1].a_array[0].a_empty_obj_nested.o3, $.a_obj.a_array[0].a_num_float, $.a_array[1].a_array[0].a_empty_array_nested[1], $.a_array[1].a_array[0].a_empty_array_nested[2], $.a_obj.a_array[0].a_str, $.a_obj.a_array[1].a_null, $.a_str, $.a_array[0].a_obj.a_num_float, $.a_null, $.a_array[0].a_str, $.a_array[1].a_num_float, $.a_array[1].a_array[1].a_num_float, $.a_array[1].a_obj.a_bool, $.a_array[1].a_array[1].a_null, $.a_obj.a_array[1].a_num_float, $.a_array[1].a_num_int, $.a_num_int, $.a_array[0].a_empty_array_nested[2], $.a_array[0].a_empty_array_nested[1], $.a_array[0].a_array[1].a_bool, $.a_obj.a_array[1].a_str, $.a_array[1].a_null, $.a_array[0].a_empty_obj_nested.o2, $.a_array[0].a_empty_obj_nested.o3, $.a_array[1].a_array[0].a_num_float, $.a_array[0].a_num_float, $.a_array[0].a_array[0].a_empty_array, $.a_array[1].a_empty_array, $.a_array[1].a_obj.a_str, $.a_array[0].a_obj.a_num_int, $.a_array[0].a_obj.a_null, $.a_array[1].a_array[1].a_empty_obj_nested.o3, $.a_obj.a_obj.a_num_float, $.a_array[0].a_num_int, $.a_array[0].a_bool, $.a_array[1].a_array[1].a_empty_obj_nested.o2, $.a_obj.a_array[0].a_num_int, $.a_obj.a_array[0].a_bool, $.a_array[1].a_array[1].a_num_int, $.a_array[0].a_array[0].a_bool, $.a_array[1].a_array[0].a_null, $.a_array[0].a_obj.a_empty_obj_nested.o2, $.a_array[0].a_obj.a_empty_obj_nested.o3, $.a_obj.a_bool, $.a_array[1].a_obj.a_num_float, $.a_obj.a_array[1].a_empty_obj_nested.o3, $.a_array[0].a_array[1].a_empty_array, $.a_obj.a_array[1].a_empty_obj_nested.o2, $.a_array[0].a_obj.a_bool, $.a_obj.a_array[1].a_num_int, $.a_obj.a_array[1].a_bool, $.a_num_float, $.a_array[1].a_str, $.a_array[1].a_empty_obj_nested.o3, $.a_array[1].a_empty_obj_nested.o2, $.a_obj.a_obj.a_empty_array_nested[1], $.a_obj.a_obj.a_empty_array_nested[2], $.a_array[0].a_array[1].a_empty_array_nested[1], $.a_array[0].a_obj.a_str, $.a_array[0].a_array[1].a_empty_array_nested[2], $.a_array[1].a_obj.a_num_int, $.a_obj.a_obj.a_num_int, $.a_array[0].a_array[0].a_str, $.a_obj.a_str, $.a_array[0].a_array[0].a_empty_array_nested[1], $.a_array[0].a_array[0].a_empty_obj_nested.o2, $.a_array[1].a_obj.a_empty_array, $.a_array[0].a_array[1].a_null, $.a_obj.a_num_float, $.a_array[0].a_array[0].a_num_float, $.a_obj.a_obj.a_empty_array, $.a_obj.a_array[0].a_empty_obj_nested.o2, $.a_obj.a_array[0].a_empty_obj_nested.o3, $.a_array[1].a_array[0].a_empty_array, $.a_obj.a_array[0].a_empty_array_nested[1], $.a_obj.a_array[0].a_empty_array_nested[2], $.a_obj.a_empty_obj_nested.o3, $.a_array[0].a_array[1].a_str, $.a_obj.a_null, $.a_array[1].a_bool, $.a_obj.a_empty_obj_nested.o2, $.a_bool, $.a_array[1].a_array[0].a_num_int, $.a_obj.a_obj.a_null, $.a_array[0].a_array[0].a_null, $.a_array[1].a_obj.a_empty_obj_nested.o3, $.a_obj.a_num_int, $.a_array[1].a_obj.a_empty_obj_nested.o2, $.a_array[0].a_array[0].a_empty_obj_nested.o3, $.a_empty_array_nested[1], $.a_empty_array_nested[2], $.a_obj.a_empty_array_nested[1], $.a_obj.a_empty_array_nested[2], $.a_array[1].a_obj.a_empty_array_nested[2], $.a_array[0].a_array[0].a_empty_array_nested[2], $.a_array[1].a_array[1].a_empty_array, $.a_empty_obj_nested.o2, $.a_empty_obj_nested.o3, $.a_array[1].a_obj.a_empty_array_nested[1], $.a_empty_array, $.a_array[0].a_obj.a_empty_array, $.a_array[1].a_array[1].a_empty_array_nested[2], $.a_obj.a_empty_array, $.a_array[1].a_array[1].a_bool, $.a_array[1].a_array[1].a_empty_array_nested[1], $.a_array[0].a_array[0].a_num_int, $.a_obj.a_obj.a_str, $.a_array[0].a_null, $.a_obj.a_array[0].a_empty_array, $.a_obj.a_array[1].a_empty_array_nested[2], $.a_array[0].a_obj.a_empty_array_nested[1], $.a_array[0].a_obj.a_empty_array_nested[2], $.a_array[0].a_empty_array, $.a_obj.a_array[1].a_empty_array_nested[1], $.a_obj.a_array[0].a_null, $.a_array[1].a_array[0].a_str, $.a_array[1].a_empty_array_nested[1], $.a_array[1].a_array[0].a_bool, $.a_array[0].a_array[1].a_num_int, $.a_array[1].a_empty_array_nested[2], $.a_obj.a_array[1].a_empty_array, $.a_array[0].a_array[1].a_num_float, $.a_array[0].a_array[1].a_empty_obj_nested.o2, $.a_array[0].a_array[1].a_empty_obj_nested.o3, $.a_obj.a_obj.a_empty_obj_nested.o2, $.a_array[1].a_obj.a_null, $.a_obj.a_obj.a_empty_obj_nested.o3] |
| [$.b_array[1].b_bool, $.b_array[1].b_array[0].b_num_int, $.b_array[0].b_array[0].b_num_float, $.b_obj.b_array[0].b_empty_array_nested[1], $.b_obj.b_array[0].b_empty_array_nested[2], $.b_array[0].b_obj.b_bool, $.b_array[1].b_obj.b_str, $.b_obj.b_num_int, $.b_array[0].b_array[1].b_null, $.b_obj.b_array[0].b_bool, $.b_array[1].b_array[0].b_str, $.b_num_float, $.b_array[0].b_array[1].b_empty_obj_nested.o3, $.b_obj.b_str, $.b_array[0].b_str, $.b_array[0].b_bool, $.b_array[0].b_array[1].b_empty_obj_nested.o2, $.b_null, $.b_obj.b_obj.b_empty_obj_nested.o3, $.b_obj.b_obj.b_empty_obj_nested.o2, $.b_array[0].b_array[1].b_empty_array, $.b_array[0].b_array[0].b_empty_array_nested[1], $.b_array[0].b_array[0].b_empty_array_nested[2], $.b_obj.b_empty_obj_nested.o2, $.b_obj.b_array[1].b_empty_obj_nested.o2, $.b_obj.b_array[1].b_empty_obj_nested.o3, $.b_array[0].b_array[0].b_empty_array, $.b_obj.b_empty_obj_nested.o3, $.b_array[0].b_obj.b_str, $.b_obj.b_array[1].b_bool, $.b_obj.b_array[0].b_str, $.b_obj.b_array[0].b_num_int, $.b_array[1].b_str, $.b_obj.b_array[1].b_num_float, $.b_bool, $.b_array[1].b_obj.b_bool, $.b_array[1].b_obj.b_empty_array, $.b_array[1].b_array[1].b_empty_array, $.b_empty_array_nested[2], $.b_empty_array_nested[1], $.b_array[1].b_array[1].b_bool, $.b_array[0].b_empty_obj_nested.o2, $.b_array[0].b_empty_obj_nested.o3, $.b_array[1].b_array[1].b_empty_array_nested[1], $.b_array[1].b_array[1].b_empty_array_nested[2], $.b_obj.b_empty_array, $.b_array[0].b_empty_array, $.b_obj.b_obj.b_num_float, $.b_array[1].b_array[1].b_num_int, $.b_obj.b_array[1].b_null, $.b_array[0].b_array[1].b_num_float, $.b_array[1].b_empty_array_nested[1], $.b_array[1].b_array[1].b_empty_obj_nested.o3, $.b_array[1].b_array[1].b_empty_obj_nested.o2, $.b_array[1].b_array[0].b_empty_array, $.b_array[0].b_array[0].b_null, $.b_array[1].b_empty_array_nested[2], $.b_array[1].b_array[1].b_str, $.b_obj.b_obj.b_empty_array_nested[2], $.b_obj.b_obj.b_empty_array_nested[1], $.b_obj.b_obj.b_null, $.b_array[1].b_obj.b_num_int, $.b_obj.b_obj.b_num_int, $.b_array[0].b_obj.b_empty_obj_nested.o3, $.b_array[0].b_obj.b_empty_obj_nested.o2, $.b_str, $.b_empty_obj_nested.o2, $.b_obj.b_array[0].b_null, $.b_empty_obj_nested.o3, $.b_array[1].b_empty_array, $.b_array[1].b_array[1].b_num_float, $.b_array[0].b_obj.b_empty_array, $.b_obj.b_array[1].b_empty_array, $.b_array[0].b_obj.b_null, $.b_num_int, $.b_array[1].b_array[0].b_empty_obj_nested.o2, $.b_array[1].b_null, $.b_array[1].b_empty_obj_nested.o2, $.b_array[1].b_empty_obj_nested.o3, $.b_array[1].b_array[0].b_empty_array_nested[2], $.b_array[1].b_array[0].b_empty_array_nested[1], $.b_obj.b_bool, $.b_obj.b_array[0].b_num_float, $.b_obj.b_array[1].b_num_int, $.b_array[1].b_array[0].b_num_float, $.b_array[0].b_empty_array_nested[2], $.b_array[0].b_empty_array_nested[1], $.b_array[1].b_array[0].b_empty_obj_nested.o3, $.b_array[1].b_num_int, $.b_array[0].b_num_float, $.b_array[1].b_num_float, $.b_array[1].b_array[0].b_bool, $.b_array[0].b_obj.b_empty_array_nested[2], $.b_obj.b_num_float, $.b_array[0].b_obj.b_empty_array_nested[1], $.b_array[0].b_obj.b_num_float, $.b_array[0].b_null, $.b_array[0].b_obj.b_num_int, $.b_empty_array, $.b_array[0].b_array[1].b_num_int, $.b_obj.b_array[1].b_empty_array_nested[2], $.b_obj.b_array[1].b_empty_array_nested[1], $.b_array[0].b_num_int, $.b_array[1].b_array[0].b_null, $.b_array[1].b_obj.b_null, $.b_array[0].b_array[1].b_empty_array_nested[2], $.b_obj.b_obj.b_bool, $.b_array[0].b_array[0].b_bool, $.b_obj.b_obj.b_empty_array, $.b_array[0].b_array[1].b_str, $.b_array[1].b_obj.b_empty_array_nested[1], $.b_array[1].b_obj.b_empty_array_nested[2], $.b_obj.b_null, $.b_obj.b_array[1].b_str, $.b_obj.b_empty_array_nested[2], $.b_array[0].b_array[0].b_num_int, $.b_obj.b_empty_array_nested[1], $.b_array[1].b_obj.b_empty_obj_nested.o3, $.b_array[0].b_array[0].b_empty_obj_nested.o3, $.b_array[1].b_obj.b_empty_obj_nested.o2, $.b_array[0].b_array[0].b_empty_obj_nested.o2, $.b_array[1].b_array[1].b_null, $.b_obj.b_array[0].b_empty_array, $.b_array[0].b_array[1].b_empty_array_nested[1], $.b_obj.b_array[0].b_empty_obj_nested.o3, $.b_array[0].b_array[1].b_bool, $.b_obj.b_array[0].b_empty_obj_nested.o2, $.b_array[0].b_array[0].b_str, $.b_obj.b_obj.b_str, $.b_array[1].b_obj.b_num_float] |
| [$.b_array[1].b_bool, $.b_array[1].b_array[0].b_num_int, $.b_array[0].b_array[0].b_num_float, $.b_obj.b_array[0].b_empty_array_nested[1], $.b_obj.b_array[0].b_empty_array_nested[2], $.b_array[0].b_obj.b_bool, $.b_array[1].b_obj.b_str, $.b_obj.b_num_int, $.b_array[0].b_array[1].b_null, $.b_obj.b_array[0].b_bool, $.b_array[1].b_array[0].b_str, $.b_num_float, $.b_array[0].b_array[1].b_empty_obj_nested.o3, $.b_obj.b_str, $.b_array[0].b_str, $.b_array[0].b_bool, $.b_array[0].b_array[1].b_empty_obj_nested.o2, $.b_null, $.b_obj.b_obj.b_empty_obj_nested.o3, $.b_obj.b_obj.b_empty_obj_nested.o2, $.b_array[0].b_array[1].b_empty_array, $.b_array[0].b_array[0].b_empty_array_nested[1], $.b_array[0].b_array[0].b_empty_array_nested[2], $.b_obj.b_empty_obj_nested.o2, $.b_obj.b_array[1].b_empty_obj_nested.o2, $.b_obj.b_array[1].b_empty_obj_nested.o3, $.b_array[0].b_array[0].b_empty_array, $.b_obj.b_empty_obj_nested.o3, $.b_array[0].b_obj.b_str, $.b_obj.b_array[1].b_bool, $.b_obj.b_array[0].b_str, $.b_obj.b_array[0].b_num_int, $.b_array[1].b_str, $.b_obj.b_array[1].b_num_float, $.b_bool, $.b_array[1].b_obj.b_bool, $.b_array[1].b_obj.b_empty_array, $.b_array[1].b_array[1].b_empty_array, $.b_empty_array_nested[2], $.b_empty_array_nested[1], $.b_array[1].b_array[1].b_bool, $.b_array[0].b_empty_obj_nested.o2, $.b_array[0].b_empty_obj_nested.o3, $.b_array[1].b_array[1].b_empty_array_nested[1], $.b_array[1].b_array[1].b_empty_array_nested[2], $.b_obj.b_empty_array, $.b_array[0].b_empty_array, $.b_obj.b_obj.b_num_float, $.b_array[1].b_array[1].b_num_int, $.b_obj.b_array[1].b_null, $.b_array[0].b_array[1].b_num_float, $.b_array[1].b_empty_array_nested[1], $.b_array[1].b_array[1].b_empty_obj_nested.o3, $.b_array[1].b_array[1].b_empty_obj_nested.o2, $.b_array[1].b_array[0].b_empty_array, $.b_array[0].b_array[0].b_null, $.b_array[1].b_empty_array_nested[2], $.b_array[1].b_array[1].b_str, $.b_obj.b_obj.b_empty_array_nested[2], $.b_obj.b_obj.b_empty_array_nested[1], $.b_obj.b_obj.b_null, $.b_array[1].b_obj.b_num_int, $.b_obj.b_obj.b_num_int, $.b_array[0].b_obj.b_empty_obj_nested.o3, $.b_array[0].b_obj.b_empty_obj_nested.o2, $.b_str, $.b_empty_obj_nested.o2, $.b_obj.b_array[0].b_null, $.b_empty_obj_nested.o3, $.b_array[1].b_empty_array, $.b_array[1].b_array[1].b_num_float, $.b_array[0].b_obj.b_empty_array, $.b_obj.b_array[1].b_empty_array, $.b_array[0].b_obj.b_null, $.b_num_int, $.b_array[1].b_array[0].b_empty_obj_nested.o2, $.b_array[1].b_null, $.b_array[1].b_empty_obj_nested.o2, $.b_array[1].b_empty_obj_nested.o3, $.b_array[1].b_array[0].b_empty_array_nested[2], $.b_array[1].b_array[0].b_empty_array_nested[1], $.b_obj.b_bool, $.b_obj.b_array[0].b_num_float, $.b_obj.b_array[1].b_num_int, $.b_array[1].b_array[0].b_num_float, $.b_array[0].b_empty_array_nested[2], $.b_array[0].b_empty_array_nested[1], $.b_array[1].b_array[0].b_empty_obj_nested.o3, $.b_array[1].b_num_int, $.b_array[0].b_num_float, $.b_array[1].b_num_float, $.b_array[1].b_array[0].b_bool, $.b_array[0].b_obj.b_empty_array_nested[2], $.b_obj.b_num_float, $.b_array[0].b_obj.b_empty_array_nested[1], $.b_array[0].b_obj.b_num_float, $.b_array[0].b_null, $.b_array[0].b_obj.b_num_int, $.b_empty_array, $.b_array[0].b_array[1].b_num_int, $.b_obj.b_array[1].b_empty_array_nested[2], $.b_obj.b_array[1].b_empty_array_nested[1], $.b_array[0].b_num_int, $.b_array[1].b_array[0].b_null, $.b_array[1].b_obj.b_null, $.b_array[0].b_array[1].b_empty_array_nested[2], $.b_obj.b_obj.b_bool, $.b_array[0].b_array[0].b_bool, $.b_obj.b_obj.b_empty_array, $.b_array[0].b_array[1].b_str, $.b_array[1].b_obj.b_empty_array_nested[1], $.b_array[1].b_obj.b_empty_array_nested[2], $.b_obj.b_null, $.b_obj.b_array[1].b_str, $.b_obj.b_empty_array_nested[2], $.b_array[0].b_array[0].b_num_int, $.b_obj.b_empty_array_nested[1], $.b_array[1].b_obj.b_empty_obj_nested.o3, $.b_array[0].b_array[0].b_empty_obj_nested.o3, $.b_array[1].b_obj.b_empty_obj_nested.o2, $.b_array[0].b_array[0].b_empty_obj_nested.o2, $.b_array[1].b_array[1].b_null, $.b_obj.b_array[0].b_empty_array, $.b_array[0].b_array[1].b_empty_array_nested[1], $.b_obj.b_array[0].b_empty_obj_nested.o3, $.b_array[0].b_array[1].b_bool, $.b_obj.b_array[0].b_empty_obj_nested.o2, $.b_array[0].b_array[0].b_str, $.b_obj.b_obj.b_str, $.b_array[1].b_obj.b_num_float] |

(4 rows)

!ok

{
  "queryType" : "scan",
  "dataSource" : {
    "type" : "table",
    "name" : "test_json_cols"
  },
  "intervals" : {
    "type" : "intervals",
    "intervals" : [ "-146136543-09-08T08:23:32.096Z/146140482-04-24T15:36:27.903Z" ]
  },
  "virtualColumns" : [ {
    "type" : "expression",
    "name" : "v0",
    "expression" : "json_paths(\"c1\")",
    "outputType" : "ARRAY<STRING>"
  } ],
  "resultFormat" : "compactedList",
  "columns" : [ "v0" ],
  "columnTypes" : [ "ARRAY<STRING>" ],
  "granularity" : {
    "type" : "all"
  },
  "legacy" : false
}
!nativePlan

#-------------------------------------------------------------------------
# Total query count 985 Positive tests: 823 Negative tests: 162
#-------------------------------------------------------------------------
