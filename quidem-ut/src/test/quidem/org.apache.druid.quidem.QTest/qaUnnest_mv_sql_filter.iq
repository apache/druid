!set useApproximateCountDistinct false
!use druidtest://?componentSupplier=StandardComponentSupplier&datasets=sql/src/test/quidem/qatests/qaUnnest/mv&numMergeBuffers=3
!set outputformat mysql
SELECT *
FROM test_unnest;
+-------------------------+-------+--------+---------+----------+------------------------------------------------+------------------------+--------------------------------------+----------------------------------+--------------------------------------+----------------------------------+-----------------------------+
| __time                  | c_str | c_long | c_float | c_double | c_mv_complex                                   | c_mv_num               | c_mv_complex_with_null_and_empty_val | c_mv_num_with_null_and_empty_val | c_mv_complex_with_null_and_empty_row | c_mv_num_with_null_and_empty_row | c_mv_all_null_and_empty_val |
+-------------------------+-------+--------+---------+----------+------------------------------------------------+------------------------+--------------------------------------+----------------------------------+--------------------------------------+----------------------------------+-----------------------------+
| 2022-01-01 00:00:00.000 |       |      1 |     0.1 |      0.1 | ["my_null","my_empty","1","[2]","[3, [4, 5]]"] | ["-1","0","1","2","3"] | [null,"","1","[2]","[3, [4, 5]]"]    | [null,"","1","2","3"]            |                                      |                                  | [null,"",null,"",null]      |
| 2022-01-01 00:00:00.000 | str2  |      2 |     0.2 |      0.2 | ["my_null","my_empty","1","[2]","[3, [4, 5]]"] | ["-1","0","1","2","3"] | [null,"","1","[2]","[3, [4, 5]]"]    | [null,"","1","2","3"]            | [null,"","1","[2]","[3, [4, 5]]"]    | [null,"","1","2","3"]            | [null,"",null,"",null]      |
| 2022-01-01 00:00:00.000 | str3  |      3 |     0.3 |      0.3 | ["my_null","my_empty","1","[2]","[3, [4, 5]]"] | ["-1","0","1","2","3"] | [null,"","1","[2]","[3, [4, 5]]"]    | [null,"","1","2","3"]            | [null,"","1","[2]","[3, [4, 5]]"]    | [null,"","1","2","3"]            | [null,"",null,"",null]      |
| 2022-01-01 00:00:00.000 | str4  |      4 |     0.4 |      0.4 | ["my_null","my_empty","1","[2]","[3, [4, 5]]"] | ["-1","0","1","2","3"] | [null,"","1","[2]","[3, [4, 5]]"]    | [null,"","1","2","3"]            | [null,"","1","[2]","[3, [4, 5]]"]    | [null,"","1","2","3"]            | [null,"",null,"",null]      |
| 2022-01-01 00:00:00.000 |       |      0 |     0.0 |      0.0 | ["my_null","my_empty","1","[2]","[3, [4, 5]]"] | ["-1","0","1","2","3"] | [null,"","1","[2]","[3, [4, 5]]"]    | [null,"","1","2","3"]            |                                      |                                  | [null,"",null,"",null]      |
+-------------------------+-------+--------+---------+----------+------------------------------------------------+------------------------+--------------------------------------+----------------------------------+--------------------------------------+----------------------------------+-----------------------------+
(5 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A1_B1_C1 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM test_unnest,
     unnest(mv_to_array(c_mv_complex)) AS u(c)
WHERE c='1';
+---+
| c |
+---+
| 1 |
| 1 |
| 1 |
| 1 |
| 1 |
+---+
(5 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A1_B1_C3 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest,
        unnest(mv_to_array(c_mv_complex)) AS u(c)
   WHERE c='1');
+---+
| c |
+---+
| 1 |
| 1 |
| 1 |
| 1 |
| 1 |
+---+
(5 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A1_B1_C5 TYPE: NEGATIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest
   WHERE c='1'), unnest(mv_to_array(c_mv_complex)) AS u(c);
QueryInterruptedException
!error

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A1_B1_C7 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest,
        unnest(mv_to_array(c_mv_complex)) AS u(c))
WHERE c='1';
+---+
| c |
+---+
| 1 |
| 1 |
| 1 |
| 1 |
| 1 |
+---+
(5 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A1_B1_C9 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest), unnest(mv_to_array(c_mv_complex)) AS u(c)
WHERE c='1';
+---+
| c |
+---+
| 1 |
| 1 |
| 1 |
| 1 |
| 1 |
+---+
(5 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A1_B2_C1 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM test_unnest,
     unnest(mv_to_array(c_mv_complex)) AS u(c)
WHERE c<>'1';
+-------------+
| c           |
+-------------+
| [2]         |
| [2]         |
| [2]         |
| [2]         |
| [2]         |
| [3, [4, 5]] |
| [3, [4, 5]] |
| [3, [4, 5]] |
| [3, [4, 5]] |
| [3, [4, 5]] |
| my_empty    |
| my_empty    |
| my_empty    |
| my_empty    |
| my_empty    |
| my_null     |
| my_null     |
| my_null     |
| my_null     |
| my_null     |
+-------------+
(20 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A1_B2_C3 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest,
        unnest(mv_to_array(c_mv_complex)) AS u(c)
   WHERE c<>'1');
+-------------+
| c           |
+-------------+
| [2]         |
| [2]         |
| [2]         |
| [2]         |
| [2]         |
| [3, [4, 5]] |
| [3, [4, 5]] |
| [3, [4, 5]] |
| [3, [4, 5]] |
| [3, [4, 5]] |
| my_empty    |
| my_empty    |
| my_empty    |
| my_empty    |
| my_empty    |
| my_null     |
| my_null     |
| my_null     |
| my_null     |
| my_null     |
+-------------+
(20 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A1_B2_C5 TYPE: NEGATIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest
   WHERE c<>'1'), unnest(mv_to_array(c_mv_complex)) AS u(c);
QueryInterruptedException
!error

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A1_B2_C7 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest,
        unnest(mv_to_array(c_mv_complex)) AS u(c))
WHERE c<>'1';
+-------------+
| c           |
+-------------+
| [2]         |
| [2]         |
| [2]         |
| [2]         |
| [2]         |
| [3, [4, 5]] |
| [3, [4, 5]] |
| [3, [4, 5]] |
| [3, [4, 5]] |
| [3, [4, 5]] |
| my_empty    |
| my_empty    |
| my_empty    |
| my_empty    |
| my_empty    |
| my_null     |
| my_null     |
| my_null     |
| my_null     |
| my_null     |
+-------------+
(20 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A1_B2_C9 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest), unnest(mv_to_array(c_mv_complex)) AS u(c)
WHERE c<>'1';
+-------------+
| c           |
+-------------+
| [2]         |
| [2]         |
| [2]         |
| [2]         |
| [2]         |
| [3, [4, 5]] |
| [3, [4, 5]] |
| [3, [4, 5]] |
| [3, [4, 5]] |
| [3, [4, 5]] |
| my_empty    |
| my_empty    |
| my_empty    |
| my_empty    |
| my_empty    |
| my_null     |
| my_null     |
| my_null     |
| my_null     |
| my_null     |
+-------------+
(20 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A1_B3_C1 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM test_unnest,
     unnest(mv_to_array(c_mv_complex)) AS u(c)
WHERE c>'1';
+-------------+
| c           |
+-------------+
| [2]         |
| [2]         |
| [2]         |
| [2]         |
| [2]         |
| [3, [4, 5]] |
| [3, [4, 5]] |
| [3, [4, 5]] |
| [3, [4, 5]] |
| [3, [4, 5]] |
| my_empty    |
| my_empty    |
| my_empty    |
| my_empty    |
| my_empty    |
| my_null     |
| my_null     |
| my_null     |
| my_null     |
| my_null     |
+-------------+
(20 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A1_B3_C3 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest,
        unnest(mv_to_array(c_mv_complex)) AS u(c)
   WHERE c>'1');
+-------------+
| c           |
+-------------+
| [2]         |
| [2]         |
| [2]         |
| [2]         |
| [2]         |
| [3, [4, 5]] |
| [3, [4, 5]] |
| [3, [4, 5]] |
| [3, [4, 5]] |
| [3, [4, 5]] |
| my_empty    |
| my_empty    |
| my_empty    |
| my_empty    |
| my_empty    |
| my_null     |
| my_null     |
| my_null     |
| my_null     |
| my_null     |
+-------------+
(20 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A1_B3_C5 TYPE: NEGATIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest
   WHERE c>'1'), unnest(mv_to_array(c_mv_complex)) AS u(c);
QueryInterruptedException
!error

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A1_B3_C7 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest,
        unnest(mv_to_array(c_mv_complex)) AS u(c))
WHERE c>'1';
+-------------+
| c           |
+-------------+
| [2]         |
| [2]         |
| [2]         |
| [2]         |
| [2]         |
| [3, [4, 5]] |
| [3, [4, 5]] |
| [3, [4, 5]] |
| [3, [4, 5]] |
| [3, [4, 5]] |
| my_empty    |
| my_empty    |
| my_empty    |
| my_empty    |
| my_empty    |
| my_null     |
| my_null     |
| my_null     |
| my_null     |
| my_null     |
+-------------+
(20 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A1_B3_C9 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest), unnest(mv_to_array(c_mv_complex)) AS u(c)
WHERE c>'1';
+-------------+
| c           |
+-------------+
| [2]         |
| [2]         |
| [2]         |
| [2]         |
| [2]         |
| [3, [4, 5]] |
| [3, [4, 5]] |
| [3, [4, 5]] |
| [3, [4, 5]] |
| [3, [4, 5]] |
| my_empty    |
| my_empty    |
| my_empty    |
| my_empty    |
| my_empty    |
| my_null     |
| my_null     |
| my_null     |
| my_null     |
| my_null     |
+-------------+
(20 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A1_B4_C1 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM test_unnest,
     unnest(mv_to_array(c_mv_complex)) AS u(c)
WHERE c>='1';
+-------------+
| c           |
+-------------+
| 1           |
| 1           |
| 1           |
| 1           |
| 1           |
| [2]         |
| [2]         |
| [2]         |
| [2]         |
| [2]         |
| [3, [4, 5]] |
| [3, [4, 5]] |
| [3, [4, 5]] |
| [3, [4, 5]] |
| [3, [4, 5]] |
| my_empty    |
| my_empty    |
| my_empty    |
| my_empty    |
| my_empty    |
| my_null     |
| my_null     |
| my_null     |
| my_null     |
| my_null     |
+-------------+
(25 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A1_B4_C3 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest,
        unnest(mv_to_array(c_mv_complex)) AS u(c)
   WHERE c>='1');
+-------------+
| c           |
+-------------+
| 1           |
| 1           |
| 1           |
| 1           |
| 1           |
| [2]         |
| [2]         |
| [2]         |
| [2]         |
| [2]         |
| [3, [4, 5]] |
| [3, [4, 5]] |
| [3, [4, 5]] |
| [3, [4, 5]] |
| [3, [4, 5]] |
| my_empty    |
| my_empty    |
| my_empty    |
| my_empty    |
| my_empty    |
| my_null     |
| my_null     |
| my_null     |
| my_null     |
| my_null     |
+-------------+
(25 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A1_B4_C5 TYPE: NEGATIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest
   WHERE c>='1'), unnest(mv_to_array(c_mv_complex)) AS u(c);
QueryInterruptedException
!error

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A1_B4_C7 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest,
        unnest(mv_to_array(c_mv_complex)) AS u(c))
WHERE c>='1';
+-------------+
| c           |
+-------------+
| 1           |
| 1           |
| 1           |
| 1           |
| 1           |
| [2]         |
| [2]         |
| [2]         |
| [2]         |
| [2]         |
| [3, [4, 5]] |
| [3, [4, 5]] |
| [3, [4, 5]] |
| [3, [4, 5]] |
| [3, [4, 5]] |
| my_empty    |
| my_empty    |
| my_empty    |
| my_empty    |
| my_empty    |
| my_null     |
| my_null     |
| my_null     |
| my_null     |
| my_null     |
+-------------+
(25 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A1_B4_C9 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest), unnest(mv_to_array(c_mv_complex)) AS u(c)
WHERE c>='1';
+-------------+
| c           |
+-------------+
| 1           |
| 1           |
| 1           |
| 1           |
| 1           |
| [2]         |
| [2]         |
| [2]         |
| [2]         |
| [2]         |
| [3, [4, 5]] |
| [3, [4, 5]] |
| [3, [4, 5]] |
| [3, [4, 5]] |
| [3, [4, 5]] |
| my_empty    |
| my_empty    |
| my_empty    |
| my_empty    |
| my_empty    |
| my_null     |
| my_null     |
| my_null     |
| my_null     |
| my_null     |
+-------------+
(25 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A1_B5_C1 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM test_unnest,
     unnest(mv_to_array(c_mv_complex)) AS u(c)
WHERE c<'1';
+---+
| c |
+---+
+---+
(0 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A1_B5_C3 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest,
        unnest(mv_to_array(c_mv_complex)) AS u(c)
   WHERE c<'1');
+---+
| c |
+---+
+---+
(0 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A1_B5_C5 TYPE: NEGATIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest
   WHERE c<'1'), unnest(mv_to_array(c_mv_complex)) AS u(c);
QueryInterruptedException
!error

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A1_B5_C7 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest,
        unnest(mv_to_array(c_mv_complex)) AS u(c))
WHERE c<'1';
+---+
| c |
+---+
+---+
(0 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A1_B5_C9 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest), unnest(mv_to_array(c_mv_complex)) AS u(c)
WHERE c<'1';
+---+
| c |
+---+
+---+
(0 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A1_B6_C1 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM test_unnest,
     unnest(mv_to_array(c_mv_complex)) AS u(c)
WHERE c<='1';
+---+
| c |
+---+
| 1 |
| 1 |
| 1 |
| 1 |
| 1 |
+---+
(5 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A1_B6_C3 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest,
        unnest(mv_to_array(c_mv_complex)) AS u(c)
   WHERE c<='1');
+---+
| c |
+---+
| 1 |
| 1 |
| 1 |
| 1 |
| 1 |
+---+
(5 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A1_B6_C5 TYPE: NEGATIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest
   WHERE c<='1'), unnest(mv_to_array(c_mv_complex)) AS u(c);
QueryInterruptedException
!error

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A1_B6_C7 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest,
        unnest(mv_to_array(c_mv_complex)) AS u(c))
WHERE c<='1';
+---+
| c |
+---+
| 1 |
| 1 |
| 1 |
| 1 |
| 1 |
+---+
(5 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A1_B6_C9 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest), unnest(mv_to_array(c_mv_complex)) AS u(c)
WHERE c<='1';
+---+
| c |
+---+
| 1 |
| 1 |
| 1 |
| 1 |
| 1 |
+---+
(5 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A1_B7_C1 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM test_unnest,
     unnest(mv_to_array(c_mv_complex)) AS u(c)
WHERE (NOT c<>''
       OR NOT c<>'my_null'
       OR NOT c<>'my_empty'
       OR NOT c<>'1'
       OR NOT c<>'-1'
       OR NOT c<>'0'
       OR NOT c<>'999'
       OR NOT c<>999)
  AND (NOT c='[2]'
       OR NOT c='[3, [4, 5]]'
       OR NOT c='2'
       OR NOT c='3'
       OR NOT c='999'
       OR NOT c=999);
+----------+
| c        |
+----------+
| 1        |
| 1        |
| 1        |
| 1        |
| 1        |
| my_empty |
| my_empty |
| my_empty |
| my_empty |
| my_empty |
| my_null  |
| my_null  |
| my_null  |
| my_null  |
| my_null  |
+----------+
(15 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A1_B7_C3 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest,
        unnest(mv_to_array(c_mv_complex)) AS u(c)
   WHERE (NOT c<>''
          OR NOT c<>'my_null'
          OR NOT c<>'my_empty'
          OR NOT c<>'1'
          OR NOT c<>'-1'
          OR NOT c<>'0'
          OR NOT c<>'999'
          OR NOT c<>999)
     AND (NOT c='[2]'
          OR NOT c='[3, [4, 5]]'
          OR NOT c='2'
          OR NOT c='3'
          OR NOT c='999'
          OR NOT c=999));
+----------+
| c        |
+----------+
| 1        |
| 1        |
| 1        |
| 1        |
| 1        |
| my_empty |
| my_empty |
| my_empty |
| my_empty |
| my_empty |
| my_null  |
| my_null  |
| my_null  |
| my_null  |
| my_null  |
+----------+
(15 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A1_B7_C5 TYPE: NEGATIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest
   WHERE (NOT c<>''
          OR NOT c<>'my_null'
          OR NOT c<>'my_empty'
          OR NOT c<>'1'
          OR NOT c<>'-1'
          OR NOT c<>'0'
          OR NOT c<>'999'
          OR NOT c<>999)
     AND (NOT c='[2]'
          OR NOT c='[3, [4, 5]]'
          OR NOT c='2'
          OR NOT c='3'
          OR NOT c='999'
          OR NOT c=999)), unnest(mv_to_array(c_mv_complex)) AS u(c);
QueryInterruptedException
!error

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A1_B7_C7 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest,
        unnest(mv_to_array(c_mv_complex)) AS u(c))
WHERE (NOT c<>''
       OR NOT c<>'my_null'
       OR NOT c<>'my_empty'
       OR NOT c<>'1'
       OR NOT c<>'-1'
       OR NOT c<>'0'
       OR NOT c<>'999'
       OR NOT c<>999)
  AND (NOT c='[2]'
       OR NOT c='[3, [4, 5]]'
       OR NOT c='2'
       OR NOT c='3'
       OR NOT c='999'
       OR NOT c=999);
+----------+
| c        |
+----------+
| 1        |
| 1        |
| 1        |
| 1        |
| 1        |
| my_empty |
| my_empty |
| my_empty |
| my_empty |
| my_empty |
| my_null  |
| my_null  |
| my_null  |
| my_null  |
| my_null  |
+----------+
(15 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A1_B7_C9 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest), unnest(mv_to_array(c_mv_complex)) AS u(c)
WHERE (NOT c<>''
       OR NOT c<>'my_null'
       OR NOT c<>'my_empty'
       OR NOT c<>'1'
       OR NOT c<>'-1'
       OR NOT c<>'0'
       OR NOT c<>'999'
       OR NOT c<>999)
  AND (NOT c='[2]'
       OR NOT c='[3, [4, 5]]'
       OR NOT c='2'
       OR NOT c='3'
       OR NOT c='999'
       OR NOT c=999);
+----------+
| c        |
+----------+
| 1        |
| 1        |
| 1        |
| 1        |
| 1        |
| my_empty |
| my_empty |
| my_empty |
| my_empty |
| my_empty |
| my_null  |
| my_null  |
| my_null  |
| my_null  |
| my_null  |
+----------+
(15 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A1_B8_C1 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM test_unnest,
     unnest(mv_to_array(c_mv_complex)) AS u(c)
WHERE (c=''
       OR c='my_null'
       OR c='my_empty'
       OR c='1'
       OR c='-1'
       OR c='0'
       OR c='999'
       OR c=999)
  AND NOT c='[2]'
  AND NOT c='[3, [4, 5]]'
  AND NOT c='2'
  AND NOT c='3'
  AND NOT c='999'
  AND NOT c=999;
+----------+
| c        |
+----------+
| 1        |
| 1        |
| 1        |
| 1        |
| 1        |
| my_empty |
| my_empty |
| my_empty |
| my_empty |
| my_empty |
| my_null  |
| my_null  |
| my_null  |
| my_null  |
| my_null  |
+----------+
(15 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A1_B8_C3 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest,
        unnest(mv_to_array(c_mv_complex)) AS u(c)
   WHERE (c=''
          OR c='my_null'
          OR c='my_empty'
          OR c='1'
          OR c='-1'
          OR c='0'
          OR c='999'
          OR c=999)
     AND NOT c='[2]'
     AND NOT c='[3, [4, 5]]'
     AND NOT c='2'
     AND NOT c='3'
     AND NOT c='999'
     AND NOT c=999);
+----------+
| c        |
+----------+
| 1        |
| 1        |
| 1        |
| 1        |
| 1        |
| my_empty |
| my_empty |
| my_empty |
| my_empty |
| my_empty |
| my_null  |
| my_null  |
| my_null  |
| my_null  |
| my_null  |
+----------+
(15 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A1_B8_C5 TYPE: NEGATIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest
   WHERE (c=''
          OR c='my_null'
          OR c='my_empty'
          OR c='1'
          OR c='-1'
          OR c='0'
          OR c='999'
          OR c=999)
     AND NOT c='[2]'
     AND NOT c='[3, [4, 5]]'
     AND NOT c='2'
     AND NOT c='3'
     AND NOT c='999'
     AND NOT c=999), unnest(mv_to_array(c_mv_complex)) AS u(c);
QueryInterruptedException
!error

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A1_B8_C7 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest,
        unnest(mv_to_array(c_mv_complex)) AS u(c))
WHERE (c=''
       OR c='my_null'
       OR c='my_empty'
       OR c='1'
       OR c='-1'
       OR c='0'
       OR c='999'
       OR c=999)
  AND NOT c='[2]'
  AND NOT c='[3, [4, 5]]'
  AND NOT c='2'
  AND NOT c='3'
  AND NOT c='999'
  AND NOT c=999;
+----------+
| c        |
+----------+
| 1        |
| 1        |
| 1        |
| 1        |
| 1        |
| my_empty |
| my_empty |
| my_empty |
| my_empty |
| my_empty |
| my_null  |
| my_null  |
| my_null  |
| my_null  |
| my_null  |
+----------+
(15 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A1_B8_C9 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest), unnest(mv_to_array(c_mv_complex)) AS u(c)
WHERE (c=''
       OR c='my_null'
       OR c='my_empty'
       OR c='1'
       OR c='-1'
       OR c='0'
       OR c='999'
       OR c=999)
  AND NOT c='[2]'
  AND NOT c='[3, [4, 5]]'
  AND NOT c='2'
  AND NOT c='3'
  AND NOT c='999'
  AND NOT c=999;
+----------+
| c        |
+----------+
| 1        |
| 1        |
| 1        |
| 1        |
| 1        |
| my_empty |
| my_empty |
| my_empty |
| my_empty |
| my_empty |
| my_null  |
| my_null  |
| my_null  |
| my_null  |
| my_null  |
+----------+
(15 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A1_B9_C1 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM test_unnest,
     unnest(mv_to_array(c_mv_complex)) AS u(c)
WHERE c IS NULL;
+---+
| c |
+---+
+---+
(0 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A1_B9_C3 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest,
        unnest(mv_to_array(c_mv_complex)) AS u(c)
   WHERE c IS NULL);
+---+
| c |
+---+
+---+
(0 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A1_B9_C5 TYPE: NEGATIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest
   WHERE c IS NULL), unnest(mv_to_array(c_mv_complex)) AS u(c);
QueryInterruptedException
!error

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A1_B9_C7 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest,
        unnest(mv_to_array(c_mv_complex)) AS u(c))
WHERE c IS NULL;
+---+
| c |
+---+
+---+
(0 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A1_B9_C9 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest), unnest(mv_to_array(c_mv_complex)) AS u(c)
WHERE c IS NULL;
+---+
| c |
+---+
+---+
(0 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A1_B10_C1 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM test_unnest,
     unnest(mv_to_array(c_mv_complex)) AS u(c)
WHERE c IS NOT NULL;
+-------------+
| c           |
+-------------+
| 1           |
| 1           |
| 1           |
| 1           |
| 1           |
| [2]         |
| [2]         |
| [2]         |
| [2]         |
| [2]         |
| [3, [4, 5]] |
| [3, [4, 5]] |
| [3, [4, 5]] |
| [3, [4, 5]] |
| [3, [4, 5]] |
| my_empty    |
| my_empty    |
| my_empty    |
| my_empty    |
| my_empty    |
| my_null     |
| my_null     |
| my_null     |
| my_null     |
| my_null     |
+-------------+
(25 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A1_B10_C3 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest,
        unnest(mv_to_array(c_mv_complex)) AS u(c)
   WHERE c IS NOT NULL);
+-------------+
| c           |
+-------------+
| 1           |
| 1           |
| 1           |
| 1           |
| 1           |
| [2]         |
| [2]         |
| [2]         |
| [2]         |
| [2]         |
| [3, [4, 5]] |
| [3, [4, 5]] |
| [3, [4, 5]] |
| [3, [4, 5]] |
| [3, [4, 5]] |
| my_empty    |
| my_empty    |
| my_empty    |
| my_empty    |
| my_empty    |
| my_null     |
| my_null     |
| my_null     |
| my_null     |
| my_null     |
+-------------+
(25 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A1_B10_C5 TYPE: NEGATIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest
   WHERE c IS NOT NULL), unnest(mv_to_array(c_mv_complex)) AS u(c);
QueryInterruptedException
!error

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A1_B10_C7 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest,
        unnest(mv_to_array(c_mv_complex)) AS u(c))
WHERE c IS NOT NULL;
+-------------+
| c           |
+-------------+
| 1           |
| 1           |
| 1           |
| 1           |
| 1           |
| [2]         |
| [2]         |
| [2]         |
| [2]         |
| [2]         |
| [3, [4, 5]] |
| [3, [4, 5]] |
| [3, [4, 5]] |
| [3, [4, 5]] |
| [3, [4, 5]] |
| my_empty    |
| my_empty    |
| my_empty    |
| my_empty    |
| my_empty    |
| my_null     |
| my_null     |
| my_null     |
| my_null     |
| my_null     |
+-------------+
(25 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A1_B10_C9 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest), unnest(mv_to_array(c_mv_complex)) AS u(c)
WHERE c IS NOT NULL;
+-------------+
| c           |
+-------------+
| 1           |
| 1           |
| 1           |
| 1           |
| 1           |
| [2]         |
| [2]         |
| [2]         |
| [2]         |
| [2]         |
| [3, [4, 5]] |
| [3, [4, 5]] |
| [3, [4, 5]] |
| [3, [4, 5]] |
| [3, [4, 5]] |
| my_empty    |
| my_empty    |
| my_empty    |
| my_empty    |
| my_empty    |
| my_null     |
| my_null     |
| my_null     |
| my_null     |
| my_null     |
+-------------+
(25 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A1_B11_C1 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM test_unnest,
     unnest(mv_to_array(c_mv_complex)) AS u(c)
WHERE c IN ('',
            'my_null',
            'my_empty',
            '1',
            '-1',
            '0',
            '999',
            999) IS TRUE
  AND c IN ('[2]',
            '[3, [4, 5]]',
            '2',
            '3',
            '999',
            999) IS NOT TRUE;
+----------+
| c        |
+----------+
| 1        |
| 1        |
| 1        |
| 1        |
| 1        |
| my_empty |
| my_empty |
| my_empty |
| my_empty |
| my_empty |
| my_null  |
| my_null  |
| my_null  |
| my_null  |
| my_null  |
+----------+
(15 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A1_B11_C3 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest,
        unnest(mv_to_array(c_mv_complex)) AS u(c)
   WHERE c IN ('',
               'my_null',
               'my_empty',
               '1',
               '-1',
               '0',
               '999',
               999) IS TRUE
     AND c IN ('[2]',
               '[3, [4, 5]]',
               '2',
               '3',
               '999',
               999) IS NOT TRUE);
+----------+
| c        |
+----------+
| 1        |
| 1        |
| 1        |
| 1        |
| 1        |
| my_empty |
| my_empty |
| my_empty |
| my_empty |
| my_empty |
| my_null  |
| my_null  |
| my_null  |
| my_null  |
| my_null  |
+----------+
(15 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A1_B11_C5 TYPE: NEGATIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest
   WHERE c IN ('',
               'my_null',
               'my_empty',
               '1',
               '-1',
               '0',
               '999',
               999) IS TRUE
     AND c IN ('[2]',
               '[3, [4, 5]]',
               '2',
               '3',
               '999',
               999) IS NOT TRUE), unnest(mv_to_array(c_mv_complex)) AS u(c);
QueryInterruptedException
!error

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A1_B11_C7 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest,
        unnest(mv_to_array(c_mv_complex)) AS u(c))
WHERE c IN ('',
            'my_null',
            'my_empty',
            '1',
            '-1',
            '0',
            '999',
            999) IS TRUE
  AND c IN ('[2]',
            '[3, [4, 5]]',
            '2',
            '3',
            '999',
            999) IS NOT TRUE;
+----------+
| c        |
+----------+
| 1        |
| 1        |
| 1        |
| 1        |
| 1        |
| my_empty |
| my_empty |
| my_empty |
| my_empty |
| my_empty |
| my_null  |
| my_null  |
| my_null  |
| my_null  |
| my_null  |
+----------+
(15 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A1_B11_C9 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest), unnest(mv_to_array(c_mv_complex)) AS u(c)
WHERE c IN ('',
            'my_null',
            'my_empty',
            '1',
            '-1',
            '0',
            '999',
            999) IS TRUE
  AND c IN ('[2]',
            '[3, [4, 5]]',
            '2',
            '3',
            '999',
            999) IS NOT TRUE;
+----------+
| c        |
+----------+
| 1        |
| 1        |
| 1        |
| 1        |
| 1        |
| my_empty |
| my_empty |
| my_empty |
| my_empty |
| my_empty |
| my_null  |
| my_null  |
| my_null  |
| my_null  |
| my_null  |
+----------+
(15 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A1_B12_C1 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM test_unnest,
     unnest(mv_to_array(c_mv_complex)) AS u(c)
WHERE c IN ('',
            'my_null',
            'my_empty',
            '1',
            '-1',
            '0',
            '999',
            999) IS NOT FALSE
  AND c IN ('[2]',
            '[3, [4, 5]]',
            '2',
            '3',
            '999',
            999) IS FALSE;
+----------+
| c        |
+----------+
| 1        |
| 1        |
| 1        |
| 1        |
| 1        |
| my_empty |
| my_empty |
| my_empty |
| my_empty |
| my_empty |
| my_null  |
| my_null  |
| my_null  |
| my_null  |
| my_null  |
+----------+
(15 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A1_B12_C3 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest,
        unnest(mv_to_array(c_mv_complex)) AS u(c)
   WHERE c IN ('',
               'my_null',
               'my_empty',
               '1',
               '-1',
               '0',
               '999',
               999) IS NOT FALSE
     AND c IN ('[2]',
               '[3, [4, 5]]',
               '2',
               '3',
               '999',
               999) IS FALSE);
+----------+
| c        |
+----------+
| 1        |
| 1        |
| 1        |
| 1        |
| 1        |
| my_empty |
| my_empty |
| my_empty |
| my_empty |
| my_empty |
| my_null  |
| my_null  |
| my_null  |
| my_null  |
| my_null  |
+----------+
(15 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A1_B12_C5 TYPE: NEGATIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest
   WHERE c IN ('',
               'my_null',
               'my_empty',
               '1',
               '-1',
               '0',
               '999',
               999) IS NOT FALSE
     AND c IN ('[2]',
               '[3, [4, 5]]',
               '2',
               '3',
               '999',
               999) IS FALSE), unnest(mv_to_array(c_mv_complex)) AS u(c);
QueryInterruptedException
!error

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A1_B12_C7 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest,
        unnest(mv_to_array(c_mv_complex)) AS u(c))
WHERE c IN ('',
            'my_null',
            'my_empty',
            '1',
            '-1',
            '0',
            '999',
            999) IS NOT FALSE
  AND c IN ('[2]',
            '[3, [4, 5]]',
            '2',
            '3',
            '999',
            999) IS FALSE;
+----------+
| c        |
+----------+
| 1        |
| 1        |
| 1        |
| 1        |
| 1        |
| my_empty |
| my_empty |
| my_empty |
| my_empty |
| my_empty |
| my_null  |
| my_null  |
| my_null  |
| my_null  |
| my_null  |
+----------+
(15 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A1_B12_C9 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest), unnest(mv_to_array(c_mv_complex)) AS u(c)
WHERE c IN ('',
            'my_null',
            'my_empty',
            '1',
            '-1',
            '0',
            '999',
            999) IS NOT FALSE
  AND c IN ('[2]',
            '[3, [4, 5]]',
            '2',
            '3',
            '999',
            999) IS FALSE;
+----------+
| c        |
+----------+
| 1        |
| 1        |
| 1        |
| 1        |
| 1        |
| my_empty |
| my_empty |
| my_empty |
| my_empty |
| my_empty |
| my_null  |
| my_null  |
| my_null  |
| my_null  |
| my_null  |
+----------+
(15 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A1_B13_C1 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM test_unnest,
     unnest(mv_to_array(c_mv_complex)) AS u(c)
WHERE (c BETWEEN '1' AND '2')
  AND (c NOT BETWEEN '3' AND '4');
+---+
| c |
+---+
| 1 |
| 1 |
| 1 |
| 1 |
| 1 |
+---+
(5 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A1_B13_C3 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest,
        unnest(mv_to_array(c_mv_complex)) AS u(c)
   WHERE (c BETWEEN '1' AND '2')
     AND (c NOT BETWEEN '3' AND '4'));
+---+
| c |
+---+
| 1 |
| 1 |
| 1 |
| 1 |
| 1 |
+---+
(5 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A1_B13_C5 TYPE: NEGATIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest
   WHERE (c BETWEEN '1' AND '2')
     AND (c NOT BETWEEN '3' AND '4')), unnest(mv_to_array(c_mv_complex)) AS u(c);
QueryInterruptedException
!error

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A1_B13_C7 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest,
        unnest(mv_to_array(c_mv_complex)) AS u(c))
WHERE (c BETWEEN '1' AND '2')
  AND (c NOT BETWEEN '3' AND '4');
+---+
| c |
+---+
| 1 |
| 1 |
| 1 |
| 1 |
| 1 |
+---+
(5 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A1_B13_C9 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest), unnest(mv_to_array(c_mv_complex)) AS u(c)
WHERE (c BETWEEN '1' AND '2')
  AND (c NOT BETWEEN '3' AND '4');
+---+
| c |
+---+
| 1 |
| 1 |
| 1 |
| 1 |
| 1 |
+---+
(5 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A1_B14_C1 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM test_unnest,
     unnest(mv_to_array(c_mv_complex)) AS u(c)
WHERE (c like '1%')
  AND (c not like '3%');
+---+
| c |
+---+
| 1 |
| 1 |
| 1 |
| 1 |
| 1 |
+---+
(5 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A1_B14_C3 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest,
        unnest(mv_to_array(c_mv_complex)) AS u(c)
   WHERE (c like '1%')
     AND (c not like '3%'));
+---+
| c |
+---+
| 1 |
| 1 |
| 1 |
| 1 |
| 1 |
+---+
(5 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A1_B14_C5 TYPE: NEGATIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest
   WHERE (c like '1%')
     AND (c not like '3%')), unnest(mv_to_array(c_mv_complex)) AS u(c);
QueryInterruptedException
!error

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A1_B14_C7 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest,
        unnest(mv_to_array(c_mv_complex)) AS u(c))
WHERE (c like '1%')
  AND (c not like '3%');
+---+
| c |
+---+
| 1 |
| 1 |
| 1 |
| 1 |
| 1 |
+---+
(5 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A1_B14_C9 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest), unnest(mv_to_array(c_mv_complex)) AS u(c)
WHERE (c like '1%')
  AND (c not like '3%');
+---+
| c |
+---+
| 1 |
| 1 |
| 1 |
| 1 |
| 1 |
+---+
(5 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A1_B15_C1 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM test_unnest,
     unnest(mv_to_array(c_mv_complex)) AS u(c)
WHERE c IN ('',
            'my_null',
            'my_empty',
            '1',
            '-1',
            '0',
            '999',
            999)
  AND c NOT IN ('[2]',
                '[3, [4, 5]]',
                '2',
                '3',
                '999',
                999);
+----------+
| c        |
+----------+
| 1        |
| 1        |
| 1        |
| 1        |
| 1        |
| my_empty |
| my_empty |
| my_empty |
| my_empty |
| my_empty |
| my_null  |
| my_null  |
| my_null  |
| my_null  |
| my_null  |
+----------+
(15 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A1_B15_C3 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest,
        unnest(mv_to_array(c_mv_complex)) AS u(c)
   WHERE c IN ('',
               'my_null',
               'my_empty',
               '1',
               '-1',
               '0',
               '999',
               999)
     AND c NOT IN ('[2]',
                   '[3, [4, 5]]',
                   '2',
                   '3',
                   '999',
                   999));
+----------+
| c        |
+----------+
| 1        |
| 1        |
| 1        |
| 1        |
| 1        |
| my_empty |
| my_empty |
| my_empty |
| my_empty |
| my_empty |
| my_null  |
| my_null  |
| my_null  |
| my_null  |
| my_null  |
+----------+
(15 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A1_B15_C5 TYPE: NEGATIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest
   WHERE c IN ('',
               'my_null',
               'my_empty',
               '1',
               '-1',
               '0',
               '999',
               999)
     AND c NOT IN ('[2]',
                   '[3, [4, 5]]',
                   '2',
                   '3',
                   '999',
                   999)), unnest(mv_to_array(c_mv_complex)) AS u(c);
QueryInterruptedException
!error

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A1_B15_C7 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest,
        unnest(mv_to_array(c_mv_complex)) AS u(c))
WHERE c IN ('',
            'my_null',
            'my_empty',
            '1',
            '-1',
            '0',
            '999',
            999)
  AND c NOT IN ('[2]',
                '[3, [4, 5]]',
                '2',
                '3',
                '999',
                999);
+----------+
| c        |
+----------+
| 1        |
| 1        |
| 1        |
| 1        |
| 1        |
| my_empty |
| my_empty |
| my_empty |
| my_empty |
| my_empty |
| my_null  |
| my_null  |
| my_null  |
| my_null  |
| my_null  |
+----------+
(15 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A1_B15_C9 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest), unnest(mv_to_array(c_mv_complex)) AS u(c)
WHERE c IN ('',
            'my_null',
            'my_empty',
            '1',
            '-1',
            '0',
            '999',
            999)
  AND c NOT IN ('[2]',
                '[3, [4, 5]]',
                '2',
                '3',
                '999',
                999);
+----------+
| c        |
+----------+
| 1        |
| 1        |
| 1        |
| 1        |
| 1        |
| my_empty |
| my_empty |
| my_empty |
| my_empty |
| my_empty |
| my_null  |
| my_null  |
| my_null  |
| my_null  |
| my_null  |
+----------+
(15 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A1_B16_C1 TYPE: NEGATIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM test_unnest,
     unnest(mv_to_array(c_mv_complex)) AS u(c)
WHERE c IN
    (SELECT col
     FROM (
           VALUES(''),('my_null'),('my_empty'),('1'),('-1'),('0'),('999')) AS t(col))
  AND c NOT IN
    (SELECT col
     FROM (
           VALUES('[2]'),('[3, [4, 5]]'),('2'),('3'),('999')) AS t(col));
Unhandled Query Planning Failure
!error

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A1_B16_C3 TYPE: NEGATIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest,
        unnest(mv_to_array(c_mv_complex)) AS u(c)
   WHERE c IN
       (SELECT col
        FROM (
              VALUES(''),('my_null'),('my_empty'),('1'),('-1'),('0'),('999')) AS t(col))
     AND c NOT IN
       (SELECT col
        FROM (
              VALUES('[2]'),('[3, [4, 5]]'),('2'),('3'),('999')) AS t(col)));
Unhandled Query Planning Failure
!error

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A1_B16_C5 TYPE: NEGATIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest
   WHERE c IN
       (SELECT col
        FROM (
              VALUES(''),('my_null'),('my_empty'),('1'),('-1'),('0'),('999')) AS t(col))
     AND c NOT IN
       (SELECT col
        FROM (
              VALUES('[2]'),('[3, [4, 5]]'),('2'),('3'),('999')) AS t(col))), unnest(mv_to_array(c_mv_complex)) AS u(c);
QueryInterruptedException
!error

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A1_B16_C7 TYPE: NEGATIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest,
        unnest(mv_to_array(c_mv_complex)) AS u(c))
WHERE c IN
    (SELECT col
     FROM (
           VALUES(''),('my_null'),('my_empty'),('1'),('-1'),('0'),('999')) AS t(col))
  AND c NOT IN
    (SELECT col
     FROM (
           VALUES('[2]'),('[3, [4, 5]]'),('2'),('3'),('999')) AS t(col));
Unhandled Query Planning Failure
!error

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A1_B16_C9 TYPE: NEGATIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest), unnest(mv_to_array(c_mv_complex)) AS u(c)
WHERE c IN
    (SELECT col
     FROM (
           VALUES(''),('my_null'),('my_empty'),('1'),('-1'),('0'),('999')) AS t(col))
  AND c NOT IN
    (SELECT col
     FROM (
           VALUES('[2]'),('[3, [4, 5]]'),('2'),('3'),('999')) AS t(col));
Unhandled Query Planning Failure
!error

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A1_B17_C1 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM test_unnest,
     unnest(mv_to_array(c_mv_complex)) AS u(c)
WHERE c_long=1
  AND c='1';
+---+
| c |
+---+
| 1 |
+---+
(1 row)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A1_B17_C3 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest,
        unnest(mv_to_array(c_mv_complex)) AS u(c)
   WHERE c_long=1
     AND c='1');
+---+
| c |
+---+
| 1 |
+---+
(1 row)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A1_B17_C5 TYPE: NEGATIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest
   WHERE c_long=1
     AND c='1'), unnest(mv_to_array(c_mv_complex)) AS u(c);
QueryInterruptedException
!error

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A1_B17_C7 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest,
        unnest(mv_to_array(c_mv_complex)) AS u(c))
WHERE c_long=1
  AND c='1';
+---+
| c |
+---+
| 1 |
+---+
(1 row)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A1_B17_C9 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest), unnest(mv_to_array(c_mv_complex)) AS u(c)
WHERE c_long=1
  AND c='1';
+---+
| c |
+---+
| 1 |
+---+
(1 row)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A1_B18_C1 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM test_unnest,
     unnest(mv_to_array(c_mv_complex)) AS u(c)
WHERE c_long<>1
  AND c<>'1';
+-------------+
| c           |
+-------------+
| [2]         |
| [2]         |
| [2]         |
| [2]         |
| [3, [4, 5]] |
| [3, [4, 5]] |
| [3, [4, 5]] |
| [3, [4, 5]] |
| my_empty    |
| my_empty    |
| my_empty    |
| my_empty    |
| my_null     |
| my_null     |
| my_null     |
| my_null     |
+-------------+
(16 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A1_B18_C3 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest,
        unnest(mv_to_array(c_mv_complex)) AS u(c)
   WHERE c_long<>1
     AND c<>'1');
+-------------+
| c           |
+-------------+
| [2]         |
| [2]         |
| [2]         |
| [2]         |
| [3, [4, 5]] |
| [3, [4, 5]] |
| [3, [4, 5]] |
| [3, [4, 5]] |
| my_empty    |
| my_empty    |
| my_empty    |
| my_empty    |
| my_null     |
| my_null     |
| my_null     |
| my_null     |
+-------------+
(16 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A1_B18_C5 TYPE: NEGATIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest
   WHERE c_long<>1
     AND c<>'1'), unnest(mv_to_array(c_mv_complex)) AS u(c);
QueryInterruptedException
!error

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A1_B18_C7 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest,
        unnest(mv_to_array(c_mv_complex)) AS u(c))
WHERE c_long<>1
  AND c<>'1';
+-------------+
| c           |
+-------------+
| [2]         |
| [2]         |
| [2]         |
| [2]         |
| [3, [4, 5]] |
| [3, [4, 5]] |
| [3, [4, 5]] |
| [3, [4, 5]] |
| my_empty    |
| my_empty    |
| my_empty    |
| my_empty    |
| my_null     |
| my_null     |
| my_null     |
| my_null     |
+-------------+
(16 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A1_B18_C9 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest), unnest(mv_to_array(c_mv_complex)) AS u(c)
WHERE c_long<>1
  AND c<>'1';
+-------------+
| c           |
+-------------+
| [2]         |
| [2]         |
| [2]         |
| [2]         |
| [3, [4, 5]] |
| [3, [4, 5]] |
| [3, [4, 5]] |
| [3, [4, 5]] |
| my_empty    |
| my_empty    |
| my_empty    |
| my_empty    |
| my_null     |
| my_null     |
| my_null     |
| my_null     |
+-------------+
(16 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A1_B19_C1 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM test_unnest,
     unnest(mv_to_array(c_mv_complex)) AS u(c)
WHERE c_long>1
  AND c>'1';
+-------------+
| c           |
+-------------+
| [2]         |
| [2]         |
| [2]         |
| [3, [4, 5]] |
| [3, [4, 5]] |
| [3, [4, 5]] |
| my_empty    |
| my_empty    |
| my_empty    |
| my_null     |
| my_null     |
| my_null     |
+-------------+
(12 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A1_B19_C3 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest,
        unnest(mv_to_array(c_mv_complex)) AS u(c)
   WHERE c_long>1
     AND c>'1');
+-------------+
| c           |
+-------------+
| [2]         |
| [2]         |
| [2]         |
| [3, [4, 5]] |
| [3, [4, 5]] |
| [3, [4, 5]] |
| my_empty    |
| my_empty    |
| my_empty    |
| my_null     |
| my_null     |
| my_null     |
+-------------+
(12 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A1_B19_C5 TYPE: NEGATIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest
   WHERE c_long>1
     AND c>'1'), unnest(mv_to_array(c_mv_complex)) AS u(c);
QueryInterruptedException
!error

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A1_B19_C7 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest,
        unnest(mv_to_array(c_mv_complex)) AS u(c))
WHERE c_long>1
  AND c>'1';
+-------------+
| c           |
+-------------+
| [2]         |
| [2]         |
| [2]         |
| [3, [4, 5]] |
| [3, [4, 5]] |
| [3, [4, 5]] |
| my_empty    |
| my_empty    |
| my_empty    |
| my_null     |
| my_null     |
| my_null     |
+-------------+
(12 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A1_B19_C9 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest), unnest(mv_to_array(c_mv_complex)) AS u(c)
WHERE c_long>1
  AND c>'1';
+-------------+
| c           |
+-------------+
| [2]         |
| [2]         |
| [2]         |
| [3, [4, 5]] |
| [3, [4, 5]] |
| [3, [4, 5]] |
| my_empty    |
| my_empty    |
| my_empty    |
| my_null     |
| my_null     |
| my_null     |
+-------------+
(12 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A1_B20_C1 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM test_unnest,
     unnest(mv_to_array(c_mv_complex)) AS u(c)
WHERE c_long>=1
  AND c>='1';
+-------------+
| c           |
+-------------+
| 1           |
| 1           |
| 1           |
| 1           |
| [2]         |
| [2]         |
| [2]         |
| [2]         |
| [3, [4, 5]] |
| [3, [4, 5]] |
| [3, [4, 5]] |
| [3, [4, 5]] |
| my_empty    |
| my_empty    |
| my_empty    |
| my_empty    |
| my_null     |
| my_null     |
| my_null     |
| my_null     |
+-------------+
(20 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A1_B20_C3 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest,
        unnest(mv_to_array(c_mv_complex)) AS u(c)
   WHERE c_long>=1
     AND c>='1');
+-------------+
| c           |
+-------------+
| 1           |
| 1           |
| 1           |
| 1           |
| [2]         |
| [2]         |
| [2]         |
| [2]         |
| [3, [4, 5]] |
| [3, [4, 5]] |
| [3, [4, 5]] |
| [3, [4, 5]] |
| my_empty    |
| my_empty    |
| my_empty    |
| my_empty    |
| my_null     |
| my_null     |
| my_null     |
| my_null     |
+-------------+
(20 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A1_B20_C5 TYPE: NEGATIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest
   WHERE c_long>=1
     AND c>='1'), unnest(mv_to_array(c_mv_complex)) AS u(c);
QueryInterruptedException
!error

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A1_B20_C7 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest,
        unnest(mv_to_array(c_mv_complex)) AS u(c))
WHERE c_long>=1
  AND c>='1';
+-------------+
| c           |
+-------------+
| 1           |
| 1           |
| 1           |
| 1           |
| [2]         |
| [2]         |
| [2]         |
| [2]         |
| [3, [4, 5]] |
| [3, [4, 5]] |
| [3, [4, 5]] |
| [3, [4, 5]] |
| my_empty    |
| my_empty    |
| my_empty    |
| my_empty    |
| my_null     |
| my_null     |
| my_null     |
| my_null     |
+-------------+
(20 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A1_B20_C9 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest), unnest(mv_to_array(c_mv_complex)) AS u(c)
WHERE c_long>=1
  AND c>='1';
+-------------+
| c           |
+-------------+
| 1           |
| 1           |
| 1           |
| 1           |
| [2]         |
| [2]         |
| [2]         |
| [2]         |
| [3, [4, 5]] |
| [3, [4, 5]] |
| [3, [4, 5]] |
| [3, [4, 5]] |
| my_empty    |
| my_empty    |
| my_empty    |
| my_empty    |
| my_null     |
| my_null     |
| my_null     |
| my_null     |
+-------------+
(20 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A1_B21_C1 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM test_unnest,
     unnest(mv_to_array(c_mv_complex)) AS u(c)
WHERE c_long<1
  AND c<'1';
+---+
| c |
+---+
+---+
(0 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A1_B21_C3 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest,
        unnest(mv_to_array(c_mv_complex)) AS u(c)
   WHERE c_long<1
     AND c<'1');
+---+
| c |
+---+
+---+
(0 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A1_B21_C5 TYPE: NEGATIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest
   WHERE c_long<1
     AND c<'1'), unnest(mv_to_array(c_mv_complex)) AS u(c);
QueryInterruptedException
!error

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A1_B21_C7 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest,
        unnest(mv_to_array(c_mv_complex)) AS u(c))
WHERE c_long<1
  AND c<'1';
+---+
| c |
+---+
+---+
(0 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A1_B21_C9 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest), unnest(mv_to_array(c_mv_complex)) AS u(c)
WHERE c_long<1
  AND c<'1';
+---+
| c |
+---+
+---+
(0 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A1_B22_C1 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM test_unnest,
     unnest(mv_to_array(c_mv_complex)) AS u(c)
WHERE c_long<=1
  AND c<='1';
+---+
| c |
+---+
| 1 |
| 1 |
+---+
(2 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A1_B22_C3 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest,
        unnest(mv_to_array(c_mv_complex)) AS u(c)
   WHERE c_long<=1
     AND c<='1');
+---+
| c |
+---+
| 1 |
| 1 |
+---+
(2 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A1_B22_C5 TYPE: NEGATIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest
   WHERE c_long<=1
     AND c<='1'), unnest(mv_to_array(c_mv_complex)) AS u(c);
QueryInterruptedException
!error

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A1_B22_C7 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest,
        unnest(mv_to_array(c_mv_complex)) AS u(c))
WHERE c_long<=1
  AND c<='1';
+---+
| c |
+---+
| 1 |
| 1 |
+---+
(2 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A1_B22_C9 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest), unnest(mv_to_array(c_mv_complex)) AS u(c)
WHERE c_long<=1
  AND c<='1';
+---+
| c |
+---+
| 1 |
| 1 |
+---+
(2 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A1_B23_C1 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM test_unnest,
     unnest(mv_to_array(c_mv_complex)) AS u(c)
WHERE NOT (c_long<>0
           AND c_long<>1
           AND c_long<>2)
  AND (NOT c<>''
       OR NOT c<>'my_null'
       OR NOT c<>'my_empty'
       OR NOT c<>'1'
       OR NOT c<>'-1'
       OR NOT c<>'0'
       OR NOT c<>'999'
       OR NOT c<>999)
  AND (NOT c='[2]'
       OR NOT c='[3, [4, 5]]'
       OR NOT c='2'
       OR NOT c='3'
       OR NOT c='999'
       OR NOT c=999);
+----------+
| c        |
+----------+
| 1        |
| 1        |
| 1        |
| my_empty |
| my_empty |
| my_empty |
| my_null  |
| my_null  |
| my_null  |
+----------+
(9 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A1_B23_C3 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest,
        unnest(mv_to_array(c_mv_complex)) AS u(c)
   WHERE NOT (c_long<>0
              AND c_long<>1
              AND c_long<>2)
     AND (NOT c<>''
          OR NOT c<>'my_null'
          OR NOT c<>'my_empty'
          OR NOT c<>'1'
          OR NOT c<>'-1'
          OR NOT c<>'0'
          OR NOT c<>'999'
          OR NOT c<>999)
     AND (NOT c='[2]'
          OR NOT c='[3, [4, 5]]'
          OR NOT c='2'
          OR NOT c='3'
          OR NOT c='999'
          OR NOT c=999));
+----------+
| c        |
+----------+
| 1        |
| 1        |
| 1        |
| my_empty |
| my_empty |
| my_empty |
| my_null  |
| my_null  |
| my_null  |
+----------+
(9 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A1_B23_C5 TYPE: NEGATIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest
   WHERE NOT (c_long<>0
              AND c_long<>1
              AND c_long<>2)
     AND (NOT c<>''
          OR NOT c<>'my_null'
          OR NOT c<>'my_empty'
          OR NOT c<>'1'
          OR NOT c<>'-1'
          OR NOT c<>'0'
          OR NOT c<>'999'
          OR NOT c<>999)
     AND (NOT c='[2]'
          OR NOT c='[3, [4, 5]]'
          OR NOT c='2'
          OR NOT c='3'
          OR NOT c='999'
          OR NOT c=999)), unnest(mv_to_array(c_mv_complex)) AS u(c);
QueryInterruptedException
!error

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A1_B23_C7 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest,
        unnest(mv_to_array(c_mv_complex)) AS u(c))
WHERE NOT (c_long<>0
           AND c_long<>1
           AND c_long<>2)
  AND (NOT c<>''
       OR NOT c<>'my_null'
       OR NOT c<>'my_empty'
       OR NOT c<>'1'
       OR NOT c<>'-1'
       OR NOT c<>'0'
       OR NOT c<>'999'
       OR NOT c<>999)
  AND (NOT c='[2]'
       OR NOT c='[3, [4, 5]]'
       OR NOT c='2'
       OR NOT c='3'
       OR NOT c='999'
       OR NOT c=999);
+----------+
| c        |
+----------+
| 1        |
| 1        |
| 1        |
| my_empty |
| my_empty |
| my_empty |
| my_null  |
| my_null  |
| my_null  |
+----------+
(9 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A1_B23_C9 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest), unnest(mv_to_array(c_mv_complex)) AS u(c)
WHERE NOT (c_long<>0
           AND c_long<>1
           AND c_long<>2)
  AND (NOT c<>''
       OR NOT c<>'my_null'
       OR NOT c<>'my_empty'
       OR NOT c<>'1'
       OR NOT c<>'-1'
       OR NOT c<>'0'
       OR NOT c<>'999'
       OR NOT c<>999)
  AND (NOT c='[2]'
       OR NOT c='[3, [4, 5]]'
       OR NOT c='2'
       OR NOT c='3'
       OR NOT c='999'
       OR NOT c=999);
+----------+
| c        |
+----------+
| 1        |
| 1        |
| 1        |
| my_empty |
| my_empty |
| my_empty |
| my_null  |
| my_null  |
| my_null  |
+----------+
(9 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A1_B24_C1 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM test_unnest,
     unnest(mv_to_array(c_mv_complex)) AS u(c)
WHERE (c_long=0
       OR c_long=1
       OR c_long=2)
  AND (c=''
       OR c='my_null'
       OR c='my_empty'
       OR c='1'
       OR c='-1'
       OR c='0'
       OR c='999'
       OR c=999)
  AND NOT c='[2]'
  AND NOT c='[3, [4, 5]]'
  AND NOT c='2'
  AND NOT c='3'
  AND NOT c='999'
  AND NOT c=999;
+----------+
| c        |
+----------+
| 1        |
| 1        |
| 1        |
| my_empty |
| my_empty |
| my_empty |
| my_null  |
| my_null  |
| my_null  |
+----------+
(9 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A1_B24_C3 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest,
        unnest(mv_to_array(c_mv_complex)) AS u(c)
   WHERE (c_long=0
          OR c_long=1
          OR c_long=2)
     AND (c=''
          OR c='my_null'
          OR c='my_empty'
          OR c='1'
          OR c='-1'
          OR c='0'
          OR c='999'
          OR c=999)
     AND NOT c='[2]'
     AND NOT c='[3, [4, 5]]'
     AND NOT c='2'
     AND NOT c='3'
     AND NOT c='999'
     AND NOT c=999);
+----------+
| c        |
+----------+
| 1        |
| 1        |
| 1        |
| my_empty |
| my_empty |
| my_empty |
| my_null  |
| my_null  |
| my_null  |
+----------+
(9 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A1_B24_C5 TYPE: NEGATIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest
   WHERE (c_long=0
          OR c_long=1
          OR c_long=2)
     AND (c=''
          OR c='my_null'
          OR c='my_empty'
          OR c='1'
          OR c='-1'
          OR c='0'
          OR c='999'
          OR c=999)
     AND NOT c='[2]'
     AND NOT c='[3, [4, 5]]'
     AND NOT c='2'
     AND NOT c='3'
     AND NOT c='999'
     AND NOT c=999), unnest(mv_to_array(c_mv_complex)) AS u(c);
QueryInterruptedException
!error

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A1_B24_C7 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest,
        unnest(mv_to_array(c_mv_complex)) AS u(c))
WHERE (c_long=0
       OR c_long=1
       OR c_long=2)
  AND (c=''
       OR c='my_null'
       OR c='my_empty'
       OR c='1'
       OR c='-1'
       OR c='0'
       OR c='999'
       OR c=999)
  AND NOT c='[2]'
  AND NOT c='[3, [4, 5]]'
  AND NOT c='2'
  AND NOT c='3'
  AND NOT c='999'
  AND NOT c=999;
+----------+
| c        |
+----------+
| 1        |
| 1        |
| 1        |
| my_empty |
| my_empty |
| my_empty |
| my_null  |
| my_null  |
| my_null  |
+----------+
(9 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A1_B24_C9 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest), unnest(mv_to_array(c_mv_complex)) AS u(c)
WHERE (c_long=0
       OR c_long=1
       OR c_long=2)
  AND (c=''
       OR c='my_null'
       OR c='my_empty'
       OR c='1'
       OR c='-1'
       OR c='0'
       OR c='999'
       OR c=999)
  AND NOT c='[2]'
  AND NOT c='[3, [4, 5]]'
  AND NOT c='2'
  AND NOT c='3'
  AND NOT c='999'
  AND NOT c=999;
+----------+
| c        |
+----------+
| 1        |
| 1        |
| 1        |
| my_empty |
| my_empty |
| my_empty |
| my_null  |
| my_null  |
| my_null  |
+----------+
(9 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A1_B25_C1 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM test_unnest,
     unnest(mv_to_array(c_mv_complex)) AS u(c)
WHERE c_str IS NULL
  AND c IS NULL;
+---+
| c |
+---+
+---+
(0 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A1_B25_C3 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest,
        unnest(mv_to_array(c_mv_complex)) AS u(c)
   WHERE c_str IS NULL
     AND c IS NULL);
+---+
| c |
+---+
+---+
(0 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A1_B25_C5 TYPE: NEGATIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest
   WHERE c_str IS NULL
     AND c IS NULL), unnest(mv_to_array(c_mv_complex)) AS u(c);
QueryInterruptedException
!error

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A1_B25_C7 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest,
        unnest(mv_to_array(c_mv_complex)) AS u(c))
WHERE c_str IS NULL
  AND c IS NULL;
+---+
| c |
+---+
+---+
(0 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A1_B25_C9 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest), unnest(mv_to_array(c_mv_complex)) AS u(c)
WHERE c_str IS NULL
  AND c IS NULL;
+---+
| c |
+---+
+---+
(0 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A1_B26_C1 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM test_unnest,
     unnest(mv_to_array(c_mv_complex)) AS u(c)
WHERE c_str IS NOT NULL
  AND c IS NOT NULL;
+-------------+
| c           |
+-------------+
| 1           |
| 1           |
| 1           |
| 1           |
| [2]         |
| [2]         |
| [2]         |
| [2]         |
| [3, [4, 5]] |
| [3, [4, 5]] |
| [3, [4, 5]] |
| [3, [4, 5]] |
| my_empty    |
| my_empty    |
| my_empty    |
| my_empty    |
| my_null     |
| my_null     |
| my_null     |
| my_null     |
+-------------+
(20 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A1_B26_C3 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest,
        unnest(mv_to_array(c_mv_complex)) AS u(c)
   WHERE c_str IS NOT NULL
     AND c IS NOT NULL);
+-------------+
| c           |
+-------------+
| 1           |
| 1           |
| 1           |
| 1           |
| [2]         |
| [2]         |
| [2]         |
| [2]         |
| [3, [4, 5]] |
| [3, [4, 5]] |
| [3, [4, 5]] |
| [3, [4, 5]] |
| my_empty    |
| my_empty    |
| my_empty    |
| my_empty    |
| my_null     |
| my_null     |
| my_null     |
| my_null     |
+-------------+
(20 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A1_B26_C5 TYPE: NEGATIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest
   WHERE c_str IS NOT NULL
     AND c IS NOT NULL), unnest(mv_to_array(c_mv_complex)) AS u(c);
QueryInterruptedException
!error

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A1_B26_C7 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest,
        unnest(mv_to_array(c_mv_complex)) AS u(c))
WHERE c_str IS NOT NULL
  AND c IS NOT NULL;
+-------------+
| c           |
+-------------+
| 1           |
| 1           |
| 1           |
| 1           |
| [2]         |
| [2]         |
| [2]         |
| [2]         |
| [3, [4, 5]] |
| [3, [4, 5]] |
| [3, [4, 5]] |
| [3, [4, 5]] |
| my_empty    |
| my_empty    |
| my_empty    |
| my_empty    |
| my_null     |
| my_null     |
| my_null     |
| my_null     |
+-------------+
(20 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A1_B26_C9 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest), unnest(mv_to_array(c_mv_complex)) AS u(c)
WHERE c_str IS NOT NULL
  AND c IS NOT NULL;
+-------------+
| c           |
+-------------+
| 1           |
| 1           |
| 1           |
| 1           |
| [2]         |
| [2]         |
| [2]         |
| [2]         |
| [3, [4, 5]] |
| [3, [4, 5]] |
| [3, [4, 5]] |
| [3, [4, 5]] |
| my_empty    |
| my_empty    |
| my_empty    |
| my_empty    |
| my_null     |
| my_null     |
| my_null     |
| my_null     |
+-------------+
(20 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A1_B27_C1 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM test_unnest,
     unnest(mv_to_array(c_mv_complex)) AS u(c)
WHERE c_long IN (0,
                 1,
                 2) IS TRUE
  AND c_long IN (3,
                 4) IS NOT TRUE
  AND c IN ('',
            'my_null',
            'my_empty',
            '1',
            '-1',
            '0',
            '999',
            999) IS TRUE
  AND c IN ('[2]',
            '[3, [4, 5]]',
            '2',
            '3',
            '999',
            999) IS NOT TRUE;
+----------+
| c        |
+----------+
| 1        |
| 1        |
| 1        |
| my_empty |
| my_empty |
| my_empty |
| my_null  |
| my_null  |
| my_null  |
+----------+
(9 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A1_B27_C3 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest,
        unnest(mv_to_array(c_mv_complex)) AS u(c)
   WHERE c_long IN (0,
                    1,
                    2) IS TRUE
     AND c_long IN (3,
                    4) IS NOT TRUE
     AND c IN ('',
               'my_null',
               'my_empty',
               '1',
               '-1',
               '0',
               '999',
               999) IS TRUE
     AND c IN ('[2]',
               '[3, [4, 5]]',
               '2',
               '3',
               '999',
               999) IS NOT TRUE);
+----------+
| c        |
+----------+
| 1        |
| 1        |
| 1        |
| my_empty |
| my_empty |
| my_empty |
| my_null  |
| my_null  |
| my_null  |
+----------+
(9 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A1_B27_C5 TYPE: NEGATIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest
   WHERE c_long IN (0,
                    1,
                    2) IS TRUE
     AND c_long IN (3,
                    4) IS NOT TRUE
     AND c IN ('',
               'my_null',
               'my_empty',
               '1',
               '-1',
               '0',
               '999',
               999) IS TRUE
     AND c IN ('[2]',
               '[3, [4, 5]]',
               '2',
               '3',
               '999',
               999) IS NOT TRUE), unnest(mv_to_array(c_mv_complex)) AS u(c);
QueryInterruptedException
!error

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A1_B27_C7 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest,
        unnest(mv_to_array(c_mv_complex)) AS u(c))
WHERE c_long IN (0,
                 1,
                 2) IS TRUE
  AND c_long IN (3,
                 4) IS NOT TRUE
  AND c IN ('',
            'my_null',
            'my_empty',
            '1',
            '-1',
            '0',
            '999',
            999) IS TRUE
  AND c IN ('[2]',
            '[3, [4, 5]]',
            '2',
            '3',
            '999',
            999) IS NOT TRUE;
+----------+
| c        |
+----------+
| 1        |
| 1        |
| 1        |
| my_empty |
| my_empty |
| my_empty |
| my_null  |
| my_null  |
| my_null  |
+----------+
(9 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A1_B27_C9 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest), unnest(mv_to_array(c_mv_complex)) AS u(c)
WHERE c_long IN (0,
                 1,
                 2) IS TRUE
  AND c_long IN (3,
                 4) IS NOT TRUE
  AND c IN ('',
            'my_null',
            'my_empty',
            '1',
            '-1',
            '0',
            '999',
            999) IS TRUE
  AND c IN ('[2]',
            '[3, [4, 5]]',
            '2',
            '3',
            '999',
            999) IS NOT TRUE;
+----------+
| c        |
+----------+
| 1        |
| 1        |
| 1        |
| my_empty |
| my_empty |
| my_empty |
| my_null  |
| my_null  |
| my_null  |
+----------+
(9 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A1_B28_C1 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM test_unnest,
     unnest(mv_to_array(c_mv_complex)) AS u(c)
WHERE c_long IN (0,
                 1,
                 2) IS NOT FALSE
  AND c_long IN (3,
                 4) IS FALSE
  AND c IN ('',
            'my_null',
            'my_empty',
            '1',
            '-1',
            '0',
            '999',
            999) IS NOT FALSE
  AND c IN ('[2]',
            '[3, [4, 5]]',
            '2',
            '3',
            '999',
            999) IS FALSE;
+----------+
| c        |
+----------+
| 1        |
| 1        |
| 1        |
| my_empty |
| my_empty |
| my_empty |
| my_null  |
| my_null  |
| my_null  |
+----------+
(9 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A1_B28_C3 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest,
        unnest(mv_to_array(c_mv_complex)) AS u(c)
   WHERE c_long IN (0,
                    1,
                    2) IS NOT FALSE
     AND c_long IN (3,
                    4) IS FALSE
     AND c IN ('',
               'my_null',
               'my_empty',
               '1',
               '-1',
               '0',
               '999',
               999) IS NOT FALSE
     AND c IN ('[2]',
               '[3, [4, 5]]',
               '2',
               '3',
               '999',
               999) IS FALSE);
+----------+
| c        |
+----------+
| 1        |
| 1        |
| 1        |
| my_empty |
| my_empty |
| my_empty |
| my_null  |
| my_null  |
| my_null  |
+----------+
(9 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A1_B28_C5 TYPE: NEGATIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest
   WHERE c_long IN (0,
                    1,
                    2) IS NOT FALSE
     AND c_long IN (3,
                    4) IS FALSE
     AND c IN ('',
               'my_null',
               'my_empty',
               '1',
               '-1',
               '0',
               '999',
               999) IS NOT FALSE
     AND c IN ('[2]',
               '[3, [4, 5]]',
               '2',
               '3',
               '999',
               999) IS FALSE), unnest(mv_to_array(c_mv_complex)) AS u(c);
QueryInterruptedException
!error

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A1_B28_C7 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest,
        unnest(mv_to_array(c_mv_complex)) AS u(c))
WHERE c_long IN (0,
                 1,
                 2) IS NOT FALSE
  AND c_long IN (3,
                 4) IS FALSE
  AND c IN ('',
            'my_null',
            'my_empty',
            '1',
            '-1',
            '0',
            '999',
            999) IS NOT FALSE
  AND c IN ('[2]',
            '[3, [4, 5]]',
            '2',
            '3',
            '999',
            999) IS FALSE;
+----------+
| c        |
+----------+
| 1        |
| 1        |
| 1        |
| my_empty |
| my_empty |
| my_empty |
| my_null  |
| my_null  |
| my_null  |
+----------+
(9 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A1_B28_C9 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest), unnest(mv_to_array(c_mv_complex)) AS u(c)
WHERE c_long IN (0,
                 1,
                 2) IS NOT FALSE
  AND c_long IN (3,
                 4) IS FALSE
  AND c IN ('',
            'my_null',
            'my_empty',
            '1',
            '-1',
            '0',
            '999',
            999) IS NOT FALSE
  AND c IN ('[2]',
            '[3, [4, 5]]',
            '2',
            '3',
            '999',
            999) IS FALSE;
+----------+
| c        |
+----------+
| 1        |
| 1        |
| 1        |
| my_empty |
| my_empty |
| my_empty |
| my_null  |
| my_null  |
| my_null  |
+----------+
(9 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A1_B29_C1 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM test_unnest,
     unnest(mv_to_array(c_mv_complex)) AS u(c)
WHERE (c_long BETWEEN 0 AND 2)
  AND (c_long NOT BETWEEN 3 AND 4)
  AND (c BETWEEN '1' AND '2')
  AND (c NOT BETWEEN '3' AND '4');
+---+
| c |
+---+
| 1 |
| 1 |
| 1 |
+---+
(3 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A1_B29_C3 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest,
        unnest(mv_to_array(c_mv_complex)) AS u(c)
   WHERE (c_long BETWEEN 0 AND 2)
     AND (c_long NOT BETWEEN 3 AND 4)
     AND (c BETWEEN '1' AND '2')
     AND (c NOT BETWEEN '3' AND '4'));
+---+
| c |
+---+
| 1 |
| 1 |
| 1 |
+---+
(3 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A1_B29_C5 TYPE: NEGATIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest
   WHERE (c_long BETWEEN 0 AND 2)
     AND (c_long NOT BETWEEN 3 AND 4)
     AND (c BETWEEN '1' AND '2')
     AND (c NOT BETWEEN '3' AND '4')), unnest(mv_to_array(c_mv_complex)) AS u(c);
QueryInterruptedException
!error

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A1_B29_C7 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest,
        unnest(mv_to_array(c_mv_complex)) AS u(c))
WHERE (c_long BETWEEN 0 AND 2)
  AND (c_long NOT BETWEEN 3 AND 4)
  AND (c BETWEEN '1' AND '2')
  AND (c NOT BETWEEN '3' AND '4');
+---+
| c |
+---+
| 1 |
| 1 |
| 1 |
+---+
(3 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A1_B29_C9 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest), unnest(mv_to_array(c_mv_complex)) AS u(c)
WHERE (c_long BETWEEN 0 AND 2)
  AND (c_long NOT BETWEEN 3 AND 4)
  AND (c BETWEEN '1' AND '2')
  AND (c NOT BETWEEN '3' AND '4');
+---+
| c |
+---+
| 1 |
| 1 |
| 1 |
+---+
(3 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A1_B30_C1 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM test_unnest,
     unnest(mv_to_array(c_mv_complex)) AS u(c)
WHERE (c_str like '%2')
  AND (c_str not like '%3')
  AND (c like '1%')
  AND (c not like '3%');
+---+
| c |
+---+
| 1 |
+---+
(1 row)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A1_B30_C3 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest,
        unnest(mv_to_array(c_mv_complex)) AS u(c)
   WHERE (c_str like '%2')
     AND (c_str not like '%3')
     AND (c like '1%')
     AND (c not like '3%'));
+---+
| c |
+---+
| 1 |
+---+
(1 row)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A1_B30_C5 TYPE: NEGATIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest
   WHERE (c_str like '%2')
     AND (c_str not like '%3')
     AND (c like '1%')
     AND (c not like '3%')), unnest(mv_to_array(c_mv_complex)) AS u(c);
QueryInterruptedException
!error

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A1_B30_C7 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest,
        unnest(mv_to_array(c_mv_complex)) AS u(c))
WHERE (c_str like '%2')
  AND (c_str not like '%3')
  AND (c like '1%')
  AND (c not like '3%');
+---+
| c |
+---+
| 1 |
+---+
(1 row)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A1_B30_C9 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest), unnest(mv_to_array(c_mv_complex)) AS u(c)
WHERE (c_str like '%2')
  AND (c_str not like '%3')
  AND (c like '1%')
  AND (c not like '3%');
+---+
| c |
+---+
| 1 |
+---+
(1 row)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A1_B31_C1 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM test_unnest,
     unnest(mv_to_array(c_mv_complex)) AS u(c)
WHERE c_long IN (0,
                 1,
                 2)
  AND c_long NOT IN (3,
                     4)
  AND c IN ('',
            'my_null',
            'my_empty',
            '1',
            '-1',
            '0',
            '999',
            999)
  AND c NOT IN ('[2]',
                '[3, [4, 5]]',
                '2',
                '3',
                '999',
                999);
+----------+
| c        |
+----------+
| 1        |
| 1        |
| 1        |
| my_empty |
| my_empty |
| my_empty |
| my_null  |
| my_null  |
| my_null  |
+----------+
(9 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A1_B31_C3 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest,
        unnest(mv_to_array(c_mv_complex)) AS u(c)
   WHERE c_long IN (0,
                    1,
                    2)
     AND c_long NOT IN (3,
                        4)
     AND c IN ('',
               'my_null',
               'my_empty',
               '1',
               '-1',
               '0',
               '999',
               999)
     AND c NOT IN ('[2]',
                   '[3, [4, 5]]',
                   '2',
                   '3',
                   '999',
                   999));
+----------+
| c        |
+----------+
| 1        |
| 1        |
| 1        |
| my_empty |
| my_empty |
| my_empty |
| my_null  |
| my_null  |
| my_null  |
+----------+
(9 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A1_B31_C5 TYPE: NEGATIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest
   WHERE c_long IN (0,
                    1,
                    2)
     AND c_long NOT IN (3,
                        4)
     AND c IN ('',
               'my_null',
               'my_empty',
               '1',
               '-1',
               '0',
               '999',
               999)
     AND c NOT IN ('[2]',
                   '[3, [4, 5]]',
                   '2',
                   '3',
                   '999',
                   999)), unnest(mv_to_array(c_mv_complex)) AS u(c);
QueryInterruptedException
!error

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A1_B31_C7 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest,
        unnest(mv_to_array(c_mv_complex)) AS u(c))
WHERE c_long IN (0,
                 1,
                 2)
  AND c_long NOT IN (3,
                     4)
  AND c IN ('',
            'my_null',
            'my_empty',
            '1',
            '-1',
            '0',
            '999',
            999)
  AND c NOT IN ('[2]',
                '[3, [4, 5]]',
                '2',
                '3',
                '999',
                999);
+----------+
| c        |
+----------+
| 1        |
| 1        |
| 1        |
| my_empty |
| my_empty |
| my_empty |
| my_null  |
| my_null  |
| my_null  |
+----------+
(9 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A1_B31_C9 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest), unnest(mv_to_array(c_mv_complex)) AS u(c)
WHERE c_long IN (0,
                 1,
                 2)
  AND c_long NOT IN (3,
                     4)
  AND c IN ('',
            'my_null',
            'my_empty',
            '1',
            '-1',
            '0',
            '999',
            999)
  AND c NOT IN ('[2]',
                '[3, [4, 5]]',
                '2',
                '3',
                '999',
                999);
+----------+
| c        |
+----------+
| 1        |
| 1        |
| 1        |
| my_empty |
| my_empty |
| my_empty |
| my_null  |
| my_null  |
| my_null  |
+----------+
(9 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A1_B32_C1 TYPE: NEGATIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM test_unnest,
     unnest(mv_to_array(c_mv_complex)) AS u(c)
WHERE c_long IN
    (SELECT col
     FROM (
           VALUES(0),(1),(2)) AS t(col))
  AND c_long NOT IN
    (SELECT col
     FROM (
           VALUES(3),(4)) AS t(col))
  AND c IN
    (SELECT col
     FROM (
           VALUES(''),('my_null'),('my_empty'),('1'),('-1'),('0'),('999')) AS t(col))
  AND c NOT IN
    (SELECT col
     FROM (
           VALUES('[2]'),('[3, [4, 5]]'),('2'),('3'),('999')) AS t(col));
Unhandled Query Planning Failure
!error

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A1_B32_C3 TYPE: NEGATIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest,
        unnest(mv_to_array(c_mv_complex)) AS u(c)
   WHERE c_long IN
       (SELECT col
        FROM (
              VALUES(0),(1),(2)) AS t(col))
     AND c_long NOT IN
       (SELECT col
        FROM (
              VALUES(3),(4)) AS t(col))
     AND c IN
       (SELECT col
        FROM (
              VALUES(''),('my_null'),('my_empty'),('1'),('-1'),('0'),('999')) AS t(col))
     AND c NOT IN
       (SELECT col
        FROM (
              VALUES('[2]'),('[3, [4, 5]]'),('2'),('3'),('999')) AS t(col)));
Unhandled Query Planning Failure
!error

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A1_B32_C5 TYPE: NEGATIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest
   WHERE c_long IN
       (SELECT col
        FROM (
              VALUES(0),(1),(2)) AS t(col))
     AND c_long NOT IN
       (SELECT col
        FROM (
              VALUES(3),(4)) AS t(col))
     AND c IN
       (SELECT col
        FROM (
              VALUES(''),('my_null'),('my_empty'),('1'),('-1'),('0'),('999')) AS t(col))
     AND c NOT IN
       (SELECT col
        FROM (
              VALUES('[2]'),('[3, [4, 5]]'),('2'),('3'),('999')) AS t(col))), unnest(mv_to_array(c_mv_complex)) AS u(c);
QueryInterruptedException
!error

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A1_B32_C7 TYPE: NEGATIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest,
        unnest(mv_to_array(c_mv_complex)) AS u(c))
WHERE c_long IN
    (SELECT col
     FROM (
           VALUES(0),(1),(2)) AS t(col))
  AND c_long NOT IN
    (SELECT col
     FROM (
           VALUES(3),(4)) AS t(col))
  AND c IN
    (SELECT col
     FROM (
           VALUES(''),('my_null'),('my_empty'),('1'),('-1'),('0'),('999')) AS t(col))
  AND c NOT IN
    (SELECT col
     FROM (
           VALUES('[2]'),('[3, [4, 5]]'),('2'),('3'),('999')) AS t(col));
Unhandled Query Planning Failure
!error

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A1_B32_C9 TYPE: NEGATIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest), unnest(mv_to_array(c_mv_complex)) AS u(c)
WHERE c_long IN
    (SELECT col
     FROM (
           VALUES(0),(1),(2)) AS t(col))
  AND c_long NOT IN
    (SELECT col
     FROM (
           VALUES(3),(4)) AS t(col))
  AND c IN
    (SELECT col
     FROM (
           VALUES(''),('my_null'),('my_empty'),('1'),('-1'),('0'),('999')) AS t(col))
  AND c NOT IN
    (SELECT col
     FROM (
           VALUES('[2]'),('[3, [4, 5]]'),('2'),('3'),('999')) AS t(col));
Unhandled Query Planning Failure
!error

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A1_B33_C1 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM test_unnest,
     unnest(mv_to_array(c_mv_complex)) AS u(c)
WHERE c_long=1;
+-------------+
| c           |
+-------------+
| 1           |
| [2]         |
| [3, [4, 5]] |
| my_empty    |
| my_null     |
+-------------+
(5 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A1_B33_C3 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest,
        unnest(mv_to_array(c_mv_complex)) AS u(c)
   WHERE c_long=1);
+-------------+
| c           |
+-------------+
| 1           |
| [2]         |
| [3, [4, 5]] |
| my_empty    |
| my_null     |
+-------------+
(5 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A1_B33_C5 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest
   WHERE c_long=1), unnest(mv_to_array(c_mv_complex)) AS u(c);
+-------------+
| c           |
+-------------+
| 1           |
| [2]         |
| [3, [4, 5]] |
| my_empty    |
| my_null     |
+-------------+
(5 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A1_B33_C7 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest,
        unnest(mv_to_array(c_mv_complex)) AS u(c))
WHERE c_long=1;
+-------------+
| c           |
+-------------+
| 1           |
| [2]         |
| [3, [4, 5]] |
| my_empty    |
| my_null     |
+-------------+
(5 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A1_B33_C9 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest), unnest(mv_to_array(c_mv_complex)) AS u(c)
WHERE c_long=1;
+-------------+
| c           |
+-------------+
| 1           |
| [2]         |
| [3, [4, 5]] |
| my_empty    |
| my_null     |
+-------------+
(5 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A1_B34_C1 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM test_unnest,
     unnest(mv_to_array(c_mv_complex)) AS u(c)
WHERE c_long<>1;
+-------------+
| c           |
+-------------+
| 1           |
| 1           |
| 1           |
| 1           |
| [2]         |
| [2]         |
| [2]         |
| [2]         |
| [3, [4, 5]] |
| [3, [4, 5]] |
| [3, [4, 5]] |
| [3, [4, 5]] |
| my_empty    |
| my_empty    |
| my_empty    |
| my_empty    |
| my_null     |
| my_null     |
| my_null     |
| my_null     |
+-------------+
(20 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A1_B34_C3 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest,
        unnest(mv_to_array(c_mv_complex)) AS u(c)
   WHERE c_long<>1);
+-------------+
| c           |
+-------------+
| 1           |
| 1           |
| 1           |
| 1           |
| [2]         |
| [2]         |
| [2]         |
| [2]         |
| [3, [4, 5]] |
| [3, [4, 5]] |
| [3, [4, 5]] |
| [3, [4, 5]] |
| my_empty    |
| my_empty    |
| my_empty    |
| my_empty    |
| my_null     |
| my_null     |
| my_null     |
| my_null     |
+-------------+
(20 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A1_B34_C5 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest
   WHERE c_long<>1), unnest(mv_to_array(c_mv_complex)) AS u(c);
+-------------+
| c           |
+-------------+
| 1           |
| 1           |
| 1           |
| 1           |
| [2]         |
| [2]         |
| [2]         |
| [2]         |
| [3, [4, 5]] |
| [3, [4, 5]] |
| [3, [4, 5]] |
| [3, [4, 5]] |
| my_empty    |
| my_empty    |
| my_empty    |
| my_empty    |
| my_null     |
| my_null     |
| my_null     |
| my_null     |
+-------------+
(20 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A1_B34_C7 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest,
        unnest(mv_to_array(c_mv_complex)) AS u(c))
WHERE c_long<>1;
+-------------+
| c           |
+-------------+
| 1           |
| 1           |
| 1           |
| 1           |
| [2]         |
| [2]         |
| [2]         |
| [2]         |
| [3, [4, 5]] |
| [3, [4, 5]] |
| [3, [4, 5]] |
| [3, [4, 5]] |
| my_empty    |
| my_empty    |
| my_empty    |
| my_empty    |
| my_null     |
| my_null     |
| my_null     |
| my_null     |
+-------------+
(20 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A1_B34_C9 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest), unnest(mv_to_array(c_mv_complex)) AS u(c)
WHERE c_long<>1;
+-------------+
| c           |
+-------------+
| 1           |
| 1           |
| 1           |
| 1           |
| [2]         |
| [2]         |
| [2]         |
| [2]         |
| [3, [4, 5]] |
| [3, [4, 5]] |
| [3, [4, 5]] |
| [3, [4, 5]] |
| my_empty    |
| my_empty    |
| my_empty    |
| my_empty    |
| my_null     |
| my_null     |
| my_null     |
| my_null     |
+-------------+
(20 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A1_B35_C1 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM test_unnest,
     unnest(mv_to_array(c_mv_complex)) AS u(c)
WHERE c_long>1;
+-------------+
| c           |
+-------------+
| 1           |
| 1           |
| 1           |
| [2]         |
| [2]         |
| [2]         |
| [3, [4, 5]] |
| [3, [4, 5]] |
| [3, [4, 5]] |
| my_empty    |
| my_empty    |
| my_empty    |
| my_null     |
| my_null     |
| my_null     |
+-------------+
(15 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A1_B35_C3 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest,
        unnest(mv_to_array(c_mv_complex)) AS u(c)
   WHERE c_long>1);
+-------------+
| c           |
+-------------+
| 1           |
| 1           |
| 1           |
| [2]         |
| [2]         |
| [2]         |
| [3, [4, 5]] |
| [3, [4, 5]] |
| [3, [4, 5]] |
| my_empty    |
| my_empty    |
| my_empty    |
| my_null     |
| my_null     |
| my_null     |
+-------------+
(15 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A1_B35_C5 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest
   WHERE c_long>1), unnest(mv_to_array(c_mv_complex)) AS u(c);
+-------------+
| c           |
+-------------+
| 1           |
| 1           |
| 1           |
| [2]         |
| [2]         |
| [2]         |
| [3, [4, 5]] |
| [3, [4, 5]] |
| [3, [4, 5]] |
| my_empty    |
| my_empty    |
| my_empty    |
| my_null     |
| my_null     |
| my_null     |
+-------------+
(15 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A1_B35_C7 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest,
        unnest(mv_to_array(c_mv_complex)) AS u(c))
WHERE c_long>1;
+-------------+
| c           |
+-------------+
| 1           |
| 1           |
| 1           |
| [2]         |
| [2]         |
| [2]         |
| [3, [4, 5]] |
| [3, [4, 5]] |
| [3, [4, 5]] |
| my_empty    |
| my_empty    |
| my_empty    |
| my_null     |
| my_null     |
| my_null     |
+-------------+
(15 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A1_B35_C9 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest), unnest(mv_to_array(c_mv_complex)) AS u(c)
WHERE c_long>1;
+-------------+
| c           |
+-------------+
| 1           |
| 1           |
| 1           |
| [2]         |
| [2]         |
| [2]         |
| [3, [4, 5]] |
| [3, [4, 5]] |
| [3, [4, 5]] |
| my_empty    |
| my_empty    |
| my_empty    |
| my_null     |
| my_null     |
| my_null     |
+-------------+
(15 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A1_B36_C1 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM test_unnest,
     unnest(mv_to_array(c_mv_complex)) AS u(c)
WHERE c_long>=1;
+-------------+
| c           |
+-------------+
| 1           |
| 1           |
| 1           |
| 1           |
| [2]         |
| [2]         |
| [2]         |
| [2]         |
| [3, [4, 5]] |
| [3, [4, 5]] |
| [3, [4, 5]] |
| [3, [4, 5]] |
| my_empty    |
| my_empty    |
| my_empty    |
| my_empty    |
| my_null     |
| my_null     |
| my_null     |
| my_null     |
+-------------+
(20 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A1_B36_C3 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest,
        unnest(mv_to_array(c_mv_complex)) AS u(c)
   WHERE c_long>=1);
+-------------+
| c           |
+-------------+
| 1           |
| 1           |
| 1           |
| 1           |
| [2]         |
| [2]         |
| [2]         |
| [2]         |
| [3, [4, 5]] |
| [3, [4, 5]] |
| [3, [4, 5]] |
| [3, [4, 5]] |
| my_empty    |
| my_empty    |
| my_empty    |
| my_empty    |
| my_null     |
| my_null     |
| my_null     |
| my_null     |
+-------------+
(20 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A1_B36_C5 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest
   WHERE c_long>=1), unnest(mv_to_array(c_mv_complex)) AS u(c);
+-------------+
| c           |
+-------------+
| 1           |
| 1           |
| 1           |
| 1           |
| [2]         |
| [2]         |
| [2]         |
| [2]         |
| [3, [4, 5]] |
| [3, [4, 5]] |
| [3, [4, 5]] |
| [3, [4, 5]] |
| my_empty    |
| my_empty    |
| my_empty    |
| my_empty    |
| my_null     |
| my_null     |
| my_null     |
| my_null     |
+-------------+
(20 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A1_B36_C7 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest,
        unnest(mv_to_array(c_mv_complex)) AS u(c))
WHERE c_long>=1;
+-------------+
| c           |
+-------------+
| 1           |
| 1           |
| 1           |
| 1           |
| [2]         |
| [2]         |
| [2]         |
| [2]         |
| [3, [4, 5]] |
| [3, [4, 5]] |
| [3, [4, 5]] |
| [3, [4, 5]] |
| my_empty    |
| my_empty    |
| my_empty    |
| my_empty    |
| my_null     |
| my_null     |
| my_null     |
| my_null     |
+-------------+
(20 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A1_B36_C9 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest), unnest(mv_to_array(c_mv_complex)) AS u(c)
WHERE c_long>=1;
+-------------+
| c           |
+-------------+
| 1           |
| 1           |
| 1           |
| 1           |
| [2]         |
| [2]         |
| [2]         |
| [2]         |
| [3, [4, 5]] |
| [3, [4, 5]] |
| [3, [4, 5]] |
| [3, [4, 5]] |
| my_empty    |
| my_empty    |
| my_empty    |
| my_empty    |
| my_null     |
| my_null     |
| my_null     |
| my_null     |
+-------------+
(20 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A1_B37_C1 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM test_unnest,
     unnest(mv_to_array(c_mv_complex)) AS u(c)
WHERE c_long<1;
+-------------+
| c           |
+-------------+
| 1           |
| [2]         |
| [3, [4, 5]] |
| my_empty    |
| my_null     |
+-------------+
(5 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A1_B37_C3 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest,
        unnest(mv_to_array(c_mv_complex)) AS u(c)
   WHERE c_long<1);
+-------------+
| c           |
+-------------+
| 1           |
| [2]         |
| [3, [4, 5]] |
| my_empty    |
| my_null     |
+-------------+
(5 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A1_B37_C5 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest
   WHERE c_long<1), unnest(mv_to_array(c_mv_complex)) AS u(c);
+-------------+
| c           |
+-------------+
| 1           |
| [2]         |
| [3, [4, 5]] |
| my_empty    |
| my_null     |
+-------------+
(5 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A1_B37_C7 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest,
        unnest(mv_to_array(c_mv_complex)) AS u(c))
WHERE c_long<1;
+-------------+
| c           |
+-------------+
| 1           |
| [2]         |
| [3, [4, 5]] |
| my_empty    |
| my_null     |
+-------------+
(5 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A1_B37_C9 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest), unnest(mv_to_array(c_mv_complex)) AS u(c)
WHERE c_long<1;
+-------------+
| c           |
+-------------+
| 1           |
| [2]         |
| [3, [4, 5]] |
| my_empty    |
| my_null     |
+-------------+
(5 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A1_B38_C1 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM test_unnest,
     unnest(mv_to_array(c_mv_complex)) AS u(c)
WHERE c_long<=1;
+-------------+
| c           |
+-------------+
| 1           |
| 1           |
| [2]         |
| [2]         |
| [3, [4, 5]] |
| [3, [4, 5]] |
| my_empty    |
| my_empty    |
| my_null     |
| my_null     |
+-------------+
(10 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A1_B38_C3 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest,
        unnest(mv_to_array(c_mv_complex)) AS u(c)
   WHERE c_long<=1);
+-------------+
| c           |
+-------------+
| 1           |
| 1           |
| [2]         |
| [2]         |
| [3, [4, 5]] |
| [3, [4, 5]] |
| my_empty    |
| my_empty    |
| my_null     |
| my_null     |
+-------------+
(10 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A1_B38_C5 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest
   WHERE c_long<=1), unnest(mv_to_array(c_mv_complex)) AS u(c);
+-------------+
| c           |
+-------------+
| 1           |
| 1           |
| [2]         |
| [2]         |
| [3, [4, 5]] |
| [3, [4, 5]] |
| my_empty    |
| my_empty    |
| my_null     |
| my_null     |
+-------------+
(10 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A1_B38_C7 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest,
        unnest(mv_to_array(c_mv_complex)) AS u(c))
WHERE c_long<=1;
+-------------+
| c           |
+-------------+
| 1           |
| 1           |
| [2]         |
| [2]         |
| [3, [4, 5]] |
| [3, [4, 5]] |
| my_empty    |
| my_empty    |
| my_null     |
| my_null     |
+-------------+
(10 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A1_B38_C9 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest), unnest(mv_to_array(c_mv_complex)) AS u(c)
WHERE c_long<=1;
+-------------+
| c           |
+-------------+
| 1           |
| 1           |
| [2]         |
| [2]         |
| [3, [4, 5]] |
| [3, [4, 5]] |
| my_empty    |
| my_empty    |
| my_null     |
| my_null     |
+-------------+
(10 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A1_B39_C1 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM test_unnest,
     unnest(mv_to_array(c_mv_complex)) AS u(c)
WHERE (NOT c_str<>''
       OR NOT c_str<>'str2'
       OR NOT c_long<>0
       OR NOT c_long<>1
       OR NOT c_long<>2
       OR NOT c_long<>999)
  AND (NOT c_str='str3'
       OR NOT c_str='str4'
       OR NOT c_long=3
       OR NOT c_long=4
       OR NOT c_long=999);
+-------------+
| c           |
+-------------+
| 1           |
| 1           |
| 1           |
| [2]         |
| [2]         |
| [2]         |
| [3, [4, 5]] |
| [3, [4, 5]] |
| [3, [4, 5]] |
| my_empty    |
| my_empty    |
| my_empty    |
| my_null     |
| my_null     |
| my_null     |
+-------------+
(15 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A1_B39_C3 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest,
        unnest(mv_to_array(c_mv_complex)) AS u(c)
   WHERE (NOT c_str<>''
          OR NOT c_str<>'str2'
          OR NOT c_long<>0
          OR NOT c_long<>1
          OR NOT c_long<>2
          OR NOT c_long<>999)
     AND (NOT c_str='str3'
          OR NOT c_str='str4'
          OR NOT c_long=3
          OR NOT c_long=4
          OR NOT c_long=999));
+-------------+
| c           |
+-------------+
| 1           |
| 1           |
| 1           |
| [2]         |
| [2]         |
| [2]         |
| [3, [4, 5]] |
| [3, [4, 5]] |
| [3, [4, 5]] |
| my_empty    |
| my_empty    |
| my_empty    |
| my_null     |
| my_null     |
| my_null     |
+-------------+
(15 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A1_B39_C5 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest
   WHERE (NOT c_str<>''
          OR NOT c_str<>'str2'
          OR NOT c_long<>0
          OR NOT c_long<>1
          OR NOT c_long<>2
          OR NOT c_long<>999)
     AND (NOT c_str='str3'
          OR NOT c_str='str4'
          OR NOT c_long=3
          OR NOT c_long=4
          OR NOT c_long=999)), unnest(mv_to_array(c_mv_complex)) AS u(c);
+-------------+
| c           |
+-------------+
| 1           |
| 1           |
| 1           |
| [2]         |
| [2]         |
| [2]         |
| [3, [4, 5]] |
| [3, [4, 5]] |
| [3, [4, 5]] |
| my_empty    |
| my_empty    |
| my_empty    |
| my_null     |
| my_null     |
| my_null     |
+-------------+
(15 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A1_B39_C7 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest,
        unnest(mv_to_array(c_mv_complex)) AS u(c))
WHERE (NOT c_str<>''
       OR NOT c_str<>'str2'
       OR NOT c_long<>0
       OR NOT c_long<>1
       OR NOT c_long<>2
       OR NOT c_long<>999)
  AND (NOT c_str='str3'
       OR NOT c_str='str4'
       OR NOT c_long=3
       OR NOT c_long=4
       OR NOT c_long=999);
+-------------+
| c           |
+-------------+
| 1           |
| 1           |
| 1           |
| [2]         |
| [2]         |
| [2]         |
| [3, [4, 5]] |
| [3, [4, 5]] |
| [3, [4, 5]] |
| my_empty    |
| my_empty    |
| my_empty    |
| my_null     |
| my_null     |
| my_null     |
+-------------+
(15 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A1_B39_C9 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest), unnest(mv_to_array(c_mv_complex)) AS u(c)
WHERE (NOT c_str<>''
       OR NOT c_str<>'str2'
       OR NOT c_long<>0
       OR NOT c_long<>1
       OR NOT c_long<>2
       OR NOT c_long<>999)
  AND (NOT c_str='str3'
       OR NOT c_str='str4'
       OR NOT c_long=3
       OR NOT c_long=4
       OR NOT c_long=999);
+-------------+
| c           |
+-------------+
| 1           |
| 1           |
| 1           |
| [2]         |
| [2]         |
| [2]         |
| [3, [4, 5]] |
| [3, [4, 5]] |
| [3, [4, 5]] |
| my_empty    |
| my_empty    |
| my_empty    |
| my_null     |
| my_null     |
| my_null     |
+-------------+
(15 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A1_B40_C1 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM test_unnest,
     unnest(mv_to_array(c_mv_complex)) AS u(c)
WHERE (c_str=''
       OR c_str='str2'
       OR c_long=0
       OR c_long=1
       OR c_long=2
       OR c_long=999)
  AND NOT c_str='str3'
  AND NOT c_str='str4'
  AND NOT c_long=3
  AND NOT c_long=4
  AND NOT c_long=999;
+-------------+
| c           |
+-------------+
| 1           |
| 1           |
| [2]         |
| [2]         |
| [3, [4, 5]] |
| [3, [4, 5]] |
| my_empty    |
| my_empty    |
| my_null     |
| my_null     |
+-------------+
(10 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A1_B40_C3 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest,
        unnest(mv_to_array(c_mv_complex)) AS u(c)
   WHERE (c_str=''
          OR c_str='str2'
          OR c_long=0
          OR c_long=1
          OR c_long=2
          OR c_long=999)
     AND NOT c_str='str3'
     AND NOT c_str='str4'
     AND NOT c_long=3
     AND NOT c_long=4
     AND NOT c_long=999);
+-------------+
| c           |
+-------------+
| 1           |
| 1           |
| [2]         |
| [2]         |
| [3, [4, 5]] |
| [3, [4, 5]] |
| my_empty    |
| my_empty    |
| my_null     |
| my_null     |
+-------------+
(10 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A1_B40_C5 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest
   WHERE (c_str=''
          OR c_str='str2'
          OR c_long=0
          OR c_long=1
          OR c_long=2
          OR c_long=999)
     AND NOT c_str='str3'
     AND NOT c_str='str4'
     AND NOT c_long=3
     AND NOT c_long=4
     AND NOT c_long=999), unnest(mv_to_array(c_mv_complex)) AS u(c);
+-------------+
| c           |
+-------------+
| 1           |
| 1           |
| [2]         |
| [2]         |
| [3, [4, 5]] |
| [3, [4, 5]] |
| my_empty    |
| my_empty    |
| my_null     |
| my_null     |
+-------------+
(10 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A1_B40_C7 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest,
        unnest(mv_to_array(c_mv_complex)) AS u(c))
WHERE (c_str=''
       OR c_str='str2'
       OR c_long=0
       OR c_long=1
       OR c_long=2
       OR c_long=999)
  AND NOT c_str='str3'
  AND NOT c_str='str4'
  AND NOT c_long=3
  AND NOT c_long=4
  AND NOT c_long=999;
+-------------+
| c           |
+-------------+
| 1           |
| 1           |
| [2]         |
| [2]         |
| [3, [4, 5]] |
| [3, [4, 5]] |
| my_empty    |
| my_empty    |
| my_null     |
| my_null     |
+-------------+
(10 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A1_B40_C9 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest), unnest(mv_to_array(c_mv_complex)) AS u(c)
WHERE (c_str=''
       OR c_str='str2'
       OR c_long=0
       OR c_long=1
       OR c_long=2
       OR c_long=999)
  AND NOT c_str='str3'
  AND NOT c_str='str4'
  AND NOT c_long=3
  AND NOT c_long=4
  AND NOT c_long=999;
+-------------+
| c           |
+-------------+
| 1           |
| 1           |
| [2]         |
| [2]         |
| [3, [4, 5]] |
| [3, [4, 5]] |
| my_empty    |
| my_empty    |
| my_null     |
| my_null     |
+-------------+
(10 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A1_B41_C1 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM test_unnest,
     unnest(mv_to_array(c_mv_complex)) AS u(c)
WHERE c_str IS NULL;
+-------------+
| c           |
+-------------+
| 1           |
| [2]         |
| [3, [4, 5]] |
| my_empty    |
| my_null     |
+-------------+
(5 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A1_B41_C3 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest,
        unnest(mv_to_array(c_mv_complex)) AS u(c)
   WHERE c_str IS NULL);
+-------------+
| c           |
+-------------+
| 1           |
| [2]         |
| [3, [4, 5]] |
| my_empty    |
| my_null     |
+-------------+
(5 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A1_B41_C5 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest
   WHERE c_str IS NULL), unnest(mv_to_array(c_mv_complex)) AS u(c);
+-------------+
| c           |
+-------------+
| 1           |
| [2]         |
| [3, [4, 5]] |
| my_empty    |
| my_null     |
+-------------+
(5 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A1_B41_C7 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest,
        unnest(mv_to_array(c_mv_complex)) AS u(c))
WHERE c_str IS NULL;
+-------------+
| c           |
+-------------+
| 1           |
| [2]         |
| [3, [4, 5]] |
| my_empty    |
| my_null     |
+-------------+
(5 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A1_B41_C9 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest), unnest(mv_to_array(c_mv_complex)) AS u(c)
WHERE c_str IS NULL;
+-------------+
| c           |
+-------------+
| 1           |
| [2]         |
| [3, [4, 5]] |
| my_empty    |
| my_null     |
+-------------+
(5 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A1_B42_C1 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM test_unnest,
     unnest(mv_to_array(c_mv_complex)) AS u(c)
WHERE c_str IS NOT NULL;
+-------------+
| c           |
+-------------+
| 1           |
| 1           |
| 1           |
| 1           |
| [2]         |
| [2]         |
| [2]         |
| [2]         |
| [3, [4, 5]] |
| [3, [4, 5]] |
| [3, [4, 5]] |
| [3, [4, 5]] |
| my_empty    |
| my_empty    |
| my_empty    |
| my_empty    |
| my_null     |
| my_null     |
| my_null     |
| my_null     |
+-------------+
(20 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A1_B42_C3 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest,
        unnest(mv_to_array(c_mv_complex)) AS u(c)
   WHERE c_str IS NOT NULL);
+-------------+
| c           |
+-------------+
| 1           |
| 1           |
| 1           |
| 1           |
| [2]         |
| [2]         |
| [2]         |
| [2]         |
| [3, [4, 5]] |
| [3, [4, 5]] |
| [3, [4, 5]] |
| [3, [4, 5]] |
| my_empty    |
| my_empty    |
| my_empty    |
| my_empty    |
| my_null     |
| my_null     |
| my_null     |
| my_null     |
+-------------+
(20 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A1_B42_C5 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest
   WHERE c_str IS NOT NULL), unnest(mv_to_array(c_mv_complex)) AS u(c);
+-------------+
| c           |
+-------------+
| 1           |
| 1           |
| 1           |
| 1           |
| [2]         |
| [2]         |
| [2]         |
| [2]         |
| [3, [4, 5]] |
| [3, [4, 5]] |
| [3, [4, 5]] |
| [3, [4, 5]] |
| my_empty    |
| my_empty    |
| my_empty    |
| my_empty    |
| my_null     |
| my_null     |
| my_null     |
| my_null     |
+-------------+
(20 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A1_B42_C7 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest,
        unnest(mv_to_array(c_mv_complex)) AS u(c))
WHERE c_str IS NOT NULL;
+-------------+
| c           |
+-------------+
| 1           |
| 1           |
| 1           |
| 1           |
| [2]         |
| [2]         |
| [2]         |
| [2]         |
| [3, [4, 5]] |
| [3, [4, 5]] |
| [3, [4, 5]] |
| [3, [4, 5]] |
| my_empty    |
| my_empty    |
| my_empty    |
| my_empty    |
| my_null     |
| my_null     |
| my_null     |
| my_null     |
+-------------+
(20 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A1_B42_C9 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest), unnest(mv_to_array(c_mv_complex)) AS u(c)
WHERE c_str IS NOT NULL;
+-------------+
| c           |
+-------------+
| 1           |
| 1           |
| 1           |
| 1           |
| [2]         |
| [2]         |
| [2]         |
| [2]         |
| [3, [4, 5]] |
| [3, [4, 5]] |
| [3, [4, 5]] |
| [3, [4, 5]] |
| my_empty    |
| my_empty    |
| my_empty    |
| my_empty    |
| my_null     |
| my_null     |
| my_null     |
| my_null     |
+-------------+
(20 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A1_B43_C1 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM test_unnest,
     unnest(mv_to_array(c_mv_complex)) AS u(c)
WHERE c_str IN ('',
                'str2',
                999) IS TRUE
  AND c_str IN ('str3',
                'str4',
                999) IS NOT TRUE
  AND c_long IN (0,
                 1,
                 2,
                 999) IS TRUE
  AND c_long IN (3,
                 4,
                 999) IS NOT TRUE;
+-------------+
| c           |
+-------------+
| 1           |
| 1           |
| [2]         |
| [2]         |
| [3, [4, 5]] |
| [3, [4, 5]] |
| my_empty    |
| my_empty    |
| my_null     |
| my_null     |
+-------------+
(10 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A1_B43_C3 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest,
        unnest(mv_to_array(c_mv_complex)) AS u(c)
   WHERE c_str IN ('',
                   'str2',
                   999) IS TRUE
     AND c_str IN ('str3',
                   'str4',
                   999) IS NOT TRUE
     AND c_long IN (0,
                    1,
                    2,
                    999) IS TRUE
     AND c_long IN (3,
                    4,
                    999) IS NOT TRUE);
+-------------+
| c           |
+-------------+
| 1           |
| 1           |
| [2]         |
| [2]         |
| [3, [4, 5]] |
| [3, [4, 5]] |
| my_empty    |
| my_empty    |
| my_null     |
| my_null     |
+-------------+
(10 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A1_B43_C5 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest
   WHERE c_str IN ('',
                   'str2',
                   999) IS TRUE
     AND c_str IN ('str3',
                   'str4',
                   999) IS NOT TRUE
     AND c_long IN (0,
                    1,
                    2,
                    999) IS TRUE
     AND c_long IN (3,
                    4,
                    999) IS NOT TRUE), unnest(mv_to_array(c_mv_complex)) AS u(c);
+-------------+
| c           |
+-------------+
| 1           |
| 1           |
| [2]         |
| [2]         |
| [3, [4, 5]] |
| [3, [4, 5]] |
| my_empty    |
| my_empty    |
| my_null     |
| my_null     |
+-------------+
(10 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A1_B43_C7 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest,
        unnest(mv_to_array(c_mv_complex)) AS u(c))
WHERE c_str IN ('',
                'str2',
                999) IS TRUE
  AND c_str IN ('str3',
                'str4',
                999) IS NOT TRUE
  AND c_long IN (0,
                 1,
                 2,
                 999) IS TRUE
  AND c_long IN (3,
                 4,
                 999) IS NOT TRUE;
+-------------+
| c           |
+-------------+
| 1           |
| 1           |
| [2]         |
| [2]         |
| [3, [4, 5]] |
| [3, [4, 5]] |
| my_empty    |
| my_empty    |
| my_null     |
| my_null     |
+-------------+
(10 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A1_B43_C9 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest), unnest(mv_to_array(c_mv_complex)) AS u(c)
WHERE c_str IN ('',
                'str2',
                999) IS TRUE
  AND c_str IN ('str3',
                'str4',
                999) IS NOT TRUE
  AND c_long IN (0,
                 1,
                 2,
                 999) IS TRUE
  AND c_long IN (3,
                 4,
                 999) IS NOT TRUE;
+-------------+
| c           |
+-------------+
| 1           |
| 1           |
| [2]         |
| [2]         |
| [3, [4, 5]] |
| [3, [4, 5]] |
| my_empty    |
| my_empty    |
| my_null     |
| my_null     |
+-------------+
(10 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A1_B44_C1 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM test_unnest,
     unnest(mv_to_array(c_mv_complex)) AS u(c)
WHERE c_str IN ('',
                'str2',
                999) IS NOT FALSE
  AND c_str IN ('str3',
                'str4',
                999) IS FALSE
  AND c_long IN (0,
                 1,
                 2,
                 999) IS NOT FALSE
  AND c_long IN (3,
                 4,
                 999) IS FALSE;
+-------------+
| c           |
+-------------+
| 1           |
| 1           |
| [2]         |
| [2]         |
| [3, [4, 5]] |
| [3, [4, 5]] |
| my_empty    |
| my_empty    |
| my_null     |
| my_null     |
+-------------+
(10 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A1_B44_C3 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest,
        unnest(mv_to_array(c_mv_complex)) AS u(c)
   WHERE c_str IN ('',
                   'str2',
                   999) IS NOT FALSE
     AND c_str IN ('str3',
                   'str4',
                   999) IS FALSE
     AND c_long IN (0,
                    1,
                    2,
                    999) IS NOT FALSE
     AND c_long IN (3,
                    4,
                    999) IS FALSE);
+-------------+
| c           |
+-------------+
| 1           |
| 1           |
| [2]         |
| [2]         |
| [3, [4, 5]] |
| [3, [4, 5]] |
| my_empty    |
| my_empty    |
| my_null     |
| my_null     |
+-------------+
(10 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A1_B44_C5 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest
   WHERE c_str IN ('',
                   'str2',
                   999) IS NOT FALSE
     AND c_str IN ('str3',
                   'str4',
                   999) IS FALSE
     AND c_long IN (0,
                    1,
                    2,
                    999) IS NOT FALSE
     AND c_long IN (3,
                    4,
                    999) IS FALSE), unnest(mv_to_array(c_mv_complex)) AS u(c);
+-------------+
| c           |
+-------------+
| 1           |
| 1           |
| [2]         |
| [2]         |
| [3, [4, 5]] |
| [3, [4, 5]] |
| my_empty    |
| my_empty    |
| my_null     |
| my_null     |
+-------------+
(10 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A1_B44_C7 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest,
        unnest(mv_to_array(c_mv_complex)) AS u(c))
WHERE c_str IN ('',
                'str2',
                999) IS NOT FALSE
  AND c_str IN ('str3',
                'str4',
                999) IS FALSE
  AND c_long IN (0,
                 1,
                 2,
                 999) IS NOT FALSE
  AND c_long IN (3,
                 4,
                 999) IS FALSE;
+-------------+
| c           |
+-------------+
| 1           |
| 1           |
| [2]         |
| [2]         |
| [3, [4, 5]] |
| [3, [4, 5]] |
| my_empty    |
| my_empty    |
| my_null     |
| my_null     |
+-------------+
(10 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A1_B44_C9 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest), unnest(mv_to_array(c_mv_complex)) AS u(c)
WHERE c_str IN ('',
                'str2',
                999) IS NOT FALSE
  AND c_str IN ('str3',
                'str4',
                999) IS FALSE
  AND c_long IN (0,
                 1,
                 2,
                 999) IS NOT FALSE
  AND c_long IN (3,
                 4,
                 999) IS FALSE;
+-------------+
| c           |
+-------------+
| 1           |
| 1           |
| [2]         |
| [2]         |
| [3, [4, 5]] |
| [3, [4, 5]] |
| my_empty    |
| my_empty    |
| my_null     |
| my_null     |
+-------------+
(10 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A1_B45_C1 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM test_unnest,
     unnest(mv_to_array(c_mv_complex)) AS u(c)
WHERE (c_long BETWEEN 0 AND 2)
  AND (c_long NOT BETWEEN 3 AND 4);
+-------------+
| c           |
+-------------+
| 1           |
| 1           |
| 1           |
| [2]         |
| [2]         |
| [2]         |
| [3, [4, 5]] |
| [3, [4, 5]] |
| [3, [4, 5]] |
| my_empty    |
| my_empty    |
| my_empty    |
| my_null     |
| my_null     |
| my_null     |
+-------------+
(15 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A1_B45_C3 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest,
        unnest(mv_to_array(c_mv_complex)) AS u(c)
   WHERE (c_long BETWEEN 0 AND 2)
     AND (c_long NOT BETWEEN 3 AND 4));
+-------------+
| c           |
+-------------+
| 1           |
| 1           |
| 1           |
| [2]         |
| [2]         |
| [2]         |
| [3, [4, 5]] |
| [3, [4, 5]] |
| [3, [4, 5]] |
| my_empty    |
| my_empty    |
| my_empty    |
| my_null     |
| my_null     |
| my_null     |
+-------------+
(15 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A1_B45_C5 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest
   WHERE (c_long BETWEEN 0 AND 2)
     AND (c_long NOT BETWEEN 3 AND 4)), unnest(mv_to_array(c_mv_complex)) AS u(c);
+-------------+
| c           |
+-------------+
| 1           |
| 1           |
| 1           |
| [2]         |
| [2]         |
| [2]         |
| [3, [4, 5]] |
| [3, [4, 5]] |
| [3, [4, 5]] |
| my_empty    |
| my_empty    |
| my_empty    |
| my_null     |
| my_null     |
| my_null     |
+-------------+
(15 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A1_B45_C7 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest,
        unnest(mv_to_array(c_mv_complex)) AS u(c))
WHERE (c_long BETWEEN 0 AND 2)
  AND (c_long NOT BETWEEN 3 AND 4);
+-------------+
| c           |
+-------------+
| 1           |
| 1           |
| 1           |
| [2]         |
| [2]         |
| [2]         |
| [3, [4, 5]] |
| [3, [4, 5]] |
| [3, [4, 5]] |
| my_empty    |
| my_empty    |
| my_empty    |
| my_null     |
| my_null     |
| my_null     |
+-------------+
(15 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A1_B45_C9 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest), unnest(mv_to_array(c_mv_complex)) AS u(c)
WHERE (c_long BETWEEN 0 AND 2)
  AND (c_long NOT BETWEEN 3 AND 4);
+-------------+
| c           |
+-------------+
| 1           |
| 1           |
| 1           |
| [2]         |
| [2]         |
| [2]         |
| [3, [4, 5]] |
| [3, [4, 5]] |
| [3, [4, 5]] |
| my_empty    |
| my_empty    |
| my_empty    |
| my_null     |
| my_null     |
| my_null     |
+-------------+
(15 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A1_B46_C1 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM test_unnest,
     unnest(mv_to_array(c_mv_complex)) AS u(c)
WHERE (c_str like '%2')
  AND (c_str not like '%3')
  AND (c_str not like '%4');
+-------------+
| c           |
+-------------+
| 1           |
| [2]         |
| [3, [4, 5]] |
| my_empty    |
| my_null     |
+-------------+
(5 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A1_B46_C3 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest,
        unnest(mv_to_array(c_mv_complex)) AS u(c)
   WHERE (c_str like '%2')
     AND (c_str not like '%3')
     AND (c_str not like '%4'));
+-------------+
| c           |
+-------------+
| 1           |
| [2]         |
| [3, [4, 5]] |
| my_empty    |
| my_null     |
+-------------+
(5 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A1_B46_C5 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest
   WHERE (c_str like '%2')
     AND (c_str not like '%3')
     AND (c_str not like '%4')), unnest(mv_to_array(c_mv_complex)) AS u(c);
+-------------+
| c           |
+-------------+
| 1           |
| [2]         |
| [3, [4, 5]] |
| my_empty    |
| my_null     |
+-------------+
(5 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A1_B46_C7 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest,
        unnest(mv_to_array(c_mv_complex)) AS u(c))
WHERE (c_str like '%2')
  AND (c_str not like '%3')
  AND (c_str not like '%4');
+-------------+
| c           |
+-------------+
| 1           |
| [2]         |
| [3, [4, 5]] |
| my_empty    |
| my_null     |
+-------------+
(5 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A1_B46_C9 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest), unnest(mv_to_array(c_mv_complex)) AS u(c)
WHERE (c_str like '%2')
  AND (c_str not like '%3')
  AND (c_str not like '%4');
+-------------+
| c           |
+-------------+
| 1           |
| [2]         |
| [3, [4, 5]] |
| my_empty    |
| my_null     |
+-------------+
(5 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A1_B47_C1 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM test_unnest,
     unnest(mv_to_array(c_mv_complex)) AS u(c)
WHERE c_str IN ('',
                'str2',
                999)
  AND c_str NOT IN ('str3',
                    'str4',
                    999)
  AND c_long IN (0,
                 1,
                 2,
                 999)
  AND c_long NOT IN (3,
                     4,
                     999);
+-------------+
| c           |
+-------------+
| 1           |
| 1           |
| [2]         |
| [2]         |
| [3, [4, 5]] |
| [3, [4, 5]] |
| my_empty    |
| my_empty    |
| my_null     |
| my_null     |
+-------------+
(10 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A1_B47_C3 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest,
        unnest(mv_to_array(c_mv_complex)) AS u(c)
   WHERE c_str IN ('',
                   'str2',
                   999)
     AND c_str NOT IN ('str3',
                       'str4',
                       999)
     AND c_long IN (0,
                    1,
                    2,
                    999)
     AND c_long NOT IN (3,
                        4,
                        999));
+-------------+
| c           |
+-------------+
| 1           |
| 1           |
| [2]         |
| [2]         |
| [3, [4, 5]] |
| [3, [4, 5]] |
| my_empty    |
| my_empty    |
| my_null     |
| my_null     |
+-------------+
(10 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A1_B47_C5 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest
   WHERE c_str IN ('',
                   'str2',
                   999)
     AND c_str NOT IN ('str3',
                       'str4',
                       999)
     AND c_long IN (0,
                    1,
                    2,
                    999)
     AND c_long NOT IN (3,
                        4,
                        999)), unnest(mv_to_array(c_mv_complex)) AS u(c);
+-------------+
| c           |
+-------------+
| 1           |
| 1           |
| [2]         |
| [2]         |
| [3, [4, 5]] |
| [3, [4, 5]] |
| my_empty    |
| my_empty    |
| my_null     |
| my_null     |
+-------------+
(10 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A1_B47_C7 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest,
        unnest(mv_to_array(c_mv_complex)) AS u(c))
WHERE c_str IN ('',
                'str2',
                999)
  AND c_str NOT IN ('str3',
                    'str4',
                    999)
  AND c_long IN (0,
                 1,
                 2,
                 999)
  AND c_long NOT IN (3,
                     4,
                     999);
+-------------+
| c           |
+-------------+
| 1           |
| 1           |
| [2]         |
| [2]         |
| [3, [4, 5]] |
| [3, [4, 5]] |
| my_empty    |
| my_empty    |
| my_null     |
| my_null     |
+-------------+
(10 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A1_B47_C9 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest), unnest(mv_to_array(c_mv_complex)) AS u(c)
WHERE c_str IN ('',
                'str2',
                999)
  AND c_str NOT IN ('str3',
                    'str4',
                    999)
  AND c_long IN (0,
                 1,
                 2,
                 999)
  AND c_long NOT IN (3,
                     4,
                     999);
+-------------+
| c           |
+-------------+
| 1           |
| 1           |
| [2]         |
| [2]         |
| [3, [4, 5]] |
| [3, [4, 5]] |
| my_empty    |
| my_empty    |
| my_null     |
| my_null     |
+-------------+
(10 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A1_B48_C1 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM test_unnest,
     unnest(mv_to_array(c_mv_complex)) AS u(c)
WHERE c_long IN
    (SELECT col
     FROM (
           VALUES(0),(1),(2),(999)) AS t(col))
  AND c_long NOT IN
    (SELECT col
     FROM (
           VALUES(3),(4),(999)) AS t(col));
+-------------+
| c           |
+-------------+
| 1           |
| 1           |
| 1           |
| [2]         |
| [2]         |
| [2]         |
| [3, [4, 5]] |
| [3, [4, 5]] |
| [3, [4, 5]] |
| my_empty    |
| my_empty    |
| my_empty    |
| my_null     |
| my_null     |
| my_null     |
+-------------+
(15 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A1_B48_C3 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest,
        unnest(mv_to_array(c_mv_complex)) AS u(c)
   WHERE c_long IN
       (SELECT col
        FROM (
              VALUES(0),(1),(2),(999)) AS t(col))
     AND c_long NOT IN
       (SELECT col
        FROM (
              VALUES(3),(4),(999)) AS t(col)));
+-------------+
| c           |
+-------------+
| 1           |
| 1           |
| 1           |
| [2]         |
| [2]         |
| [2]         |
| [3, [4, 5]] |
| [3, [4, 5]] |
| [3, [4, 5]] |
| my_empty    |
| my_empty    |
| my_empty    |
| my_null     |
| my_null     |
| my_null     |
+-------------+
(15 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A1_B48_C5 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest
   WHERE c_long IN
       (SELECT col
        FROM (
              VALUES(0),(1),(2),(999)) AS t(col))
     AND c_long NOT IN
       (SELECT col
        FROM (
              VALUES(3),(4),(999)) AS t(col))), unnest(mv_to_array(c_mv_complex)) AS u(c);
+-------------+
| c           |
+-------------+
| 1           |
| 1           |
| 1           |
| [2]         |
| [2]         |
| [2]         |
| [3, [4, 5]] |
| [3, [4, 5]] |
| [3, [4, 5]] |
| my_empty    |
| my_empty    |
| my_empty    |
| my_null     |
| my_null     |
| my_null     |
+-------------+
(15 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A1_B48_C7 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest,
        unnest(mv_to_array(c_mv_complex)) AS u(c))
WHERE c_long IN
    (SELECT col
     FROM (
           VALUES(0),(1),(2),(999)) AS t(col))
  AND c_long NOT IN
    (SELECT col
     FROM (
           VALUES(3),(4),(999)) AS t(col));
+-------------+
| c           |
+-------------+
| 1           |
| 1           |
| 1           |
| [2]         |
| [2]         |
| [2]         |
| [3, [4, 5]] |
| [3, [4, 5]] |
| [3, [4, 5]] |
| my_empty    |
| my_empty    |
| my_empty    |
| my_null     |
| my_null     |
| my_null     |
+-------------+
(15 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A1_B48_C9 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest), unnest(mv_to_array(c_mv_complex)) AS u(c)
WHERE c_long IN
    (SELECT col
     FROM (
           VALUES(0),(1),(2),(999)) AS t(col))
  AND c_long NOT IN
    (SELECT col
     FROM (
           VALUES(3),(4),(999)) AS t(col));
+-------------+
| c           |
+-------------+
| 1           |
| 1           |
| 1           |
| [2]         |
| [2]         |
| [2]         |
| [3, [4, 5]] |
| [3, [4, 5]] |
| [3, [4, 5]] |
| my_empty    |
| my_empty    |
| my_empty    |
| my_null     |
| my_null     |
| my_null     |
+-------------+
(15 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A2_B1_C1 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM test_unnest,
     unnest(mv_to_array(c_mv_num)) AS u(c)
WHERE c='1';
+---+
| c |
+---+
| 1 |
| 1 |
| 1 |
| 1 |
| 1 |
+---+
(5 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A2_B1_C3 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest,
        unnest(mv_to_array(c_mv_num)) AS u(c)
   WHERE c='1');
+---+
| c |
+---+
| 1 |
| 1 |
| 1 |
| 1 |
| 1 |
+---+
(5 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A2_B1_C5 TYPE: NEGATIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest
   WHERE c='1'), unnest(mv_to_array(c_mv_num)) AS u(c);
QueryInterruptedException
!error

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A2_B1_C7 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest,
        unnest(mv_to_array(c_mv_num)) AS u(c))
WHERE c='1';
+---+
| c |
+---+
| 1 |
| 1 |
| 1 |
| 1 |
| 1 |
+---+
(5 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A2_B1_C9 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest), unnest(mv_to_array(c_mv_num)) AS u(c)
WHERE c='1';
+---+
| c |
+---+
| 1 |
| 1 |
| 1 |
| 1 |
| 1 |
+---+
(5 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A2_B2_C1 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM test_unnest,
     unnest(mv_to_array(c_mv_num)) AS u(c)
WHERE c<>'1';
+----+
| c  |
+----+
| -1 |
| -1 |
| -1 |
| -1 |
| -1 |
| 0  |
| 0  |
| 0  |
| 0  |
| 0  |
| 2  |
| 2  |
| 2  |
| 2  |
| 2  |
| 3  |
| 3  |
| 3  |
| 3  |
| 3  |
+----+
(20 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A2_B2_C3 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest,
        unnest(mv_to_array(c_mv_num)) AS u(c)
   WHERE c<>'1');
+----+
| c  |
+----+
| -1 |
| -1 |
| -1 |
| -1 |
| -1 |
| 0  |
| 0  |
| 0  |
| 0  |
| 0  |
| 2  |
| 2  |
| 2  |
| 2  |
| 2  |
| 3  |
| 3  |
| 3  |
| 3  |
| 3  |
+----+
(20 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A2_B2_C5 TYPE: NEGATIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest
   WHERE c<>'1'), unnest(mv_to_array(c_mv_num)) AS u(c);
QueryInterruptedException
!error

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A2_B2_C7 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest,
        unnest(mv_to_array(c_mv_num)) AS u(c))
WHERE c<>'1';
+----+
| c  |
+----+
| -1 |
| -1 |
| -1 |
| -1 |
| -1 |
| 0  |
| 0  |
| 0  |
| 0  |
| 0  |
| 2  |
| 2  |
| 2  |
| 2  |
| 2  |
| 3  |
| 3  |
| 3  |
| 3  |
| 3  |
+----+
(20 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A2_B2_C9 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest), unnest(mv_to_array(c_mv_num)) AS u(c)
WHERE c<>'1';
+----+
| c  |
+----+
| -1 |
| -1 |
| -1 |
| -1 |
| -1 |
| 0  |
| 0  |
| 0  |
| 0  |
| 0  |
| 2  |
| 2  |
| 2  |
| 2  |
| 2  |
| 3  |
| 3  |
| 3  |
| 3  |
| 3  |
+----+
(20 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A2_B3_C1 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM test_unnest,
     unnest(mv_to_array(c_mv_num)) AS u(c)
WHERE c>'1';
+---+
| c |
+---+
| 2 |
| 2 |
| 2 |
| 2 |
| 2 |
| 3 |
| 3 |
| 3 |
| 3 |
| 3 |
+---+
(10 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A2_B3_C3 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest,
        unnest(mv_to_array(c_mv_num)) AS u(c)
   WHERE c>'1');
+---+
| c |
+---+
| 2 |
| 2 |
| 2 |
| 2 |
| 2 |
| 3 |
| 3 |
| 3 |
| 3 |
| 3 |
+---+
(10 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A2_B3_C5 TYPE: NEGATIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest
   WHERE c>'1'), unnest(mv_to_array(c_mv_num)) AS u(c);
QueryInterruptedException
!error

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A2_B3_C7 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest,
        unnest(mv_to_array(c_mv_num)) AS u(c))
WHERE c>'1';
+---+
| c |
+---+
| 2 |
| 2 |
| 2 |
| 2 |
| 2 |
| 3 |
| 3 |
| 3 |
| 3 |
| 3 |
+---+
(10 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A2_B3_C9 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest), unnest(mv_to_array(c_mv_num)) AS u(c)
WHERE c>'1';
+---+
| c |
+---+
| 2 |
| 2 |
| 2 |
| 2 |
| 2 |
| 3 |
| 3 |
| 3 |
| 3 |
| 3 |
+---+
(10 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A2_B4_C1 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM test_unnest,
     unnest(mv_to_array(c_mv_num)) AS u(c)
WHERE c>='1';
+---+
| c |
+---+
| 1 |
| 1 |
| 1 |
| 1 |
| 1 |
| 2 |
| 2 |
| 2 |
| 2 |
| 2 |
| 3 |
| 3 |
| 3 |
| 3 |
| 3 |
+---+
(15 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A2_B4_C3 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest,
        unnest(mv_to_array(c_mv_num)) AS u(c)
   WHERE c>='1');
+---+
| c |
+---+
| 1 |
| 1 |
| 1 |
| 1 |
| 1 |
| 2 |
| 2 |
| 2 |
| 2 |
| 2 |
| 3 |
| 3 |
| 3 |
| 3 |
| 3 |
+---+
(15 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A2_B4_C5 TYPE: NEGATIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest
   WHERE c>='1'), unnest(mv_to_array(c_mv_num)) AS u(c);
QueryInterruptedException
!error

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A2_B4_C7 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest,
        unnest(mv_to_array(c_mv_num)) AS u(c))
WHERE c>='1';
+---+
| c |
+---+
| 1 |
| 1 |
| 1 |
| 1 |
| 1 |
| 2 |
| 2 |
| 2 |
| 2 |
| 2 |
| 3 |
| 3 |
| 3 |
| 3 |
| 3 |
+---+
(15 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A2_B4_C9 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest), unnest(mv_to_array(c_mv_num)) AS u(c)
WHERE c>='1';
+---+
| c |
+---+
| 1 |
| 1 |
| 1 |
| 1 |
| 1 |
| 2 |
| 2 |
| 2 |
| 2 |
| 2 |
| 3 |
| 3 |
| 3 |
| 3 |
| 3 |
+---+
(15 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A2_B5_C1 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM test_unnest,
     unnest(mv_to_array(c_mv_num)) AS u(c)
WHERE c<'1';
+----+
| c  |
+----+
| -1 |
| -1 |
| -1 |
| -1 |
| -1 |
| 0  |
| 0  |
| 0  |
| 0  |
| 0  |
+----+
(10 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A2_B5_C3 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest,
        unnest(mv_to_array(c_mv_num)) AS u(c)
   WHERE c<'1');
+----+
| c  |
+----+
| -1 |
| -1 |
| -1 |
| -1 |
| -1 |
| 0  |
| 0  |
| 0  |
| 0  |
| 0  |
+----+
(10 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A2_B5_C5 TYPE: NEGATIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest
   WHERE c<'1'), unnest(mv_to_array(c_mv_num)) AS u(c);
QueryInterruptedException
!error

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A2_B5_C7 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest,
        unnest(mv_to_array(c_mv_num)) AS u(c))
WHERE c<'1';
+----+
| c  |
+----+
| -1 |
| -1 |
| -1 |
| -1 |
| -1 |
| 0  |
| 0  |
| 0  |
| 0  |
| 0  |
+----+
(10 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A2_B5_C9 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest), unnest(mv_to_array(c_mv_num)) AS u(c)
WHERE c<'1';
+----+
| c  |
+----+
| -1 |
| -1 |
| -1 |
| -1 |
| -1 |
| 0  |
| 0  |
| 0  |
| 0  |
| 0  |
+----+
(10 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A2_B6_C1 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM test_unnest,
     unnest(mv_to_array(c_mv_num)) AS u(c)
WHERE c<='1';
+----+
| c  |
+----+
| -1 |
| -1 |
| -1 |
| -1 |
| -1 |
| 0  |
| 0  |
| 0  |
| 0  |
| 0  |
| 1  |
| 1  |
| 1  |
| 1  |
| 1  |
+----+
(15 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A2_B6_C3 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest,
        unnest(mv_to_array(c_mv_num)) AS u(c)
   WHERE c<='1');
+----+
| c  |
+----+
| -1 |
| -1 |
| -1 |
| -1 |
| -1 |
| 0  |
| 0  |
| 0  |
| 0  |
| 0  |
| 1  |
| 1  |
| 1  |
| 1  |
| 1  |
+----+
(15 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A2_B6_C5 TYPE: NEGATIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest
   WHERE c<='1'), unnest(mv_to_array(c_mv_num)) AS u(c);
QueryInterruptedException
!error

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A2_B6_C7 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest,
        unnest(mv_to_array(c_mv_num)) AS u(c))
WHERE c<='1';
+----+
| c  |
+----+
| -1 |
| -1 |
| -1 |
| -1 |
| -1 |
| 0  |
| 0  |
| 0  |
| 0  |
| 0  |
| 1  |
| 1  |
| 1  |
| 1  |
| 1  |
+----+
(15 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A2_B6_C9 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest), unnest(mv_to_array(c_mv_num)) AS u(c)
WHERE c<='1';
+----+
| c  |
+----+
| -1 |
| -1 |
| -1 |
| -1 |
| -1 |
| 0  |
| 0  |
| 0  |
| 0  |
| 0  |
| 1  |
| 1  |
| 1  |
| 1  |
| 1  |
+----+
(15 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A2_B7_C1 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM test_unnest,
     unnest(mv_to_array(c_mv_num)) AS u(c)
WHERE (NOT c<>''
       OR NOT c<>'my_null'
       OR NOT c<>'my_empty'
       OR NOT c<>'1'
       OR NOT c<>'-1'
       OR NOT c<>'0'
       OR NOT c<>'999'
       OR NOT c<>999)
  AND (NOT c='[2]'
       OR NOT c='[3, [4, 5]]'
       OR NOT c='2'
       OR NOT c='3'
       OR NOT c='999'
       OR NOT c=999);
+----+
| c  |
+----+
| -1 |
| -1 |
| -1 |
| -1 |
| -1 |
| 0  |
| 0  |
| 0  |
| 0  |
| 0  |
| 1  |
| 1  |
| 1  |
| 1  |
| 1  |
+----+
(15 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A2_B7_C3 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest,
        unnest(mv_to_array(c_mv_num)) AS u(c)
   WHERE (NOT c<>''
          OR NOT c<>'my_null'
          OR NOT c<>'my_empty'
          OR NOT c<>'1'
          OR NOT c<>'-1'
          OR NOT c<>'0'
          OR NOT c<>'999'
          OR NOT c<>999)
     AND (NOT c='[2]'
          OR NOT c='[3, [4, 5]]'
          OR NOT c='2'
          OR NOT c='3'
          OR NOT c='999'
          OR NOT c=999));
+----+
| c  |
+----+
| -1 |
| -1 |
| -1 |
| -1 |
| -1 |
| 0  |
| 0  |
| 0  |
| 0  |
| 0  |
| 1  |
| 1  |
| 1  |
| 1  |
| 1  |
+----+
(15 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A2_B7_C5 TYPE: NEGATIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest
   WHERE (NOT c<>''
          OR NOT c<>'my_null'
          OR NOT c<>'my_empty'
          OR NOT c<>'1'
          OR NOT c<>'-1'
          OR NOT c<>'0'
          OR NOT c<>'999'
          OR NOT c<>999)
     AND (NOT c='[2]'
          OR NOT c='[3, [4, 5]]'
          OR NOT c='2'
          OR NOT c='3'
          OR NOT c='999'
          OR NOT c=999)), unnest(mv_to_array(c_mv_num)) AS u(c);
QueryInterruptedException
!error

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A2_B7_C7 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest,
        unnest(mv_to_array(c_mv_num)) AS u(c))
WHERE (NOT c<>''
       OR NOT c<>'my_null'
       OR NOT c<>'my_empty'
       OR NOT c<>'1'
       OR NOT c<>'-1'
       OR NOT c<>'0'
       OR NOT c<>'999'
       OR NOT c<>999)
  AND (NOT c='[2]'
       OR NOT c='[3, [4, 5]]'
       OR NOT c='2'
       OR NOT c='3'
       OR NOT c='999'
       OR NOT c=999);
+----+
| c  |
+----+
| -1 |
| -1 |
| -1 |
| -1 |
| -1 |
| 0  |
| 0  |
| 0  |
| 0  |
| 0  |
| 1  |
| 1  |
| 1  |
| 1  |
| 1  |
+----+
(15 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A2_B7_C9 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest), unnest(mv_to_array(c_mv_num)) AS u(c)
WHERE (NOT c<>''
       OR NOT c<>'my_null'
       OR NOT c<>'my_empty'
       OR NOT c<>'1'
       OR NOT c<>'-1'
       OR NOT c<>'0'
       OR NOT c<>'999'
       OR NOT c<>999)
  AND (NOT c='[2]'
       OR NOT c='[3, [4, 5]]'
       OR NOT c='2'
       OR NOT c='3'
       OR NOT c='999'
       OR NOT c=999);
+----+
| c  |
+----+
| -1 |
| -1 |
| -1 |
| -1 |
| -1 |
| 0  |
| 0  |
| 0  |
| 0  |
| 0  |
| 1  |
| 1  |
| 1  |
| 1  |
| 1  |
+----+
(15 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A2_B8_C1 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM test_unnest,
     unnest(mv_to_array(c_mv_num)) AS u(c)
WHERE (c=''
       OR c='my_null'
       OR c='my_empty'
       OR c='1'
       OR c='-1'
       OR c='0'
       OR c='999'
       OR c=999)
  AND NOT c='[2]'
  AND NOT c='[3, [4, 5]]'
  AND NOT c='2'
  AND NOT c='3'
  AND NOT c='999'
  AND NOT c=999;
+----+
| c  |
+----+
| -1 |
| -1 |
| -1 |
| -1 |
| -1 |
| 0  |
| 0  |
| 0  |
| 0  |
| 0  |
| 1  |
| 1  |
| 1  |
| 1  |
| 1  |
+----+
(15 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A2_B8_C3 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest,
        unnest(mv_to_array(c_mv_num)) AS u(c)
   WHERE (c=''
          OR c='my_null'
          OR c='my_empty'
          OR c='1'
          OR c='-1'
          OR c='0'
          OR c='999'
          OR c=999)
     AND NOT c='[2]'
     AND NOT c='[3, [4, 5]]'
     AND NOT c='2'
     AND NOT c='3'
     AND NOT c='999'
     AND NOT c=999);
+----+
| c  |
+----+
| -1 |
| -1 |
| -1 |
| -1 |
| -1 |
| 0  |
| 0  |
| 0  |
| 0  |
| 0  |
| 1  |
| 1  |
| 1  |
| 1  |
| 1  |
+----+
(15 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A2_B8_C5 TYPE: NEGATIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest
   WHERE (c=''
          OR c='my_null'
          OR c='my_empty'
          OR c='1'
          OR c='-1'
          OR c='0'
          OR c='999'
          OR c=999)
     AND NOT c='[2]'
     AND NOT c='[3, [4, 5]]'
     AND NOT c='2'
     AND NOT c='3'
     AND NOT c='999'
     AND NOT c=999), unnest(mv_to_array(c_mv_num)) AS u(c);
QueryInterruptedException
!error

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A2_B8_C7 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest,
        unnest(mv_to_array(c_mv_num)) AS u(c))
WHERE (c=''
       OR c='my_null'
       OR c='my_empty'
       OR c='1'
       OR c='-1'
       OR c='0'
       OR c='999'
       OR c=999)
  AND NOT c='[2]'
  AND NOT c='[3, [4, 5]]'
  AND NOT c='2'
  AND NOT c='3'
  AND NOT c='999'
  AND NOT c=999;
+----+
| c  |
+----+
| -1 |
| -1 |
| -1 |
| -1 |
| -1 |
| 0  |
| 0  |
| 0  |
| 0  |
| 0  |
| 1  |
| 1  |
| 1  |
| 1  |
| 1  |
+----+
(15 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A2_B8_C9 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest), unnest(mv_to_array(c_mv_num)) AS u(c)
WHERE (c=''
       OR c='my_null'
       OR c='my_empty'
       OR c='1'
       OR c='-1'
       OR c='0'
       OR c='999'
       OR c=999)
  AND NOT c='[2]'
  AND NOT c='[3, [4, 5]]'
  AND NOT c='2'
  AND NOT c='3'
  AND NOT c='999'
  AND NOT c=999;
+----+
| c  |
+----+
| -1 |
| -1 |
| -1 |
| -1 |
| -1 |
| 0  |
| 0  |
| 0  |
| 0  |
| 0  |
| 1  |
| 1  |
| 1  |
| 1  |
| 1  |
+----+
(15 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A2_B9_C1 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM test_unnest,
     unnest(mv_to_array(c_mv_num)) AS u(c)
WHERE c IS NULL;
+---+
| c |
+---+
+---+
(0 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A2_B9_C3 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest,
        unnest(mv_to_array(c_mv_num)) AS u(c)
   WHERE c IS NULL);
+---+
| c |
+---+
+---+
(0 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A2_B9_C5 TYPE: NEGATIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest
   WHERE c IS NULL), unnest(mv_to_array(c_mv_num)) AS u(c);
QueryInterruptedException
!error

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A2_B9_C7 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest,
        unnest(mv_to_array(c_mv_num)) AS u(c))
WHERE c IS NULL;
+---+
| c |
+---+
+---+
(0 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A2_B9_C9 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest), unnest(mv_to_array(c_mv_num)) AS u(c)
WHERE c IS NULL;
+---+
| c |
+---+
+---+
(0 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A2_B10_C1 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM test_unnest,
     unnest(mv_to_array(c_mv_num)) AS u(c)
WHERE c IS NOT NULL;
+----+
| c  |
+----+
| -1 |
| -1 |
| -1 |
| -1 |
| -1 |
| 0  |
| 0  |
| 0  |
| 0  |
| 0  |
| 1  |
| 1  |
| 1  |
| 1  |
| 1  |
| 2  |
| 2  |
| 2  |
| 2  |
| 2  |
| 3  |
| 3  |
| 3  |
| 3  |
| 3  |
+----+
(25 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A2_B10_C3 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest,
        unnest(mv_to_array(c_mv_num)) AS u(c)
   WHERE c IS NOT NULL);
+----+
| c  |
+----+
| -1 |
| -1 |
| -1 |
| -1 |
| -1 |
| 0  |
| 0  |
| 0  |
| 0  |
| 0  |
| 1  |
| 1  |
| 1  |
| 1  |
| 1  |
| 2  |
| 2  |
| 2  |
| 2  |
| 2  |
| 3  |
| 3  |
| 3  |
| 3  |
| 3  |
+----+
(25 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A2_B10_C5 TYPE: NEGATIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest
   WHERE c IS NOT NULL), unnest(mv_to_array(c_mv_num)) AS u(c);
QueryInterruptedException
!error

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A2_B10_C7 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest,
        unnest(mv_to_array(c_mv_num)) AS u(c))
WHERE c IS NOT NULL;
+----+
| c  |
+----+
| -1 |
| -1 |
| -1 |
| -1 |
| -1 |
| 0  |
| 0  |
| 0  |
| 0  |
| 0  |
| 1  |
| 1  |
| 1  |
| 1  |
| 1  |
| 2  |
| 2  |
| 2  |
| 2  |
| 2  |
| 3  |
| 3  |
| 3  |
| 3  |
| 3  |
+----+
(25 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A2_B10_C9 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest), unnest(mv_to_array(c_mv_num)) AS u(c)
WHERE c IS NOT NULL;
+----+
| c  |
+----+
| -1 |
| -1 |
| -1 |
| -1 |
| -1 |
| 0  |
| 0  |
| 0  |
| 0  |
| 0  |
| 1  |
| 1  |
| 1  |
| 1  |
| 1  |
| 2  |
| 2  |
| 2  |
| 2  |
| 2  |
| 3  |
| 3  |
| 3  |
| 3  |
| 3  |
+----+
(25 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A2_B11_C1 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM test_unnest,
     unnest(mv_to_array(c_mv_num)) AS u(c)
WHERE c IN ('',
            'my_null',
            'my_empty',
            '1',
            '-1',
            '0',
            '999',
            999) IS TRUE
  AND c IN ('[2]',
            '[3, [4, 5]]',
            '2',
            '3',
            '999',
            999) IS NOT TRUE;
+----+
| c  |
+----+
| -1 |
| -1 |
| -1 |
| -1 |
| -1 |
| 0  |
| 0  |
| 0  |
| 0  |
| 0  |
| 1  |
| 1  |
| 1  |
| 1  |
| 1  |
+----+
(15 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A2_B11_C3 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest,
        unnest(mv_to_array(c_mv_num)) AS u(c)
   WHERE c IN ('',
               'my_null',
               'my_empty',
               '1',
               '-1',
               '0',
               '999',
               999) IS TRUE
     AND c IN ('[2]',
               '[3, [4, 5]]',
               '2',
               '3',
               '999',
               999) IS NOT TRUE);
+----+
| c  |
+----+
| -1 |
| -1 |
| -1 |
| -1 |
| -1 |
| 0  |
| 0  |
| 0  |
| 0  |
| 0  |
| 1  |
| 1  |
| 1  |
| 1  |
| 1  |
+----+
(15 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A2_B11_C5 TYPE: NEGATIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest
   WHERE c IN ('',
               'my_null',
               'my_empty',
               '1',
               '-1',
               '0',
               '999',
               999) IS TRUE
     AND c IN ('[2]',
               '[3, [4, 5]]',
               '2',
               '3',
               '999',
               999) IS NOT TRUE), unnest(mv_to_array(c_mv_num)) AS u(c);
QueryInterruptedException
!error

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A2_B11_C7 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest,
        unnest(mv_to_array(c_mv_num)) AS u(c))
WHERE c IN ('',
            'my_null',
            'my_empty',
            '1',
            '-1',
            '0',
            '999',
            999) IS TRUE
  AND c IN ('[2]',
            '[3, [4, 5]]',
            '2',
            '3',
            '999',
            999) IS NOT TRUE;
+----+
| c  |
+----+
| -1 |
| -1 |
| -1 |
| -1 |
| -1 |
| 0  |
| 0  |
| 0  |
| 0  |
| 0  |
| 1  |
| 1  |
| 1  |
| 1  |
| 1  |
+----+
(15 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A2_B11_C9 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest), unnest(mv_to_array(c_mv_num)) AS u(c)
WHERE c IN ('',
            'my_null',
            'my_empty',
            '1',
            '-1',
            '0',
            '999',
            999) IS TRUE
  AND c IN ('[2]',
            '[3, [4, 5]]',
            '2',
            '3',
            '999',
            999) IS NOT TRUE;
+----+
| c  |
+----+
| -1 |
| -1 |
| -1 |
| -1 |
| -1 |
| 0  |
| 0  |
| 0  |
| 0  |
| 0  |
| 1  |
| 1  |
| 1  |
| 1  |
| 1  |
+----+
(15 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A2_B12_C1 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM test_unnest,
     unnest(mv_to_array(c_mv_num)) AS u(c)
WHERE c IN ('',
            'my_null',
            'my_empty',
            '1',
            '-1',
            '0',
            '999',
            999) IS NOT FALSE
  AND c IN ('[2]',
            '[3, [4, 5]]',
            '2',
            '3',
            '999',
            999) IS FALSE;
+----+
| c  |
+----+
| -1 |
| -1 |
| -1 |
| -1 |
| -1 |
| 0  |
| 0  |
| 0  |
| 0  |
| 0  |
| 1  |
| 1  |
| 1  |
| 1  |
| 1  |
+----+
(15 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A2_B12_C3 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest,
        unnest(mv_to_array(c_mv_num)) AS u(c)
   WHERE c IN ('',
               'my_null',
               'my_empty',
               '1',
               '-1',
               '0',
               '999',
               999) IS NOT FALSE
     AND c IN ('[2]',
               '[3, [4, 5]]',
               '2',
               '3',
               '999',
               999) IS FALSE);
+----+
| c  |
+----+
| -1 |
| -1 |
| -1 |
| -1 |
| -1 |
| 0  |
| 0  |
| 0  |
| 0  |
| 0  |
| 1  |
| 1  |
| 1  |
| 1  |
| 1  |
+----+
(15 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A2_B12_C5 TYPE: NEGATIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest
   WHERE c IN ('',
               'my_null',
               'my_empty',
               '1',
               '-1',
               '0',
               '999',
               999) IS NOT FALSE
     AND c IN ('[2]',
               '[3, [4, 5]]',
               '2',
               '3',
               '999',
               999) IS FALSE), unnest(mv_to_array(c_mv_num)) AS u(c);
QueryInterruptedException
!error

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A2_B12_C7 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest,
        unnest(mv_to_array(c_mv_num)) AS u(c))
WHERE c IN ('',
            'my_null',
            'my_empty',
            '1',
            '-1',
            '0',
            '999',
            999) IS NOT FALSE
  AND c IN ('[2]',
            '[3, [4, 5]]',
            '2',
            '3',
            '999',
            999) IS FALSE;
+----+
| c  |
+----+
| -1 |
| -1 |
| -1 |
| -1 |
| -1 |
| 0  |
| 0  |
| 0  |
| 0  |
| 0  |
| 1  |
| 1  |
| 1  |
| 1  |
| 1  |
+----+
(15 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A2_B12_C9 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest), unnest(mv_to_array(c_mv_num)) AS u(c)
WHERE c IN ('',
            'my_null',
            'my_empty',
            '1',
            '-1',
            '0',
            '999',
            999) IS NOT FALSE
  AND c IN ('[2]',
            '[3, [4, 5]]',
            '2',
            '3',
            '999',
            999) IS FALSE;
+----+
| c  |
+----+
| -1 |
| -1 |
| -1 |
| -1 |
| -1 |
| 0  |
| 0  |
| 0  |
| 0  |
| 0  |
| 1  |
| 1  |
| 1  |
| 1  |
| 1  |
+----+
(15 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A2_B13_C1 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM test_unnest,
     unnest(mv_to_array(c_mv_num)) AS u(c)
WHERE (c BETWEEN '1' AND '2')
  AND (c NOT BETWEEN '3' AND '4');
+---+
| c |
+---+
| 1 |
| 1 |
| 1 |
| 1 |
| 1 |
| 2 |
| 2 |
| 2 |
| 2 |
| 2 |
+---+
(10 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A2_B13_C3 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest,
        unnest(mv_to_array(c_mv_num)) AS u(c)
   WHERE (c BETWEEN '1' AND '2')
     AND (c NOT BETWEEN '3' AND '4'));
+---+
| c |
+---+
| 1 |
| 1 |
| 1 |
| 1 |
| 1 |
| 2 |
| 2 |
| 2 |
| 2 |
| 2 |
+---+
(10 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A2_B13_C5 TYPE: NEGATIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest
   WHERE (c BETWEEN '1' AND '2')
     AND (c NOT BETWEEN '3' AND '4')), unnest(mv_to_array(c_mv_num)) AS u(c);
QueryInterruptedException
!error

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A2_B13_C7 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest,
        unnest(mv_to_array(c_mv_num)) AS u(c))
WHERE (c BETWEEN '1' AND '2')
  AND (c NOT BETWEEN '3' AND '4');
+---+
| c |
+---+
| 1 |
| 1 |
| 1 |
| 1 |
| 1 |
| 2 |
| 2 |
| 2 |
| 2 |
| 2 |
+---+
(10 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A2_B13_C9 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest), unnest(mv_to_array(c_mv_num)) AS u(c)
WHERE (c BETWEEN '1' AND '2')
  AND (c NOT BETWEEN '3' AND '4');
+---+
| c |
+---+
| 1 |
| 1 |
| 1 |
| 1 |
| 1 |
| 2 |
| 2 |
| 2 |
| 2 |
| 2 |
+---+
(10 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A2_B14_C1 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM test_unnest,
     unnest(mv_to_array(c_mv_num)) AS u(c)
WHERE (c like '1%')
  AND (c not like '3%');
+---+
| c |
+---+
| 1 |
| 1 |
| 1 |
| 1 |
| 1 |
+---+
(5 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A2_B14_C3 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest,
        unnest(mv_to_array(c_mv_num)) AS u(c)
   WHERE (c like '1%')
     AND (c not like '3%'));
+---+
| c |
+---+
| 1 |
| 1 |
| 1 |
| 1 |
| 1 |
+---+
(5 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A2_B14_C5 TYPE: NEGATIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest
   WHERE (c like '1%')
     AND (c not like '3%')), unnest(mv_to_array(c_mv_num)) AS u(c);
QueryInterruptedException
!error

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A2_B14_C7 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest,
        unnest(mv_to_array(c_mv_num)) AS u(c))
WHERE (c like '1%')
  AND (c not like '3%');
+---+
| c |
+---+
| 1 |
| 1 |
| 1 |
| 1 |
| 1 |
+---+
(5 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A2_B14_C9 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest), unnest(mv_to_array(c_mv_num)) AS u(c)
WHERE (c like '1%')
  AND (c not like '3%');
+---+
| c |
+---+
| 1 |
| 1 |
| 1 |
| 1 |
| 1 |
+---+
(5 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A2_B15_C1 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM test_unnest,
     unnest(mv_to_array(c_mv_num)) AS u(c)
WHERE c IN ('',
            'my_null',
            'my_empty',
            '1',
            '-1',
            '0',
            '999',
            999)
  AND c NOT IN ('[2]',
                '[3, [4, 5]]',
                '2',
                '3',
                '999',
                999);
+----+
| c  |
+----+
| -1 |
| -1 |
| -1 |
| -1 |
| -1 |
| 0  |
| 0  |
| 0  |
| 0  |
| 0  |
| 1  |
| 1  |
| 1  |
| 1  |
| 1  |
+----+
(15 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A2_B15_C3 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest,
        unnest(mv_to_array(c_mv_num)) AS u(c)
   WHERE c IN ('',
               'my_null',
               'my_empty',
               '1',
               '-1',
               '0',
               '999',
               999)
     AND c NOT IN ('[2]',
                   '[3, [4, 5]]',
                   '2',
                   '3',
                   '999',
                   999));
+----+
| c  |
+----+
| -1 |
| -1 |
| -1 |
| -1 |
| -1 |
| 0  |
| 0  |
| 0  |
| 0  |
| 0  |
| 1  |
| 1  |
| 1  |
| 1  |
| 1  |
+----+
(15 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A2_B15_C5 TYPE: NEGATIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest
   WHERE c IN ('',
               'my_null',
               'my_empty',
               '1',
               '-1',
               '0',
               '999',
               999)
     AND c NOT IN ('[2]',
                   '[3, [4, 5]]',
                   '2',
                   '3',
                   '999',
                   999)), unnest(mv_to_array(c_mv_num)) AS u(c);
QueryInterruptedException
!error

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A2_B15_C7 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest,
        unnest(mv_to_array(c_mv_num)) AS u(c))
WHERE c IN ('',
            'my_null',
            'my_empty',
            '1',
            '-1',
            '0',
            '999',
            999)
  AND c NOT IN ('[2]',
                '[3, [4, 5]]',
                '2',
                '3',
                '999',
                999);
+----+
| c  |
+----+
| -1 |
| -1 |
| -1 |
| -1 |
| -1 |
| 0  |
| 0  |
| 0  |
| 0  |
| 0  |
| 1  |
| 1  |
| 1  |
| 1  |
| 1  |
+----+
(15 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A2_B15_C9 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest), unnest(mv_to_array(c_mv_num)) AS u(c)
WHERE c IN ('',
            'my_null',
            'my_empty',
            '1',
            '-1',
            '0',
            '999',
            999)
  AND c NOT IN ('[2]',
                '[3, [4, 5]]',
                '2',
                '3',
                '999',
                999);
+----+
| c  |
+----+
| -1 |
| -1 |
| -1 |
| -1 |
| -1 |
| 0  |
| 0  |
| 0  |
| 0  |
| 0  |
| 1  |
| 1  |
| 1  |
| 1  |
| 1  |
+----+
(15 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A2_B16_C1 TYPE: NEGATIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM test_unnest,
     unnest(mv_to_array(c_mv_num)) AS u(c)
WHERE c IN
    (SELECT col
     FROM (
           VALUES(''),('my_null'),('my_empty'),('1'),('-1'),('0'),('999')) AS t(col))
  AND c NOT IN
    (SELECT col
     FROM (
           VALUES('[2]'),('[3, [4, 5]]'),('2'),('3'),('999')) AS t(col));
Unhandled Query Planning Failure
!error

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A2_B16_C3 TYPE: NEGATIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest,
        unnest(mv_to_array(c_mv_num)) AS u(c)
   WHERE c IN
       (SELECT col
        FROM (
              VALUES(''),('my_null'),('my_empty'),('1'),('-1'),('0'),('999')) AS t(col))
     AND c NOT IN
       (SELECT col
        FROM (
              VALUES('[2]'),('[3, [4, 5]]'),('2'),('3'),('999')) AS t(col)));
Unhandled Query Planning Failure
!error

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A2_B16_C5 TYPE: NEGATIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest
   WHERE c IN
       (SELECT col
        FROM (
              VALUES(''),('my_null'),('my_empty'),('1'),('-1'),('0'),('999')) AS t(col))
     AND c NOT IN
       (SELECT col
        FROM (
              VALUES('[2]'),('[3, [4, 5]]'),('2'),('3'),('999')) AS t(col))), unnest(mv_to_array(c_mv_num)) AS u(c);
QueryInterruptedException
!error

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A2_B16_C7 TYPE: NEGATIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest,
        unnest(mv_to_array(c_mv_num)) AS u(c))
WHERE c IN
    (SELECT col
     FROM (
           VALUES(''),('my_null'),('my_empty'),('1'),('-1'),('0'),('999')) AS t(col))
  AND c NOT IN
    (SELECT col
     FROM (
           VALUES('[2]'),('[3, [4, 5]]'),('2'),('3'),('999')) AS t(col));
Unhandled Query Planning Failure
!error

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A2_B16_C9 TYPE: NEGATIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest), unnest(mv_to_array(c_mv_num)) AS u(c)
WHERE c IN
    (SELECT col
     FROM (
           VALUES(''),('my_null'),('my_empty'),('1'),('-1'),('0'),('999')) AS t(col))
  AND c NOT IN
    (SELECT col
     FROM (
           VALUES('[2]'),('[3, [4, 5]]'),('2'),('3'),('999')) AS t(col));
Unhandled Query Planning Failure
!error

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A2_B17_C1 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM test_unnest,
     unnest(mv_to_array(c_mv_num)) AS u(c)
WHERE c_long=1
  AND c='1';
+---+
| c |
+---+
| 1 |
+---+
(1 row)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A2_B17_C3 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest,
        unnest(mv_to_array(c_mv_num)) AS u(c)
   WHERE c_long=1
     AND c='1');
+---+
| c |
+---+
| 1 |
+---+
(1 row)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A2_B17_C5 TYPE: NEGATIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest
   WHERE c_long=1
     AND c='1'), unnest(mv_to_array(c_mv_num)) AS u(c);
QueryInterruptedException
!error

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A2_B17_C7 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest,
        unnest(mv_to_array(c_mv_num)) AS u(c))
WHERE c_long=1
  AND c='1';
+---+
| c |
+---+
| 1 |
+---+
(1 row)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A2_B17_C9 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest), unnest(mv_to_array(c_mv_num)) AS u(c)
WHERE c_long=1
  AND c='1';
+---+
| c |
+---+
| 1 |
+---+
(1 row)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A2_B18_C1 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM test_unnest,
     unnest(mv_to_array(c_mv_num)) AS u(c)
WHERE c_long<>1
  AND c<>'1';
+----+
| c  |
+----+
| -1 |
| -1 |
| -1 |
| -1 |
| 0  |
| 0  |
| 0  |
| 0  |
| 2  |
| 2  |
| 2  |
| 2  |
| 3  |
| 3  |
| 3  |
| 3  |
+----+
(16 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A2_B18_C3 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest,
        unnest(mv_to_array(c_mv_num)) AS u(c)
   WHERE c_long<>1
     AND c<>'1');
+----+
| c  |
+----+
| -1 |
| -1 |
| -1 |
| -1 |
| 0  |
| 0  |
| 0  |
| 0  |
| 2  |
| 2  |
| 2  |
| 2  |
| 3  |
| 3  |
| 3  |
| 3  |
+----+
(16 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A2_B18_C5 TYPE: NEGATIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest
   WHERE c_long<>1
     AND c<>'1'), unnest(mv_to_array(c_mv_num)) AS u(c);
QueryInterruptedException
!error

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A2_B18_C7 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest,
        unnest(mv_to_array(c_mv_num)) AS u(c))
WHERE c_long<>1
  AND c<>'1';
+----+
| c  |
+----+
| -1 |
| -1 |
| -1 |
| -1 |
| 0  |
| 0  |
| 0  |
| 0  |
| 2  |
| 2  |
| 2  |
| 2  |
| 3  |
| 3  |
| 3  |
| 3  |
+----+
(16 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A2_B18_C9 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest), unnest(mv_to_array(c_mv_num)) AS u(c)
WHERE c_long<>1
  AND c<>'1';
+----+
| c  |
+----+
| -1 |
| -1 |
| -1 |
| -1 |
| 0  |
| 0  |
| 0  |
| 0  |
| 2  |
| 2  |
| 2  |
| 2  |
| 3  |
| 3  |
| 3  |
| 3  |
+----+
(16 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A2_B19_C1 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM test_unnest,
     unnest(mv_to_array(c_mv_num)) AS u(c)
WHERE c_long>1
  AND c>'1';
+---+
| c |
+---+
| 2 |
| 2 |
| 2 |
| 3 |
| 3 |
| 3 |
+---+
(6 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A2_B19_C3 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest,
        unnest(mv_to_array(c_mv_num)) AS u(c)
   WHERE c_long>1
     AND c>'1');
+---+
| c |
+---+
| 2 |
| 2 |
| 2 |
| 3 |
| 3 |
| 3 |
+---+
(6 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A2_B19_C5 TYPE: NEGATIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest
   WHERE c_long>1
     AND c>'1'), unnest(mv_to_array(c_mv_num)) AS u(c);
QueryInterruptedException
!error

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A2_B19_C7 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest,
        unnest(mv_to_array(c_mv_num)) AS u(c))
WHERE c_long>1
  AND c>'1';
+---+
| c |
+---+
| 2 |
| 2 |
| 2 |
| 3 |
| 3 |
| 3 |
+---+
(6 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A2_B19_C9 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest), unnest(mv_to_array(c_mv_num)) AS u(c)
WHERE c_long>1
  AND c>'1';
+---+
| c |
+---+
| 2 |
| 2 |
| 2 |
| 3 |
| 3 |
| 3 |
+---+
(6 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A2_B20_C1 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM test_unnest,
     unnest(mv_to_array(c_mv_num)) AS u(c)
WHERE c_long>=1
  AND c>='1';
+---+
| c |
+---+
| 1 |
| 1 |
| 1 |
| 1 |
| 2 |
| 2 |
| 2 |
| 2 |
| 3 |
| 3 |
| 3 |
| 3 |
+---+
(12 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A2_B20_C3 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest,
        unnest(mv_to_array(c_mv_num)) AS u(c)
   WHERE c_long>=1
     AND c>='1');
+---+
| c |
+---+
| 1 |
| 1 |
| 1 |
| 1 |
| 2 |
| 2 |
| 2 |
| 2 |
| 3 |
| 3 |
| 3 |
| 3 |
+---+
(12 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A2_B20_C5 TYPE: NEGATIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest
   WHERE c_long>=1
     AND c>='1'), unnest(mv_to_array(c_mv_num)) AS u(c);
QueryInterruptedException
!error

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A2_B20_C7 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest,
        unnest(mv_to_array(c_mv_num)) AS u(c))
WHERE c_long>=1
  AND c>='1';
+---+
| c |
+---+
| 1 |
| 1 |
| 1 |
| 1 |
| 2 |
| 2 |
| 2 |
| 2 |
| 3 |
| 3 |
| 3 |
| 3 |
+---+
(12 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A2_B20_C9 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest), unnest(mv_to_array(c_mv_num)) AS u(c)
WHERE c_long>=1
  AND c>='1';
+---+
| c |
+---+
| 1 |
| 1 |
| 1 |
| 1 |
| 2 |
| 2 |
| 2 |
| 2 |
| 3 |
| 3 |
| 3 |
| 3 |
+---+
(12 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A2_B21_C1 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM test_unnest,
     unnest(mv_to_array(c_mv_num)) AS u(c)
WHERE c_long<1
  AND c<'1';
+----+
| c  |
+----+
| -1 |
| 0  |
+----+
(2 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A2_B21_C3 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest,
        unnest(mv_to_array(c_mv_num)) AS u(c)
   WHERE c_long<1
     AND c<'1');
+----+
| c  |
+----+
| -1 |
| 0  |
+----+
(2 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A2_B21_C5 TYPE: NEGATIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest
   WHERE c_long<1
     AND c<'1'), unnest(mv_to_array(c_mv_num)) AS u(c);
QueryInterruptedException
!error

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A2_B21_C7 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest,
        unnest(mv_to_array(c_mv_num)) AS u(c))
WHERE c_long<1
  AND c<'1';
+----+
| c  |
+----+
| -1 |
| 0  |
+----+
(2 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A2_B21_C9 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest), unnest(mv_to_array(c_mv_num)) AS u(c)
WHERE c_long<1
  AND c<'1';
+----+
| c  |
+----+
| -1 |
| 0  |
+----+
(2 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A2_B22_C1 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM test_unnest,
     unnest(mv_to_array(c_mv_num)) AS u(c)
WHERE c_long<=1
  AND c<='1';
+----+
| c  |
+----+
| -1 |
| -1 |
| 0  |
| 0  |
| 1  |
| 1  |
+----+
(6 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A2_B22_C3 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest,
        unnest(mv_to_array(c_mv_num)) AS u(c)
   WHERE c_long<=1
     AND c<='1');
+----+
| c  |
+----+
| -1 |
| -1 |
| 0  |
| 0  |
| 1  |
| 1  |
+----+
(6 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A2_B22_C5 TYPE: NEGATIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest
   WHERE c_long<=1
     AND c<='1'), unnest(mv_to_array(c_mv_num)) AS u(c);
QueryInterruptedException
!error

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A2_B22_C7 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest,
        unnest(mv_to_array(c_mv_num)) AS u(c))
WHERE c_long<=1
  AND c<='1';
+----+
| c  |
+----+
| -1 |
| -1 |
| 0  |
| 0  |
| 1  |
| 1  |
+----+
(6 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A2_B22_C9 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest), unnest(mv_to_array(c_mv_num)) AS u(c)
WHERE c_long<=1
  AND c<='1';
+----+
| c  |
+----+
| -1 |
| -1 |
| 0  |
| 0  |
| 1  |
| 1  |
+----+
(6 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A2_B23_C1 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM test_unnest,
     unnest(mv_to_array(c_mv_num)) AS u(c)
WHERE NOT (c_long<>0
           AND c_long<>1
           AND c_long<>2)
  AND (NOT c<>''
       OR NOT c<>'my_null'
       OR NOT c<>'my_empty'
       OR NOT c<>'1'
       OR NOT c<>'-1'
       OR NOT c<>'0'
       OR NOT c<>'999'
       OR NOT c<>999)
  AND (NOT c='[2]'
       OR NOT c='[3, [4, 5]]'
       OR NOT c='2'
       OR NOT c='3'
       OR NOT c='999'
       OR NOT c=999);
+----+
| c  |
+----+
| -1 |
| -1 |
| -1 |
| 0  |
| 0  |
| 0  |
| 1  |
| 1  |
| 1  |
+----+
(9 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A2_B23_C3 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest,
        unnest(mv_to_array(c_mv_num)) AS u(c)
   WHERE NOT (c_long<>0
              AND c_long<>1
              AND c_long<>2)
     AND (NOT c<>''
          OR NOT c<>'my_null'
          OR NOT c<>'my_empty'
          OR NOT c<>'1'
          OR NOT c<>'-1'
          OR NOT c<>'0'
          OR NOT c<>'999'
          OR NOT c<>999)
     AND (NOT c='[2]'
          OR NOT c='[3, [4, 5]]'
          OR NOT c='2'
          OR NOT c='3'
          OR NOT c='999'
          OR NOT c=999));
+----+
| c  |
+----+
| -1 |
| -1 |
| -1 |
| 0  |
| 0  |
| 0  |
| 1  |
| 1  |
| 1  |
+----+
(9 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A2_B23_C5 TYPE: NEGATIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest
   WHERE NOT (c_long<>0
              AND c_long<>1
              AND c_long<>2)
     AND (NOT c<>''
          OR NOT c<>'my_null'
          OR NOT c<>'my_empty'
          OR NOT c<>'1'
          OR NOT c<>'-1'
          OR NOT c<>'0'
          OR NOT c<>'999'
          OR NOT c<>999)
     AND (NOT c='[2]'
          OR NOT c='[3, [4, 5]]'
          OR NOT c='2'
          OR NOT c='3'
          OR NOT c='999'
          OR NOT c=999)), unnest(mv_to_array(c_mv_num)) AS u(c);
QueryInterruptedException
!error

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A2_B23_C7 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest,
        unnest(mv_to_array(c_mv_num)) AS u(c))
WHERE NOT (c_long<>0
           AND c_long<>1
           AND c_long<>2)
  AND (NOT c<>''
       OR NOT c<>'my_null'
       OR NOT c<>'my_empty'
       OR NOT c<>'1'
       OR NOT c<>'-1'
       OR NOT c<>'0'
       OR NOT c<>'999'
       OR NOT c<>999)
  AND (NOT c='[2]'
       OR NOT c='[3, [4, 5]]'
       OR NOT c='2'
       OR NOT c='3'
       OR NOT c='999'
       OR NOT c=999);
+----+
| c  |
+----+
| -1 |
| -1 |
| -1 |
| 0  |
| 0  |
| 0  |
| 1  |
| 1  |
| 1  |
+----+
(9 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A2_B23_C9 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest), unnest(mv_to_array(c_mv_num)) AS u(c)
WHERE NOT (c_long<>0
           AND c_long<>1
           AND c_long<>2)
  AND (NOT c<>''
       OR NOT c<>'my_null'
       OR NOT c<>'my_empty'
       OR NOT c<>'1'
       OR NOT c<>'-1'
       OR NOT c<>'0'
       OR NOT c<>'999'
       OR NOT c<>999)
  AND (NOT c='[2]'
       OR NOT c='[3, [4, 5]]'
       OR NOT c='2'
       OR NOT c='3'
       OR NOT c='999'
       OR NOT c=999);
+----+
| c  |
+----+
| -1 |
| -1 |
| -1 |
| 0  |
| 0  |
| 0  |
| 1  |
| 1  |
| 1  |
+----+
(9 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A2_B24_C1 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM test_unnest,
     unnest(mv_to_array(c_mv_num)) AS u(c)
WHERE (c_long=0
       OR c_long=1
       OR c_long=2)
  AND (c=''
       OR c='my_null'
       OR c='my_empty'
       OR c='1'
       OR c='-1'
       OR c='0'
       OR c='999'
       OR c=999)
  AND NOT c='[2]'
  AND NOT c='[3, [4, 5]]'
  AND NOT c='2'
  AND NOT c='3'
  AND NOT c='999'
  AND NOT c=999;
+----+
| c  |
+----+
| -1 |
| -1 |
| -1 |
| 0  |
| 0  |
| 0  |
| 1  |
| 1  |
| 1  |
+----+
(9 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A2_B24_C3 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest,
        unnest(mv_to_array(c_mv_num)) AS u(c)
   WHERE (c_long=0
          OR c_long=1
          OR c_long=2)
     AND (c=''
          OR c='my_null'
          OR c='my_empty'
          OR c='1'
          OR c='-1'
          OR c='0'
          OR c='999'
          OR c=999)
     AND NOT c='[2]'
     AND NOT c='[3, [4, 5]]'
     AND NOT c='2'
     AND NOT c='3'
     AND NOT c='999'
     AND NOT c=999);
+----+
| c  |
+----+
| -1 |
| -1 |
| -1 |
| 0  |
| 0  |
| 0  |
| 1  |
| 1  |
| 1  |
+----+
(9 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A2_B24_C5 TYPE: NEGATIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest
   WHERE (c_long=0
          OR c_long=1
          OR c_long=2)
     AND (c=''
          OR c='my_null'
          OR c='my_empty'
          OR c='1'
          OR c='-1'
          OR c='0'
          OR c='999'
          OR c=999)
     AND NOT c='[2]'
     AND NOT c='[3, [4, 5]]'
     AND NOT c='2'
     AND NOT c='3'
     AND NOT c='999'
     AND NOT c=999), unnest(mv_to_array(c_mv_num)) AS u(c);
QueryInterruptedException
!error

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A2_B24_C7 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest,
        unnest(mv_to_array(c_mv_num)) AS u(c))
WHERE (c_long=0
       OR c_long=1
       OR c_long=2)
  AND (c=''
       OR c='my_null'
       OR c='my_empty'
       OR c='1'
       OR c='-1'
       OR c='0'
       OR c='999'
       OR c=999)
  AND NOT c='[2]'
  AND NOT c='[3, [4, 5]]'
  AND NOT c='2'
  AND NOT c='3'
  AND NOT c='999'
  AND NOT c=999;
+----+
| c  |
+----+
| -1 |
| -1 |
| -1 |
| 0  |
| 0  |
| 0  |
| 1  |
| 1  |
| 1  |
+----+
(9 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A2_B24_C9 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest), unnest(mv_to_array(c_mv_num)) AS u(c)
WHERE (c_long=0
       OR c_long=1
       OR c_long=2)
  AND (c=''
       OR c='my_null'
       OR c='my_empty'
       OR c='1'
       OR c='-1'
       OR c='0'
       OR c='999'
       OR c=999)
  AND NOT c='[2]'
  AND NOT c='[3, [4, 5]]'
  AND NOT c='2'
  AND NOT c='3'
  AND NOT c='999'
  AND NOT c=999;
+----+
| c  |
+----+
| -1 |
| -1 |
| -1 |
| 0  |
| 0  |
| 0  |
| 1  |
| 1  |
| 1  |
+----+
(9 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A2_B25_C1 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM test_unnest,
     unnest(mv_to_array(c_mv_num)) AS u(c)
WHERE c_str IS NULL
  AND c IS NULL;
+---+
| c |
+---+
+---+
(0 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A2_B25_C3 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest,
        unnest(mv_to_array(c_mv_num)) AS u(c)
   WHERE c_str IS NULL
     AND c IS NULL);
+---+
| c |
+---+
+---+
(0 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A2_B25_C5 TYPE: NEGATIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest
   WHERE c_str IS NULL
     AND c IS NULL), unnest(mv_to_array(c_mv_num)) AS u(c);
QueryInterruptedException
!error

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A2_B25_C7 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest,
        unnest(mv_to_array(c_mv_num)) AS u(c))
WHERE c_str IS NULL
  AND c IS NULL;
+---+
| c |
+---+
+---+
(0 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A2_B25_C9 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest), unnest(mv_to_array(c_mv_num)) AS u(c)
WHERE c_str IS NULL
  AND c IS NULL;
+---+
| c |
+---+
+---+
(0 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A2_B26_C1 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM test_unnest,
     unnest(mv_to_array(c_mv_num)) AS u(c)
WHERE c_str IS NOT NULL
  AND c IS NOT NULL;
+----+
| c  |
+----+
| -1 |
| -1 |
| -1 |
| -1 |
| 0  |
| 0  |
| 0  |
| 0  |
| 1  |
| 1  |
| 1  |
| 1  |
| 2  |
| 2  |
| 2  |
| 2  |
| 3  |
| 3  |
| 3  |
| 3  |
+----+
(20 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A2_B26_C3 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest,
        unnest(mv_to_array(c_mv_num)) AS u(c)
   WHERE c_str IS NOT NULL
     AND c IS NOT NULL);
+----+
| c  |
+----+
| -1 |
| -1 |
| -1 |
| -1 |
| 0  |
| 0  |
| 0  |
| 0  |
| 1  |
| 1  |
| 1  |
| 1  |
| 2  |
| 2  |
| 2  |
| 2  |
| 3  |
| 3  |
| 3  |
| 3  |
+----+
(20 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A2_B26_C5 TYPE: NEGATIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest
   WHERE c_str IS NOT NULL
     AND c IS NOT NULL), unnest(mv_to_array(c_mv_num)) AS u(c);
QueryInterruptedException
!error

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A2_B26_C7 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest,
        unnest(mv_to_array(c_mv_num)) AS u(c))
WHERE c_str IS NOT NULL
  AND c IS NOT NULL;
+----+
| c  |
+----+
| -1 |
| -1 |
| -1 |
| -1 |
| 0  |
| 0  |
| 0  |
| 0  |
| 1  |
| 1  |
| 1  |
| 1  |
| 2  |
| 2  |
| 2  |
| 2  |
| 3  |
| 3  |
| 3  |
| 3  |
+----+
(20 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A2_B26_C9 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest), unnest(mv_to_array(c_mv_num)) AS u(c)
WHERE c_str IS NOT NULL
  AND c IS NOT NULL;
+----+
| c  |
+----+
| -1 |
| -1 |
| -1 |
| -1 |
| 0  |
| 0  |
| 0  |
| 0  |
| 1  |
| 1  |
| 1  |
| 1  |
| 2  |
| 2  |
| 2  |
| 2  |
| 3  |
| 3  |
| 3  |
| 3  |
+----+
(20 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A2_B27_C1 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM test_unnest,
     unnest(mv_to_array(c_mv_num)) AS u(c)
WHERE c_long IN (0,
                 1,
                 2) IS TRUE
  AND c_long IN (3,
                 4) IS NOT TRUE
  AND c IN ('',
            'my_null',
            'my_empty',
            '1',
            '-1',
            '0',
            '999',
            999) IS TRUE
  AND c IN ('[2]',
            '[3, [4, 5]]',
            '2',
            '3',
            '999',
            999) IS NOT TRUE;
+----+
| c  |
+----+
| -1 |
| -1 |
| -1 |
| 0  |
| 0  |
| 0  |
| 1  |
| 1  |
| 1  |
+----+
(9 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A2_B27_C3 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest,
        unnest(mv_to_array(c_mv_num)) AS u(c)
   WHERE c_long IN (0,
                    1,
                    2) IS TRUE
     AND c_long IN (3,
                    4) IS NOT TRUE
     AND c IN ('',
               'my_null',
               'my_empty',
               '1',
               '-1',
               '0',
               '999',
               999) IS TRUE
     AND c IN ('[2]',
               '[3, [4, 5]]',
               '2',
               '3',
               '999',
               999) IS NOT TRUE);
+----+
| c  |
+----+
| -1 |
| -1 |
| -1 |
| 0  |
| 0  |
| 0  |
| 1  |
| 1  |
| 1  |
+----+
(9 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A2_B27_C5 TYPE: NEGATIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest
   WHERE c_long IN (0,
                    1,
                    2) IS TRUE
     AND c_long IN (3,
                    4) IS NOT TRUE
     AND c IN ('',
               'my_null',
               'my_empty',
               '1',
               '-1',
               '0',
               '999',
               999) IS TRUE
     AND c IN ('[2]',
               '[3, [4, 5]]',
               '2',
               '3',
               '999',
               999) IS NOT TRUE), unnest(mv_to_array(c_mv_num)) AS u(c);
QueryInterruptedException
!error

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A2_B27_C7 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest,
        unnest(mv_to_array(c_mv_num)) AS u(c))
WHERE c_long IN (0,
                 1,
                 2) IS TRUE
  AND c_long IN (3,
                 4) IS NOT TRUE
  AND c IN ('',
            'my_null',
            'my_empty',
            '1',
            '-1',
            '0',
            '999',
            999) IS TRUE
  AND c IN ('[2]',
            '[3, [4, 5]]',
            '2',
            '3',
            '999',
            999) IS NOT TRUE;
+----+
| c  |
+----+
| -1 |
| -1 |
| -1 |
| 0  |
| 0  |
| 0  |
| 1  |
| 1  |
| 1  |
+----+
(9 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A2_B27_C9 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest), unnest(mv_to_array(c_mv_num)) AS u(c)
WHERE c_long IN (0,
                 1,
                 2) IS TRUE
  AND c_long IN (3,
                 4) IS NOT TRUE
  AND c IN ('',
            'my_null',
            'my_empty',
            '1',
            '-1',
            '0',
            '999',
            999) IS TRUE
  AND c IN ('[2]',
            '[3, [4, 5]]',
            '2',
            '3',
            '999',
            999) IS NOT TRUE;
+----+
| c  |
+----+
| -1 |
| -1 |
| -1 |
| 0  |
| 0  |
| 0  |
| 1  |
| 1  |
| 1  |
+----+
(9 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A2_B28_C1 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM test_unnest,
     unnest(mv_to_array(c_mv_num)) AS u(c)
WHERE c_long IN (0,
                 1,
                 2) IS NOT FALSE
  AND c_long IN (3,
                 4) IS FALSE
  AND c IN ('',
            'my_null',
            'my_empty',
            '1',
            '-1',
            '0',
            '999',
            999) IS NOT FALSE
  AND c IN ('[2]',
            '[3, [4, 5]]',
            '2',
            '3',
            '999',
            999) IS FALSE;
+----+
| c  |
+----+
| -1 |
| -1 |
| -1 |
| 0  |
| 0  |
| 0  |
| 1  |
| 1  |
| 1  |
+----+
(9 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A2_B28_C3 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest,
        unnest(mv_to_array(c_mv_num)) AS u(c)
   WHERE c_long IN (0,
                    1,
                    2) IS NOT FALSE
     AND c_long IN (3,
                    4) IS FALSE
     AND c IN ('',
               'my_null',
               'my_empty',
               '1',
               '-1',
               '0',
               '999',
               999) IS NOT FALSE
     AND c IN ('[2]',
               '[3, [4, 5]]',
               '2',
               '3',
               '999',
               999) IS FALSE);
+----+
| c  |
+----+
| -1 |
| -1 |
| -1 |
| 0  |
| 0  |
| 0  |
| 1  |
| 1  |
| 1  |
+----+
(9 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A2_B28_C5 TYPE: NEGATIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest
   WHERE c_long IN (0,
                    1,
                    2) IS NOT FALSE
     AND c_long IN (3,
                    4) IS FALSE
     AND c IN ('',
               'my_null',
               'my_empty',
               '1',
               '-1',
               '0',
               '999',
               999) IS NOT FALSE
     AND c IN ('[2]',
               '[3, [4, 5]]',
               '2',
               '3',
               '999',
               999) IS FALSE), unnest(mv_to_array(c_mv_num)) AS u(c);
QueryInterruptedException
!error

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A2_B28_C7 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest,
        unnest(mv_to_array(c_mv_num)) AS u(c))
WHERE c_long IN (0,
                 1,
                 2) IS NOT FALSE
  AND c_long IN (3,
                 4) IS FALSE
  AND c IN ('',
            'my_null',
            'my_empty',
            '1',
            '-1',
            '0',
            '999',
            999) IS NOT FALSE
  AND c IN ('[2]',
            '[3, [4, 5]]',
            '2',
            '3',
            '999',
            999) IS FALSE;
+----+
| c  |
+----+
| -1 |
| -1 |
| -1 |
| 0  |
| 0  |
| 0  |
| 1  |
| 1  |
| 1  |
+----+
(9 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A2_B28_C9 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest), unnest(mv_to_array(c_mv_num)) AS u(c)
WHERE c_long IN (0,
                 1,
                 2) IS NOT FALSE
  AND c_long IN (3,
                 4) IS FALSE
  AND c IN ('',
            'my_null',
            'my_empty',
            '1',
            '-1',
            '0',
            '999',
            999) IS NOT FALSE
  AND c IN ('[2]',
            '[3, [4, 5]]',
            '2',
            '3',
            '999',
            999) IS FALSE;
+----+
| c  |
+----+
| -1 |
| -1 |
| -1 |
| 0  |
| 0  |
| 0  |
| 1  |
| 1  |
| 1  |
+----+
(9 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A2_B29_C1 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM test_unnest,
     unnest(mv_to_array(c_mv_num)) AS u(c)
WHERE (c_long BETWEEN 0 AND 2)
  AND (c_long NOT BETWEEN 3 AND 4)
  AND (c BETWEEN '1' AND '2')
  AND (c NOT BETWEEN '3' AND '4');
+---+
| c |
+---+
| 1 |
| 1 |
| 1 |
| 2 |
| 2 |
| 2 |
+---+
(6 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A2_B29_C3 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest,
        unnest(mv_to_array(c_mv_num)) AS u(c)
   WHERE (c_long BETWEEN 0 AND 2)
     AND (c_long NOT BETWEEN 3 AND 4)
     AND (c BETWEEN '1' AND '2')
     AND (c NOT BETWEEN '3' AND '4'));
+---+
| c |
+---+
| 1 |
| 1 |
| 1 |
| 2 |
| 2 |
| 2 |
+---+
(6 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A2_B29_C5 TYPE: NEGATIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest
   WHERE (c_long BETWEEN 0 AND 2)
     AND (c_long NOT BETWEEN 3 AND 4)
     AND (c BETWEEN '1' AND '2')
     AND (c NOT BETWEEN '3' AND '4')), unnest(mv_to_array(c_mv_num)) AS u(c);
QueryInterruptedException
!error

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A2_B29_C7 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest,
        unnest(mv_to_array(c_mv_num)) AS u(c))
WHERE (c_long BETWEEN 0 AND 2)
  AND (c_long NOT BETWEEN 3 AND 4)
  AND (c BETWEEN '1' AND '2')
  AND (c NOT BETWEEN '3' AND '4');
+---+
| c |
+---+
| 1 |
| 1 |
| 1 |
| 2 |
| 2 |
| 2 |
+---+
(6 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A2_B29_C9 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest), unnest(mv_to_array(c_mv_num)) AS u(c)
WHERE (c_long BETWEEN 0 AND 2)
  AND (c_long NOT BETWEEN 3 AND 4)
  AND (c BETWEEN '1' AND '2')
  AND (c NOT BETWEEN '3' AND '4');
+---+
| c |
+---+
| 1 |
| 1 |
| 1 |
| 2 |
| 2 |
| 2 |
+---+
(6 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A2_B30_C1 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM test_unnest,
     unnest(mv_to_array(c_mv_num)) AS u(c)
WHERE (c_str like '%2')
  AND (c_str not like '%3')
  AND (c like '1%')
  AND (c not like '3%');
+---+
| c |
+---+
| 1 |
+---+
(1 row)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A2_B30_C3 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest,
        unnest(mv_to_array(c_mv_num)) AS u(c)
   WHERE (c_str like '%2')
     AND (c_str not like '%3')
     AND (c like '1%')
     AND (c not like '3%'));
+---+
| c |
+---+
| 1 |
+---+
(1 row)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A2_B30_C5 TYPE: NEGATIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest
   WHERE (c_str like '%2')
     AND (c_str not like '%3')
     AND (c like '1%')
     AND (c not like '3%')), unnest(mv_to_array(c_mv_num)) AS u(c);
QueryInterruptedException
!error

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A2_B30_C7 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest,
        unnest(mv_to_array(c_mv_num)) AS u(c))
WHERE (c_str like '%2')
  AND (c_str not like '%3')
  AND (c like '1%')
  AND (c not like '3%');
+---+
| c |
+---+
| 1 |
+---+
(1 row)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A2_B30_C9 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest), unnest(mv_to_array(c_mv_num)) AS u(c)
WHERE (c_str like '%2')
  AND (c_str not like '%3')
  AND (c like '1%')
  AND (c not like '3%');
+---+
| c |
+---+
| 1 |
+---+
(1 row)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A2_B31_C1 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM test_unnest,
     unnest(mv_to_array(c_mv_num)) AS u(c)
WHERE c_long IN (0,
                 1,
                 2)
  AND c_long NOT IN (3,
                     4)
  AND c IN ('',
            'my_null',
            'my_empty',
            '1',
            '-1',
            '0',
            '999',
            999)
  AND c NOT IN ('[2]',
                '[3, [4, 5]]',
                '2',
                '3',
                '999',
                999);
+----+
| c  |
+----+
| -1 |
| -1 |
| -1 |
| 0  |
| 0  |
| 0  |
| 1  |
| 1  |
| 1  |
+----+
(9 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A2_B31_C3 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest,
        unnest(mv_to_array(c_mv_num)) AS u(c)
   WHERE c_long IN (0,
                    1,
                    2)
     AND c_long NOT IN (3,
                        4)
     AND c IN ('',
               'my_null',
               'my_empty',
               '1',
               '-1',
               '0',
               '999',
               999)
     AND c NOT IN ('[2]',
                   '[3, [4, 5]]',
                   '2',
                   '3',
                   '999',
                   999));
+----+
| c  |
+----+
| -1 |
| -1 |
| -1 |
| 0  |
| 0  |
| 0  |
| 1  |
| 1  |
| 1  |
+----+
(9 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A2_B31_C5 TYPE: NEGATIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest
   WHERE c_long IN (0,
                    1,
                    2)
     AND c_long NOT IN (3,
                        4)
     AND c IN ('',
               'my_null',
               'my_empty',
               '1',
               '-1',
               '0',
               '999',
               999)
     AND c NOT IN ('[2]',
                   '[3, [4, 5]]',
                   '2',
                   '3',
                   '999',
                   999)), unnest(mv_to_array(c_mv_num)) AS u(c);
QueryInterruptedException
!error

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A2_B31_C7 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest,
        unnest(mv_to_array(c_mv_num)) AS u(c))
WHERE c_long IN (0,
                 1,
                 2)
  AND c_long NOT IN (3,
                     4)
  AND c IN ('',
            'my_null',
            'my_empty',
            '1',
            '-1',
            '0',
            '999',
            999)
  AND c NOT IN ('[2]',
                '[3, [4, 5]]',
                '2',
                '3',
                '999',
                999);
+----+
| c  |
+----+
| -1 |
| -1 |
| -1 |
| 0  |
| 0  |
| 0  |
| 1  |
| 1  |
| 1  |
+----+
(9 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A2_B31_C9 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest), unnest(mv_to_array(c_mv_num)) AS u(c)
WHERE c_long IN (0,
                 1,
                 2)
  AND c_long NOT IN (3,
                     4)
  AND c IN ('',
            'my_null',
            'my_empty',
            '1',
            '-1',
            '0',
            '999',
            999)
  AND c NOT IN ('[2]',
                '[3, [4, 5]]',
                '2',
                '3',
                '999',
                999);
+----+
| c  |
+----+
| -1 |
| -1 |
| -1 |
| 0  |
| 0  |
| 0  |
| 1  |
| 1  |
| 1  |
+----+
(9 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A2_B32_C1 TYPE: NEGATIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM test_unnest,
     unnest(mv_to_array(c_mv_num)) AS u(c)
WHERE c_long IN
    (SELECT col
     FROM (
           VALUES(0),(1),(2)) AS t(col))
  AND c_long NOT IN
    (SELECT col
     FROM (
           VALUES(3),(4)) AS t(col))
  AND c IN
    (SELECT col
     FROM (
           VALUES(''),('my_null'),('my_empty'),('1'),('-1'),('0'),('999')) AS t(col))
  AND c NOT IN
    (SELECT col
     FROM (
           VALUES('[2]'),('[3, [4, 5]]'),('2'),('3'),('999')) AS t(col));
Unhandled Query Planning Failure
!error

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A2_B32_C3 TYPE: NEGATIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest,
        unnest(mv_to_array(c_mv_num)) AS u(c)
   WHERE c_long IN
       (SELECT col
        FROM (
              VALUES(0),(1),(2)) AS t(col))
     AND c_long NOT IN
       (SELECT col
        FROM (
              VALUES(3),(4)) AS t(col))
     AND c IN
       (SELECT col
        FROM (
              VALUES(''),('my_null'),('my_empty'),('1'),('-1'),('0'),('999')) AS t(col))
     AND c NOT IN
       (SELECT col
        FROM (
              VALUES('[2]'),('[3, [4, 5]]'),('2'),('3'),('999')) AS t(col)));
Unhandled Query Planning Failure
!error

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A2_B32_C5 TYPE: NEGATIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest
   WHERE c_long IN
       (SELECT col
        FROM (
              VALUES(0),(1),(2)) AS t(col))
     AND c_long NOT IN
       (SELECT col
        FROM (
              VALUES(3),(4)) AS t(col))
     AND c IN
       (SELECT col
        FROM (
              VALUES(''),('my_null'),('my_empty'),('1'),('-1'),('0'),('999')) AS t(col))
     AND c NOT IN
       (SELECT col
        FROM (
              VALUES('[2]'),('[3, [4, 5]]'),('2'),('3'),('999')) AS t(col))), unnest(mv_to_array(c_mv_num)) AS u(c);
QueryInterruptedException
!error

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A2_B32_C7 TYPE: NEGATIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest,
        unnest(mv_to_array(c_mv_num)) AS u(c))
WHERE c_long IN
    (SELECT col
     FROM (
           VALUES(0),(1),(2)) AS t(col))
  AND c_long NOT IN
    (SELECT col
     FROM (
           VALUES(3),(4)) AS t(col))
  AND c IN
    (SELECT col
     FROM (
           VALUES(''),('my_null'),('my_empty'),('1'),('-1'),('0'),('999')) AS t(col))
  AND c NOT IN
    (SELECT col
     FROM (
           VALUES('[2]'),('[3, [4, 5]]'),('2'),('3'),('999')) AS t(col));
Unhandled Query Planning Failure
!error

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A2_B32_C9 TYPE: NEGATIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest), unnest(mv_to_array(c_mv_num)) AS u(c)
WHERE c_long IN
    (SELECT col
     FROM (
           VALUES(0),(1),(2)) AS t(col))
  AND c_long NOT IN
    (SELECT col
     FROM (
           VALUES(3),(4)) AS t(col))
  AND c IN
    (SELECT col
     FROM (
           VALUES(''),('my_null'),('my_empty'),('1'),('-1'),('0'),('999')) AS t(col))
  AND c NOT IN
    (SELECT col
     FROM (
           VALUES('[2]'),('[3, [4, 5]]'),('2'),('3'),('999')) AS t(col));
Unhandled Query Planning Failure
!error

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A2_B33_C1 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM test_unnest,
     unnest(mv_to_array(c_mv_num)) AS u(c)
WHERE c_long=1;
+----+
| c  |
+----+
| -1 |
| 0  |
| 1  |
| 2  |
| 3  |
+----+
(5 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A2_B33_C3 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest,
        unnest(mv_to_array(c_mv_num)) AS u(c)
   WHERE c_long=1);
+----+
| c  |
+----+
| -1 |
| 0  |
| 1  |
| 2  |
| 3  |
+----+
(5 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A2_B33_C5 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest
   WHERE c_long=1), unnest(mv_to_array(c_mv_num)) AS u(c);
+----+
| c  |
+----+
| -1 |
| 0  |
| 1  |
| 2  |
| 3  |
+----+
(5 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A2_B33_C7 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest,
        unnest(mv_to_array(c_mv_num)) AS u(c))
WHERE c_long=1;
+----+
| c  |
+----+
| -1 |
| 0  |
| 1  |
| 2  |
| 3  |
+----+
(5 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A2_B33_C9 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest), unnest(mv_to_array(c_mv_num)) AS u(c)
WHERE c_long=1;
+----+
| c  |
+----+
| -1 |
| 0  |
| 1  |
| 2  |
| 3  |
+----+
(5 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A2_B34_C1 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM test_unnest,
     unnest(mv_to_array(c_mv_num)) AS u(c)
WHERE c_long<>1;
+----+
| c  |
+----+
| -1 |
| -1 |
| -1 |
| -1 |
| 0  |
| 0  |
| 0  |
| 0  |
| 1  |
| 1  |
| 1  |
| 1  |
| 2  |
| 2  |
| 2  |
| 2  |
| 3  |
| 3  |
| 3  |
| 3  |
+----+
(20 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A2_B34_C3 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest,
        unnest(mv_to_array(c_mv_num)) AS u(c)
   WHERE c_long<>1);
+----+
| c  |
+----+
| -1 |
| -1 |
| -1 |
| -1 |
| 0  |
| 0  |
| 0  |
| 0  |
| 1  |
| 1  |
| 1  |
| 1  |
| 2  |
| 2  |
| 2  |
| 2  |
| 3  |
| 3  |
| 3  |
| 3  |
+----+
(20 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A2_B34_C5 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest
   WHERE c_long<>1), unnest(mv_to_array(c_mv_num)) AS u(c);
+----+
| c  |
+----+
| -1 |
| -1 |
| -1 |
| -1 |
| 0  |
| 0  |
| 0  |
| 0  |
| 1  |
| 1  |
| 1  |
| 1  |
| 2  |
| 2  |
| 2  |
| 2  |
| 3  |
| 3  |
| 3  |
| 3  |
+----+
(20 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A2_B34_C7 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest,
        unnest(mv_to_array(c_mv_num)) AS u(c))
WHERE c_long<>1;
+----+
| c  |
+----+
| -1 |
| -1 |
| -1 |
| -1 |
| 0  |
| 0  |
| 0  |
| 0  |
| 1  |
| 1  |
| 1  |
| 1  |
| 2  |
| 2  |
| 2  |
| 2  |
| 3  |
| 3  |
| 3  |
| 3  |
+----+
(20 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A2_B34_C9 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest), unnest(mv_to_array(c_mv_num)) AS u(c)
WHERE c_long<>1;
+----+
| c  |
+----+
| -1 |
| -1 |
| -1 |
| -1 |
| 0  |
| 0  |
| 0  |
| 0  |
| 1  |
| 1  |
| 1  |
| 1  |
| 2  |
| 2  |
| 2  |
| 2  |
| 3  |
| 3  |
| 3  |
| 3  |
+----+
(20 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A2_B35_C1 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM test_unnest,
     unnest(mv_to_array(c_mv_num)) AS u(c)
WHERE c_long>1;
+----+
| c  |
+----+
| -1 |
| -1 |
| -1 |
| 0  |
| 0  |
| 0  |
| 1  |
| 1  |
| 1  |
| 2  |
| 2  |
| 2  |
| 3  |
| 3  |
| 3  |
+----+
(15 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A2_B35_C3 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest,
        unnest(mv_to_array(c_mv_num)) AS u(c)
   WHERE c_long>1);
+----+
| c  |
+----+
| -1 |
| -1 |
| -1 |
| 0  |
| 0  |
| 0  |
| 1  |
| 1  |
| 1  |
| 2  |
| 2  |
| 2  |
| 3  |
| 3  |
| 3  |
+----+
(15 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A2_B35_C5 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest
   WHERE c_long>1), unnest(mv_to_array(c_mv_num)) AS u(c);
+----+
| c  |
+----+
| -1 |
| -1 |
| -1 |
| 0  |
| 0  |
| 0  |
| 1  |
| 1  |
| 1  |
| 2  |
| 2  |
| 2  |
| 3  |
| 3  |
| 3  |
+----+
(15 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A2_B35_C7 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest,
        unnest(mv_to_array(c_mv_num)) AS u(c))
WHERE c_long>1;
+----+
| c  |
+----+
| -1 |
| -1 |
| -1 |
| 0  |
| 0  |
| 0  |
| 1  |
| 1  |
| 1  |
| 2  |
| 2  |
| 2  |
| 3  |
| 3  |
| 3  |
+----+
(15 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A2_B35_C9 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest), unnest(mv_to_array(c_mv_num)) AS u(c)
WHERE c_long>1;
+----+
| c  |
+----+
| -1 |
| -1 |
| -1 |
| 0  |
| 0  |
| 0  |
| 1  |
| 1  |
| 1  |
| 2  |
| 2  |
| 2  |
| 3  |
| 3  |
| 3  |
+----+
(15 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A2_B36_C1 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM test_unnest,
     unnest(mv_to_array(c_mv_num)) AS u(c)
WHERE c_long>=1;
+----+
| c  |
+----+
| -1 |
| -1 |
| -1 |
| -1 |
| 0  |
| 0  |
| 0  |
| 0  |
| 1  |
| 1  |
| 1  |
| 1  |
| 2  |
| 2  |
| 2  |
| 2  |
| 3  |
| 3  |
| 3  |
| 3  |
+----+
(20 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A2_B36_C3 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest,
        unnest(mv_to_array(c_mv_num)) AS u(c)
   WHERE c_long>=1);
+----+
| c  |
+----+
| -1 |
| -1 |
| -1 |
| -1 |
| 0  |
| 0  |
| 0  |
| 0  |
| 1  |
| 1  |
| 1  |
| 1  |
| 2  |
| 2  |
| 2  |
| 2  |
| 3  |
| 3  |
| 3  |
| 3  |
+----+
(20 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A2_B36_C5 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest
   WHERE c_long>=1), unnest(mv_to_array(c_mv_num)) AS u(c);
+----+
| c  |
+----+
| -1 |
| -1 |
| -1 |
| -1 |
| 0  |
| 0  |
| 0  |
| 0  |
| 1  |
| 1  |
| 1  |
| 1  |
| 2  |
| 2  |
| 2  |
| 2  |
| 3  |
| 3  |
| 3  |
| 3  |
+----+
(20 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A2_B36_C7 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest,
        unnest(mv_to_array(c_mv_num)) AS u(c))
WHERE c_long>=1;
+----+
| c  |
+----+
| -1 |
| -1 |
| -1 |
| -1 |
| 0  |
| 0  |
| 0  |
| 0  |
| 1  |
| 1  |
| 1  |
| 1  |
| 2  |
| 2  |
| 2  |
| 2  |
| 3  |
| 3  |
| 3  |
| 3  |
+----+
(20 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A2_B36_C9 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest), unnest(mv_to_array(c_mv_num)) AS u(c)
WHERE c_long>=1;
+----+
| c  |
+----+
| -1 |
| -1 |
| -1 |
| -1 |
| 0  |
| 0  |
| 0  |
| 0  |
| 1  |
| 1  |
| 1  |
| 1  |
| 2  |
| 2  |
| 2  |
| 2  |
| 3  |
| 3  |
| 3  |
| 3  |
+----+
(20 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A2_B37_C1 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM test_unnest,
     unnest(mv_to_array(c_mv_num)) AS u(c)
WHERE c_long<1;
+----+
| c  |
+----+
| -1 |
| 0  |
| 1  |
| 2  |
| 3  |
+----+
(5 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A2_B37_C3 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest,
        unnest(mv_to_array(c_mv_num)) AS u(c)
   WHERE c_long<1);
+----+
| c  |
+----+
| -1 |
| 0  |
| 1  |
| 2  |
| 3  |
+----+
(5 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A2_B37_C5 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest
   WHERE c_long<1), unnest(mv_to_array(c_mv_num)) AS u(c);
+----+
| c  |
+----+
| -1 |
| 0  |
| 1  |
| 2  |
| 3  |
+----+
(5 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A2_B37_C7 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest,
        unnest(mv_to_array(c_mv_num)) AS u(c))
WHERE c_long<1;
+----+
| c  |
+----+
| -1 |
| 0  |
| 1  |
| 2  |
| 3  |
+----+
(5 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A2_B37_C9 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest), unnest(mv_to_array(c_mv_num)) AS u(c)
WHERE c_long<1;
+----+
| c  |
+----+
| -1 |
| 0  |
| 1  |
| 2  |
| 3  |
+----+
(5 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A2_B38_C1 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM test_unnest,
     unnest(mv_to_array(c_mv_num)) AS u(c)
WHERE c_long<=1;
+----+
| c  |
+----+
| -1 |
| -1 |
| 0  |
| 0  |
| 1  |
| 1  |
| 2  |
| 2  |
| 3  |
| 3  |
+----+
(10 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A2_B38_C3 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest,
        unnest(mv_to_array(c_mv_num)) AS u(c)
   WHERE c_long<=1);
+----+
| c  |
+----+
| -1 |
| -1 |
| 0  |
| 0  |
| 1  |
| 1  |
| 2  |
| 2  |
| 3  |
| 3  |
+----+
(10 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A2_B38_C5 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest
   WHERE c_long<=1), unnest(mv_to_array(c_mv_num)) AS u(c);
+----+
| c  |
+----+
| -1 |
| -1 |
| 0  |
| 0  |
| 1  |
| 1  |
| 2  |
| 2  |
| 3  |
| 3  |
+----+
(10 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A2_B38_C7 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest,
        unnest(mv_to_array(c_mv_num)) AS u(c))
WHERE c_long<=1;
+----+
| c  |
+----+
| -1 |
| -1 |
| 0  |
| 0  |
| 1  |
| 1  |
| 2  |
| 2  |
| 3  |
| 3  |
+----+
(10 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A2_B38_C9 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest), unnest(mv_to_array(c_mv_num)) AS u(c)
WHERE c_long<=1;
+----+
| c  |
+----+
| -1 |
| -1 |
| 0  |
| 0  |
| 1  |
| 1  |
| 2  |
| 2  |
| 3  |
| 3  |
+----+
(10 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A2_B39_C1 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM test_unnest,
     unnest(mv_to_array(c_mv_num)) AS u(c)
WHERE (NOT c_str<>''
       OR NOT c_str<>'str2'
       OR NOT c_long<>0
       OR NOT c_long<>1
       OR NOT c_long<>2
       OR NOT c_long<>999)
  AND (NOT c_str='str3'
       OR NOT c_str='str4'
       OR NOT c_long=3
       OR NOT c_long=4
       OR NOT c_long=999);
+----+
| c  |
+----+
| -1 |
| -1 |
| -1 |
| 0  |
| 0  |
| 0  |
| 1  |
| 1  |
| 1  |
| 2  |
| 2  |
| 2  |
| 3  |
| 3  |
| 3  |
+----+
(15 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A2_B39_C3 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest,
        unnest(mv_to_array(c_mv_num)) AS u(c)
   WHERE (NOT c_str<>''
          OR NOT c_str<>'str2'
          OR NOT c_long<>0
          OR NOT c_long<>1
          OR NOT c_long<>2
          OR NOT c_long<>999)
     AND (NOT c_str='str3'
          OR NOT c_str='str4'
          OR NOT c_long=3
          OR NOT c_long=4
          OR NOT c_long=999));
+----+
| c  |
+----+
| -1 |
| -1 |
| -1 |
| 0  |
| 0  |
| 0  |
| 1  |
| 1  |
| 1  |
| 2  |
| 2  |
| 2  |
| 3  |
| 3  |
| 3  |
+----+
(15 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A2_B39_C5 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest
   WHERE (NOT c_str<>''
          OR NOT c_str<>'str2'
          OR NOT c_long<>0
          OR NOT c_long<>1
          OR NOT c_long<>2
          OR NOT c_long<>999)
     AND (NOT c_str='str3'
          OR NOT c_str='str4'
          OR NOT c_long=3
          OR NOT c_long=4
          OR NOT c_long=999)), unnest(mv_to_array(c_mv_num)) AS u(c);
+----+
| c  |
+----+
| -1 |
| -1 |
| -1 |
| 0  |
| 0  |
| 0  |
| 1  |
| 1  |
| 1  |
| 2  |
| 2  |
| 2  |
| 3  |
| 3  |
| 3  |
+----+
(15 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A2_B39_C7 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest,
        unnest(mv_to_array(c_mv_num)) AS u(c))
WHERE (NOT c_str<>''
       OR NOT c_str<>'str2'
       OR NOT c_long<>0
       OR NOT c_long<>1
       OR NOT c_long<>2
       OR NOT c_long<>999)
  AND (NOT c_str='str3'
       OR NOT c_str='str4'
       OR NOT c_long=3
       OR NOT c_long=4
       OR NOT c_long=999);
+----+
| c  |
+----+
| -1 |
| -1 |
| -1 |
| 0  |
| 0  |
| 0  |
| 1  |
| 1  |
| 1  |
| 2  |
| 2  |
| 2  |
| 3  |
| 3  |
| 3  |
+----+
(15 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A2_B39_C9 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest), unnest(mv_to_array(c_mv_num)) AS u(c)
WHERE (NOT c_str<>''
       OR NOT c_str<>'str2'
       OR NOT c_long<>0
       OR NOT c_long<>1
       OR NOT c_long<>2
       OR NOT c_long<>999)
  AND (NOT c_str='str3'
       OR NOT c_str='str4'
       OR NOT c_long=3
       OR NOT c_long=4
       OR NOT c_long=999);
+----+
| c  |
+----+
| -1 |
| -1 |
| -1 |
| 0  |
| 0  |
| 0  |
| 1  |
| 1  |
| 1  |
| 2  |
| 2  |
| 2  |
| 3  |
| 3  |
| 3  |
+----+
(15 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A2_B40_C1 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM test_unnest,
     unnest(mv_to_array(c_mv_num)) AS u(c)
WHERE (c_str=''
       OR c_str='str2'
       OR c_long=0
       OR c_long=1
       OR c_long=2
       OR c_long=999)
  AND NOT c_str='str3'
  AND NOT c_str='str4'
  AND NOT c_long=3
  AND NOT c_long=4
  AND NOT c_long=999;
+----+
| c  |
+----+
| -1 |
| -1 |
| 0  |
| 0  |
| 1  |
| 1  |
| 2  |
| 2  |
| 3  |
| 3  |
+----+
(10 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A2_B40_C3 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest,
        unnest(mv_to_array(c_mv_num)) AS u(c)
   WHERE (c_str=''
          OR c_str='str2'
          OR c_long=0
          OR c_long=1
          OR c_long=2
          OR c_long=999)
     AND NOT c_str='str3'
     AND NOT c_str='str4'
     AND NOT c_long=3
     AND NOT c_long=4
     AND NOT c_long=999);
+----+
| c  |
+----+
| -1 |
| -1 |
| 0  |
| 0  |
| 1  |
| 1  |
| 2  |
| 2  |
| 3  |
| 3  |
+----+
(10 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A2_B40_C5 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest
   WHERE (c_str=''
          OR c_str='str2'
          OR c_long=0
          OR c_long=1
          OR c_long=2
          OR c_long=999)
     AND NOT c_str='str3'
     AND NOT c_str='str4'
     AND NOT c_long=3
     AND NOT c_long=4
     AND NOT c_long=999), unnest(mv_to_array(c_mv_num)) AS u(c);
+----+
| c  |
+----+
| -1 |
| -1 |
| 0  |
| 0  |
| 1  |
| 1  |
| 2  |
| 2  |
| 3  |
| 3  |
+----+
(10 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A2_B40_C7 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest,
        unnest(mv_to_array(c_mv_num)) AS u(c))
WHERE (c_str=''
       OR c_str='str2'
       OR c_long=0
       OR c_long=1
       OR c_long=2
       OR c_long=999)
  AND NOT c_str='str3'
  AND NOT c_str='str4'
  AND NOT c_long=3
  AND NOT c_long=4
  AND NOT c_long=999;
+----+
| c  |
+----+
| -1 |
| -1 |
| 0  |
| 0  |
| 1  |
| 1  |
| 2  |
| 2  |
| 3  |
| 3  |
+----+
(10 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A2_B40_C9 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest), unnest(mv_to_array(c_mv_num)) AS u(c)
WHERE (c_str=''
       OR c_str='str2'
       OR c_long=0
       OR c_long=1
       OR c_long=2
       OR c_long=999)
  AND NOT c_str='str3'
  AND NOT c_str='str4'
  AND NOT c_long=3
  AND NOT c_long=4
  AND NOT c_long=999;
+----+
| c  |
+----+
| -1 |
| -1 |
| 0  |
| 0  |
| 1  |
| 1  |
| 2  |
| 2  |
| 3  |
| 3  |
+----+
(10 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A2_B41_C1 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM test_unnest,
     unnest(mv_to_array(c_mv_num)) AS u(c)
WHERE c_str IS NULL;
+----+
| c  |
+----+
| -1 |
| 0  |
| 1  |
| 2  |
| 3  |
+----+
(5 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A2_B41_C3 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest,
        unnest(mv_to_array(c_mv_num)) AS u(c)
   WHERE c_str IS NULL);
+----+
| c  |
+----+
| -1 |
| 0  |
| 1  |
| 2  |
| 3  |
+----+
(5 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A2_B41_C5 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest
   WHERE c_str IS NULL), unnest(mv_to_array(c_mv_num)) AS u(c);
+----+
| c  |
+----+
| -1 |
| 0  |
| 1  |
| 2  |
| 3  |
+----+
(5 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A2_B41_C7 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest,
        unnest(mv_to_array(c_mv_num)) AS u(c))
WHERE c_str IS NULL;
+----+
| c  |
+----+
| -1 |
| 0  |
| 1  |
| 2  |
| 3  |
+----+
(5 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A2_B41_C9 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest), unnest(mv_to_array(c_mv_num)) AS u(c)
WHERE c_str IS NULL;
+----+
| c  |
+----+
| -1 |
| 0  |
| 1  |
| 2  |
| 3  |
+----+
(5 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A2_B42_C1 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM test_unnest,
     unnest(mv_to_array(c_mv_num)) AS u(c)
WHERE c_str IS NOT NULL;
+----+
| c  |
+----+
| -1 |
| -1 |
| -1 |
| -1 |
| 0  |
| 0  |
| 0  |
| 0  |
| 1  |
| 1  |
| 1  |
| 1  |
| 2  |
| 2  |
| 2  |
| 2  |
| 3  |
| 3  |
| 3  |
| 3  |
+----+
(20 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A2_B42_C3 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest,
        unnest(mv_to_array(c_mv_num)) AS u(c)
   WHERE c_str IS NOT NULL);
+----+
| c  |
+----+
| -1 |
| -1 |
| -1 |
| -1 |
| 0  |
| 0  |
| 0  |
| 0  |
| 1  |
| 1  |
| 1  |
| 1  |
| 2  |
| 2  |
| 2  |
| 2  |
| 3  |
| 3  |
| 3  |
| 3  |
+----+
(20 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A2_B42_C5 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest
   WHERE c_str IS NOT NULL), unnest(mv_to_array(c_mv_num)) AS u(c);
+----+
| c  |
+----+
| -1 |
| -1 |
| -1 |
| -1 |
| 0  |
| 0  |
| 0  |
| 0  |
| 1  |
| 1  |
| 1  |
| 1  |
| 2  |
| 2  |
| 2  |
| 2  |
| 3  |
| 3  |
| 3  |
| 3  |
+----+
(20 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A2_B42_C7 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest,
        unnest(mv_to_array(c_mv_num)) AS u(c))
WHERE c_str IS NOT NULL;
+----+
| c  |
+----+
| -1 |
| -1 |
| -1 |
| -1 |
| 0  |
| 0  |
| 0  |
| 0  |
| 1  |
| 1  |
| 1  |
| 1  |
| 2  |
| 2  |
| 2  |
| 2  |
| 3  |
| 3  |
| 3  |
| 3  |
+----+
(20 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A2_B42_C9 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest), unnest(mv_to_array(c_mv_num)) AS u(c)
WHERE c_str IS NOT NULL;
+----+
| c  |
+----+
| -1 |
| -1 |
| -1 |
| -1 |
| 0  |
| 0  |
| 0  |
| 0  |
| 1  |
| 1  |
| 1  |
| 1  |
| 2  |
| 2  |
| 2  |
| 2  |
| 3  |
| 3  |
| 3  |
| 3  |
+----+
(20 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A2_B43_C1 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM test_unnest,
     unnest(mv_to_array(c_mv_num)) AS u(c)
WHERE c_str IN ('',
                'str2',
                999) IS TRUE
  AND c_str IN ('str3',
                'str4',
                999) IS NOT TRUE
  AND c_long IN (0,
                 1,
                 2,
                 999) IS TRUE
  AND c_long IN (3,
                 4,
                 999) IS NOT TRUE;
+----+
| c  |
+----+
| -1 |
| -1 |
| 0  |
| 0  |
| 1  |
| 1  |
| 2  |
| 2  |
| 3  |
| 3  |
+----+
(10 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A2_B43_C3 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest,
        unnest(mv_to_array(c_mv_num)) AS u(c)
   WHERE c_str IN ('',
                   'str2',
                   999) IS TRUE
     AND c_str IN ('str3',
                   'str4',
                   999) IS NOT TRUE
     AND c_long IN (0,
                    1,
                    2,
                    999) IS TRUE
     AND c_long IN (3,
                    4,
                    999) IS NOT TRUE);
+----+
| c  |
+----+
| -1 |
| -1 |
| 0  |
| 0  |
| 1  |
| 1  |
| 2  |
| 2  |
| 3  |
| 3  |
+----+
(10 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A2_B43_C5 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest
   WHERE c_str IN ('',
                   'str2',
                   999) IS TRUE
     AND c_str IN ('str3',
                   'str4',
                   999) IS NOT TRUE
     AND c_long IN (0,
                    1,
                    2,
                    999) IS TRUE
     AND c_long IN (3,
                    4,
                    999) IS NOT TRUE), unnest(mv_to_array(c_mv_num)) AS u(c);
+----+
| c  |
+----+
| -1 |
| -1 |
| 0  |
| 0  |
| 1  |
| 1  |
| 2  |
| 2  |
| 3  |
| 3  |
+----+
(10 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A2_B43_C7 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest,
        unnest(mv_to_array(c_mv_num)) AS u(c))
WHERE c_str IN ('',
                'str2',
                999) IS TRUE
  AND c_str IN ('str3',
                'str4',
                999) IS NOT TRUE
  AND c_long IN (0,
                 1,
                 2,
                 999) IS TRUE
  AND c_long IN (3,
                 4,
                 999) IS NOT TRUE;
+----+
| c  |
+----+
| -1 |
| -1 |
| 0  |
| 0  |
| 1  |
| 1  |
| 2  |
| 2  |
| 3  |
| 3  |
+----+
(10 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A2_B43_C9 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest), unnest(mv_to_array(c_mv_num)) AS u(c)
WHERE c_str IN ('',
                'str2',
                999) IS TRUE
  AND c_str IN ('str3',
                'str4',
                999) IS NOT TRUE
  AND c_long IN (0,
                 1,
                 2,
                 999) IS TRUE
  AND c_long IN (3,
                 4,
                 999) IS NOT TRUE;
+----+
| c  |
+----+
| -1 |
| -1 |
| 0  |
| 0  |
| 1  |
| 1  |
| 2  |
| 2  |
| 3  |
| 3  |
+----+
(10 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A2_B44_C1 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM test_unnest,
     unnest(mv_to_array(c_mv_num)) AS u(c)
WHERE c_str IN ('',
                'str2',
                999) IS NOT FALSE
  AND c_str IN ('str3',
                'str4',
                999) IS FALSE
  AND c_long IN (0,
                 1,
                 2,
                 999) IS NOT FALSE
  AND c_long IN (3,
                 4,
                 999) IS FALSE;
+----+
| c  |
+----+
| -1 |
| -1 |
| 0  |
| 0  |
| 1  |
| 1  |
| 2  |
| 2  |
| 3  |
| 3  |
+----+
(10 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A2_B44_C3 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest,
        unnest(mv_to_array(c_mv_num)) AS u(c)
   WHERE c_str IN ('',
                   'str2',
                   999) IS NOT FALSE
     AND c_str IN ('str3',
                   'str4',
                   999) IS FALSE
     AND c_long IN (0,
                    1,
                    2,
                    999) IS NOT FALSE
     AND c_long IN (3,
                    4,
                    999) IS FALSE);
+----+
| c  |
+----+
| -1 |
| -1 |
| 0  |
| 0  |
| 1  |
| 1  |
| 2  |
| 2  |
| 3  |
| 3  |
+----+
(10 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A2_B44_C5 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest
   WHERE c_str IN ('',
                   'str2',
                   999) IS NOT FALSE
     AND c_str IN ('str3',
                   'str4',
                   999) IS FALSE
     AND c_long IN (0,
                    1,
                    2,
                    999) IS NOT FALSE
     AND c_long IN (3,
                    4,
                    999) IS FALSE), unnest(mv_to_array(c_mv_num)) AS u(c);
+----+
| c  |
+----+
| -1 |
| -1 |
| 0  |
| 0  |
| 1  |
| 1  |
| 2  |
| 2  |
| 3  |
| 3  |
+----+
(10 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A2_B44_C7 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest,
        unnest(mv_to_array(c_mv_num)) AS u(c))
WHERE c_str IN ('',
                'str2',
                999) IS NOT FALSE
  AND c_str IN ('str3',
                'str4',
                999) IS FALSE
  AND c_long IN (0,
                 1,
                 2,
                 999) IS NOT FALSE
  AND c_long IN (3,
                 4,
                 999) IS FALSE;
+----+
| c  |
+----+
| -1 |
| -1 |
| 0  |
| 0  |
| 1  |
| 1  |
| 2  |
| 2  |
| 3  |
| 3  |
+----+
(10 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A2_B44_C9 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest), unnest(mv_to_array(c_mv_num)) AS u(c)
WHERE c_str IN ('',
                'str2',
                999) IS NOT FALSE
  AND c_str IN ('str3',
                'str4',
                999) IS FALSE
  AND c_long IN (0,
                 1,
                 2,
                 999) IS NOT FALSE
  AND c_long IN (3,
                 4,
                 999) IS FALSE;
+----+
| c  |
+----+
| -1 |
| -1 |
| 0  |
| 0  |
| 1  |
| 1  |
| 2  |
| 2  |
| 3  |
| 3  |
+----+
(10 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A2_B45_C1 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM test_unnest,
     unnest(mv_to_array(c_mv_num)) AS u(c)
WHERE (c_long BETWEEN 0 AND 2)
  AND (c_long NOT BETWEEN 3 AND 4);
+----+
| c  |
+----+
| -1 |
| -1 |
| -1 |
| 0  |
| 0  |
| 0  |
| 1  |
| 1  |
| 1  |
| 2  |
| 2  |
| 2  |
| 3  |
| 3  |
| 3  |
+----+
(15 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A2_B45_C3 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest,
        unnest(mv_to_array(c_mv_num)) AS u(c)
   WHERE (c_long BETWEEN 0 AND 2)
     AND (c_long NOT BETWEEN 3 AND 4));
+----+
| c  |
+----+
| -1 |
| -1 |
| -1 |
| 0  |
| 0  |
| 0  |
| 1  |
| 1  |
| 1  |
| 2  |
| 2  |
| 2  |
| 3  |
| 3  |
| 3  |
+----+
(15 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A2_B45_C5 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest
   WHERE (c_long BETWEEN 0 AND 2)
     AND (c_long NOT BETWEEN 3 AND 4)), unnest(mv_to_array(c_mv_num)) AS u(c);
+----+
| c  |
+----+
| -1 |
| -1 |
| -1 |
| 0  |
| 0  |
| 0  |
| 1  |
| 1  |
| 1  |
| 2  |
| 2  |
| 2  |
| 3  |
| 3  |
| 3  |
+----+
(15 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A2_B45_C7 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest,
        unnest(mv_to_array(c_mv_num)) AS u(c))
WHERE (c_long BETWEEN 0 AND 2)
  AND (c_long NOT BETWEEN 3 AND 4);
+----+
| c  |
+----+
| -1 |
| -1 |
| -1 |
| 0  |
| 0  |
| 0  |
| 1  |
| 1  |
| 1  |
| 2  |
| 2  |
| 2  |
| 3  |
| 3  |
| 3  |
+----+
(15 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A2_B45_C9 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest), unnest(mv_to_array(c_mv_num)) AS u(c)
WHERE (c_long BETWEEN 0 AND 2)
  AND (c_long NOT BETWEEN 3 AND 4);
+----+
| c  |
+----+
| -1 |
| -1 |
| -1 |
| 0  |
| 0  |
| 0  |
| 1  |
| 1  |
| 1  |
| 2  |
| 2  |
| 2  |
| 3  |
| 3  |
| 3  |
+----+
(15 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A2_B46_C1 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM test_unnest,
     unnest(mv_to_array(c_mv_num)) AS u(c)
WHERE (c_str like '%2')
  AND (c_str not like '%3')
  AND (c_str not like '%4');
+----+
| c  |
+----+
| -1 |
| 0  |
| 1  |
| 2  |
| 3  |
+----+
(5 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A2_B46_C3 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest,
        unnest(mv_to_array(c_mv_num)) AS u(c)
   WHERE (c_str like '%2')
     AND (c_str not like '%3')
     AND (c_str not like '%4'));
+----+
| c  |
+----+
| -1 |
| 0  |
| 1  |
| 2  |
| 3  |
+----+
(5 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A2_B46_C5 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest
   WHERE (c_str like '%2')
     AND (c_str not like '%3')
     AND (c_str not like '%4')), unnest(mv_to_array(c_mv_num)) AS u(c);
+----+
| c  |
+----+
| -1 |
| 0  |
| 1  |
| 2  |
| 3  |
+----+
(5 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A2_B46_C7 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest,
        unnest(mv_to_array(c_mv_num)) AS u(c))
WHERE (c_str like '%2')
  AND (c_str not like '%3')
  AND (c_str not like '%4');
+----+
| c  |
+----+
| -1 |
| 0  |
| 1  |
| 2  |
| 3  |
+----+
(5 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A2_B46_C9 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest), unnest(mv_to_array(c_mv_num)) AS u(c)
WHERE (c_str like '%2')
  AND (c_str not like '%3')
  AND (c_str not like '%4');
+----+
| c  |
+----+
| -1 |
| 0  |
| 1  |
| 2  |
| 3  |
+----+
(5 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A2_B47_C1 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM test_unnest,
     unnest(mv_to_array(c_mv_num)) AS u(c)
WHERE c_str IN ('',
                'str2',
                999)
  AND c_str NOT IN ('str3',
                    'str4',
                    999)
  AND c_long IN (0,
                 1,
                 2,
                 999)
  AND c_long NOT IN (3,
                     4,
                     999);
+----+
| c  |
+----+
| -1 |
| -1 |
| 0  |
| 0  |
| 1  |
| 1  |
| 2  |
| 2  |
| 3  |
| 3  |
+----+
(10 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A2_B47_C3 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest,
        unnest(mv_to_array(c_mv_num)) AS u(c)
   WHERE c_str IN ('',
                   'str2',
                   999)
     AND c_str NOT IN ('str3',
                       'str4',
                       999)
     AND c_long IN (0,
                    1,
                    2,
                    999)
     AND c_long NOT IN (3,
                        4,
                        999));
+----+
| c  |
+----+
| -1 |
| -1 |
| 0  |
| 0  |
| 1  |
| 1  |
| 2  |
| 2  |
| 3  |
| 3  |
+----+
(10 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A2_B47_C5 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest
   WHERE c_str IN ('',
                   'str2',
                   999)
     AND c_str NOT IN ('str3',
                       'str4',
                       999)
     AND c_long IN (0,
                    1,
                    2,
                    999)
     AND c_long NOT IN (3,
                        4,
                        999)), unnest(mv_to_array(c_mv_num)) AS u(c);
+----+
| c  |
+----+
| -1 |
| -1 |
| 0  |
| 0  |
| 1  |
| 1  |
| 2  |
| 2  |
| 3  |
| 3  |
+----+
(10 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A2_B47_C7 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest,
        unnest(mv_to_array(c_mv_num)) AS u(c))
WHERE c_str IN ('',
                'str2',
                999)
  AND c_str NOT IN ('str3',
                    'str4',
                    999)
  AND c_long IN (0,
                 1,
                 2,
                 999)
  AND c_long NOT IN (3,
                     4,
                     999);
+----+
| c  |
+----+
| -1 |
| -1 |
| 0  |
| 0  |
| 1  |
| 1  |
| 2  |
| 2  |
| 3  |
| 3  |
+----+
(10 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A2_B47_C9 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest), unnest(mv_to_array(c_mv_num)) AS u(c)
WHERE c_str IN ('',
                'str2',
                999)
  AND c_str NOT IN ('str3',
                    'str4',
                    999)
  AND c_long IN (0,
                 1,
                 2,
                 999)
  AND c_long NOT IN (3,
                     4,
                     999);
+----+
| c  |
+----+
| -1 |
| -1 |
| 0  |
| 0  |
| 1  |
| 1  |
| 2  |
| 2  |
| 3  |
| 3  |
+----+
(10 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A2_B48_C1 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM test_unnest,
     unnest(mv_to_array(c_mv_num)) AS u(c)
WHERE c_long IN
    (SELECT col
     FROM (
           VALUES(0),(1),(2),(999)) AS t(col))
  AND c_long NOT IN
    (SELECT col
     FROM (
           VALUES(3),(4),(999)) AS t(col));
+----+
| c  |
+----+
| -1 |
| -1 |
| -1 |
| 0  |
| 0  |
| 0  |
| 1  |
| 1  |
| 1  |
| 2  |
| 2  |
| 2  |
| 3  |
| 3  |
| 3  |
+----+
(15 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A2_B48_C3 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest,
        unnest(mv_to_array(c_mv_num)) AS u(c)
   WHERE c_long IN
       (SELECT col
        FROM (
              VALUES(0),(1),(2),(999)) AS t(col))
     AND c_long NOT IN
       (SELECT col
        FROM (
              VALUES(3),(4),(999)) AS t(col)));
+----+
| c  |
+----+
| -1 |
| -1 |
| -1 |
| 0  |
| 0  |
| 0  |
| 1  |
| 1  |
| 1  |
| 2  |
| 2  |
| 2  |
| 3  |
| 3  |
| 3  |
+----+
(15 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A2_B48_C5 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest
   WHERE c_long IN
       (SELECT col
        FROM (
              VALUES(0),(1),(2),(999)) AS t(col))
     AND c_long NOT IN
       (SELECT col
        FROM (
              VALUES(3),(4),(999)) AS t(col))), unnest(mv_to_array(c_mv_num)) AS u(c);
+----+
| c  |
+----+
| -1 |
| -1 |
| -1 |
| 0  |
| 0  |
| 0  |
| 1  |
| 1  |
| 1  |
| 2  |
| 2  |
| 2  |
| 3  |
| 3  |
| 3  |
+----+
(15 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A2_B48_C7 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest,
        unnest(mv_to_array(c_mv_num)) AS u(c))
WHERE c_long IN
    (SELECT col
     FROM (
           VALUES(0),(1),(2),(999)) AS t(col))
  AND c_long NOT IN
    (SELECT col
     FROM (
           VALUES(3),(4),(999)) AS t(col));
+----+
| c  |
+----+
| -1 |
| -1 |
| -1 |
| 0  |
| 0  |
| 0  |
| 1  |
| 1  |
| 1  |
| 2  |
| 2  |
| 2  |
| 3  |
| 3  |
| 3  |
+----+
(15 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A2_B48_C9 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest), unnest(mv_to_array(c_mv_num)) AS u(c)
WHERE c_long IN
    (SELECT col
     FROM (
           VALUES(0),(1),(2),(999)) AS t(col))
  AND c_long NOT IN
    (SELECT col
     FROM (
           VALUES(3),(4),(999)) AS t(col));
+----+
| c  |
+----+
| -1 |
| -1 |
| -1 |
| 0  |
| 0  |
| 0  |
| 1  |
| 1  |
| 1  |
| 2  |
| 2  |
| 2  |
| 3  |
| 3  |
| 3  |
+----+
(15 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A3_B1_C1 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM test_unnest,
     unnest(mv_to_array(c_mv_complex_with_null_and_empty_val)) AS u(c)
WHERE c='1';
+---+
| c |
+---+
| 1 |
| 1 |
| 1 |
| 1 |
| 1 |
+---+
(5 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A3_B1_C3 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest,
        unnest(mv_to_array(c_mv_complex_with_null_and_empty_val)) AS u(c)
   WHERE c='1');
+---+
| c |
+---+
| 1 |
| 1 |
| 1 |
| 1 |
| 1 |
+---+
(5 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A3_B1_C5 TYPE: NEGATIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest
   WHERE c='1'), unnest(mv_to_array(c_mv_complex_with_null_and_empty_val)) AS u(c);
QueryInterruptedException
!error

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A3_B1_C7 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest,
        unnest(mv_to_array(c_mv_complex_with_null_and_empty_val)) AS u(c))
WHERE c='1';
+---+
| c |
+---+
| 1 |
| 1 |
| 1 |
| 1 |
| 1 |
+---+
(5 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A3_B1_C9 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest), unnest(mv_to_array(c_mv_complex_with_null_and_empty_val)) AS u(c)
WHERE c='1';
+---+
| c |
+---+
| 1 |
| 1 |
| 1 |
| 1 |
| 1 |
+---+
(5 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A3_B2_C1 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM test_unnest,
     unnest(mv_to_array(c_mv_complex_with_null_and_empty_val)) AS u(c)
WHERE c<>'1';
+-------------+
| c           |
+-------------+
|             |
|             |
|             |
|             |
|             |
| [2]         |
| [2]         |
| [2]         |
| [2]         |
| [2]         |
| [3, [4, 5]] |
| [3, [4, 5]] |
| [3, [4, 5]] |
| [3, [4, 5]] |
| [3, [4, 5]] |
+-------------+
(15 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A3_B2_C3 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest,
        unnest(mv_to_array(c_mv_complex_with_null_and_empty_val)) AS u(c)
   WHERE c<>'1');
+-------------+
| c           |
+-------------+
|             |
|             |
|             |
|             |
|             |
| [2]         |
| [2]         |
| [2]         |
| [2]         |
| [2]         |
| [3, [4, 5]] |
| [3, [4, 5]] |
| [3, [4, 5]] |
| [3, [4, 5]] |
| [3, [4, 5]] |
+-------------+
(15 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A3_B2_C5 TYPE: NEGATIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest
   WHERE c<>'1'), unnest(mv_to_array(c_mv_complex_with_null_and_empty_val)) AS u(c);
QueryInterruptedException
!error

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A3_B2_C7 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest,
        unnest(mv_to_array(c_mv_complex_with_null_and_empty_val)) AS u(c))
WHERE c<>'1';
+-------------+
| c           |
+-------------+
|             |
|             |
|             |
|             |
|             |
| [2]         |
| [2]         |
| [2]         |
| [2]         |
| [2]         |
| [3, [4, 5]] |
| [3, [4, 5]] |
| [3, [4, 5]] |
| [3, [4, 5]] |
| [3, [4, 5]] |
+-------------+
(15 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A3_B2_C9 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest), unnest(mv_to_array(c_mv_complex_with_null_and_empty_val)) AS u(c)
WHERE c<>'1';
+-------------+
| c           |
+-------------+
|             |
|             |
|             |
|             |
|             |
| [2]         |
| [2]         |
| [2]         |
| [2]         |
| [2]         |
| [3, [4, 5]] |
| [3, [4, 5]] |
| [3, [4, 5]] |
| [3, [4, 5]] |
| [3, [4, 5]] |
+-------------+
(15 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A3_B3_C1 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM test_unnest,
     unnest(mv_to_array(c_mv_complex_with_null_and_empty_val)) AS u(c)
WHERE c>'1';
+-------------+
| c           |
+-------------+
| [2]         |
| [2]         |
| [2]         |
| [2]         |
| [2]         |
| [3, [4, 5]] |
| [3, [4, 5]] |
| [3, [4, 5]] |
| [3, [4, 5]] |
| [3, [4, 5]] |
+-------------+
(10 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A3_B3_C3 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest,
        unnest(mv_to_array(c_mv_complex_with_null_and_empty_val)) AS u(c)
   WHERE c>'1');
+-------------+
| c           |
+-------------+
| [2]         |
| [2]         |
| [2]         |
| [2]         |
| [2]         |
| [3, [4, 5]] |
| [3, [4, 5]] |
| [3, [4, 5]] |
| [3, [4, 5]] |
| [3, [4, 5]] |
+-------------+
(10 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A3_B3_C5 TYPE: NEGATIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest
   WHERE c>'1'), unnest(mv_to_array(c_mv_complex_with_null_and_empty_val)) AS u(c);
QueryInterruptedException
!error

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A3_B3_C7 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest,
        unnest(mv_to_array(c_mv_complex_with_null_and_empty_val)) AS u(c))
WHERE c>'1';
+-------------+
| c           |
+-------------+
| [2]         |
| [2]         |
| [2]         |
| [2]         |
| [2]         |
| [3, [4, 5]] |
| [3, [4, 5]] |
| [3, [4, 5]] |
| [3, [4, 5]] |
| [3, [4, 5]] |
+-------------+
(10 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A3_B3_C9 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest), unnest(mv_to_array(c_mv_complex_with_null_and_empty_val)) AS u(c)
WHERE c>'1';
+-------------+
| c           |
+-------------+
| [2]         |
| [2]         |
| [2]         |
| [2]         |
| [2]         |
| [3, [4, 5]] |
| [3, [4, 5]] |
| [3, [4, 5]] |
| [3, [4, 5]] |
| [3, [4, 5]] |
+-------------+
(10 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A3_B4_C1 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM test_unnest,
     unnest(mv_to_array(c_mv_complex_with_null_and_empty_val)) AS u(c)
WHERE c>='1';
+-------------+
| c           |
+-------------+
| 1           |
| 1           |
| 1           |
| 1           |
| 1           |
| [2]         |
| [2]         |
| [2]         |
| [2]         |
| [2]         |
| [3, [4, 5]] |
| [3, [4, 5]] |
| [3, [4, 5]] |
| [3, [4, 5]] |
| [3, [4, 5]] |
+-------------+
(15 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A3_B4_C3 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest,
        unnest(mv_to_array(c_mv_complex_with_null_and_empty_val)) AS u(c)
   WHERE c>='1');
+-------------+
| c           |
+-------------+
| 1           |
| 1           |
| 1           |
| 1           |
| 1           |
| [2]         |
| [2]         |
| [2]         |
| [2]         |
| [2]         |
| [3, [4, 5]] |
| [3, [4, 5]] |
| [3, [4, 5]] |
| [3, [4, 5]] |
| [3, [4, 5]] |
+-------------+
(15 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A3_B4_C5 TYPE: NEGATIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest
   WHERE c>='1'), unnest(mv_to_array(c_mv_complex_with_null_and_empty_val)) AS u(c);
QueryInterruptedException
!error

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A3_B4_C7 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest,
        unnest(mv_to_array(c_mv_complex_with_null_and_empty_val)) AS u(c))
WHERE c>='1';
+-------------+
| c           |
+-------------+
| 1           |
| 1           |
| 1           |
| 1           |
| 1           |
| [2]         |
| [2]         |
| [2]         |
| [2]         |
| [2]         |
| [3, [4, 5]] |
| [3, [4, 5]] |
| [3, [4, 5]] |
| [3, [4, 5]] |
| [3, [4, 5]] |
+-------------+
(15 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A3_B4_C9 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest), unnest(mv_to_array(c_mv_complex_with_null_and_empty_val)) AS u(c)
WHERE c>='1';
+-------------+
| c           |
+-------------+
| 1           |
| 1           |
| 1           |
| 1           |
| 1           |
| [2]         |
| [2]         |
| [2]         |
| [2]         |
| [2]         |
| [3, [4, 5]] |
| [3, [4, 5]] |
| [3, [4, 5]] |
| [3, [4, 5]] |
| [3, [4, 5]] |
+-------------+
(15 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A3_B5_C1 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM test_unnest,
     unnest(mv_to_array(c_mv_complex_with_null_and_empty_val)) AS u(c)
WHERE c<'1';
+---+
| c |
+---+
|   |
|   |
|   |
|   |
|   |
+---+
(5 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A3_B5_C3 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest,
        unnest(mv_to_array(c_mv_complex_with_null_and_empty_val)) AS u(c)
   WHERE c<'1');
+---+
| c |
+---+
|   |
|   |
|   |
|   |
|   |
+---+
(5 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A3_B5_C5 TYPE: NEGATIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest
   WHERE c<'1'), unnest(mv_to_array(c_mv_complex_with_null_and_empty_val)) AS u(c);
QueryInterruptedException
!error

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A3_B5_C7 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest,
        unnest(mv_to_array(c_mv_complex_with_null_and_empty_val)) AS u(c))
WHERE c<'1';
+---+
| c |
+---+
|   |
|   |
|   |
|   |
|   |
+---+
(5 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A3_B5_C9 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest), unnest(mv_to_array(c_mv_complex_with_null_and_empty_val)) AS u(c)
WHERE c<'1';
+---+
| c |
+---+
|   |
|   |
|   |
|   |
|   |
+---+
(5 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A3_B6_C1 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM test_unnest,
     unnest(mv_to_array(c_mv_complex_with_null_and_empty_val)) AS u(c)
WHERE c<='1';
+---+
| c |
+---+
|   |
|   |
|   |
|   |
|   |
| 1 |
| 1 |
| 1 |
| 1 |
| 1 |
+---+
(10 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A3_B6_C3 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest,
        unnest(mv_to_array(c_mv_complex_with_null_and_empty_val)) AS u(c)
   WHERE c<='1');
+---+
| c |
+---+
|   |
|   |
|   |
|   |
|   |
| 1 |
| 1 |
| 1 |
| 1 |
| 1 |
+---+
(10 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A3_B6_C5 TYPE: NEGATIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest
   WHERE c<='1'), unnest(mv_to_array(c_mv_complex_with_null_and_empty_val)) AS u(c);
QueryInterruptedException
!error

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A3_B6_C7 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest,
        unnest(mv_to_array(c_mv_complex_with_null_and_empty_val)) AS u(c))
WHERE c<='1';
+---+
| c |
+---+
|   |
|   |
|   |
|   |
|   |
| 1 |
| 1 |
| 1 |
| 1 |
| 1 |
+---+
(10 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A3_B6_C9 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest), unnest(mv_to_array(c_mv_complex_with_null_and_empty_val)) AS u(c)
WHERE c<='1';
+---+
| c |
+---+
|   |
|   |
|   |
|   |
|   |
| 1 |
| 1 |
| 1 |
| 1 |
| 1 |
+---+
(10 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A3_B7_C1 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM test_unnest,
     unnest(mv_to_array(c_mv_complex_with_null_and_empty_val)) AS u(c)
WHERE (NOT c<>''
       OR NOT c<>'my_null'
       OR NOT c<>'my_empty'
       OR NOT c<>'1'
       OR NOT c<>'-1'
       OR NOT c<>'0'
       OR NOT c<>'999'
       OR NOT c<>999)
  AND (NOT c='[2]'
       OR NOT c='[3, [4, 5]]'
       OR NOT c='2'
       OR NOT c='3'
       OR NOT c='999'
       OR NOT c=999);
+---+
| c |
+---+
|   |
|   |
|   |
|   |
|   |
| 1 |
| 1 |
| 1 |
| 1 |
| 1 |
+---+
(10 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A3_B7_C3 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest,
        unnest(mv_to_array(c_mv_complex_with_null_and_empty_val)) AS u(c)
   WHERE (NOT c<>''
          OR NOT c<>'my_null'
          OR NOT c<>'my_empty'
          OR NOT c<>'1'
          OR NOT c<>'-1'
          OR NOT c<>'0'
          OR NOT c<>'999'
          OR NOT c<>999)
     AND (NOT c='[2]'
          OR NOT c='[3, [4, 5]]'
          OR NOT c='2'
          OR NOT c='3'
          OR NOT c='999'
          OR NOT c=999));
+---+
| c |
+---+
|   |
|   |
|   |
|   |
|   |
| 1 |
| 1 |
| 1 |
| 1 |
| 1 |
+---+
(10 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A3_B7_C5 TYPE: NEGATIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest
   WHERE (NOT c<>''
          OR NOT c<>'my_null'
          OR NOT c<>'my_empty'
          OR NOT c<>'1'
          OR NOT c<>'-1'
          OR NOT c<>'0'
          OR NOT c<>'999'
          OR NOT c<>999)
     AND (NOT c='[2]'
          OR NOT c='[3, [4, 5]]'
          OR NOT c='2'
          OR NOT c='3'
          OR NOT c='999'
          OR NOT c=999)), unnest(mv_to_array(c_mv_complex_with_null_and_empty_val)) AS u(c);
QueryInterruptedException
!error

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A3_B7_C7 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest,
        unnest(mv_to_array(c_mv_complex_with_null_and_empty_val)) AS u(c))
WHERE (NOT c<>''
       OR NOT c<>'my_null'
       OR NOT c<>'my_empty'
       OR NOT c<>'1'
       OR NOT c<>'-1'
       OR NOT c<>'0'
       OR NOT c<>'999'
       OR NOT c<>999)
  AND (NOT c='[2]'
       OR NOT c='[3, [4, 5]]'
       OR NOT c='2'
       OR NOT c='3'
       OR NOT c='999'
       OR NOT c=999);
+---+
| c |
+---+
|   |
|   |
|   |
|   |
|   |
| 1 |
| 1 |
| 1 |
| 1 |
| 1 |
+---+
(10 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A3_B7_C9 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest), unnest(mv_to_array(c_mv_complex_with_null_and_empty_val)) AS u(c)
WHERE (NOT c<>''
       OR NOT c<>'my_null'
       OR NOT c<>'my_empty'
       OR NOT c<>'1'
       OR NOT c<>'-1'
       OR NOT c<>'0'
       OR NOT c<>'999'
       OR NOT c<>999)
  AND (NOT c='[2]'
       OR NOT c='[3, [4, 5]]'
       OR NOT c='2'
       OR NOT c='3'
       OR NOT c='999'
       OR NOT c=999);
+---+
| c |
+---+
|   |
|   |
|   |
|   |
|   |
| 1 |
| 1 |
| 1 |
| 1 |
| 1 |
+---+
(10 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A3_B8_C1 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM test_unnest,
     unnest(mv_to_array(c_mv_complex_with_null_and_empty_val)) AS u(c)
WHERE (c=''
       OR c='my_null'
       OR c='my_empty'
       OR c='1'
       OR c='-1'
       OR c='0'
       OR c='999'
       OR c=999)
  AND NOT c='[2]'
  AND NOT c='[3, [4, 5]]'
  AND NOT c='2'
  AND NOT c='3'
  AND NOT c='999'
  AND NOT c=999;
+---+
| c |
+---+
|   |
|   |
|   |
|   |
|   |
| 1 |
| 1 |
| 1 |
| 1 |
| 1 |
+---+
(10 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A3_B8_C3 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest,
        unnest(mv_to_array(c_mv_complex_with_null_and_empty_val)) AS u(c)
   WHERE (c=''
          OR c='my_null'
          OR c='my_empty'
          OR c='1'
          OR c='-1'
          OR c='0'
          OR c='999'
          OR c=999)
     AND NOT c='[2]'
     AND NOT c='[3, [4, 5]]'
     AND NOT c='2'
     AND NOT c='3'
     AND NOT c='999'
     AND NOT c=999);
+---+
| c |
+---+
|   |
|   |
|   |
|   |
|   |
| 1 |
| 1 |
| 1 |
| 1 |
| 1 |
+---+
(10 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A3_B8_C5 TYPE: NEGATIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest
   WHERE (c=''
          OR c='my_null'
          OR c='my_empty'
          OR c='1'
          OR c='-1'
          OR c='0'
          OR c='999'
          OR c=999)
     AND NOT c='[2]'
     AND NOT c='[3, [4, 5]]'
     AND NOT c='2'
     AND NOT c='3'
     AND NOT c='999'
     AND NOT c=999), unnest(mv_to_array(c_mv_complex_with_null_and_empty_val)) AS u(c);
QueryInterruptedException
!error

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A3_B8_C7 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest,
        unnest(mv_to_array(c_mv_complex_with_null_and_empty_val)) AS u(c))
WHERE (c=''
       OR c='my_null'
       OR c='my_empty'
       OR c='1'
       OR c='-1'
       OR c='0'
       OR c='999'
       OR c=999)
  AND NOT c='[2]'
  AND NOT c='[3, [4, 5]]'
  AND NOT c='2'
  AND NOT c='3'
  AND NOT c='999'
  AND NOT c=999;
+---+
| c |
+---+
|   |
|   |
|   |
|   |
|   |
| 1 |
| 1 |
| 1 |
| 1 |
| 1 |
+---+
(10 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A3_B8_C9 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest), unnest(mv_to_array(c_mv_complex_with_null_and_empty_val)) AS u(c)
WHERE (c=''
       OR c='my_null'
       OR c='my_empty'
       OR c='1'
       OR c='-1'
       OR c='0'
       OR c='999'
       OR c=999)
  AND NOT c='[2]'
  AND NOT c='[3, [4, 5]]'
  AND NOT c='2'
  AND NOT c='3'
  AND NOT c='999'
  AND NOT c=999;
+---+
| c |
+---+
|   |
|   |
|   |
|   |
|   |
| 1 |
| 1 |
| 1 |
| 1 |
| 1 |
+---+
(10 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A3_B9_C1 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM test_unnest,
     unnest(mv_to_array(c_mv_complex_with_null_and_empty_val)) AS u(c)
WHERE c IS NULL;
+---+
| c |
+---+
|   |
|   |
|   |
|   |
|   |
+---+
(5 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A3_B9_C3 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest,
        unnest(mv_to_array(c_mv_complex_with_null_and_empty_val)) AS u(c)
   WHERE c IS NULL);
+---+
| c |
+---+
|   |
|   |
|   |
|   |
|   |
+---+
(5 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A3_B9_C5 TYPE: NEGATIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest
   WHERE c IS NULL), unnest(mv_to_array(c_mv_complex_with_null_and_empty_val)) AS u(c);
QueryInterruptedException
!error

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A3_B9_C7 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest,
        unnest(mv_to_array(c_mv_complex_with_null_and_empty_val)) AS u(c))
WHERE c IS NULL;
+---+
| c |
+---+
|   |
|   |
|   |
|   |
|   |
+---+
(5 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A3_B9_C9 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest), unnest(mv_to_array(c_mv_complex_with_null_and_empty_val)) AS u(c)
WHERE c IS NULL;
+---+
| c |
+---+
|   |
|   |
|   |
|   |
|   |
+---+
(5 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A3_B10_C1 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM test_unnest,
     unnest(mv_to_array(c_mv_complex_with_null_and_empty_val)) AS u(c)
WHERE c IS NOT NULL;
+-------------+
| c           |
+-------------+
|             |
|             |
|             |
|             |
|             |
| 1           |
| 1           |
| 1           |
| 1           |
| 1           |
| [2]         |
| [2]         |
| [2]         |
| [2]         |
| [2]         |
| [3, [4, 5]] |
| [3, [4, 5]] |
| [3, [4, 5]] |
| [3, [4, 5]] |
| [3, [4, 5]] |
+-------------+
(20 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A3_B10_C3 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest,
        unnest(mv_to_array(c_mv_complex_with_null_and_empty_val)) AS u(c)
   WHERE c IS NOT NULL);
+-------------+
| c           |
+-------------+
|             |
|             |
|             |
|             |
|             |
| 1           |
| 1           |
| 1           |
| 1           |
| 1           |
| [2]         |
| [2]         |
| [2]         |
| [2]         |
| [2]         |
| [3, [4, 5]] |
| [3, [4, 5]] |
| [3, [4, 5]] |
| [3, [4, 5]] |
| [3, [4, 5]] |
+-------------+
(20 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A3_B10_C5 TYPE: NEGATIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest
   WHERE c IS NOT NULL), unnest(mv_to_array(c_mv_complex_with_null_and_empty_val)) AS u(c);
QueryInterruptedException
!error

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A3_B10_C7 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest,
        unnest(mv_to_array(c_mv_complex_with_null_and_empty_val)) AS u(c))
WHERE c IS NOT NULL;
+-------------+
| c           |
+-------------+
|             |
|             |
|             |
|             |
|             |
| 1           |
| 1           |
| 1           |
| 1           |
| 1           |
| [2]         |
| [2]         |
| [2]         |
| [2]         |
| [2]         |
| [3, [4, 5]] |
| [3, [4, 5]] |
| [3, [4, 5]] |
| [3, [4, 5]] |
| [3, [4, 5]] |
+-------------+
(20 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A3_B10_C9 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest), unnest(mv_to_array(c_mv_complex_with_null_and_empty_val)) AS u(c)
WHERE c IS NOT NULL;
+-------------+
| c           |
+-------------+
|             |
|             |
|             |
|             |
|             |
| 1           |
| 1           |
| 1           |
| 1           |
| 1           |
| [2]         |
| [2]         |
| [2]         |
| [2]         |
| [2]         |
| [3, [4, 5]] |
| [3, [4, 5]] |
| [3, [4, 5]] |
| [3, [4, 5]] |
| [3, [4, 5]] |
+-------------+
(20 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A3_B11_C1 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM test_unnest,
     unnest(mv_to_array(c_mv_complex_with_null_and_empty_val)) AS u(c)
WHERE c IN ('',
            'my_null',
            'my_empty',
            '1',
            '-1',
            '0',
            '999',
            999) IS TRUE
  AND c IN ('[2]',
            '[3, [4, 5]]',
            '2',
            '3',
            '999',
            999) IS NOT TRUE;
+---+
| c |
+---+
|   |
|   |
|   |
|   |
|   |
| 1 |
| 1 |
| 1 |
| 1 |
| 1 |
+---+
(10 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A3_B11_C3 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest,
        unnest(mv_to_array(c_mv_complex_with_null_and_empty_val)) AS u(c)
   WHERE c IN ('',
               'my_null',
               'my_empty',
               '1',
               '-1',
               '0',
               '999',
               999) IS TRUE
     AND c IN ('[2]',
               '[3, [4, 5]]',
               '2',
               '3',
               '999',
               999) IS NOT TRUE);
+---+
| c |
+---+
|   |
|   |
|   |
|   |
|   |
| 1 |
| 1 |
| 1 |
| 1 |
| 1 |
+---+
(10 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A3_B11_C5 TYPE: NEGATIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest
   WHERE c IN ('',
               'my_null',
               'my_empty',
               '1',
               '-1',
               '0',
               '999',
               999) IS TRUE
     AND c IN ('[2]',
               '[3, [4, 5]]',
               '2',
               '3',
               '999',
               999) IS NOT TRUE), unnest(mv_to_array(c_mv_complex_with_null_and_empty_val)) AS u(c);
QueryInterruptedException
!error

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A3_B11_C7 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest,
        unnest(mv_to_array(c_mv_complex_with_null_and_empty_val)) AS u(c))
WHERE c IN ('',
            'my_null',
            'my_empty',
            '1',
            '-1',
            '0',
            '999',
            999) IS TRUE
  AND c IN ('[2]',
            '[3, [4, 5]]',
            '2',
            '3',
            '999',
            999) IS NOT TRUE;
+---+
| c |
+---+
|   |
|   |
|   |
|   |
|   |
| 1 |
| 1 |
| 1 |
| 1 |
| 1 |
+---+
(10 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A3_B11_C9 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest), unnest(mv_to_array(c_mv_complex_with_null_and_empty_val)) AS u(c)
WHERE c IN ('',
            'my_null',
            'my_empty',
            '1',
            '-1',
            '0',
            '999',
            999) IS TRUE
  AND c IN ('[2]',
            '[3, [4, 5]]',
            '2',
            '3',
            '999',
            999) IS NOT TRUE;
+---+
| c |
+---+
|   |
|   |
|   |
|   |
|   |
| 1 |
| 1 |
| 1 |
| 1 |
| 1 |
+---+
(10 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A3_B12_C1 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM test_unnest,
     unnest(mv_to_array(c_mv_complex_with_null_and_empty_val)) AS u(c)
WHERE c IN ('',
            'my_null',
            'my_empty',
            '1',
            '-1',
            '0',
            '999',
            999) IS NOT FALSE
  AND c IN ('[2]',
            '[3, [4, 5]]',
            '2',
            '3',
            '999',
            999) IS FALSE;
+---+
| c |
+---+
|   |
|   |
|   |
|   |
|   |
| 1 |
| 1 |
| 1 |
| 1 |
| 1 |
+---+
(10 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A3_B12_C3 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest,
        unnest(mv_to_array(c_mv_complex_with_null_and_empty_val)) AS u(c)
   WHERE c IN ('',
               'my_null',
               'my_empty',
               '1',
               '-1',
               '0',
               '999',
               999) IS NOT FALSE
     AND c IN ('[2]',
               '[3, [4, 5]]',
               '2',
               '3',
               '999',
               999) IS FALSE);
+---+
| c |
+---+
|   |
|   |
|   |
|   |
|   |
| 1 |
| 1 |
| 1 |
| 1 |
| 1 |
+---+
(10 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A3_B12_C5 TYPE: NEGATIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest
   WHERE c IN ('',
               'my_null',
               'my_empty',
               '1',
               '-1',
               '0',
               '999',
               999) IS NOT FALSE
     AND c IN ('[2]',
               '[3, [4, 5]]',
               '2',
               '3',
               '999',
               999) IS FALSE), unnest(mv_to_array(c_mv_complex_with_null_and_empty_val)) AS u(c);
QueryInterruptedException
!error

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A3_B12_C7 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest,
        unnest(mv_to_array(c_mv_complex_with_null_and_empty_val)) AS u(c))
WHERE c IN ('',
            'my_null',
            'my_empty',
            '1',
            '-1',
            '0',
            '999',
            999) IS NOT FALSE
  AND c IN ('[2]',
            '[3, [4, 5]]',
            '2',
            '3',
            '999',
            999) IS FALSE;
+---+
| c |
+---+
|   |
|   |
|   |
|   |
|   |
| 1 |
| 1 |
| 1 |
| 1 |
| 1 |
+---+
(10 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A3_B12_C9 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest), unnest(mv_to_array(c_mv_complex_with_null_and_empty_val)) AS u(c)
WHERE c IN ('',
            'my_null',
            'my_empty',
            '1',
            '-1',
            '0',
            '999',
            999) IS NOT FALSE
  AND c IN ('[2]',
            '[3, [4, 5]]',
            '2',
            '3',
            '999',
            999) IS FALSE;
+---+
| c |
+---+
|   |
|   |
|   |
|   |
|   |
| 1 |
| 1 |
| 1 |
| 1 |
| 1 |
+---+
(10 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A3_B13_C1 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM test_unnest,
     unnest(mv_to_array(c_mv_complex_with_null_and_empty_val)) AS u(c)
WHERE (c BETWEEN '1' AND '2')
  AND (c NOT BETWEEN '3' AND '4');
+---+
| c |
+---+
| 1 |
| 1 |
| 1 |
| 1 |
| 1 |
+---+
(5 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A3_B13_C3 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest,
        unnest(mv_to_array(c_mv_complex_with_null_and_empty_val)) AS u(c)
   WHERE (c BETWEEN '1' AND '2')
     AND (c NOT BETWEEN '3' AND '4'));
+---+
| c |
+---+
| 1 |
| 1 |
| 1 |
| 1 |
| 1 |
+---+
(5 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A3_B13_C5 TYPE: NEGATIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest
   WHERE (c BETWEEN '1' AND '2')
     AND (c NOT BETWEEN '3' AND '4')), unnest(mv_to_array(c_mv_complex_with_null_and_empty_val)) AS u(c);
QueryInterruptedException
!error

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A3_B13_C7 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest,
        unnest(mv_to_array(c_mv_complex_with_null_and_empty_val)) AS u(c))
WHERE (c BETWEEN '1' AND '2')
  AND (c NOT BETWEEN '3' AND '4');
+---+
| c |
+---+
| 1 |
| 1 |
| 1 |
| 1 |
| 1 |
+---+
(5 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A3_B13_C9 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest), unnest(mv_to_array(c_mv_complex_with_null_and_empty_val)) AS u(c)
WHERE (c BETWEEN '1' AND '2')
  AND (c NOT BETWEEN '3' AND '4');
+---+
| c |
+---+
| 1 |
| 1 |
| 1 |
| 1 |
| 1 |
+---+
(5 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A3_B14_C1 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM test_unnest,
     unnest(mv_to_array(c_mv_complex_with_null_and_empty_val)) AS u(c)
WHERE (c like '1%')
  AND (c not like '3%');
+---+
| c |
+---+
| 1 |
| 1 |
| 1 |
| 1 |
| 1 |
+---+
(5 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A3_B14_C3 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest,
        unnest(mv_to_array(c_mv_complex_with_null_and_empty_val)) AS u(c)
   WHERE (c like '1%')
     AND (c not like '3%'));
+---+
| c |
+---+
| 1 |
| 1 |
| 1 |
| 1 |
| 1 |
+---+
(5 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A3_B14_C5 TYPE: NEGATIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest
   WHERE (c like '1%')
     AND (c not like '3%')), unnest(mv_to_array(c_mv_complex_with_null_and_empty_val)) AS u(c);
QueryInterruptedException
!error

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A3_B14_C7 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest,
        unnest(mv_to_array(c_mv_complex_with_null_and_empty_val)) AS u(c))
WHERE (c like '1%')
  AND (c not like '3%');
+---+
| c |
+---+
| 1 |
| 1 |
| 1 |
| 1 |
| 1 |
+---+
(5 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A3_B14_C9 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest), unnest(mv_to_array(c_mv_complex_with_null_and_empty_val)) AS u(c)
WHERE (c like '1%')
  AND (c not like '3%');
+---+
| c |
+---+
| 1 |
| 1 |
| 1 |
| 1 |
| 1 |
+---+
(5 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A3_B15_C1 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM test_unnest,
     unnest(mv_to_array(c_mv_complex_with_null_and_empty_val)) AS u(c)
WHERE c IN ('',
            'my_null',
            'my_empty',
            '1',
            '-1',
            '0',
            '999',
            999)
  AND c NOT IN ('[2]',
                '[3, [4, 5]]',
                '2',
                '3',
                '999',
                999);
+---+
| c |
+---+
|   |
|   |
|   |
|   |
|   |
| 1 |
| 1 |
| 1 |
| 1 |
| 1 |
+---+
(10 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A3_B15_C3 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest,
        unnest(mv_to_array(c_mv_complex_with_null_and_empty_val)) AS u(c)
   WHERE c IN ('',
               'my_null',
               'my_empty',
               '1',
               '-1',
               '0',
               '999',
               999)
     AND c NOT IN ('[2]',
                   '[3, [4, 5]]',
                   '2',
                   '3',
                   '999',
                   999));
+---+
| c |
+---+
|   |
|   |
|   |
|   |
|   |
| 1 |
| 1 |
| 1 |
| 1 |
| 1 |
+---+
(10 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A3_B15_C5 TYPE: NEGATIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest
   WHERE c IN ('',
               'my_null',
               'my_empty',
               '1',
               '-1',
               '0',
               '999',
               999)
     AND c NOT IN ('[2]',
                   '[3, [4, 5]]',
                   '2',
                   '3',
                   '999',
                   999)), unnest(mv_to_array(c_mv_complex_with_null_and_empty_val)) AS u(c);
QueryInterruptedException
!error

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A3_B15_C7 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest,
        unnest(mv_to_array(c_mv_complex_with_null_and_empty_val)) AS u(c))
WHERE c IN ('',
            'my_null',
            'my_empty',
            '1',
            '-1',
            '0',
            '999',
            999)
  AND c NOT IN ('[2]',
                '[3, [4, 5]]',
                '2',
                '3',
                '999',
                999);
+---+
| c |
+---+
|   |
|   |
|   |
|   |
|   |
| 1 |
| 1 |
| 1 |
| 1 |
| 1 |
+---+
(10 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A3_B15_C9 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest), unnest(mv_to_array(c_mv_complex_with_null_and_empty_val)) AS u(c)
WHERE c IN ('',
            'my_null',
            'my_empty',
            '1',
            '-1',
            '0',
            '999',
            999)
  AND c NOT IN ('[2]',
                '[3, [4, 5]]',
                '2',
                '3',
                '999',
                999);
+---+
| c |
+---+
|   |
|   |
|   |
|   |
|   |
| 1 |
| 1 |
| 1 |
| 1 |
| 1 |
+---+
(10 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A3_B16_C1 TYPE: NEGATIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM test_unnest,
     unnest(mv_to_array(c_mv_complex_with_null_and_empty_val)) AS u(c)
WHERE c IN
    (SELECT col
     FROM (
           VALUES(''),('my_null'),('my_empty'),('1'),('-1'),('0'),('999')) AS t(col))
  AND c NOT IN
    (SELECT col
     FROM (
           VALUES('[2]'),('[3, [4, 5]]'),('2'),('3'),('999')) AS t(col));
Unhandled Query Planning Failure
!error

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A3_B16_C3 TYPE: NEGATIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest,
        unnest(mv_to_array(c_mv_complex_with_null_and_empty_val)) AS u(c)
   WHERE c IN
       (SELECT col
        FROM (
              VALUES(''),('my_null'),('my_empty'),('1'),('-1'),('0'),('999')) AS t(col))
     AND c NOT IN
       (SELECT col
        FROM (
              VALUES('[2]'),('[3, [4, 5]]'),('2'),('3'),('999')) AS t(col)));
Unhandled Query Planning Failure
!error

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A3_B16_C5 TYPE: NEGATIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest
   WHERE c IN
       (SELECT col
        FROM (
              VALUES(''),('my_null'),('my_empty'),('1'),('-1'),('0'),('999')) AS t(col))
     AND c NOT IN
       (SELECT col
        FROM (
              VALUES('[2]'),('[3, [4, 5]]'),('2'),('3'),('999')) AS t(col))), unnest(mv_to_array(c_mv_complex_with_null_and_empty_val)) AS u(c);
QueryInterruptedException
!error

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A3_B16_C7 TYPE: NEGATIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest,
        unnest(mv_to_array(c_mv_complex_with_null_and_empty_val)) AS u(c))
WHERE c IN
    (SELECT col
     FROM (
           VALUES(''),('my_null'),('my_empty'),('1'),('-1'),('0'),('999')) AS t(col))
  AND c NOT IN
    (SELECT col
     FROM (
           VALUES('[2]'),('[3, [4, 5]]'),('2'),('3'),('999')) AS t(col));
Unhandled Query Planning Failure
!error

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A3_B16_C9 TYPE: NEGATIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest), unnest(mv_to_array(c_mv_complex_with_null_and_empty_val)) AS u(c)
WHERE c IN
    (SELECT col
     FROM (
           VALUES(''),('my_null'),('my_empty'),('1'),('-1'),('0'),('999')) AS t(col))
  AND c NOT IN
    (SELECT col
     FROM (
           VALUES('[2]'),('[3, [4, 5]]'),('2'),('3'),('999')) AS t(col));
Unhandled Query Planning Failure
!error

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A3_B17_C1 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM test_unnest,
     unnest(mv_to_array(c_mv_complex_with_null_and_empty_val)) AS u(c)
WHERE c_long=1
  AND c='1';
+---+
| c |
+---+
| 1 |
+---+
(1 row)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A3_B17_C3 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest,
        unnest(mv_to_array(c_mv_complex_with_null_and_empty_val)) AS u(c)
   WHERE c_long=1
     AND c='1');
+---+
| c |
+---+
| 1 |
+---+
(1 row)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A3_B17_C5 TYPE: NEGATIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest
   WHERE c_long=1
     AND c='1'), unnest(mv_to_array(c_mv_complex_with_null_and_empty_val)) AS u(c);
QueryInterruptedException
!error

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A3_B17_C7 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest,
        unnest(mv_to_array(c_mv_complex_with_null_and_empty_val)) AS u(c))
WHERE c_long=1
  AND c='1';
+---+
| c |
+---+
| 1 |
+---+
(1 row)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A3_B17_C9 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest), unnest(mv_to_array(c_mv_complex_with_null_and_empty_val)) AS u(c)
WHERE c_long=1
  AND c='1';
+---+
| c |
+---+
| 1 |
+---+
(1 row)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A3_B18_C1 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM test_unnest,
     unnest(mv_to_array(c_mv_complex_with_null_and_empty_val)) AS u(c)
WHERE c_long<>1
  AND c<>'1';
+-------------+
| c           |
+-------------+
|             |
|             |
|             |
|             |
| [2]         |
| [2]         |
| [2]         |
| [2]         |
| [3, [4, 5]] |
| [3, [4, 5]] |
| [3, [4, 5]] |
| [3, [4, 5]] |
+-------------+
(12 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A3_B18_C3 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest,
        unnest(mv_to_array(c_mv_complex_with_null_and_empty_val)) AS u(c)
   WHERE c_long<>1
     AND c<>'1');
+-------------+
| c           |
+-------------+
|             |
|             |
|             |
|             |
| [2]         |
| [2]         |
| [2]         |
| [2]         |
| [3, [4, 5]] |
| [3, [4, 5]] |
| [3, [4, 5]] |
| [3, [4, 5]] |
+-------------+
(12 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A3_B18_C5 TYPE: NEGATIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest
   WHERE c_long<>1
     AND c<>'1'), unnest(mv_to_array(c_mv_complex_with_null_and_empty_val)) AS u(c);
QueryInterruptedException
!error

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A3_B18_C7 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest,
        unnest(mv_to_array(c_mv_complex_with_null_and_empty_val)) AS u(c))
WHERE c_long<>1
  AND c<>'1';
+-------------+
| c           |
+-------------+
|             |
|             |
|             |
|             |
| [2]         |
| [2]         |
| [2]         |
| [2]         |
| [3, [4, 5]] |
| [3, [4, 5]] |
| [3, [4, 5]] |
| [3, [4, 5]] |
+-------------+
(12 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A3_B18_C9 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest), unnest(mv_to_array(c_mv_complex_with_null_and_empty_val)) AS u(c)
WHERE c_long<>1
  AND c<>'1';
+-------------+
| c           |
+-------------+
|             |
|             |
|             |
|             |
| [2]         |
| [2]         |
| [2]         |
| [2]         |
| [3, [4, 5]] |
| [3, [4, 5]] |
| [3, [4, 5]] |
| [3, [4, 5]] |
+-------------+
(12 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A3_B19_C1 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM test_unnest,
     unnest(mv_to_array(c_mv_complex_with_null_and_empty_val)) AS u(c)
WHERE c_long>1
  AND c>'1';
+-------------+
| c           |
+-------------+
| [2]         |
| [2]         |
| [2]         |
| [3, [4, 5]] |
| [3, [4, 5]] |
| [3, [4, 5]] |
+-------------+
(6 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A3_B19_C3 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest,
        unnest(mv_to_array(c_mv_complex_with_null_and_empty_val)) AS u(c)
   WHERE c_long>1
     AND c>'1');
+-------------+
| c           |
+-------------+
| [2]         |
| [2]         |
| [2]         |
| [3, [4, 5]] |
| [3, [4, 5]] |
| [3, [4, 5]] |
+-------------+
(6 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A3_B19_C5 TYPE: NEGATIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest
   WHERE c_long>1
     AND c>'1'), unnest(mv_to_array(c_mv_complex_with_null_and_empty_val)) AS u(c);
QueryInterruptedException
!error

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A3_B19_C7 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest,
        unnest(mv_to_array(c_mv_complex_with_null_and_empty_val)) AS u(c))
WHERE c_long>1
  AND c>'1';
+-------------+
| c           |
+-------------+
| [2]         |
| [2]         |
| [2]         |
| [3, [4, 5]] |
| [3, [4, 5]] |
| [3, [4, 5]] |
+-------------+
(6 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A3_B19_C9 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest), unnest(mv_to_array(c_mv_complex_with_null_and_empty_val)) AS u(c)
WHERE c_long>1
  AND c>'1';
+-------------+
| c           |
+-------------+
| [2]         |
| [2]         |
| [2]         |
| [3, [4, 5]] |
| [3, [4, 5]] |
| [3, [4, 5]] |
+-------------+
(6 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A3_B20_C1 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM test_unnest,
     unnest(mv_to_array(c_mv_complex_with_null_and_empty_val)) AS u(c)
WHERE c_long>=1
  AND c>='1';
+-------------+
| c           |
+-------------+
| 1           |
| 1           |
| 1           |
| 1           |
| [2]         |
| [2]         |
| [2]         |
| [2]         |
| [3, [4, 5]] |
| [3, [4, 5]] |
| [3, [4, 5]] |
| [3, [4, 5]] |
+-------------+
(12 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A3_B20_C3 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest,
        unnest(mv_to_array(c_mv_complex_with_null_and_empty_val)) AS u(c)
   WHERE c_long>=1
     AND c>='1');
+-------------+
| c           |
+-------------+
| 1           |
| 1           |
| 1           |
| 1           |
| [2]         |
| [2]         |
| [2]         |
| [2]         |
| [3, [4, 5]] |
| [3, [4, 5]] |
| [3, [4, 5]] |
| [3, [4, 5]] |
+-------------+
(12 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A3_B20_C5 TYPE: NEGATIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest
   WHERE c_long>=1
     AND c>='1'), unnest(mv_to_array(c_mv_complex_with_null_and_empty_val)) AS u(c);
QueryInterruptedException
!error

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A3_B20_C7 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest,
        unnest(mv_to_array(c_mv_complex_with_null_and_empty_val)) AS u(c))
WHERE c_long>=1
  AND c>='1';
+-------------+
| c           |
+-------------+
| 1           |
| 1           |
| 1           |
| 1           |
| [2]         |
| [2]         |
| [2]         |
| [2]         |
| [3, [4, 5]] |
| [3, [4, 5]] |
| [3, [4, 5]] |
| [3, [4, 5]] |
+-------------+
(12 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A3_B20_C9 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest), unnest(mv_to_array(c_mv_complex_with_null_and_empty_val)) AS u(c)
WHERE c_long>=1
  AND c>='1';
+-------------+
| c           |
+-------------+
| 1           |
| 1           |
| 1           |
| 1           |
| [2]         |
| [2]         |
| [2]         |
| [2]         |
| [3, [4, 5]] |
| [3, [4, 5]] |
| [3, [4, 5]] |
| [3, [4, 5]] |
+-------------+
(12 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A3_B21_C1 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM test_unnest,
     unnest(mv_to_array(c_mv_complex_with_null_and_empty_val)) AS u(c)
WHERE c_long<1
  AND c<'1';
+---+
| c |
+---+
|   |
+---+
(1 row)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A3_B21_C3 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest,
        unnest(mv_to_array(c_mv_complex_with_null_and_empty_val)) AS u(c)
   WHERE c_long<1
     AND c<'1');
+---+
| c |
+---+
|   |
+---+
(1 row)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A3_B21_C5 TYPE: NEGATIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest
   WHERE c_long<1
     AND c<'1'), unnest(mv_to_array(c_mv_complex_with_null_and_empty_val)) AS u(c);
QueryInterruptedException
!error

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A3_B21_C7 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest,
        unnest(mv_to_array(c_mv_complex_with_null_and_empty_val)) AS u(c))
WHERE c_long<1
  AND c<'1';
+---+
| c |
+---+
|   |
+---+
(1 row)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A3_B21_C9 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest), unnest(mv_to_array(c_mv_complex_with_null_and_empty_val)) AS u(c)
WHERE c_long<1
  AND c<'1';
+---+
| c |
+---+
|   |
+---+
(1 row)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A3_B22_C1 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM test_unnest,
     unnest(mv_to_array(c_mv_complex_with_null_and_empty_val)) AS u(c)
WHERE c_long<=1
  AND c<='1';
+---+
| c |
+---+
|   |
|   |
| 1 |
| 1 |
+---+
(4 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A3_B22_C3 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest,
        unnest(mv_to_array(c_mv_complex_with_null_and_empty_val)) AS u(c)
   WHERE c_long<=1
     AND c<='1');
+---+
| c |
+---+
|   |
|   |
| 1 |
| 1 |
+---+
(4 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A3_B22_C5 TYPE: NEGATIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest
   WHERE c_long<=1
     AND c<='1'), unnest(mv_to_array(c_mv_complex_with_null_and_empty_val)) AS u(c);
QueryInterruptedException
!error

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A3_B22_C7 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest,
        unnest(mv_to_array(c_mv_complex_with_null_and_empty_val)) AS u(c))
WHERE c_long<=1
  AND c<='1';
+---+
| c |
+---+
|   |
|   |
| 1 |
| 1 |
+---+
(4 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A3_B22_C9 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest), unnest(mv_to_array(c_mv_complex_with_null_and_empty_val)) AS u(c)
WHERE c_long<=1
  AND c<='1';
+---+
| c |
+---+
|   |
|   |
| 1 |
| 1 |
+---+
(4 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A3_B23_C1 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM test_unnest,
     unnest(mv_to_array(c_mv_complex_with_null_and_empty_val)) AS u(c)
WHERE NOT (c_long<>0
           AND c_long<>1
           AND c_long<>2)
  AND (NOT c<>''
       OR NOT c<>'my_null'
       OR NOT c<>'my_empty'
       OR NOT c<>'1'
       OR NOT c<>'-1'
       OR NOT c<>'0'
       OR NOT c<>'999'
       OR NOT c<>999)
  AND (NOT c='[2]'
       OR NOT c='[3, [4, 5]]'
       OR NOT c='2'
       OR NOT c='3'
       OR NOT c='999'
       OR NOT c=999);
+---+
| c |
+---+
|   |
|   |
|   |
| 1 |
| 1 |
| 1 |
+---+
(6 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A3_B23_C3 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest,
        unnest(mv_to_array(c_mv_complex_with_null_and_empty_val)) AS u(c)
   WHERE NOT (c_long<>0
              AND c_long<>1
              AND c_long<>2)
     AND (NOT c<>''
          OR NOT c<>'my_null'
          OR NOT c<>'my_empty'
          OR NOT c<>'1'
          OR NOT c<>'-1'
          OR NOT c<>'0'
          OR NOT c<>'999'
          OR NOT c<>999)
     AND (NOT c='[2]'
          OR NOT c='[3, [4, 5]]'
          OR NOT c='2'
          OR NOT c='3'
          OR NOT c='999'
          OR NOT c=999));
+---+
| c |
+---+
|   |
|   |
|   |
| 1 |
| 1 |
| 1 |
+---+
(6 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A3_B23_C5 TYPE: NEGATIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest
   WHERE NOT (c_long<>0
              AND c_long<>1
              AND c_long<>2)
     AND (NOT c<>''
          OR NOT c<>'my_null'
          OR NOT c<>'my_empty'
          OR NOT c<>'1'
          OR NOT c<>'-1'
          OR NOT c<>'0'
          OR NOT c<>'999'
          OR NOT c<>999)
     AND (NOT c='[2]'
          OR NOT c='[3, [4, 5]]'
          OR NOT c='2'
          OR NOT c='3'
          OR NOT c='999'
          OR NOT c=999)), unnest(mv_to_array(c_mv_complex_with_null_and_empty_val)) AS u(c);
QueryInterruptedException
!error

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A3_B23_C7 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest,
        unnest(mv_to_array(c_mv_complex_with_null_and_empty_val)) AS u(c))
WHERE NOT (c_long<>0
           AND c_long<>1
           AND c_long<>2)
  AND (NOT c<>''
       OR NOT c<>'my_null'
       OR NOT c<>'my_empty'
       OR NOT c<>'1'
       OR NOT c<>'-1'
       OR NOT c<>'0'
       OR NOT c<>'999'
       OR NOT c<>999)
  AND (NOT c='[2]'
       OR NOT c='[3, [4, 5]]'
       OR NOT c='2'
       OR NOT c='3'
       OR NOT c='999'
       OR NOT c=999);
+---+
| c |
+---+
|   |
|   |
|   |
| 1 |
| 1 |
| 1 |
+---+
(6 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A3_B23_C9 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest), unnest(mv_to_array(c_mv_complex_with_null_and_empty_val)) AS u(c)
WHERE NOT (c_long<>0
           AND c_long<>1
           AND c_long<>2)
  AND (NOT c<>''
       OR NOT c<>'my_null'
       OR NOT c<>'my_empty'
       OR NOT c<>'1'
       OR NOT c<>'-1'
       OR NOT c<>'0'
       OR NOT c<>'999'
       OR NOT c<>999)
  AND (NOT c='[2]'
       OR NOT c='[3, [4, 5]]'
       OR NOT c='2'
       OR NOT c='3'
       OR NOT c='999'
       OR NOT c=999);
+---+
| c |
+---+
|   |
|   |
|   |
| 1 |
| 1 |
| 1 |
+---+
(6 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A3_B24_C1 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM test_unnest,
     unnest(mv_to_array(c_mv_complex_with_null_and_empty_val)) AS u(c)
WHERE (c_long=0
       OR c_long=1
       OR c_long=2)
  AND (c=''
       OR c='my_null'
       OR c='my_empty'
       OR c='1'
       OR c='-1'
       OR c='0'
       OR c='999'
       OR c=999)
  AND NOT c='[2]'
  AND NOT c='[3, [4, 5]]'
  AND NOT c='2'
  AND NOT c='3'
  AND NOT c='999'
  AND NOT c=999;
+---+
| c |
+---+
|   |
|   |
|   |
| 1 |
| 1 |
| 1 |
+---+
(6 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A3_B24_C3 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest,
        unnest(mv_to_array(c_mv_complex_with_null_and_empty_val)) AS u(c)
   WHERE (c_long=0
          OR c_long=1
          OR c_long=2)
     AND (c=''
          OR c='my_null'
          OR c='my_empty'
          OR c='1'
          OR c='-1'
          OR c='0'
          OR c='999'
          OR c=999)
     AND NOT c='[2]'
     AND NOT c='[3, [4, 5]]'
     AND NOT c='2'
     AND NOT c='3'
     AND NOT c='999'
     AND NOT c=999);
+---+
| c |
+---+
|   |
|   |
|   |
| 1 |
| 1 |
| 1 |
+---+
(6 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A3_B24_C5 TYPE: NEGATIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest
   WHERE (c_long=0
          OR c_long=1
          OR c_long=2)
     AND (c=''
          OR c='my_null'
          OR c='my_empty'
          OR c='1'
          OR c='-1'
          OR c='0'
          OR c='999'
          OR c=999)
     AND NOT c='[2]'
     AND NOT c='[3, [4, 5]]'
     AND NOT c='2'
     AND NOT c='3'
     AND NOT c='999'
     AND NOT c=999), unnest(mv_to_array(c_mv_complex_with_null_and_empty_val)) AS u(c);
QueryInterruptedException
!error

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A3_B24_C7 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest,
        unnest(mv_to_array(c_mv_complex_with_null_and_empty_val)) AS u(c))
WHERE (c_long=0
       OR c_long=1
       OR c_long=2)
  AND (c=''
       OR c='my_null'
       OR c='my_empty'
       OR c='1'
       OR c='-1'
       OR c='0'
       OR c='999'
       OR c=999)
  AND NOT c='[2]'
  AND NOT c='[3, [4, 5]]'
  AND NOT c='2'
  AND NOT c='3'
  AND NOT c='999'
  AND NOT c=999;
+---+
| c |
+---+
|   |
|   |
|   |
| 1 |
| 1 |
| 1 |
+---+
(6 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A3_B24_C9 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest), unnest(mv_to_array(c_mv_complex_with_null_and_empty_val)) AS u(c)
WHERE (c_long=0
       OR c_long=1
       OR c_long=2)
  AND (c=''
       OR c='my_null'
       OR c='my_empty'
       OR c='1'
       OR c='-1'
       OR c='0'
       OR c='999'
       OR c=999)
  AND NOT c='[2]'
  AND NOT c='[3, [4, 5]]'
  AND NOT c='2'
  AND NOT c='3'
  AND NOT c='999'
  AND NOT c=999;
+---+
| c |
+---+
|   |
|   |
|   |
| 1 |
| 1 |
| 1 |
+---+
(6 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A3_B25_C1 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM test_unnest,
     unnest(mv_to_array(c_mv_complex_with_null_and_empty_val)) AS u(c)
WHERE c_str IS NULL
  AND c IS NULL;
+---+
| c |
+---+
|   |
+---+
(1 row)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A3_B25_C3 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest,
        unnest(mv_to_array(c_mv_complex_with_null_and_empty_val)) AS u(c)
   WHERE c_str IS NULL
     AND c IS NULL);
+---+
| c |
+---+
|   |
+---+
(1 row)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A3_B25_C5 TYPE: NEGATIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest
   WHERE c_str IS NULL
     AND c IS NULL), unnest(mv_to_array(c_mv_complex_with_null_and_empty_val)) AS u(c);
QueryInterruptedException
!error

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A3_B25_C7 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest,
        unnest(mv_to_array(c_mv_complex_with_null_and_empty_val)) AS u(c))
WHERE c_str IS NULL
  AND c IS NULL;
+---+
| c |
+---+
|   |
+---+
(1 row)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A3_B25_C9 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest), unnest(mv_to_array(c_mv_complex_with_null_and_empty_val)) AS u(c)
WHERE c_str IS NULL
  AND c IS NULL;
+---+
| c |
+---+
|   |
+---+
(1 row)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A3_B26_C1 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM test_unnest,
     unnest(mv_to_array(c_mv_complex_with_null_and_empty_val)) AS u(c)
WHERE c_str IS NOT NULL
  AND c IS NOT NULL;
+-------------+
| c           |
+-------------+
|             |
|             |
|             |
|             |
| 1           |
| 1           |
| 1           |
| 1           |
| [2]         |
| [2]         |
| [2]         |
| [2]         |
| [3, [4, 5]] |
| [3, [4, 5]] |
| [3, [4, 5]] |
| [3, [4, 5]] |
+-------------+
(16 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A3_B26_C3 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest,
        unnest(mv_to_array(c_mv_complex_with_null_and_empty_val)) AS u(c)
   WHERE c_str IS NOT NULL
     AND c IS NOT NULL);
+-------------+
| c           |
+-------------+
|             |
|             |
|             |
|             |
| 1           |
| 1           |
| 1           |
| 1           |
| [2]         |
| [2]         |
| [2]         |
| [2]         |
| [3, [4, 5]] |
| [3, [4, 5]] |
| [3, [4, 5]] |
| [3, [4, 5]] |
+-------------+
(16 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A3_B26_C5 TYPE: NEGATIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest
   WHERE c_str IS NOT NULL
     AND c IS NOT NULL), unnest(mv_to_array(c_mv_complex_with_null_and_empty_val)) AS u(c);
QueryInterruptedException
!error

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A3_B26_C7 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest,
        unnest(mv_to_array(c_mv_complex_with_null_and_empty_val)) AS u(c))
WHERE c_str IS NOT NULL
  AND c IS NOT NULL;
+-------------+
| c           |
+-------------+
|             |
|             |
|             |
|             |
| 1           |
| 1           |
| 1           |
| 1           |
| [2]         |
| [2]         |
| [2]         |
| [2]         |
| [3, [4, 5]] |
| [3, [4, 5]] |
| [3, [4, 5]] |
| [3, [4, 5]] |
+-------------+
(16 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A3_B26_C9 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest), unnest(mv_to_array(c_mv_complex_with_null_and_empty_val)) AS u(c)
WHERE c_str IS NOT NULL
  AND c IS NOT NULL;
+-------------+
| c           |
+-------------+
|             |
|             |
|             |
|             |
| 1           |
| 1           |
| 1           |
| 1           |
| [2]         |
| [2]         |
| [2]         |
| [2]         |
| [3, [4, 5]] |
| [3, [4, 5]] |
| [3, [4, 5]] |
| [3, [4, 5]] |
+-------------+
(16 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A3_B27_C1 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM test_unnest,
     unnest(mv_to_array(c_mv_complex_with_null_and_empty_val)) AS u(c)
WHERE c_long IN (0,
                 1,
                 2) IS TRUE
  AND c_long IN (3,
                 4) IS NOT TRUE
  AND c IN ('',
            'my_null',
            'my_empty',
            '1',
            '-1',
            '0',
            '999',
            999) IS TRUE
  AND c IN ('[2]',
            '[3, [4, 5]]',
            '2',
            '3',
            '999',
            999) IS NOT TRUE;
+---+
| c |
+---+
|   |
|   |
|   |
| 1 |
| 1 |
| 1 |
+---+
(6 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A3_B27_C3 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest,
        unnest(mv_to_array(c_mv_complex_with_null_and_empty_val)) AS u(c)
   WHERE c_long IN (0,
                    1,
                    2) IS TRUE
     AND c_long IN (3,
                    4) IS NOT TRUE
     AND c IN ('',
               'my_null',
               'my_empty',
               '1',
               '-1',
               '0',
               '999',
               999) IS TRUE
     AND c IN ('[2]',
               '[3, [4, 5]]',
               '2',
               '3',
               '999',
               999) IS NOT TRUE);
+---+
| c |
+---+
|   |
|   |
|   |
| 1 |
| 1 |
| 1 |
+---+
(6 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A3_B27_C5 TYPE: NEGATIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest
   WHERE c_long IN (0,
                    1,
                    2) IS TRUE
     AND c_long IN (3,
                    4) IS NOT TRUE
     AND c IN ('',
               'my_null',
               'my_empty',
               '1',
               '-1',
               '0',
               '999',
               999) IS TRUE
     AND c IN ('[2]',
               '[3, [4, 5]]',
               '2',
               '3',
               '999',
               999) IS NOT TRUE), unnest(mv_to_array(c_mv_complex_with_null_and_empty_val)) AS u(c);
QueryInterruptedException
!error

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A3_B27_C7 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest,
        unnest(mv_to_array(c_mv_complex_with_null_and_empty_val)) AS u(c))
WHERE c_long IN (0,
                 1,
                 2) IS TRUE
  AND c_long IN (3,
                 4) IS NOT TRUE
  AND c IN ('',
            'my_null',
            'my_empty',
            '1',
            '-1',
            '0',
            '999',
            999) IS TRUE
  AND c IN ('[2]',
            '[3, [4, 5]]',
            '2',
            '3',
            '999',
            999) IS NOT TRUE;
+---+
| c |
+---+
|   |
|   |
|   |
| 1 |
| 1 |
| 1 |
+---+
(6 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A3_B27_C9 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest), unnest(mv_to_array(c_mv_complex_with_null_and_empty_val)) AS u(c)
WHERE c_long IN (0,
                 1,
                 2) IS TRUE
  AND c_long IN (3,
                 4) IS NOT TRUE
  AND c IN ('',
            'my_null',
            'my_empty',
            '1',
            '-1',
            '0',
            '999',
            999) IS TRUE
  AND c IN ('[2]',
            '[3, [4, 5]]',
            '2',
            '3',
            '999',
            999) IS NOT TRUE;
+---+
| c |
+---+
|   |
|   |
|   |
| 1 |
| 1 |
| 1 |
+---+
(6 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A3_B28_C1 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM test_unnest,
     unnest(mv_to_array(c_mv_complex_with_null_and_empty_val)) AS u(c)
WHERE c_long IN (0,
                 1,
                 2) IS NOT FALSE
  AND c_long IN (3,
                 4) IS FALSE
  AND c IN ('',
            'my_null',
            'my_empty',
            '1',
            '-1',
            '0',
            '999',
            999) IS NOT FALSE
  AND c IN ('[2]',
            '[3, [4, 5]]',
            '2',
            '3',
            '999',
            999) IS FALSE;
+---+
| c |
+---+
|   |
|   |
|   |
| 1 |
| 1 |
| 1 |
+---+
(6 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A3_B28_C3 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest,
        unnest(mv_to_array(c_mv_complex_with_null_and_empty_val)) AS u(c)
   WHERE c_long IN (0,
                    1,
                    2) IS NOT FALSE
     AND c_long IN (3,
                    4) IS FALSE
     AND c IN ('',
               'my_null',
               'my_empty',
               '1',
               '-1',
               '0',
               '999',
               999) IS NOT FALSE
     AND c IN ('[2]',
               '[3, [4, 5]]',
               '2',
               '3',
               '999',
               999) IS FALSE);
+---+
| c |
+---+
|   |
|   |
|   |
| 1 |
| 1 |
| 1 |
+---+
(6 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A3_B28_C5 TYPE: NEGATIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest
   WHERE c_long IN (0,
                    1,
                    2) IS NOT FALSE
     AND c_long IN (3,
                    4) IS FALSE
     AND c IN ('',
               'my_null',
               'my_empty',
               '1',
               '-1',
               '0',
               '999',
               999) IS NOT FALSE
     AND c IN ('[2]',
               '[3, [4, 5]]',
               '2',
               '3',
               '999',
               999) IS FALSE), unnest(mv_to_array(c_mv_complex_with_null_and_empty_val)) AS u(c);
QueryInterruptedException
!error

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A3_B28_C7 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest,
        unnest(mv_to_array(c_mv_complex_with_null_and_empty_val)) AS u(c))
WHERE c_long IN (0,
                 1,
                 2) IS NOT FALSE
  AND c_long IN (3,
                 4) IS FALSE
  AND c IN ('',
            'my_null',
            'my_empty',
            '1',
            '-1',
            '0',
            '999',
            999) IS NOT FALSE
  AND c IN ('[2]',
            '[3, [4, 5]]',
            '2',
            '3',
            '999',
            999) IS FALSE;
+---+
| c |
+---+
|   |
|   |
|   |
| 1 |
| 1 |
| 1 |
+---+
(6 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A3_B28_C9 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest), unnest(mv_to_array(c_mv_complex_with_null_and_empty_val)) AS u(c)
WHERE c_long IN (0,
                 1,
                 2) IS NOT FALSE
  AND c_long IN (3,
                 4) IS FALSE
  AND c IN ('',
            'my_null',
            'my_empty',
            '1',
            '-1',
            '0',
            '999',
            999) IS NOT FALSE
  AND c IN ('[2]',
            '[3, [4, 5]]',
            '2',
            '3',
            '999',
            999) IS FALSE;
+---+
| c |
+---+
|   |
|   |
|   |
| 1 |
| 1 |
| 1 |
+---+
(6 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A3_B29_C1 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM test_unnest,
     unnest(mv_to_array(c_mv_complex_with_null_and_empty_val)) AS u(c)
WHERE (c_long BETWEEN 0 AND 2)
  AND (c_long NOT BETWEEN 3 AND 4)
  AND (c BETWEEN '1' AND '2')
  AND (c NOT BETWEEN '3' AND '4');
+---+
| c |
+---+
| 1 |
| 1 |
| 1 |
+---+
(3 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A3_B29_C3 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest,
        unnest(mv_to_array(c_mv_complex_with_null_and_empty_val)) AS u(c)
   WHERE (c_long BETWEEN 0 AND 2)
     AND (c_long NOT BETWEEN 3 AND 4)
     AND (c BETWEEN '1' AND '2')
     AND (c NOT BETWEEN '3' AND '4'));
+---+
| c |
+---+
| 1 |
| 1 |
| 1 |
+---+
(3 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A3_B29_C5 TYPE: NEGATIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest
   WHERE (c_long BETWEEN 0 AND 2)
     AND (c_long NOT BETWEEN 3 AND 4)
     AND (c BETWEEN '1' AND '2')
     AND (c NOT BETWEEN '3' AND '4')), unnest(mv_to_array(c_mv_complex_with_null_and_empty_val)) AS u(c);
QueryInterruptedException
!error

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A3_B29_C7 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest,
        unnest(mv_to_array(c_mv_complex_with_null_and_empty_val)) AS u(c))
WHERE (c_long BETWEEN 0 AND 2)
  AND (c_long NOT BETWEEN 3 AND 4)
  AND (c BETWEEN '1' AND '2')
  AND (c NOT BETWEEN '3' AND '4');
+---+
| c |
+---+
| 1 |
| 1 |
| 1 |
+---+
(3 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A3_B29_C9 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest), unnest(mv_to_array(c_mv_complex_with_null_and_empty_val)) AS u(c)
WHERE (c_long BETWEEN 0 AND 2)
  AND (c_long NOT BETWEEN 3 AND 4)
  AND (c BETWEEN '1' AND '2')
  AND (c NOT BETWEEN '3' AND '4');
+---+
| c |
+---+
| 1 |
| 1 |
| 1 |
+---+
(3 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A3_B30_C1 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM test_unnest,
     unnest(mv_to_array(c_mv_complex_with_null_and_empty_val)) AS u(c)
WHERE (c_str like '%2')
  AND (c_str not like '%3')
  AND (c like '1%')
  AND (c not like '3%');
+---+
| c |
+---+
| 1 |
+---+
(1 row)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A3_B30_C3 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest,
        unnest(mv_to_array(c_mv_complex_with_null_and_empty_val)) AS u(c)
   WHERE (c_str like '%2')
     AND (c_str not like '%3')
     AND (c like '1%')
     AND (c not like '3%'));
+---+
| c |
+---+
| 1 |
+---+
(1 row)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A3_B30_C5 TYPE: NEGATIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest
   WHERE (c_str like '%2')
     AND (c_str not like '%3')
     AND (c like '1%')
     AND (c not like '3%')), unnest(mv_to_array(c_mv_complex_with_null_and_empty_val)) AS u(c);
QueryInterruptedException
!error

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A3_B30_C7 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest,
        unnest(mv_to_array(c_mv_complex_with_null_and_empty_val)) AS u(c))
WHERE (c_str like '%2')
  AND (c_str not like '%3')
  AND (c like '1%')
  AND (c not like '3%');
+---+
| c |
+---+
| 1 |
+---+
(1 row)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A3_B30_C9 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest), unnest(mv_to_array(c_mv_complex_with_null_and_empty_val)) AS u(c)
WHERE (c_str like '%2')
  AND (c_str not like '%3')
  AND (c like '1%')
  AND (c not like '3%');
+---+
| c |
+---+
| 1 |
+---+
(1 row)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A3_B31_C1 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM test_unnest,
     unnest(mv_to_array(c_mv_complex_with_null_and_empty_val)) AS u(c)
WHERE c_long IN (0,
                 1,
                 2)
  AND c_long NOT IN (3,
                     4)
  AND c IN ('',
            'my_null',
            'my_empty',
            '1',
            '-1',
            '0',
            '999',
            999)
  AND c NOT IN ('[2]',
                '[3, [4, 5]]',
                '2',
                '3',
                '999',
                999);
+---+
| c |
+---+
|   |
|   |
|   |
| 1 |
| 1 |
| 1 |
+---+
(6 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A3_B31_C3 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest,
        unnest(mv_to_array(c_mv_complex_with_null_and_empty_val)) AS u(c)
   WHERE c_long IN (0,
                    1,
                    2)
     AND c_long NOT IN (3,
                        4)
     AND c IN ('',
               'my_null',
               'my_empty',
               '1',
               '-1',
               '0',
               '999',
               999)
     AND c NOT IN ('[2]',
                   '[3, [4, 5]]',
                   '2',
                   '3',
                   '999',
                   999));
+---+
| c |
+---+
|   |
|   |
|   |
| 1 |
| 1 |
| 1 |
+---+
(6 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A3_B31_C5 TYPE: NEGATIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest
   WHERE c_long IN (0,
                    1,
                    2)
     AND c_long NOT IN (3,
                        4)
     AND c IN ('',
               'my_null',
               'my_empty',
               '1',
               '-1',
               '0',
               '999',
               999)
     AND c NOT IN ('[2]',
                   '[3, [4, 5]]',
                   '2',
                   '3',
                   '999',
                   999)), unnest(mv_to_array(c_mv_complex_with_null_and_empty_val)) AS u(c);
QueryInterruptedException
!error

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A3_B31_C7 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest,
        unnest(mv_to_array(c_mv_complex_with_null_and_empty_val)) AS u(c))
WHERE c_long IN (0,
                 1,
                 2)
  AND c_long NOT IN (3,
                     4)
  AND c IN ('',
            'my_null',
            'my_empty',
            '1',
            '-1',
            '0',
            '999',
            999)
  AND c NOT IN ('[2]',
                '[3, [4, 5]]',
                '2',
                '3',
                '999',
                999);
+---+
| c |
+---+
|   |
|   |
|   |
| 1 |
| 1 |
| 1 |
+---+
(6 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A3_B31_C9 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest), unnest(mv_to_array(c_mv_complex_with_null_and_empty_val)) AS u(c)
WHERE c_long IN (0,
                 1,
                 2)
  AND c_long NOT IN (3,
                     4)
  AND c IN ('',
            'my_null',
            'my_empty',
            '1',
            '-1',
            '0',
            '999',
            999)
  AND c NOT IN ('[2]',
                '[3, [4, 5]]',
                '2',
                '3',
                '999',
                999);
+---+
| c |
+---+
|   |
|   |
|   |
| 1 |
| 1 |
| 1 |
+---+
(6 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A3_B32_C1 TYPE: NEGATIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM test_unnest,
     unnest(mv_to_array(c_mv_complex_with_null_and_empty_val)) AS u(c)
WHERE c_long IN
    (SELECT col
     FROM (
           VALUES(0),(1),(2)) AS t(col))
  AND c_long NOT IN
    (SELECT col
     FROM (
           VALUES(3),(4)) AS t(col))
  AND c IN
    (SELECT col
     FROM (
           VALUES(''),('my_null'),('my_empty'),('1'),('-1'),('0'),('999')) AS t(col))
  AND c NOT IN
    (SELECT col
     FROM (
           VALUES('[2]'),('[3, [4, 5]]'),('2'),('3'),('999')) AS t(col));
Unhandled Query Planning Failure
!error

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A3_B32_C3 TYPE: NEGATIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest,
        unnest(mv_to_array(c_mv_complex_with_null_and_empty_val)) AS u(c)
   WHERE c_long IN
       (SELECT col
        FROM (
              VALUES(0),(1),(2)) AS t(col))
     AND c_long NOT IN
       (SELECT col
        FROM (
              VALUES(3),(4)) AS t(col))
     AND c IN
       (SELECT col
        FROM (
              VALUES(''),('my_null'),('my_empty'),('1'),('-1'),('0'),('999')) AS t(col))
     AND c NOT IN
       (SELECT col
        FROM (
              VALUES('[2]'),('[3, [4, 5]]'),('2'),('3'),('999')) AS t(col)));
Unhandled Query Planning Failure
!error

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A3_B32_C5 TYPE: NEGATIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest
   WHERE c_long IN
       (SELECT col
        FROM (
              VALUES(0),(1),(2)) AS t(col))
     AND c_long NOT IN
       (SELECT col
        FROM (
              VALUES(3),(4)) AS t(col))
     AND c IN
       (SELECT col
        FROM (
              VALUES(''),('my_null'),('my_empty'),('1'),('-1'),('0'),('999')) AS t(col))
     AND c NOT IN
       (SELECT col
        FROM (
              VALUES('[2]'),('[3, [4, 5]]'),('2'),('3'),('999')) AS t(col))), unnest(mv_to_array(c_mv_complex_with_null_and_empty_val)) AS u(c);
QueryInterruptedException
!error

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A3_B32_C7 TYPE: NEGATIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest,
        unnest(mv_to_array(c_mv_complex_with_null_and_empty_val)) AS u(c))
WHERE c_long IN
    (SELECT col
     FROM (
           VALUES(0),(1),(2)) AS t(col))
  AND c_long NOT IN
    (SELECT col
     FROM (
           VALUES(3),(4)) AS t(col))
  AND c IN
    (SELECT col
     FROM (
           VALUES(''),('my_null'),('my_empty'),('1'),('-1'),('0'),('999')) AS t(col))
  AND c NOT IN
    (SELECT col
     FROM (
           VALUES('[2]'),('[3, [4, 5]]'),('2'),('3'),('999')) AS t(col));
Unhandled Query Planning Failure
!error

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A3_B32_C9 TYPE: NEGATIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest), unnest(mv_to_array(c_mv_complex_with_null_and_empty_val)) AS u(c)
WHERE c_long IN
    (SELECT col
     FROM (
           VALUES(0),(1),(2)) AS t(col))
  AND c_long NOT IN
    (SELECT col
     FROM (
           VALUES(3),(4)) AS t(col))
  AND c IN
    (SELECT col
     FROM (
           VALUES(''),('my_null'),('my_empty'),('1'),('-1'),('0'),('999')) AS t(col))
  AND c NOT IN
    (SELECT col
     FROM (
           VALUES('[2]'),('[3, [4, 5]]'),('2'),('3'),('999')) AS t(col));
Unhandled Query Planning Failure
!error

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A3_B33_C1 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM test_unnest,
     unnest(mv_to_array(c_mv_complex_with_null_and_empty_val)) AS u(c)
WHERE c_long=1;
+-------------+
| c           |
+-------------+
|             |
| 1           |
| [2]         |
| [3, [4, 5]] |
|             |
+-------------+
(5 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A3_B33_C3 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest,
        unnest(mv_to_array(c_mv_complex_with_null_and_empty_val)) AS u(c)
   WHERE c_long=1);
+-------------+
| c           |
+-------------+
|             |
| 1           |
| [2]         |
| [3, [4, 5]] |
|             |
+-------------+
(5 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A3_B33_C5 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest
   WHERE c_long=1), unnest(mv_to_array(c_mv_complex_with_null_and_empty_val)) AS u(c);
+-------------+
| c           |
+-------------+
|             |
| 1           |
| [2]         |
| [3, [4, 5]] |
|             |
+-------------+
(5 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A3_B33_C7 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest,
        unnest(mv_to_array(c_mv_complex_with_null_and_empty_val)) AS u(c))
WHERE c_long=1;
+-------------+
| c           |
+-------------+
|             |
| 1           |
| [2]         |
| [3, [4, 5]] |
|             |
+-------------+
(5 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A3_B33_C9 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest), unnest(mv_to_array(c_mv_complex_with_null_and_empty_val)) AS u(c)
WHERE c_long=1;
+-------------+
| c           |
+-------------+
|             |
| 1           |
| [2]         |
| [3, [4, 5]] |
|             |
+-------------+
(5 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A3_B34_C1 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM test_unnest,
     unnest(mv_to_array(c_mv_complex_with_null_and_empty_val)) AS u(c)
WHERE c_long<>1;
+-------------+
| c           |
+-------------+
|             |
|             |
|             |
|             |
| 1           |
| 1           |
| 1           |
| 1           |
| [2]         |
| [2]         |
| [2]         |
| [2]         |
| [3, [4, 5]] |
| [3, [4, 5]] |
| [3, [4, 5]] |
| [3, [4, 5]] |
|             |
|             |
|             |
|             |
+-------------+
(20 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A3_B34_C3 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest,
        unnest(mv_to_array(c_mv_complex_with_null_and_empty_val)) AS u(c)
   WHERE c_long<>1);
+-------------+
| c           |
+-------------+
|             |
|             |
|             |
|             |
| 1           |
| 1           |
| 1           |
| 1           |
| [2]         |
| [2]         |
| [2]         |
| [2]         |
| [3, [4, 5]] |
| [3, [4, 5]] |
| [3, [4, 5]] |
| [3, [4, 5]] |
|             |
|             |
|             |
|             |
+-------------+
(20 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A3_B34_C5 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest
   WHERE c_long<>1), unnest(mv_to_array(c_mv_complex_with_null_and_empty_val)) AS u(c);
+-------------+
| c           |
+-------------+
|             |
|             |
|             |
|             |
| 1           |
| 1           |
| 1           |
| 1           |
| [2]         |
| [2]         |
| [2]         |
| [2]         |
| [3, [4, 5]] |
| [3, [4, 5]] |
| [3, [4, 5]] |
| [3, [4, 5]] |
|             |
|             |
|             |
|             |
+-------------+
(20 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A3_B34_C7 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest,
        unnest(mv_to_array(c_mv_complex_with_null_and_empty_val)) AS u(c))
WHERE c_long<>1;
+-------------+
| c           |
+-------------+
|             |
|             |
|             |
|             |
| 1           |
| 1           |
| 1           |
| 1           |
| [2]         |
| [2]         |
| [2]         |
| [2]         |
| [3, [4, 5]] |
| [3, [4, 5]] |
| [3, [4, 5]] |
| [3, [4, 5]] |
|             |
|             |
|             |
|             |
+-------------+
(20 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A3_B34_C9 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest), unnest(mv_to_array(c_mv_complex_with_null_and_empty_val)) AS u(c)
WHERE c_long<>1;
+-------------+
| c           |
+-------------+
|             |
|             |
|             |
|             |
| 1           |
| 1           |
| 1           |
| 1           |
| [2]         |
| [2]         |
| [2]         |
| [2]         |
| [3, [4, 5]] |
| [3, [4, 5]] |
| [3, [4, 5]] |
| [3, [4, 5]] |
|             |
|             |
|             |
|             |
+-------------+
(20 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A3_B35_C1 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM test_unnest,
     unnest(mv_to_array(c_mv_complex_with_null_and_empty_val)) AS u(c)
WHERE c_long>1;
+-------------+
| c           |
+-------------+
|             |
|             |
|             |
| 1           |
| 1           |
| 1           |
| [2]         |
| [2]         |
| [2]         |
| [3, [4, 5]] |
| [3, [4, 5]] |
| [3, [4, 5]] |
|             |
|             |
|             |
+-------------+
(15 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A3_B35_C3 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest,
        unnest(mv_to_array(c_mv_complex_with_null_and_empty_val)) AS u(c)
   WHERE c_long>1);
+-------------+
| c           |
+-------------+
|             |
|             |
|             |
| 1           |
| 1           |
| 1           |
| [2]         |
| [2]         |
| [2]         |
| [3, [4, 5]] |
| [3, [4, 5]] |
| [3, [4, 5]] |
|             |
|             |
|             |
+-------------+
(15 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A3_B35_C5 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest
   WHERE c_long>1), unnest(mv_to_array(c_mv_complex_with_null_and_empty_val)) AS u(c);
+-------------+
| c           |
+-------------+
|             |
|             |
|             |
| 1           |
| 1           |
| 1           |
| [2]         |
| [2]         |
| [2]         |
| [3, [4, 5]] |
| [3, [4, 5]] |
| [3, [4, 5]] |
|             |
|             |
|             |
+-------------+
(15 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A3_B35_C7 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest,
        unnest(mv_to_array(c_mv_complex_with_null_and_empty_val)) AS u(c))
WHERE c_long>1;
+-------------+
| c           |
+-------------+
|             |
|             |
|             |
| 1           |
| 1           |
| 1           |
| [2]         |
| [2]         |
| [2]         |
| [3, [4, 5]] |
| [3, [4, 5]] |
| [3, [4, 5]] |
|             |
|             |
|             |
+-------------+
(15 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A3_B35_C9 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest), unnest(mv_to_array(c_mv_complex_with_null_and_empty_val)) AS u(c)
WHERE c_long>1;
+-------------+
| c           |
+-------------+
|             |
|             |
|             |
| 1           |
| 1           |
| 1           |
| [2]         |
| [2]         |
| [2]         |
| [3, [4, 5]] |
| [3, [4, 5]] |
| [3, [4, 5]] |
|             |
|             |
|             |
+-------------+
(15 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A3_B36_C1 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM test_unnest,
     unnest(mv_to_array(c_mv_complex_with_null_and_empty_val)) AS u(c)
WHERE c_long>=1;
+-------------+
| c           |
+-------------+
|             |
|             |
|             |
|             |
| 1           |
| 1           |
| 1           |
| 1           |
| [2]         |
| [2]         |
| [2]         |
| [2]         |
| [3, [4, 5]] |
| [3, [4, 5]] |
| [3, [4, 5]] |
| [3, [4, 5]] |
|             |
|             |
|             |
|             |
+-------------+
(20 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A3_B36_C3 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest,
        unnest(mv_to_array(c_mv_complex_with_null_and_empty_val)) AS u(c)
   WHERE c_long>=1);
+-------------+
| c           |
+-------------+
|             |
|             |
|             |
|             |
| 1           |
| 1           |
| 1           |
| 1           |
| [2]         |
| [2]         |
| [2]         |
| [2]         |
| [3, [4, 5]] |
| [3, [4, 5]] |
| [3, [4, 5]] |
| [3, [4, 5]] |
|             |
|             |
|             |
|             |
+-------------+
(20 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A3_B36_C5 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest
   WHERE c_long>=1), unnest(mv_to_array(c_mv_complex_with_null_and_empty_val)) AS u(c);
+-------------+
| c           |
+-------------+
|             |
|             |
|             |
|             |
| 1           |
| 1           |
| 1           |
| 1           |
| [2]         |
| [2]         |
| [2]         |
| [2]         |
| [3, [4, 5]] |
| [3, [4, 5]] |
| [3, [4, 5]] |
| [3, [4, 5]] |
|             |
|             |
|             |
|             |
+-------------+
(20 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A3_B36_C7 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest,
        unnest(mv_to_array(c_mv_complex_with_null_and_empty_val)) AS u(c))
WHERE c_long>=1;
+-------------+
| c           |
+-------------+
|             |
|             |
|             |
|             |
| 1           |
| 1           |
| 1           |
| 1           |
| [2]         |
| [2]         |
| [2]         |
| [2]         |
| [3, [4, 5]] |
| [3, [4, 5]] |
| [3, [4, 5]] |
| [3, [4, 5]] |
|             |
|             |
|             |
|             |
+-------------+
(20 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A3_B36_C9 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest), unnest(mv_to_array(c_mv_complex_with_null_and_empty_val)) AS u(c)
WHERE c_long>=1;
+-------------+
| c           |
+-------------+
|             |
|             |
|             |
|             |
| 1           |
| 1           |
| 1           |
| 1           |
| [2]         |
| [2]         |
| [2]         |
| [2]         |
| [3, [4, 5]] |
| [3, [4, 5]] |
| [3, [4, 5]] |
| [3, [4, 5]] |
|             |
|             |
|             |
|             |
+-------------+
(20 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A3_B37_C1 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM test_unnest,
     unnest(mv_to_array(c_mv_complex_with_null_and_empty_val)) AS u(c)
WHERE c_long<1;
+-------------+
| c           |
+-------------+
|             |
| 1           |
| [2]         |
| [3, [4, 5]] |
|             |
+-------------+
(5 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A3_B37_C3 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest,
        unnest(mv_to_array(c_mv_complex_with_null_and_empty_val)) AS u(c)
   WHERE c_long<1);
+-------------+
| c           |
+-------------+
|             |
| 1           |
| [2]         |
| [3, [4, 5]] |
|             |
+-------------+
(5 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A3_B37_C5 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest
   WHERE c_long<1), unnest(mv_to_array(c_mv_complex_with_null_and_empty_val)) AS u(c);
+-------------+
| c           |
+-------------+
|             |
| 1           |
| [2]         |
| [3, [4, 5]] |
|             |
+-------------+
(5 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A3_B37_C7 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest,
        unnest(mv_to_array(c_mv_complex_with_null_and_empty_val)) AS u(c))
WHERE c_long<1;
+-------------+
| c           |
+-------------+
|             |
| 1           |
| [2]         |
| [3, [4, 5]] |
|             |
+-------------+
(5 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A3_B37_C9 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest), unnest(mv_to_array(c_mv_complex_with_null_and_empty_val)) AS u(c)
WHERE c_long<1;
+-------------+
| c           |
+-------------+
|             |
| 1           |
| [2]         |
| [3, [4, 5]] |
|             |
+-------------+
(5 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A3_B38_C1 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM test_unnest,
     unnest(mv_to_array(c_mv_complex_with_null_and_empty_val)) AS u(c)
WHERE c_long<=1;
+-------------+
| c           |
+-------------+
|             |
|             |
| 1           |
| 1           |
| [2]         |
| [2]         |
| [3, [4, 5]] |
| [3, [4, 5]] |
|             |
|             |
+-------------+
(10 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A3_B38_C3 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest,
        unnest(mv_to_array(c_mv_complex_with_null_and_empty_val)) AS u(c)
   WHERE c_long<=1);
+-------------+
| c           |
+-------------+
|             |
|             |
| 1           |
| 1           |
| [2]         |
| [2]         |
| [3, [4, 5]] |
| [3, [4, 5]] |
|             |
|             |
+-------------+
(10 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A3_B38_C5 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest
   WHERE c_long<=1), unnest(mv_to_array(c_mv_complex_with_null_and_empty_val)) AS u(c);
+-------------+
| c           |
+-------------+
|             |
|             |
| 1           |
| 1           |
| [2]         |
| [2]         |
| [3, [4, 5]] |
| [3, [4, 5]] |
|             |
|             |
+-------------+
(10 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A3_B38_C7 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest,
        unnest(mv_to_array(c_mv_complex_with_null_and_empty_val)) AS u(c))
WHERE c_long<=1;
+-------------+
| c           |
+-------------+
|             |
|             |
| 1           |
| 1           |
| [2]         |
| [2]         |
| [3, [4, 5]] |
| [3, [4, 5]] |
|             |
|             |
+-------------+
(10 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A3_B38_C9 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest), unnest(mv_to_array(c_mv_complex_with_null_and_empty_val)) AS u(c)
WHERE c_long<=1;
+-------------+
| c           |
+-------------+
|             |
|             |
| 1           |
| 1           |
| [2]         |
| [2]         |
| [3, [4, 5]] |
| [3, [4, 5]] |
|             |
|             |
+-------------+
(10 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A3_B39_C1 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM test_unnest,
     unnest(mv_to_array(c_mv_complex_with_null_and_empty_val)) AS u(c)
WHERE (NOT c_str<>''
       OR NOT c_str<>'str2'
       OR NOT c_long<>0
       OR NOT c_long<>1
       OR NOT c_long<>2
       OR NOT c_long<>999)
  AND (NOT c_str='str3'
       OR NOT c_str='str4'
       OR NOT c_long=3
       OR NOT c_long=4
       OR NOT c_long=999);
+-------------+
| c           |
+-------------+
|             |
|             |
|             |
| 1           |
| 1           |
| 1           |
| [2]         |
| [2]         |
| [2]         |
| [3, [4, 5]] |
| [3, [4, 5]] |
| [3, [4, 5]] |
|             |
|             |
|             |
+-------------+
(15 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A3_B39_C3 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest,
        unnest(mv_to_array(c_mv_complex_with_null_and_empty_val)) AS u(c)
   WHERE (NOT c_str<>''
          OR NOT c_str<>'str2'
          OR NOT c_long<>0
          OR NOT c_long<>1
          OR NOT c_long<>2
          OR NOT c_long<>999)
     AND (NOT c_str='str3'
          OR NOT c_str='str4'
          OR NOT c_long=3
          OR NOT c_long=4
          OR NOT c_long=999));
+-------------+
| c           |
+-------------+
|             |
|             |
|             |
| 1           |
| 1           |
| 1           |
| [2]         |
| [2]         |
| [2]         |
| [3, [4, 5]] |
| [3, [4, 5]] |
| [3, [4, 5]] |
|             |
|             |
|             |
+-------------+
(15 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A3_B39_C5 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest
   WHERE (NOT c_str<>''
          OR NOT c_str<>'str2'
          OR NOT c_long<>0
          OR NOT c_long<>1
          OR NOT c_long<>2
          OR NOT c_long<>999)
     AND (NOT c_str='str3'
          OR NOT c_str='str4'
          OR NOT c_long=3
          OR NOT c_long=4
          OR NOT c_long=999)), unnest(mv_to_array(c_mv_complex_with_null_and_empty_val)) AS u(c);
+-------------+
| c           |
+-------------+
|             |
|             |
|             |
| 1           |
| 1           |
| 1           |
| [2]         |
| [2]         |
| [2]         |
| [3, [4, 5]] |
| [3, [4, 5]] |
| [3, [4, 5]] |
|             |
|             |
|             |
+-------------+
(15 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A3_B39_C7 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest,
        unnest(mv_to_array(c_mv_complex_with_null_and_empty_val)) AS u(c))
WHERE (NOT c_str<>''
       OR NOT c_str<>'str2'
       OR NOT c_long<>0
       OR NOT c_long<>1
       OR NOT c_long<>2
       OR NOT c_long<>999)
  AND (NOT c_str='str3'
       OR NOT c_str='str4'
       OR NOT c_long=3
       OR NOT c_long=4
       OR NOT c_long=999);
+-------------+
| c           |
+-------------+
|             |
|             |
|             |
| 1           |
| 1           |
| 1           |
| [2]         |
| [2]         |
| [2]         |
| [3, [4, 5]] |
| [3, [4, 5]] |
| [3, [4, 5]] |
|             |
|             |
|             |
+-------------+
(15 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A3_B39_C9 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest), unnest(mv_to_array(c_mv_complex_with_null_and_empty_val)) AS u(c)
WHERE (NOT c_str<>''
       OR NOT c_str<>'str2'
       OR NOT c_long<>0
       OR NOT c_long<>1
       OR NOT c_long<>2
       OR NOT c_long<>999)
  AND (NOT c_str='str3'
       OR NOT c_str='str4'
       OR NOT c_long=3
       OR NOT c_long=4
       OR NOT c_long=999);
+-------------+
| c           |
+-------------+
|             |
|             |
|             |
| 1           |
| 1           |
| 1           |
| [2]         |
| [2]         |
| [2]         |
| [3, [4, 5]] |
| [3, [4, 5]] |
| [3, [4, 5]] |
|             |
|             |
|             |
+-------------+
(15 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A3_B40_C1 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM test_unnest,
     unnest(mv_to_array(c_mv_complex_with_null_and_empty_val)) AS u(c)
WHERE (c_str=''
       OR c_str='str2'
       OR c_long=0
       OR c_long=1
       OR c_long=2
       OR c_long=999)
  AND NOT c_str='str3'
  AND NOT c_str='str4'
  AND NOT c_long=3
  AND NOT c_long=4
  AND NOT c_long=999;
+-------------+
| c           |
+-------------+
|             |
|             |
| 1           |
| 1           |
| [2]         |
| [2]         |
| [3, [4, 5]] |
| [3, [4, 5]] |
|             |
|             |
+-------------+
(10 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A3_B40_C3 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest,
        unnest(mv_to_array(c_mv_complex_with_null_and_empty_val)) AS u(c)
   WHERE (c_str=''
          OR c_str='str2'
          OR c_long=0
          OR c_long=1
          OR c_long=2
          OR c_long=999)
     AND NOT c_str='str3'
     AND NOT c_str='str4'
     AND NOT c_long=3
     AND NOT c_long=4
     AND NOT c_long=999);
+-------------+
| c           |
+-------------+
|             |
|             |
| 1           |
| 1           |
| [2]         |
| [2]         |
| [3, [4, 5]] |
| [3, [4, 5]] |
|             |
|             |
+-------------+
(10 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A3_B40_C5 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest
   WHERE (c_str=''
          OR c_str='str2'
          OR c_long=0
          OR c_long=1
          OR c_long=2
          OR c_long=999)
     AND NOT c_str='str3'
     AND NOT c_str='str4'
     AND NOT c_long=3
     AND NOT c_long=4
     AND NOT c_long=999), unnest(mv_to_array(c_mv_complex_with_null_and_empty_val)) AS u(c);
+-------------+
| c           |
+-------------+
|             |
|             |
| 1           |
| 1           |
| [2]         |
| [2]         |
| [3, [4, 5]] |
| [3, [4, 5]] |
|             |
|             |
+-------------+
(10 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A3_B40_C7 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest,
        unnest(mv_to_array(c_mv_complex_with_null_and_empty_val)) AS u(c))
WHERE (c_str=''
       OR c_str='str2'
       OR c_long=0
       OR c_long=1
       OR c_long=2
       OR c_long=999)
  AND NOT c_str='str3'
  AND NOT c_str='str4'
  AND NOT c_long=3
  AND NOT c_long=4
  AND NOT c_long=999;
+-------------+
| c           |
+-------------+
|             |
|             |
| 1           |
| 1           |
| [2]         |
| [2]         |
| [3, [4, 5]] |
| [3, [4, 5]] |
|             |
|             |
+-------------+
(10 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A3_B40_C9 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest), unnest(mv_to_array(c_mv_complex_with_null_and_empty_val)) AS u(c)
WHERE (c_str=''
       OR c_str='str2'
       OR c_long=0
       OR c_long=1
       OR c_long=2
       OR c_long=999)
  AND NOT c_str='str3'
  AND NOT c_str='str4'
  AND NOT c_long=3
  AND NOT c_long=4
  AND NOT c_long=999;
+-------------+
| c           |
+-------------+
|             |
|             |
| 1           |
| 1           |
| [2]         |
| [2]         |
| [3, [4, 5]] |
| [3, [4, 5]] |
|             |
|             |
+-------------+
(10 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A3_B41_C1 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM test_unnest,
     unnest(mv_to_array(c_mv_complex_with_null_and_empty_val)) AS u(c)
WHERE c_str IS NULL;
+-------------+
| c           |
+-------------+
|             |
| 1           |
| [2]         |
| [3, [4, 5]] |
|             |
+-------------+
(5 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A3_B41_C3 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest,
        unnest(mv_to_array(c_mv_complex_with_null_and_empty_val)) AS u(c)
   WHERE c_str IS NULL);
+-------------+
| c           |
+-------------+
|             |
| 1           |
| [2]         |
| [3, [4, 5]] |
|             |
+-------------+
(5 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A3_B41_C5 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest
   WHERE c_str IS NULL), unnest(mv_to_array(c_mv_complex_with_null_and_empty_val)) AS u(c);
+-------------+
| c           |
+-------------+
|             |
| 1           |
| [2]         |
| [3, [4, 5]] |
|             |
+-------------+
(5 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A3_B41_C7 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest,
        unnest(mv_to_array(c_mv_complex_with_null_and_empty_val)) AS u(c))
WHERE c_str IS NULL;
+-------------+
| c           |
+-------------+
|             |
| 1           |
| [2]         |
| [3, [4, 5]] |
|             |
+-------------+
(5 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A3_B41_C9 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest), unnest(mv_to_array(c_mv_complex_with_null_and_empty_val)) AS u(c)
WHERE c_str IS NULL;
+-------------+
| c           |
+-------------+
|             |
| 1           |
| [2]         |
| [3, [4, 5]] |
|             |
+-------------+
(5 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A3_B42_C1 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM test_unnest,
     unnest(mv_to_array(c_mv_complex_with_null_and_empty_val)) AS u(c)
WHERE c_str IS NOT NULL;
+-------------+
| c           |
+-------------+
|             |
|             |
|             |
|             |
| 1           |
| 1           |
| 1           |
| 1           |
| [2]         |
| [2]         |
| [2]         |
| [2]         |
| [3, [4, 5]] |
| [3, [4, 5]] |
| [3, [4, 5]] |
| [3, [4, 5]] |
|             |
|             |
|             |
|             |
+-------------+
(20 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A3_B42_C3 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest,
        unnest(mv_to_array(c_mv_complex_with_null_and_empty_val)) AS u(c)
   WHERE c_str IS NOT NULL);
+-------------+
| c           |
+-------------+
|             |
|             |
|             |
|             |
| 1           |
| 1           |
| 1           |
| 1           |
| [2]         |
| [2]         |
| [2]         |
| [2]         |
| [3, [4, 5]] |
| [3, [4, 5]] |
| [3, [4, 5]] |
| [3, [4, 5]] |
|             |
|             |
|             |
|             |
+-------------+
(20 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A3_B42_C5 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest
   WHERE c_str IS NOT NULL), unnest(mv_to_array(c_mv_complex_with_null_and_empty_val)) AS u(c);
+-------------+
| c           |
+-------------+
|             |
|             |
|             |
|             |
| 1           |
| 1           |
| 1           |
| 1           |
| [2]         |
| [2]         |
| [2]         |
| [2]         |
| [3, [4, 5]] |
| [3, [4, 5]] |
| [3, [4, 5]] |
| [3, [4, 5]] |
|             |
|             |
|             |
|             |
+-------------+
(20 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A3_B42_C7 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest,
        unnest(mv_to_array(c_mv_complex_with_null_and_empty_val)) AS u(c))
WHERE c_str IS NOT NULL;
+-------------+
| c           |
+-------------+
|             |
|             |
|             |
|             |
| 1           |
| 1           |
| 1           |
| 1           |
| [2]         |
| [2]         |
| [2]         |
| [2]         |
| [3, [4, 5]] |
| [3, [4, 5]] |
| [3, [4, 5]] |
| [3, [4, 5]] |
|             |
|             |
|             |
|             |
+-------------+
(20 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A3_B42_C9 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest), unnest(mv_to_array(c_mv_complex_with_null_and_empty_val)) AS u(c)
WHERE c_str IS NOT NULL;
+-------------+
| c           |
+-------------+
|             |
|             |
|             |
|             |
| 1           |
| 1           |
| 1           |
| 1           |
| [2]         |
| [2]         |
| [2]         |
| [2]         |
| [3, [4, 5]] |
| [3, [4, 5]] |
| [3, [4, 5]] |
| [3, [4, 5]] |
|             |
|             |
|             |
|             |
+-------------+
(20 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A3_B43_C1 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM test_unnest,
     unnest(mv_to_array(c_mv_complex_with_null_and_empty_val)) AS u(c)
WHERE c_str IN ('',
                'str2',
                999) IS TRUE
  AND c_str IN ('str3',
                'str4',
                999) IS NOT TRUE
  AND c_long IN (0,
                 1,
                 2,
                 999) IS TRUE
  AND c_long IN (3,
                 4,
                 999) IS NOT TRUE;
+-------------+
| c           |
+-------------+
|             |
|             |
| 1           |
| 1           |
| [2]         |
| [2]         |
| [3, [4, 5]] |
| [3, [4, 5]] |
|             |
|             |
+-------------+
(10 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A3_B43_C3 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest,
        unnest(mv_to_array(c_mv_complex_with_null_and_empty_val)) AS u(c)
   WHERE c_str IN ('',
                   'str2',
                   999) IS TRUE
     AND c_str IN ('str3',
                   'str4',
                   999) IS NOT TRUE
     AND c_long IN (0,
                    1,
                    2,
                    999) IS TRUE
     AND c_long IN (3,
                    4,
                    999) IS NOT TRUE);
+-------------+
| c           |
+-------------+
|             |
|             |
| 1           |
| 1           |
| [2]         |
| [2]         |
| [3, [4, 5]] |
| [3, [4, 5]] |
|             |
|             |
+-------------+
(10 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A3_B43_C5 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest
   WHERE c_str IN ('',
                   'str2',
                   999) IS TRUE
     AND c_str IN ('str3',
                   'str4',
                   999) IS NOT TRUE
     AND c_long IN (0,
                    1,
                    2,
                    999) IS TRUE
     AND c_long IN (3,
                    4,
                    999) IS NOT TRUE), unnest(mv_to_array(c_mv_complex_with_null_and_empty_val)) AS u(c);
+-------------+
| c           |
+-------------+
|             |
|             |
| 1           |
| 1           |
| [2]         |
| [2]         |
| [3, [4, 5]] |
| [3, [4, 5]] |
|             |
|             |
+-------------+
(10 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A3_B43_C7 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest,
        unnest(mv_to_array(c_mv_complex_with_null_and_empty_val)) AS u(c))
WHERE c_str IN ('',
                'str2',
                999) IS TRUE
  AND c_str IN ('str3',
                'str4',
                999) IS NOT TRUE
  AND c_long IN (0,
                 1,
                 2,
                 999) IS TRUE
  AND c_long IN (3,
                 4,
                 999) IS NOT TRUE;
+-------------+
| c           |
+-------------+
|             |
|             |
| 1           |
| 1           |
| [2]         |
| [2]         |
| [3, [4, 5]] |
| [3, [4, 5]] |
|             |
|             |
+-------------+
(10 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A3_B43_C9 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest), unnest(mv_to_array(c_mv_complex_with_null_and_empty_val)) AS u(c)
WHERE c_str IN ('',
                'str2',
                999) IS TRUE
  AND c_str IN ('str3',
                'str4',
                999) IS NOT TRUE
  AND c_long IN (0,
                 1,
                 2,
                 999) IS TRUE
  AND c_long IN (3,
                 4,
                 999) IS NOT TRUE;
+-------------+
| c           |
+-------------+
|             |
|             |
| 1           |
| 1           |
| [2]         |
| [2]         |
| [3, [4, 5]] |
| [3, [4, 5]] |
|             |
|             |
+-------------+
(10 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A3_B44_C1 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM test_unnest,
     unnest(mv_to_array(c_mv_complex_with_null_and_empty_val)) AS u(c)
WHERE c_str IN ('',
                'str2',
                999) IS NOT FALSE
  AND c_str IN ('str3',
                'str4',
                999) IS FALSE
  AND c_long IN (0,
                 1,
                 2,
                 999) IS NOT FALSE
  AND c_long IN (3,
                 4,
                 999) IS FALSE;
+-------------+
| c           |
+-------------+
|             |
|             |
| 1           |
| 1           |
| [2]         |
| [2]         |
| [3, [4, 5]] |
| [3, [4, 5]] |
|             |
|             |
+-------------+
(10 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A3_B44_C3 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest,
        unnest(mv_to_array(c_mv_complex_with_null_and_empty_val)) AS u(c)
   WHERE c_str IN ('',
                   'str2',
                   999) IS NOT FALSE
     AND c_str IN ('str3',
                   'str4',
                   999) IS FALSE
     AND c_long IN (0,
                    1,
                    2,
                    999) IS NOT FALSE
     AND c_long IN (3,
                    4,
                    999) IS FALSE);
+-------------+
| c           |
+-------------+
|             |
|             |
| 1           |
| 1           |
| [2]         |
| [2]         |
| [3, [4, 5]] |
| [3, [4, 5]] |
|             |
|             |
+-------------+
(10 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A3_B44_C5 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest
   WHERE c_str IN ('',
                   'str2',
                   999) IS NOT FALSE
     AND c_str IN ('str3',
                   'str4',
                   999) IS FALSE
     AND c_long IN (0,
                    1,
                    2,
                    999) IS NOT FALSE
     AND c_long IN (3,
                    4,
                    999) IS FALSE), unnest(mv_to_array(c_mv_complex_with_null_and_empty_val)) AS u(c);
+-------------+
| c           |
+-------------+
|             |
|             |
| 1           |
| 1           |
| [2]         |
| [2]         |
| [3, [4, 5]] |
| [3, [4, 5]] |
|             |
|             |
+-------------+
(10 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A3_B44_C7 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest,
        unnest(mv_to_array(c_mv_complex_with_null_and_empty_val)) AS u(c))
WHERE c_str IN ('',
                'str2',
                999) IS NOT FALSE
  AND c_str IN ('str3',
                'str4',
                999) IS FALSE
  AND c_long IN (0,
                 1,
                 2,
                 999) IS NOT FALSE
  AND c_long IN (3,
                 4,
                 999) IS FALSE;
+-------------+
| c           |
+-------------+
|             |
|             |
| 1           |
| 1           |
| [2]         |
| [2]         |
| [3, [4, 5]] |
| [3, [4, 5]] |
|             |
|             |
+-------------+
(10 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A3_B44_C9 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest), unnest(mv_to_array(c_mv_complex_with_null_and_empty_val)) AS u(c)
WHERE c_str IN ('',
                'str2',
                999) IS NOT FALSE
  AND c_str IN ('str3',
                'str4',
                999) IS FALSE
  AND c_long IN (0,
                 1,
                 2,
                 999) IS NOT FALSE
  AND c_long IN (3,
                 4,
                 999) IS FALSE;
+-------------+
| c           |
+-------------+
|             |
|             |
| 1           |
| 1           |
| [2]         |
| [2]         |
| [3, [4, 5]] |
| [3, [4, 5]] |
|             |
|             |
+-------------+
(10 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A3_B45_C1 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM test_unnest,
     unnest(mv_to_array(c_mv_complex_with_null_and_empty_val)) AS u(c)
WHERE (c_long BETWEEN 0 AND 2)
  AND (c_long NOT BETWEEN 3 AND 4);
+-------------+
| c           |
+-------------+
|             |
|             |
|             |
| 1           |
| 1           |
| 1           |
| [2]         |
| [2]         |
| [2]         |
| [3, [4, 5]] |
| [3, [4, 5]] |
| [3, [4, 5]] |
|             |
|             |
|             |
+-------------+
(15 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A3_B45_C3 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest,
        unnest(mv_to_array(c_mv_complex_with_null_and_empty_val)) AS u(c)
   WHERE (c_long BETWEEN 0 AND 2)
     AND (c_long NOT BETWEEN 3 AND 4));
+-------------+
| c           |
+-------------+
|             |
|             |
|             |
| 1           |
| 1           |
| 1           |
| [2]         |
| [2]         |
| [2]         |
| [3, [4, 5]] |
| [3, [4, 5]] |
| [3, [4, 5]] |
|             |
|             |
|             |
+-------------+
(15 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A3_B45_C5 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest
   WHERE (c_long BETWEEN 0 AND 2)
     AND (c_long NOT BETWEEN 3 AND 4)), unnest(mv_to_array(c_mv_complex_with_null_and_empty_val)) AS u(c);
+-------------+
| c           |
+-------------+
|             |
|             |
|             |
| 1           |
| 1           |
| 1           |
| [2]         |
| [2]         |
| [2]         |
| [3, [4, 5]] |
| [3, [4, 5]] |
| [3, [4, 5]] |
|             |
|             |
|             |
+-------------+
(15 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A3_B45_C7 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest,
        unnest(mv_to_array(c_mv_complex_with_null_and_empty_val)) AS u(c))
WHERE (c_long BETWEEN 0 AND 2)
  AND (c_long NOT BETWEEN 3 AND 4);
+-------------+
| c           |
+-------------+
|             |
|             |
|             |
| 1           |
| 1           |
| 1           |
| [2]         |
| [2]         |
| [2]         |
| [3, [4, 5]] |
| [3, [4, 5]] |
| [3, [4, 5]] |
|             |
|             |
|             |
+-------------+
(15 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A3_B45_C9 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest), unnest(mv_to_array(c_mv_complex_with_null_and_empty_val)) AS u(c)
WHERE (c_long BETWEEN 0 AND 2)
  AND (c_long NOT BETWEEN 3 AND 4);
+-------------+
| c           |
+-------------+
|             |
|             |
|             |
| 1           |
| 1           |
| 1           |
| [2]         |
| [2]         |
| [2]         |
| [3, [4, 5]] |
| [3, [4, 5]] |
| [3, [4, 5]] |
|             |
|             |
|             |
+-------------+
(15 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A3_B46_C1 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM test_unnest,
     unnest(mv_to_array(c_mv_complex_with_null_and_empty_val)) AS u(c)
WHERE (c_str like '%2')
  AND (c_str not like '%3')
  AND (c_str not like '%4');
+-------------+
| c           |
+-------------+
|             |
| 1           |
| [2]         |
| [3, [4, 5]] |
|             |
+-------------+
(5 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A3_B46_C3 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest,
        unnest(mv_to_array(c_mv_complex_with_null_and_empty_val)) AS u(c)
   WHERE (c_str like '%2')
     AND (c_str not like '%3')
     AND (c_str not like '%4'));
+-------------+
| c           |
+-------------+
|             |
| 1           |
| [2]         |
| [3, [4, 5]] |
|             |
+-------------+
(5 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A3_B46_C5 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest
   WHERE (c_str like '%2')
     AND (c_str not like '%3')
     AND (c_str not like '%4')), unnest(mv_to_array(c_mv_complex_with_null_and_empty_val)) AS u(c);
+-------------+
| c           |
+-------------+
|             |
| 1           |
| [2]         |
| [3, [4, 5]] |
|             |
+-------------+
(5 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A3_B46_C7 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest,
        unnest(mv_to_array(c_mv_complex_with_null_and_empty_val)) AS u(c))
WHERE (c_str like '%2')
  AND (c_str not like '%3')
  AND (c_str not like '%4');
+-------------+
| c           |
+-------------+
|             |
| 1           |
| [2]         |
| [3, [4, 5]] |
|             |
+-------------+
(5 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A3_B46_C9 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest), unnest(mv_to_array(c_mv_complex_with_null_and_empty_val)) AS u(c)
WHERE (c_str like '%2')
  AND (c_str not like '%3')
  AND (c_str not like '%4');
+-------------+
| c           |
+-------------+
|             |
| 1           |
| [2]         |
| [3, [4, 5]] |
|             |
+-------------+
(5 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A3_B47_C1 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM test_unnest,
     unnest(mv_to_array(c_mv_complex_with_null_and_empty_val)) AS u(c)
WHERE c_str IN ('',
                'str2',
                999)
  AND c_str NOT IN ('str3',
                    'str4',
                    999)
  AND c_long IN (0,
                 1,
                 2,
                 999)
  AND c_long NOT IN (3,
                     4,
                     999);
+-------------+
| c           |
+-------------+
|             |
|             |
| 1           |
| 1           |
| [2]         |
| [2]         |
| [3, [4, 5]] |
| [3, [4, 5]] |
|             |
|             |
+-------------+
(10 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A3_B47_C3 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest,
        unnest(mv_to_array(c_mv_complex_with_null_and_empty_val)) AS u(c)
   WHERE c_str IN ('',
                   'str2',
                   999)
     AND c_str NOT IN ('str3',
                       'str4',
                       999)
     AND c_long IN (0,
                    1,
                    2,
                    999)
     AND c_long NOT IN (3,
                        4,
                        999));
+-------------+
| c           |
+-------------+
|             |
|             |
| 1           |
| 1           |
| [2]         |
| [2]         |
| [3, [4, 5]] |
| [3, [4, 5]] |
|             |
|             |
+-------------+
(10 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A3_B47_C5 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest
   WHERE c_str IN ('',
                   'str2',
                   999)
     AND c_str NOT IN ('str3',
                       'str4',
                       999)
     AND c_long IN (0,
                    1,
                    2,
                    999)
     AND c_long NOT IN (3,
                        4,
                        999)), unnest(mv_to_array(c_mv_complex_with_null_and_empty_val)) AS u(c);
+-------------+
| c           |
+-------------+
|             |
|             |
| 1           |
| 1           |
| [2]         |
| [2]         |
| [3, [4, 5]] |
| [3, [4, 5]] |
|             |
|             |
+-------------+
(10 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A3_B47_C7 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest,
        unnest(mv_to_array(c_mv_complex_with_null_and_empty_val)) AS u(c))
WHERE c_str IN ('',
                'str2',
                999)
  AND c_str NOT IN ('str3',
                    'str4',
                    999)
  AND c_long IN (0,
                 1,
                 2,
                 999)
  AND c_long NOT IN (3,
                     4,
                     999);
+-------------+
| c           |
+-------------+
|             |
|             |
| 1           |
| 1           |
| [2]         |
| [2]         |
| [3, [4, 5]] |
| [3, [4, 5]] |
|             |
|             |
+-------------+
(10 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A3_B47_C9 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest), unnest(mv_to_array(c_mv_complex_with_null_and_empty_val)) AS u(c)
WHERE c_str IN ('',
                'str2',
                999)
  AND c_str NOT IN ('str3',
                    'str4',
                    999)
  AND c_long IN (0,
                 1,
                 2,
                 999)
  AND c_long NOT IN (3,
                     4,
                     999);
+-------------+
| c           |
+-------------+
|             |
|             |
| 1           |
| 1           |
| [2]         |
| [2]         |
| [3, [4, 5]] |
| [3, [4, 5]] |
|             |
|             |
+-------------+
(10 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A3_B48_C1 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM test_unnest,
     unnest(mv_to_array(c_mv_complex_with_null_and_empty_val)) AS u(c)
WHERE c_long IN
    (SELECT col
     FROM (
           VALUES(0),(1),(2),(999)) AS t(col))
  AND c_long NOT IN
    (SELECT col
     FROM (
           VALUES(3),(4),(999)) AS t(col));
+-------------+
| c           |
+-------------+
|             |
|             |
|             |
| 1           |
| 1           |
| 1           |
| [2]         |
| [2]         |
| [2]         |
| [3, [4, 5]] |
| [3, [4, 5]] |
| [3, [4, 5]] |
|             |
|             |
|             |
+-------------+
(15 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A3_B48_C3 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest,
        unnest(mv_to_array(c_mv_complex_with_null_and_empty_val)) AS u(c)
   WHERE c_long IN
       (SELECT col
        FROM (
              VALUES(0),(1),(2),(999)) AS t(col))
     AND c_long NOT IN
       (SELECT col
        FROM (
              VALUES(3),(4),(999)) AS t(col)));
+-------------+
| c           |
+-------------+
|             |
|             |
|             |
| 1           |
| 1           |
| 1           |
| [2]         |
| [2]         |
| [2]         |
| [3, [4, 5]] |
| [3, [4, 5]] |
| [3, [4, 5]] |
|             |
|             |
|             |
+-------------+
(15 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A3_B48_C5 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest
   WHERE c_long IN
       (SELECT col
        FROM (
              VALUES(0),(1),(2),(999)) AS t(col))
     AND c_long NOT IN
       (SELECT col
        FROM (
              VALUES(3),(4),(999)) AS t(col))), unnest(mv_to_array(c_mv_complex_with_null_and_empty_val)) AS u(c);
+-------------+
| c           |
+-------------+
|             |
|             |
|             |
| 1           |
| 1           |
| 1           |
| [2]         |
| [2]         |
| [2]         |
| [3, [4, 5]] |
| [3, [4, 5]] |
| [3, [4, 5]] |
|             |
|             |
|             |
+-------------+
(15 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A3_B48_C7 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest,
        unnest(mv_to_array(c_mv_complex_with_null_and_empty_val)) AS u(c))
WHERE c_long IN
    (SELECT col
     FROM (
           VALUES(0),(1),(2),(999)) AS t(col))
  AND c_long NOT IN
    (SELECT col
     FROM (
           VALUES(3),(4),(999)) AS t(col));
+-------------+
| c           |
+-------------+
|             |
|             |
|             |
| 1           |
| 1           |
| 1           |
| [2]         |
| [2]         |
| [2]         |
| [3, [4, 5]] |
| [3, [4, 5]] |
| [3, [4, 5]] |
|             |
|             |
|             |
+-------------+
(15 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A3_B48_C9 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest), unnest(mv_to_array(c_mv_complex_with_null_and_empty_val)) AS u(c)
WHERE c_long IN
    (SELECT col
     FROM (
           VALUES(0),(1),(2),(999)) AS t(col))
  AND c_long NOT IN
    (SELECT col
     FROM (
           VALUES(3),(4),(999)) AS t(col));
+-------------+
| c           |
+-------------+
|             |
|             |
|             |
| 1           |
| 1           |
| 1           |
| [2]         |
| [2]         |
| [2]         |
| [3, [4, 5]] |
| [3, [4, 5]] |
| [3, [4, 5]] |
|             |
|             |
|             |
+-------------+
(15 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A4_B1_C1 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM test_unnest,
     unnest(mv_to_array(c_mv_num_with_null_and_empty_val)) AS u(c)
WHERE c='1';
+---+
| c |
+---+
| 1 |
| 1 |
| 1 |
| 1 |
| 1 |
+---+
(5 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A4_B1_C3 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest,
        unnest(mv_to_array(c_mv_num_with_null_and_empty_val)) AS u(c)
   WHERE c='1');
+---+
| c |
+---+
| 1 |
| 1 |
| 1 |
| 1 |
| 1 |
+---+
(5 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A4_B1_C5 TYPE: NEGATIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest
   WHERE c='1'), unnest(mv_to_array(c_mv_num_with_null_and_empty_val)) AS u(c);
QueryInterruptedException
!error

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A4_B1_C7 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest,
        unnest(mv_to_array(c_mv_num_with_null_and_empty_val)) AS u(c))
WHERE c='1';
+---+
| c |
+---+
| 1 |
| 1 |
| 1 |
| 1 |
| 1 |
+---+
(5 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A4_B1_C9 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest), unnest(mv_to_array(c_mv_num_with_null_and_empty_val)) AS u(c)
WHERE c='1';
+---+
| c |
+---+
| 1 |
| 1 |
| 1 |
| 1 |
| 1 |
+---+
(5 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A4_B2_C1 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM test_unnest,
     unnest(mv_to_array(c_mv_num_with_null_and_empty_val)) AS u(c)
WHERE c<>'1';
+---+
| c |
+---+
|   |
|   |
|   |
|   |
|   |
| 2 |
| 2 |
| 2 |
| 2 |
| 2 |
| 3 |
| 3 |
| 3 |
| 3 |
| 3 |
+---+
(15 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A4_B2_C3 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest,
        unnest(mv_to_array(c_mv_num_with_null_and_empty_val)) AS u(c)
   WHERE c<>'1');
+---+
| c |
+---+
|   |
|   |
|   |
|   |
|   |
| 2 |
| 2 |
| 2 |
| 2 |
| 2 |
| 3 |
| 3 |
| 3 |
| 3 |
| 3 |
+---+
(15 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A4_B2_C5 TYPE: NEGATIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest
   WHERE c<>'1'), unnest(mv_to_array(c_mv_num_with_null_and_empty_val)) AS u(c);
QueryInterruptedException
!error

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A4_B2_C7 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest,
        unnest(mv_to_array(c_mv_num_with_null_and_empty_val)) AS u(c))
WHERE c<>'1';
+---+
| c |
+---+
|   |
|   |
|   |
|   |
|   |
| 2 |
| 2 |
| 2 |
| 2 |
| 2 |
| 3 |
| 3 |
| 3 |
| 3 |
| 3 |
+---+
(15 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A4_B2_C9 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest), unnest(mv_to_array(c_mv_num_with_null_and_empty_val)) AS u(c)
WHERE c<>'1';
+---+
| c |
+---+
|   |
|   |
|   |
|   |
|   |
| 2 |
| 2 |
| 2 |
| 2 |
| 2 |
| 3 |
| 3 |
| 3 |
| 3 |
| 3 |
+---+
(15 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A4_B3_C1 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM test_unnest,
     unnest(mv_to_array(c_mv_num_with_null_and_empty_val)) AS u(c)
WHERE c>'1';
+---+
| c |
+---+
| 2 |
| 2 |
| 2 |
| 2 |
| 2 |
| 3 |
| 3 |
| 3 |
| 3 |
| 3 |
+---+
(10 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A4_B3_C3 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest,
        unnest(mv_to_array(c_mv_num_with_null_and_empty_val)) AS u(c)
   WHERE c>'1');
+---+
| c |
+---+
| 2 |
| 2 |
| 2 |
| 2 |
| 2 |
| 3 |
| 3 |
| 3 |
| 3 |
| 3 |
+---+
(10 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A4_B3_C5 TYPE: NEGATIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest
   WHERE c>'1'), unnest(mv_to_array(c_mv_num_with_null_and_empty_val)) AS u(c);
QueryInterruptedException
!error

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A4_B3_C7 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest,
        unnest(mv_to_array(c_mv_num_with_null_and_empty_val)) AS u(c))
WHERE c>'1';
+---+
| c |
+---+
| 2 |
| 2 |
| 2 |
| 2 |
| 2 |
| 3 |
| 3 |
| 3 |
| 3 |
| 3 |
+---+
(10 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A4_B3_C9 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest), unnest(mv_to_array(c_mv_num_with_null_and_empty_val)) AS u(c)
WHERE c>'1';
+---+
| c |
+---+
| 2 |
| 2 |
| 2 |
| 2 |
| 2 |
| 3 |
| 3 |
| 3 |
| 3 |
| 3 |
+---+
(10 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A4_B4_C1 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM test_unnest,
     unnest(mv_to_array(c_mv_num_with_null_and_empty_val)) AS u(c)
WHERE c>='1';
+---+
| c |
+---+
| 1 |
| 1 |
| 1 |
| 1 |
| 1 |
| 2 |
| 2 |
| 2 |
| 2 |
| 2 |
| 3 |
| 3 |
| 3 |
| 3 |
| 3 |
+---+
(15 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A4_B4_C3 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest,
        unnest(mv_to_array(c_mv_num_with_null_and_empty_val)) AS u(c)
   WHERE c>='1');
+---+
| c |
+---+
| 1 |
| 1 |
| 1 |
| 1 |
| 1 |
| 2 |
| 2 |
| 2 |
| 2 |
| 2 |
| 3 |
| 3 |
| 3 |
| 3 |
| 3 |
+---+
(15 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A4_B4_C5 TYPE: NEGATIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest
   WHERE c>='1'), unnest(mv_to_array(c_mv_num_with_null_and_empty_val)) AS u(c);
QueryInterruptedException
!error

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A4_B4_C7 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest,
        unnest(mv_to_array(c_mv_num_with_null_and_empty_val)) AS u(c))
WHERE c>='1';
+---+
| c |
+---+
| 1 |
| 1 |
| 1 |
| 1 |
| 1 |
| 2 |
| 2 |
| 2 |
| 2 |
| 2 |
| 3 |
| 3 |
| 3 |
| 3 |
| 3 |
+---+
(15 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A4_B4_C9 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest), unnest(mv_to_array(c_mv_num_with_null_and_empty_val)) AS u(c)
WHERE c>='1';
+---+
| c |
+---+
| 1 |
| 1 |
| 1 |
| 1 |
| 1 |
| 2 |
| 2 |
| 2 |
| 2 |
| 2 |
| 3 |
| 3 |
| 3 |
| 3 |
| 3 |
+---+
(15 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A4_B5_C1 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM test_unnest,
     unnest(mv_to_array(c_mv_num_with_null_and_empty_val)) AS u(c)
WHERE c<'1';
+---+
| c |
+---+
|   |
|   |
|   |
|   |
|   |
+---+
(5 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A4_B5_C3 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest,
        unnest(mv_to_array(c_mv_num_with_null_and_empty_val)) AS u(c)
   WHERE c<'1');
+---+
| c |
+---+
|   |
|   |
|   |
|   |
|   |
+---+
(5 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A4_B5_C5 TYPE: NEGATIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest
   WHERE c<'1'), unnest(mv_to_array(c_mv_num_with_null_and_empty_val)) AS u(c);
QueryInterruptedException
!error

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A4_B5_C7 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest,
        unnest(mv_to_array(c_mv_num_with_null_and_empty_val)) AS u(c))
WHERE c<'1';
+---+
| c |
+---+
|   |
|   |
|   |
|   |
|   |
+---+
(5 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A4_B5_C9 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest), unnest(mv_to_array(c_mv_num_with_null_and_empty_val)) AS u(c)
WHERE c<'1';
+---+
| c |
+---+
|   |
|   |
|   |
|   |
|   |
+---+
(5 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A4_B6_C1 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM test_unnest,
     unnest(mv_to_array(c_mv_num_with_null_and_empty_val)) AS u(c)
WHERE c<='1';
+---+
| c |
+---+
|   |
|   |
|   |
|   |
|   |
| 1 |
| 1 |
| 1 |
| 1 |
| 1 |
+---+
(10 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A4_B6_C3 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest,
        unnest(mv_to_array(c_mv_num_with_null_and_empty_val)) AS u(c)
   WHERE c<='1');
+---+
| c |
+---+
|   |
|   |
|   |
|   |
|   |
| 1 |
| 1 |
| 1 |
| 1 |
| 1 |
+---+
(10 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A4_B6_C5 TYPE: NEGATIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest
   WHERE c<='1'), unnest(mv_to_array(c_mv_num_with_null_and_empty_val)) AS u(c);
QueryInterruptedException
!error

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A4_B6_C7 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest,
        unnest(mv_to_array(c_mv_num_with_null_and_empty_val)) AS u(c))
WHERE c<='1';
+---+
| c |
+---+
|   |
|   |
|   |
|   |
|   |
| 1 |
| 1 |
| 1 |
| 1 |
| 1 |
+---+
(10 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A4_B6_C9 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest), unnest(mv_to_array(c_mv_num_with_null_and_empty_val)) AS u(c)
WHERE c<='1';
+---+
| c |
+---+
|   |
|   |
|   |
|   |
|   |
| 1 |
| 1 |
| 1 |
| 1 |
| 1 |
+---+
(10 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A4_B7_C1 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM test_unnest,
     unnest(mv_to_array(c_mv_num_with_null_and_empty_val)) AS u(c)
WHERE (NOT c<>''
       OR NOT c<>'my_null'
       OR NOT c<>'my_empty'
       OR NOT c<>'1'
       OR NOT c<>'-1'
       OR NOT c<>'0'
       OR NOT c<>'999'
       OR NOT c<>999)
  AND (NOT c='[2]'
       OR NOT c='[3, [4, 5]]'
       OR NOT c='2'
       OR NOT c='3'
       OR NOT c='999'
       OR NOT c=999);
+---+
| c |
+---+
|   |
|   |
|   |
|   |
|   |
| 1 |
| 1 |
| 1 |
| 1 |
| 1 |
+---+
(10 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A4_B7_C3 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest,
        unnest(mv_to_array(c_mv_num_with_null_and_empty_val)) AS u(c)
   WHERE (NOT c<>''
          OR NOT c<>'my_null'
          OR NOT c<>'my_empty'
          OR NOT c<>'1'
          OR NOT c<>'-1'
          OR NOT c<>'0'
          OR NOT c<>'999'
          OR NOT c<>999)
     AND (NOT c='[2]'
          OR NOT c='[3, [4, 5]]'
          OR NOT c='2'
          OR NOT c='3'
          OR NOT c='999'
          OR NOT c=999));
+---+
| c |
+---+
|   |
|   |
|   |
|   |
|   |
| 1 |
| 1 |
| 1 |
| 1 |
| 1 |
+---+
(10 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A4_B7_C5 TYPE: NEGATIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest
   WHERE (NOT c<>''
          OR NOT c<>'my_null'
          OR NOT c<>'my_empty'
          OR NOT c<>'1'
          OR NOT c<>'-1'
          OR NOT c<>'0'
          OR NOT c<>'999'
          OR NOT c<>999)
     AND (NOT c='[2]'
          OR NOT c='[3, [4, 5]]'
          OR NOT c='2'
          OR NOT c='3'
          OR NOT c='999'
          OR NOT c=999)), unnest(mv_to_array(c_mv_num_with_null_and_empty_val)) AS u(c);
QueryInterruptedException
!error

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A4_B7_C7 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest,
        unnest(mv_to_array(c_mv_num_with_null_and_empty_val)) AS u(c))
WHERE (NOT c<>''
       OR NOT c<>'my_null'
       OR NOT c<>'my_empty'
       OR NOT c<>'1'
       OR NOT c<>'-1'
       OR NOT c<>'0'
       OR NOT c<>'999'
       OR NOT c<>999)
  AND (NOT c='[2]'
       OR NOT c='[3, [4, 5]]'
       OR NOT c='2'
       OR NOT c='3'
       OR NOT c='999'
       OR NOT c=999);
+---+
| c |
+---+
|   |
|   |
|   |
|   |
|   |
| 1 |
| 1 |
| 1 |
| 1 |
| 1 |
+---+
(10 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A4_B7_C9 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest), unnest(mv_to_array(c_mv_num_with_null_and_empty_val)) AS u(c)
WHERE (NOT c<>''
       OR NOT c<>'my_null'
       OR NOT c<>'my_empty'
       OR NOT c<>'1'
       OR NOT c<>'-1'
       OR NOT c<>'0'
       OR NOT c<>'999'
       OR NOT c<>999)
  AND (NOT c='[2]'
       OR NOT c='[3, [4, 5]]'
       OR NOT c='2'
       OR NOT c='3'
       OR NOT c='999'
       OR NOT c=999);
+---+
| c |
+---+
|   |
|   |
|   |
|   |
|   |
| 1 |
| 1 |
| 1 |
| 1 |
| 1 |
+---+
(10 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A4_B8_C1 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM test_unnest,
     unnest(mv_to_array(c_mv_num_with_null_and_empty_val)) AS u(c)
WHERE (c=''
       OR c='my_null'
       OR c='my_empty'
       OR c='1'
       OR c='-1'
       OR c='0'
       OR c='999'
       OR c=999)
  AND NOT c='[2]'
  AND NOT c='[3, [4, 5]]'
  AND NOT c='2'
  AND NOT c='3'
  AND NOT c='999'
  AND NOT c=999;
+---+
| c |
+---+
|   |
|   |
|   |
|   |
|   |
| 1 |
| 1 |
| 1 |
| 1 |
| 1 |
+---+
(10 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A4_B8_C3 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest,
        unnest(mv_to_array(c_mv_num_with_null_and_empty_val)) AS u(c)
   WHERE (c=''
          OR c='my_null'
          OR c='my_empty'
          OR c='1'
          OR c='-1'
          OR c='0'
          OR c='999'
          OR c=999)
     AND NOT c='[2]'
     AND NOT c='[3, [4, 5]]'
     AND NOT c='2'
     AND NOT c='3'
     AND NOT c='999'
     AND NOT c=999);
+---+
| c |
+---+
|   |
|   |
|   |
|   |
|   |
| 1 |
| 1 |
| 1 |
| 1 |
| 1 |
+---+
(10 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A4_B8_C5 TYPE: NEGATIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest
   WHERE (c=''
          OR c='my_null'
          OR c='my_empty'
          OR c='1'
          OR c='-1'
          OR c='0'
          OR c='999'
          OR c=999)
     AND NOT c='[2]'
     AND NOT c='[3, [4, 5]]'
     AND NOT c='2'
     AND NOT c='3'
     AND NOT c='999'
     AND NOT c=999), unnest(mv_to_array(c_mv_num_with_null_and_empty_val)) AS u(c);
QueryInterruptedException
!error

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A4_B8_C7 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest,
        unnest(mv_to_array(c_mv_num_with_null_and_empty_val)) AS u(c))
WHERE (c=''
       OR c='my_null'
       OR c='my_empty'
       OR c='1'
       OR c='-1'
       OR c='0'
       OR c='999'
       OR c=999)
  AND NOT c='[2]'
  AND NOT c='[3, [4, 5]]'
  AND NOT c='2'
  AND NOT c='3'
  AND NOT c='999'
  AND NOT c=999;
+---+
| c |
+---+
|   |
|   |
|   |
|   |
|   |
| 1 |
| 1 |
| 1 |
| 1 |
| 1 |
+---+
(10 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A4_B8_C9 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest), unnest(mv_to_array(c_mv_num_with_null_and_empty_val)) AS u(c)
WHERE (c=''
       OR c='my_null'
       OR c='my_empty'
       OR c='1'
       OR c='-1'
       OR c='0'
       OR c='999'
       OR c=999)
  AND NOT c='[2]'
  AND NOT c='[3, [4, 5]]'
  AND NOT c='2'
  AND NOT c='3'
  AND NOT c='999'
  AND NOT c=999;
+---+
| c |
+---+
|   |
|   |
|   |
|   |
|   |
| 1 |
| 1 |
| 1 |
| 1 |
| 1 |
+---+
(10 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A4_B9_C1 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM test_unnest,
     unnest(mv_to_array(c_mv_num_with_null_and_empty_val)) AS u(c)
WHERE c IS NULL;
+---+
| c |
+---+
|   |
|   |
|   |
|   |
|   |
+---+
(5 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A4_B9_C3 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest,
        unnest(mv_to_array(c_mv_num_with_null_and_empty_val)) AS u(c)
   WHERE c IS NULL);
+---+
| c |
+---+
|   |
|   |
|   |
|   |
|   |
+---+
(5 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A4_B9_C5 TYPE: NEGATIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest
   WHERE c IS NULL), unnest(mv_to_array(c_mv_num_with_null_and_empty_val)) AS u(c);
QueryInterruptedException
!error

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A4_B9_C7 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest,
        unnest(mv_to_array(c_mv_num_with_null_and_empty_val)) AS u(c))
WHERE c IS NULL;
+---+
| c |
+---+
|   |
|   |
|   |
|   |
|   |
+---+
(5 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A4_B9_C9 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest), unnest(mv_to_array(c_mv_num_with_null_and_empty_val)) AS u(c)
WHERE c IS NULL;
+---+
| c |
+---+
|   |
|   |
|   |
|   |
|   |
+---+
(5 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A4_B10_C1 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM test_unnest,
     unnest(mv_to_array(c_mv_num_with_null_and_empty_val)) AS u(c)
WHERE c IS NOT NULL;
+---+
| c |
+---+
|   |
|   |
|   |
|   |
|   |
| 1 |
| 1 |
| 1 |
| 1 |
| 1 |
| 2 |
| 2 |
| 2 |
| 2 |
| 2 |
| 3 |
| 3 |
| 3 |
| 3 |
| 3 |
+---+
(20 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A4_B10_C3 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest,
        unnest(mv_to_array(c_mv_num_with_null_and_empty_val)) AS u(c)
   WHERE c IS NOT NULL);
+---+
| c |
+---+
|   |
|   |
|   |
|   |
|   |
| 1 |
| 1 |
| 1 |
| 1 |
| 1 |
| 2 |
| 2 |
| 2 |
| 2 |
| 2 |
| 3 |
| 3 |
| 3 |
| 3 |
| 3 |
+---+
(20 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A4_B10_C5 TYPE: NEGATIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest
   WHERE c IS NOT NULL), unnest(mv_to_array(c_mv_num_with_null_and_empty_val)) AS u(c);
QueryInterruptedException
!error

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A4_B10_C7 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest,
        unnest(mv_to_array(c_mv_num_with_null_and_empty_val)) AS u(c))
WHERE c IS NOT NULL;
+---+
| c |
+---+
|   |
|   |
|   |
|   |
|   |
| 1 |
| 1 |
| 1 |
| 1 |
| 1 |
| 2 |
| 2 |
| 2 |
| 2 |
| 2 |
| 3 |
| 3 |
| 3 |
| 3 |
| 3 |
+---+
(20 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A4_B10_C9 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest), unnest(mv_to_array(c_mv_num_with_null_and_empty_val)) AS u(c)
WHERE c IS NOT NULL;
+---+
| c |
+---+
|   |
|   |
|   |
|   |
|   |
| 1 |
| 1 |
| 1 |
| 1 |
| 1 |
| 2 |
| 2 |
| 2 |
| 2 |
| 2 |
| 3 |
| 3 |
| 3 |
| 3 |
| 3 |
+---+
(20 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A4_B11_C1 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM test_unnest,
     unnest(mv_to_array(c_mv_num_with_null_and_empty_val)) AS u(c)
WHERE c IN ('',
            'my_null',
            'my_empty',
            '1',
            '-1',
            '0',
            '999',
            999) IS TRUE
  AND c IN ('[2]',
            '[3, [4, 5]]',
            '2',
            '3',
            '999',
            999) IS NOT TRUE;
+---+
| c |
+---+
|   |
|   |
|   |
|   |
|   |
| 1 |
| 1 |
| 1 |
| 1 |
| 1 |
+---+
(10 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A4_B11_C3 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest,
        unnest(mv_to_array(c_mv_num_with_null_and_empty_val)) AS u(c)
   WHERE c IN ('',
               'my_null',
               'my_empty',
               '1',
               '-1',
               '0',
               '999',
               999) IS TRUE
     AND c IN ('[2]',
               '[3, [4, 5]]',
               '2',
               '3',
               '999',
               999) IS NOT TRUE);
+---+
| c |
+---+
|   |
|   |
|   |
|   |
|   |
| 1 |
| 1 |
| 1 |
| 1 |
| 1 |
+---+
(10 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A4_B11_C5 TYPE: NEGATIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest
   WHERE c IN ('',
               'my_null',
               'my_empty',
               '1',
               '-1',
               '0',
               '999',
               999) IS TRUE
     AND c IN ('[2]',
               '[3, [4, 5]]',
               '2',
               '3',
               '999',
               999) IS NOT TRUE), unnest(mv_to_array(c_mv_num_with_null_and_empty_val)) AS u(c);
QueryInterruptedException
!error

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A4_B11_C7 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest,
        unnest(mv_to_array(c_mv_num_with_null_and_empty_val)) AS u(c))
WHERE c IN ('',
            'my_null',
            'my_empty',
            '1',
            '-1',
            '0',
            '999',
            999) IS TRUE
  AND c IN ('[2]',
            '[3, [4, 5]]',
            '2',
            '3',
            '999',
            999) IS NOT TRUE;
+---+
| c |
+---+
|   |
|   |
|   |
|   |
|   |
| 1 |
| 1 |
| 1 |
| 1 |
| 1 |
+---+
(10 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A4_B11_C9 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest), unnest(mv_to_array(c_mv_num_with_null_and_empty_val)) AS u(c)
WHERE c IN ('',
            'my_null',
            'my_empty',
            '1',
            '-1',
            '0',
            '999',
            999) IS TRUE
  AND c IN ('[2]',
            '[3, [4, 5]]',
            '2',
            '3',
            '999',
            999) IS NOT TRUE;
+---+
| c |
+---+
|   |
|   |
|   |
|   |
|   |
| 1 |
| 1 |
| 1 |
| 1 |
| 1 |
+---+
(10 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A4_B12_C1 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM test_unnest,
     unnest(mv_to_array(c_mv_num_with_null_and_empty_val)) AS u(c)
WHERE c IN ('',
            'my_null',
            'my_empty',
            '1',
            '-1',
            '0',
            '999',
            999) IS NOT FALSE
  AND c IN ('[2]',
            '[3, [4, 5]]',
            '2',
            '3',
            '999',
            999) IS FALSE;
+---+
| c |
+---+
|   |
|   |
|   |
|   |
|   |
| 1 |
| 1 |
| 1 |
| 1 |
| 1 |
+---+
(10 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A4_B12_C3 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest,
        unnest(mv_to_array(c_mv_num_with_null_and_empty_val)) AS u(c)
   WHERE c IN ('',
               'my_null',
               'my_empty',
               '1',
               '-1',
               '0',
               '999',
               999) IS NOT FALSE
     AND c IN ('[2]',
               '[3, [4, 5]]',
               '2',
               '3',
               '999',
               999) IS FALSE);
+---+
| c |
+---+
|   |
|   |
|   |
|   |
|   |
| 1 |
| 1 |
| 1 |
| 1 |
| 1 |
+---+
(10 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A4_B12_C5 TYPE: NEGATIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest
   WHERE c IN ('',
               'my_null',
               'my_empty',
               '1',
               '-1',
               '0',
               '999',
               999) IS NOT FALSE
     AND c IN ('[2]',
               '[3, [4, 5]]',
               '2',
               '3',
               '999',
               999) IS FALSE), unnest(mv_to_array(c_mv_num_with_null_and_empty_val)) AS u(c);
QueryInterruptedException
!error

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A4_B12_C7 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest,
        unnest(mv_to_array(c_mv_num_with_null_and_empty_val)) AS u(c))
WHERE c IN ('',
            'my_null',
            'my_empty',
            '1',
            '-1',
            '0',
            '999',
            999) IS NOT FALSE
  AND c IN ('[2]',
            '[3, [4, 5]]',
            '2',
            '3',
            '999',
            999) IS FALSE;
+---+
| c |
+---+
|   |
|   |
|   |
|   |
|   |
| 1 |
| 1 |
| 1 |
| 1 |
| 1 |
+---+
(10 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A4_B12_C9 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest), unnest(mv_to_array(c_mv_num_with_null_and_empty_val)) AS u(c)
WHERE c IN ('',
            'my_null',
            'my_empty',
            '1',
            '-1',
            '0',
            '999',
            999) IS NOT FALSE
  AND c IN ('[2]',
            '[3, [4, 5]]',
            '2',
            '3',
            '999',
            999) IS FALSE;
+---+
| c |
+---+
|   |
|   |
|   |
|   |
|   |
| 1 |
| 1 |
| 1 |
| 1 |
| 1 |
+---+
(10 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A4_B13_C1 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM test_unnest,
     unnest(mv_to_array(c_mv_num_with_null_and_empty_val)) AS u(c)
WHERE (c BETWEEN '1' AND '2')
  AND (c NOT BETWEEN '3' AND '4');
+---+
| c |
+---+
| 1 |
| 1 |
| 1 |
| 1 |
| 1 |
| 2 |
| 2 |
| 2 |
| 2 |
| 2 |
+---+
(10 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A4_B13_C3 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest,
        unnest(mv_to_array(c_mv_num_with_null_and_empty_val)) AS u(c)
   WHERE (c BETWEEN '1' AND '2')
     AND (c NOT BETWEEN '3' AND '4'));
+---+
| c |
+---+
| 1 |
| 1 |
| 1 |
| 1 |
| 1 |
| 2 |
| 2 |
| 2 |
| 2 |
| 2 |
+---+
(10 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A4_B13_C5 TYPE: NEGATIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest
   WHERE (c BETWEEN '1' AND '2')
     AND (c NOT BETWEEN '3' AND '4')), unnest(mv_to_array(c_mv_num_with_null_and_empty_val)) AS u(c);
QueryInterruptedException
!error

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A4_B13_C7 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest,
        unnest(mv_to_array(c_mv_num_with_null_and_empty_val)) AS u(c))
WHERE (c BETWEEN '1' AND '2')
  AND (c NOT BETWEEN '3' AND '4');
+---+
| c |
+---+
| 1 |
| 1 |
| 1 |
| 1 |
| 1 |
| 2 |
| 2 |
| 2 |
| 2 |
| 2 |
+---+
(10 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A4_B13_C9 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest), unnest(mv_to_array(c_mv_num_with_null_and_empty_val)) AS u(c)
WHERE (c BETWEEN '1' AND '2')
  AND (c NOT BETWEEN '3' AND '4');
+---+
| c |
+---+
| 1 |
| 1 |
| 1 |
| 1 |
| 1 |
| 2 |
| 2 |
| 2 |
| 2 |
| 2 |
+---+
(10 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A4_B14_C1 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM test_unnest,
     unnest(mv_to_array(c_mv_num_with_null_and_empty_val)) AS u(c)
WHERE (c like '1%')
  AND (c not like '3%');
+---+
| c |
+---+
| 1 |
| 1 |
| 1 |
| 1 |
| 1 |
+---+
(5 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A4_B14_C3 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest,
        unnest(mv_to_array(c_mv_num_with_null_and_empty_val)) AS u(c)
   WHERE (c like '1%')
     AND (c not like '3%'));
+---+
| c |
+---+
| 1 |
| 1 |
| 1 |
| 1 |
| 1 |
+---+
(5 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A4_B14_C5 TYPE: NEGATIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest
   WHERE (c like '1%')
     AND (c not like '3%')), unnest(mv_to_array(c_mv_num_with_null_and_empty_val)) AS u(c);
QueryInterruptedException
!error

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A4_B14_C7 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest,
        unnest(mv_to_array(c_mv_num_with_null_and_empty_val)) AS u(c))
WHERE (c like '1%')
  AND (c not like '3%');
+---+
| c |
+---+
| 1 |
| 1 |
| 1 |
| 1 |
| 1 |
+---+
(5 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A4_B14_C9 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest), unnest(mv_to_array(c_mv_num_with_null_and_empty_val)) AS u(c)
WHERE (c like '1%')
  AND (c not like '3%');
+---+
| c |
+---+
| 1 |
| 1 |
| 1 |
| 1 |
| 1 |
+---+
(5 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A4_B15_C1 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM test_unnest,
     unnest(mv_to_array(c_mv_num_with_null_and_empty_val)) AS u(c)
WHERE c IN ('',
            'my_null',
            'my_empty',
            '1',
            '-1',
            '0',
            '999',
            999)
  AND c NOT IN ('[2]',
                '[3, [4, 5]]',
                '2',
                '3',
                '999',
                999);
+---+
| c |
+---+
|   |
|   |
|   |
|   |
|   |
| 1 |
| 1 |
| 1 |
| 1 |
| 1 |
+---+
(10 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A4_B15_C3 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest,
        unnest(mv_to_array(c_mv_num_with_null_and_empty_val)) AS u(c)
   WHERE c IN ('',
               'my_null',
               'my_empty',
               '1',
               '-1',
               '0',
               '999',
               999)
     AND c NOT IN ('[2]',
                   '[3, [4, 5]]',
                   '2',
                   '3',
                   '999',
                   999));
+---+
| c |
+---+
|   |
|   |
|   |
|   |
|   |
| 1 |
| 1 |
| 1 |
| 1 |
| 1 |
+---+
(10 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A4_B15_C5 TYPE: NEGATIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest
   WHERE c IN ('',
               'my_null',
               'my_empty',
               '1',
               '-1',
               '0',
               '999',
               999)
     AND c NOT IN ('[2]',
                   '[3, [4, 5]]',
                   '2',
                   '3',
                   '999',
                   999)), unnest(mv_to_array(c_mv_num_with_null_and_empty_val)) AS u(c);
QueryInterruptedException
!error

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A4_B15_C7 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest,
        unnest(mv_to_array(c_mv_num_with_null_and_empty_val)) AS u(c))
WHERE c IN ('',
            'my_null',
            'my_empty',
            '1',
            '-1',
            '0',
            '999',
            999)
  AND c NOT IN ('[2]',
                '[3, [4, 5]]',
                '2',
                '3',
                '999',
                999);
+---+
| c |
+---+
|   |
|   |
|   |
|   |
|   |
| 1 |
| 1 |
| 1 |
| 1 |
| 1 |
+---+
(10 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A4_B15_C9 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest), unnest(mv_to_array(c_mv_num_with_null_and_empty_val)) AS u(c)
WHERE c IN ('',
            'my_null',
            'my_empty',
            '1',
            '-1',
            '0',
            '999',
            999)
  AND c NOT IN ('[2]',
                '[3, [4, 5]]',
                '2',
                '3',
                '999',
                999);
+---+
| c |
+---+
|   |
|   |
|   |
|   |
|   |
| 1 |
| 1 |
| 1 |
| 1 |
| 1 |
+---+
(10 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A4_B16_C1 TYPE: NEGATIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM test_unnest,
     unnest(mv_to_array(c_mv_num_with_null_and_empty_val)) AS u(c)
WHERE c IN
    (SELECT col
     FROM (
           VALUES(''),('my_null'),('my_empty'),('1'),('-1'),('0'),('999')) AS t(col))
  AND c NOT IN
    (SELECT col
     FROM (
           VALUES('[2]'),('[3, [4, 5]]'),('2'),('3'),('999')) AS t(col));
Unhandled Query Planning Failure
!error

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A4_B16_C3 TYPE: NEGATIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest,
        unnest(mv_to_array(c_mv_num_with_null_and_empty_val)) AS u(c)
   WHERE c IN
       (SELECT col
        FROM (
              VALUES(''),('my_null'),('my_empty'),('1'),('-1'),('0'),('999')) AS t(col))
     AND c NOT IN
       (SELECT col
        FROM (
              VALUES('[2]'),('[3, [4, 5]]'),('2'),('3'),('999')) AS t(col)));
Unhandled Query Planning Failure
!error

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A4_B16_C5 TYPE: NEGATIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest
   WHERE c IN
       (SELECT col
        FROM (
              VALUES(''),('my_null'),('my_empty'),('1'),('-1'),('0'),('999')) AS t(col))
     AND c NOT IN
       (SELECT col
        FROM (
              VALUES('[2]'),('[3, [4, 5]]'),('2'),('3'),('999')) AS t(col))), unnest(mv_to_array(c_mv_num_with_null_and_empty_val)) AS u(c);
QueryInterruptedException
!error

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A4_B16_C7 TYPE: NEGATIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest,
        unnest(mv_to_array(c_mv_num_with_null_and_empty_val)) AS u(c))
WHERE c IN
    (SELECT col
     FROM (
           VALUES(''),('my_null'),('my_empty'),('1'),('-1'),('0'),('999')) AS t(col))
  AND c NOT IN
    (SELECT col
     FROM (
           VALUES('[2]'),('[3, [4, 5]]'),('2'),('3'),('999')) AS t(col));
Unhandled Query Planning Failure
!error

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A4_B16_C9 TYPE: NEGATIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest), unnest(mv_to_array(c_mv_num_with_null_and_empty_val)) AS u(c)
WHERE c IN
    (SELECT col
     FROM (
           VALUES(''),('my_null'),('my_empty'),('1'),('-1'),('0'),('999')) AS t(col))
  AND c NOT IN
    (SELECT col
     FROM (
           VALUES('[2]'),('[3, [4, 5]]'),('2'),('3'),('999')) AS t(col));
Unhandled Query Planning Failure
!error

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A4_B17_C1 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM test_unnest,
     unnest(mv_to_array(c_mv_num_with_null_and_empty_val)) AS u(c)
WHERE c_long=1
  AND c='1';
+---+
| c |
+---+
| 1 |
+---+
(1 row)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A4_B17_C3 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest,
        unnest(mv_to_array(c_mv_num_with_null_and_empty_val)) AS u(c)
   WHERE c_long=1
     AND c='1');
+---+
| c |
+---+
| 1 |
+---+
(1 row)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A4_B17_C5 TYPE: NEGATIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest
   WHERE c_long=1
     AND c='1'), unnest(mv_to_array(c_mv_num_with_null_and_empty_val)) AS u(c);
QueryInterruptedException
!error

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A4_B17_C7 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest,
        unnest(mv_to_array(c_mv_num_with_null_and_empty_val)) AS u(c))
WHERE c_long=1
  AND c='1';
+---+
| c |
+---+
| 1 |
+---+
(1 row)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A4_B17_C9 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest), unnest(mv_to_array(c_mv_num_with_null_and_empty_val)) AS u(c)
WHERE c_long=1
  AND c='1';
+---+
| c |
+---+
| 1 |
+---+
(1 row)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A4_B18_C1 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM test_unnest,
     unnest(mv_to_array(c_mv_num_with_null_and_empty_val)) AS u(c)
WHERE c_long<>1
  AND c<>'1';
+---+
| c |
+---+
|   |
|   |
|   |
|   |
| 2 |
| 2 |
| 2 |
| 2 |
| 3 |
| 3 |
| 3 |
| 3 |
+---+
(12 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A4_B18_C3 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest,
        unnest(mv_to_array(c_mv_num_with_null_and_empty_val)) AS u(c)
   WHERE c_long<>1
     AND c<>'1');
+---+
| c |
+---+
|   |
|   |
|   |
|   |
| 2 |
| 2 |
| 2 |
| 2 |
| 3 |
| 3 |
| 3 |
| 3 |
+---+
(12 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A4_B18_C5 TYPE: NEGATIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest
   WHERE c_long<>1
     AND c<>'1'), unnest(mv_to_array(c_mv_num_with_null_and_empty_val)) AS u(c);
QueryInterruptedException
!error

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A4_B18_C7 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest,
        unnest(mv_to_array(c_mv_num_with_null_and_empty_val)) AS u(c))
WHERE c_long<>1
  AND c<>'1';
+---+
| c |
+---+
|   |
|   |
|   |
|   |
| 2 |
| 2 |
| 2 |
| 2 |
| 3 |
| 3 |
| 3 |
| 3 |
+---+
(12 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A4_B18_C9 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest), unnest(mv_to_array(c_mv_num_with_null_and_empty_val)) AS u(c)
WHERE c_long<>1
  AND c<>'1';
+---+
| c |
+---+
|   |
|   |
|   |
|   |
| 2 |
| 2 |
| 2 |
| 2 |
| 3 |
| 3 |
| 3 |
| 3 |
+---+
(12 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A4_B19_C1 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM test_unnest,
     unnest(mv_to_array(c_mv_num_with_null_and_empty_val)) AS u(c)
WHERE c_long>1
  AND c>'1';
+---+
| c |
+---+
| 2 |
| 2 |
| 2 |
| 3 |
| 3 |
| 3 |
+---+
(6 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A4_B19_C3 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest,
        unnest(mv_to_array(c_mv_num_with_null_and_empty_val)) AS u(c)
   WHERE c_long>1
     AND c>'1');
+---+
| c |
+---+
| 2 |
| 2 |
| 2 |
| 3 |
| 3 |
| 3 |
+---+
(6 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A4_B19_C5 TYPE: NEGATIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest
   WHERE c_long>1
     AND c>'1'), unnest(mv_to_array(c_mv_num_with_null_and_empty_val)) AS u(c);
QueryInterruptedException
!error

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A4_B19_C7 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest,
        unnest(mv_to_array(c_mv_num_with_null_and_empty_val)) AS u(c))
WHERE c_long>1
  AND c>'1';
+---+
| c |
+---+
| 2 |
| 2 |
| 2 |
| 3 |
| 3 |
| 3 |
+---+
(6 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A4_B19_C9 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest), unnest(mv_to_array(c_mv_num_with_null_and_empty_val)) AS u(c)
WHERE c_long>1
  AND c>'1';
+---+
| c |
+---+
| 2 |
| 2 |
| 2 |
| 3 |
| 3 |
| 3 |
+---+
(6 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A4_B20_C1 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM test_unnest,
     unnest(mv_to_array(c_mv_num_with_null_and_empty_val)) AS u(c)
WHERE c_long>=1
  AND c>='1';
+---+
| c |
+---+
| 1 |
| 1 |
| 1 |
| 1 |
| 2 |
| 2 |
| 2 |
| 2 |
| 3 |
| 3 |
| 3 |
| 3 |
+---+
(12 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A4_B20_C3 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest,
        unnest(mv_to_array(c_mv_num_with_null_and_empty_val)) AS u(c)
   WHERE c_long>=1
     AND c>='1');
+---+
| c |
+---+
| 1 |
| 1 |
| 1 |
| 1 |
| 2 |
| 2 |
| 2 |
| 2 |
| 3 |
| 3 |
| 3 |
| 3 |
+---+
(12 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A4_B20_C5 TYPE: NEGATIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest
   WHERE c_long>=1
     AND c>='1'), unnest(mv_to_array(c_mv_num_with_null_and_empty_val)) AS u(c);
QueryInterruptedException
!error

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A4_B20_C7 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest,
        unnest(mv_to_array(c_mv_num_with_null_and_empty_val)) AS u(c))
WHERE c_long>=1
  AND c>='1';
+---+
| c |
+---+
| 1 |
| 1 |
| 1 |
| 1 |
| 2 |
| 2 |
| 2 |
| 2 |
| 3 |
| 3 |
| 3 |
| 3 |
+---+
(12 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A4_B20_C9 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest), unnest(mv_to_array(c_mv_num_with_null_and_empty_val)) AS u(c)
WHERE c_long>=1
  AND c>='1';
+---+
| c |
+---+
| 1 |
| 1 |
| 1 |
| 1 |
| 2 |
| 2 |
| 2 |
| 2 |
| 3 |
| 3 |
| 3 |
| 3 |
+---+
(12 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A4_B21_C1 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM test_unnest,
     unnest(mv_to_array(c_mv_num_with_null_and_empty_val)) AS u(c)
WHERE c_long<1
  AND c<'1';
+---+
| c |
+---+
|   |
+---+
(1 row)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A4_B21_C3 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest,
        unnest(mv_to_array(c_mv_num_with_null_and_empty_val)) AS u(c)
   WHERE c_long<1
     AND c<'1');
+---+
| c |
+---+
|   |
+---+
(1 row)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A4_B21_C5 TYPE: NEGATIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest
   WHERE c_long<1
     AND c<'1'), unnest(mv_to_array(c_mv_num_with_null_and_empty_val)) AS u(c);
QueryInterruptedException
!error

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A4_B21_C7 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest,
        unnest(mv_to_array(c_mv_num_with_null_and_empty_val)) AS u(c))
WHERE c_long<1
  AND c<'1';
+---+
| c |
+---+
|   |
+---+
(1 row)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A4_B21_C9 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest), unnest(mv_to_array(c_mv_num_with_null_and_empty_val)) AS u(c)
WHERE c_long<1
  AND c<'1';
+---+
| c |
+---+
|   |
+---+
(1 row)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A4_B22_C1 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM test_unnest,
     unnest(mv_to_array(c_mv_num_with_null_and_empty_val)) AS u(c)
WHERE c_long<=1
  AND c<='1';
+---+
| c |
+---+
|   |
|   |
| 1 |
| 1 |
+---+
(4 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A4_B22_C3 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest,
        unnest(mv_to_array(c_mv_num_with_null_and_empty_val)) AS u(c)
   WHERE c_long<=1
     AND c<='1');
+---+
| c |
+---+
|   |
|   |
| 1 |
| 1 |
+---+
(4 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A4_B22_C5 TYPE: NEGATIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest
   WHERE c_long<=1
     AND c<='1'), unnest(mv_to_array(c_mv_num_with_null_and_empty_val)) AS u(c);
QueryInterruptedException
!error

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A4_B22_C7 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest,
        unnest(mv_to_array(c_mv_num_with_null_and_empty_val)) AS u(c))
WHERE c_long<=1
  AND c<='1';
+---+
| c |
+---+
|   |
|   |
| 1 |
| 1 |
+---+
(4 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A4_B22_C9 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest), unnest(mv_to_array(c_mv_num_with_null_and_empty_val)) AS u(c)
WHERE c_long<=1
  AND c<='1';
+---+
| c |
+---+
|   |
|   |
| 1 |
| 1 |
+---+
(4 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A4_B23_C1 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM test_unnest,
     unnest(mv_to_array(c_mv_num_with_null_and_empty_val)) AS u(c)
WHERE NOT (c_long<>0
           AND c_long<>1
           AND c_long<>2)
  AND (NOT c<>''
       OR NOT c<>'my_null'
       OR NOT c<>'my_empty'
       OR NOT c<>'1'
       OR NOT c<>'-1'
       OR NOT c<>'0'
       OR NOT c<>'999'
       OR NOT c<>999)
  AND (NOT c='[2]'
       OR NOT c='[3, [4, 5]]'
       OR NOT c='2'
       OR NOT c='3'
       OR NOT c='999'
       OR NOT c=999);
+---+
| c |
+---+
|   |
|   |
|   |
| 1 |
| 1 |
| 1 |
+---+
(6 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A4_B23_C3 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest,
        unnest(mv_to_array(c_mv_num_with_null_and_empty_val)) AS u(c)
   WHERE NOT (c_long<>0
              AND c_long<>1
              AND c_long<>2)
     AND (NOT c<>''
          OR NOT c<>'my_null'
          OR NOT c<>'my_empty'
          OR NOT c<>'1'
          OR NOT c<>'-1'
          OR NOT c<>'0'
          OR NOT c<>'999'
          OR NOT c<>999)
     AND (NOT c='[2]'
          OR NOT c='[3, [4, 5]]'
          OR NOT c='2'
          OR NOT c='3'
          OR NOT c='999'
          OR NOT c=999));
+---+
| c |
+---+
|   |
|   |
|   |
| 1 |
| 1 |
| 1 |
+---+
(6 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A4_B23_C5 TYPE: NEGATIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest
   WHERE NOT (c_long<>0
              AND c_long<>1
              AND c_long<>2)
     AND (NOT c<>''
          OR NOT c<>'my_null'
          OR NOT c<>'my_empty'
          OR NOT c<>'1'
          OR NOT c<>'-1'
          OR NOT c<>'0'
          OR NOT c<>'999'
          OR NOT c<>999)
     AND (NOT c='[2]'
          OR NOT c='[3, [4, 5]]'
          OR NOT c='2'
          OR NOT c='3'
          OR NOT c='999'
          OR NOT c=999)), unnest(mv_to_array(c_mv_num_with_null_and_empty_val)) AS u(c);
QueryInterruptedException
!error

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A4_B23_C7 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest,
        unnest(mv_to_array(c_mv_num_with_null_and_empty_val)) AS u(c))
WHERE NOT (c_long<>0
           AND c_long<>1
           AND c_long<>2)
  AND (NOT c<>''
       OR NOT c<>'my_null'
       OR NOT c<>'my_empty'
       OR NOT c<>'1'
       OR NOT c<>'-1'
       OR NOT c<>'0'
       OR NOT c<>'999'
       OR NOT c<>999)
  AND (NOT c='[2]'
       OR NOT c='[3, [4, 5]]'
       OR NOT c='2'
       OR NOT c='3'
       OR NOT c='999'
       OR NOT c=999);
+---+
| c |
+---+
|   |
|   |
|   |
| 1 |
| 1 |
| 1 |
+---+
(6 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A4_B23_C9 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest), unnest(mv_to_array(c_mv_num_with_null_and_empty_val)) AS u(c)
WHERE NOT (c_long<>0
           AND c_long<>1
           AND c_long<>2)
  AND (NOT c<>''
       OR NOT c<>'my_null'
       OR NOT c<>'my_empty'
       OR NOT c<>'1'
       OR NOT c<>'-1'
       OR NOT c<>'0'
       OR NOT c<>'999'
       OR NOT c<>999)
  AND (NOT c='[2]'
       OR NOT c='[3, [4, 5]]'
       OR NOT c='2'
       OR NOT c='3'
       OR NOT c='999'
       OR NOT c=999);
+---+
| c |
+---+
|   |
|   |
|   |
| 1 |
| 1 |
| 1 |
+---+
(6 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A4_B24_C1 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM test_unnest,
     unnest(mv_to_array(c_mv_num_with_null_and_empty_val)) AS u(c)
WHERE (c_long=0
       OR c_long=1
       OR c_long=2)
  AND (c=''
       OR c='my_null'
       OR c='my_empty'
       OR c='1'
       OR c='-1'
       OR c='0'
       OR c='999'
       OR c=999)
  AND NOT c='[2]'
  AND NOT c='[3, [4, 5]]'
  AND NOT c='2'
  AND NOT c='3'
  AND NOT c='999'
  AND NOT c=999;
+---+
| c |
+---+
|   |
|   |
|   |
| 1 |
| 1 |
| 1 |
+---+
(6 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A4_B24_C3 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest,
        unnest(mv_to_array(c_mv_num_with_null_and_empty_val)) AS u(c)
   WHERE (c_long=0
          OR c_long=1
          OR c_long=2)
     AND (c=''
          OR c='my_null'
          OR c='my_empty'
          OR c='1'
          OR c='-1'
          OR c='0'
          OR c='999'
          OR c=999)
     AND NOT c='[2]'
     AND NOT c='[3, [4, 5]]'
     AND NOT c='2'
     AND NOT c='3'
     AND NOT c='999'
     AND NOT c=999);
+---+
| c |
+---+
|   |
|   |
|   |
| 1 |
| 1 |
| 1 |
+---+
(6 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A4_B24_C5 TYPE: NEGATIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest
   WHERE (c_long=0
          OR c_long=1
          OR c_long=2)
     AND (c=''
          OR c='my_null'
          OR c='my_empty'
          OR c='1'
          OR c='-1'
          OR c='0'
          OR c='999'
          OR c=999)
     AND NOT c='[2]'
     AND NOT c='[3, [4, 5]]'
     AND NOT c='2'
     AND NOT c='3'
     AND NOT c='999'
     AND NOT c=999), unnest(mv_to_array(c_mv_num_with_null_and_empty_val)) AS u(c);
QueryInterruptedException
!error

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A4_B24_C7 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest,
        unnest(mv_to_array(c_mv_num_with_null_and_empty_val)) AS u(c))
WHERE (c_long=0
       OR c_long=1
       OR c_long=2)
  AND (c=''
       OR c='my_null'
       OR c='my_empty'
       OR c='1'
       OR c='-1'
       OR c='0'
       OR c='999'
       OR c=999)
  AND NOT c='[2]'
  AND NOT c='[3, [4, 5]]'
  AND NOT c='2'
  AND NOT c='3'
  AND NOT c='999'
  AND NOT c=999;
+---+
| c |
+---+
|   |
|   |
|   |
| 1 |
| 1 |
| 1 |
+---+
(6 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A4_B24_C9 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest), unnest(mv_to_array(c_mv_num_with_null_and_empty_val)) AS u(c)
WHERE (c_long=0
       OR c_long=1
       OR c_long=2)
  AND (c=''
       OR c='my_null'
       OR c='my_empty'
       OR c='1'
       OR c='-1'
       OR c='0'
       OR c='999'
       OR c=999)
  AND NOT c='[2]'
  AND NOT c='[3, [4, 5]]'
  AND NOT c='2'
  AND NOT c='3'
  AND NOT c='999'
  AND NOT c=999;
+---+
| c |
+---+
|   |
|   |
|   |
| 1 |
| 1 |
| 1 |
+---+
(6 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A4_B25_C1 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM test_unnest,
     unnest(mv_to_array(c_mv_num_with_null_and_empty_val)) AS u(c)
WHERE c_str IS NULL
  AND c IS NULL;
+---+
| c |
+---+
|   |
+---+
(1 row)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A4_B25_C3 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest,
        unnest(mv_to_array(c_mv_num_with_null_and_empty_val)) AS u(c)
   WHERE c_str IS NULL
     AND c IS NULL);
+---+
| c |
+---+
|   |
+---+
(1 row)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A4_B25_C5 TYPE: NEGATIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest
   WHERE c_str IS NULL
     AND c IS NULL), unnest(mv_to_array(c_mv_num_with_null_and_empty_val)) AS u(c);
QueryInterruptedException
!error

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A4_B25_C7 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest,
        unnest(mv_to_array(c_mv_num_with_null_and_empty_val)) AS u(c))
WHERE c_str IS NULL
  AND c IS NULL;
+---+
| c |
+---+
|   |
+---+
(1 row)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A4_B25_C9 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest), unnest(mv_to_array(c_mv_num_with_null_and_empty_val)) AS u(c)
WHERE c_str IS NULL
  AND c IS NULL;
+---+
| c |
+---+
|   |
+---+
(1 row)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A4_B26_C1 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM test_unnest,
     unnest(mv_to_array(c_mv_num_with_null_and_empty_val)) AS u(c)
WHERE c_str IS NOT NULL
  AND c IS NOT NULL;
+---+
| c |
+---+
|   |
|   |
|   |
|   |
| 1 |
| 1 |
| 1 |
| 1 |
| 2 |
| 2 |
| 2 |
| 2 |
| 3 |
| 3 |
| 3 |
| 3 |
+---+
(16 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A4_B26_C3 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest,
        unnest(mv_to_array(c_mv_num_with_null_and_empty_val)) AS u(c)
   WHERE c_str IS NOT NULL
     AND c IS NOT NULL);
+---+
| c |
+---+
|   |
|   |
|   |
|   |
| 1 |
| 1 |
| 1 |
| 1 |
| 2 |
| 2 |
| 2 |
| 2 |
| 3 |
| 3 |
| 3 |
| 3 |
+---+
(16 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A4_B26_C5 TYPE: NEGATIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest
   WHERE c_str IS NOT NULL
     AND c IS NOT NULL), unnest(mv_to_array(c_mv_num_with_null_and_empty_val)) AS u(c);
QueryInterruptedException
!error

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A4_B26_C7 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest,
        unnest(mv_to_array(c_mv_num_with_null_and_empty_val)) AS u(c))
WHERE c_str IS NOT NULL
  AND c IS NOT NULL;
+---+
| c |
+---+
|   |
|   |
|   |
|   |
| 1 |
| 1 |
| 1 |
| 1 |
| 2 |
| 2 |
| 2 |
| 2 |
| 3 |
| 3 |
| 3 |
| 3 |
+---+
(16 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A4_B26_C9 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest), unnest(mv_to_array(c_mv_num_with_null_and_empty_val)) AS u(c)
WHERE c_str IS NOT NULL
  AND c IS NOT NULL;
+---+
| c |
+---+
|   |
|   |
|   |
|   |
| 1 |
| 1 |
| 1 |
| 1 |
| 2 |
| 2 |
| 2 |
| 2 |
| 3 |
| 3 |
| 3 |
| 3 |
+---+
(16 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A4_B27_C1 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM test_unnest,
     unnest(mv_to_array(c_mv_num_with_null_and_empty_val)) AS u(c)
WHERE c_long IN (0,
                 1,
                 2) IS TRUE
  AND c_long IN (3,
                 4) IS NOT TRUE
  AND c IN ('',
            'my_null',
            'my_empty',
            '1',
            '-1',
            '0',
            '999',
            999) IS TRUE
  AND c IN ('[2]',
            '[3, [4, 5]]',
            '2',
            '3',
            '999',
            999) IS NOT TRUE;
+---+
| c |
+---+
|   |
|   |
|   |
| 1 |
| 1 |
| 1 |
+---+
(6 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A4_B27_C3 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest,
        unnest(mv_to_array(c_mv_num_with_null_and_empty_val)) AS u(c)
   WHERE c_long IN (0,
                    1,
                    2) IS TRUE
     AND c_long IN (3,
                    4) IS NOT TRUE
     AND c IN ('',
               'my_null',
               'my_empty',
               '1',
               '-1',
               '0',
               '999',
               999) IS TRUE
     AND c IN ('[2]',
               '[3, [4, 5]]',
               '2',
               '3',
               '999',
               999) IS NOT TRUE);
+---+
| c |
+---+
|   |
|   |
|   |
| 1 |
| 1 |
| 1 |
+---+
(6 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A4_B27_C5 TYPE: NEGATIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest
   WHERE c_long IN (0,
                    1,
                    2) IS TRUE
     AND c_long IN (3,
                    4) IS NOT TRUE
     AND c IN ('',
               'my_null',
               'my_empty',
               '1',
               '-1',
               '0',
               '999',
               999) IS TRUE
     AND c IN ('[2]',
               '[3, [4, 5]]',
               '2',
               '3',
               '999',
               999) IS NOT TRUE), unnest(mv_to_array(c_mv_num_with_null_and_empty_val)) AS u(c);
QueryInterruptedException
!error

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A4_B27_C7 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest,
        unnest(mv_to_array(c_mv_num_with_null_and_empty_val)) AS u(c))
WHERE c_long IN (0,
                 1,
                 2) IS TRUE
  AND c_long IN (3,
                 4) IS NOT TRUE
  AND c IN ('',
            'my_null',
            'my_empty',
            '1',
            '-1',
            '0',
            '999',
            999) IS TRUE
  AND c IN ('[2]',
            '[3, [4, 5]]',
            '2',
            '3',
            '999',
            999) IS NOT TRUE;
+---+
| c |
+---+
|   |
|   |
|   |
| 1 |
| 1 |
| 1 |
+---+
(6 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A4_B27_C9 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest), unnest(mv_to_array(c_mv_num_with_null_and_empty_val)) AS u(c)
WHERE c_long IN (0,
                 1,
                 2) IS TRUE
  AND c_long IN (3,
                 4) IS NOT TRUE
  AND c IN ('',
            'my_null',
            'my_empty',
            '1',
            '-1',
            '0',
            '999',
            999) IS TRUE
  AND c IN ('[2]',
            '[3, [4, 5]]',
            '2',
            '3',
            '999',
            999) IS NOT TRUE;
+---+
| c |
+---+
|   |
|   |
|   |
| 1 |
| 1 |
| 1 |
+---+
(6 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A4_B28_C1 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM test_unnest,
     unnest(mv_to_array(c_mv_num_with_null_and_empty_val)) AS u(c)
WHERE c_long IN (0,
                 1,
                 2) IS NOT FALSE
  AND c_long IN (3,
                 4) IS FALSE
  AND c IN ('',
            'my_null',
            'my_empty',
            '1',
            '-1',
            '0',
            '999',
            999) IS NOT FALSE
  AND c IN ('[2]',
            '[3, [4, 5]]',
            '2',
            '3',
            '999',
            999) IS FALSE;
+---+
| c |
+---+
|   |
|   |
|   |
| 1 |
| 1 |
| 1 |
+---+
(6 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A4_B28_C3 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest,
        unnest(mv_to_array(c_mv_num_with_null_and_empty_val)) AS u(c)
   WHERE c_long IN (0,
                    1,
                    2) IS NOT FALSE
     AND c_long IN (3,
                    4) IS FALSE
     AND c IN ('',
               'my_null',
               'my_empty',
               '1',
               '-1',
               '0',
               '999',
               999) IS NOT FALSE
     AND c IN ('[2]',
               '[3, [4, 5]]',
               '2',
               '3',
               '999',
               999) IS FALSE);
+---+
| c |
+---+
|   |
|   |
|   |
| 1 |
| 1 |
| 1 |
+---+
(6 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A4_B28_C5 TYPE: NEGATIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest
   WHERE c_long IN (0,
                    1,
                    2) IS NOT FALSE
     AND c_long IN (3,
                    4) IS FALSE
     AND c IN ('',
               'my_null',
               'my_empty',
               '1',
               '-1',
               '0',
               '999',
               999) IS NOT FALSE
     AND c IN ('[2]',
               '[3, [4, 5]]',
               '2',
               '3',
               '999',
               999) IS FALSE), unnest(mv_to_array(c_mv_num_with_null_and_empty_val)) AS u(c);
QueryInterruptedException
!error

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A4_B28_C7 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest,
        unnest(mv_to_array(c_mv_num_with_null_and_empty_val)) AS u(c))
WHERE c_long IN (0,
                 1,
                 2) IS NOT FALSE
  AND c_long IN (3,
                 4) IS FALSE
  AND c IN ('',
            'my_null',
            'my_empty',
            '1',
            '-1',
            '0',
            '999',
            999) IS NOT FALSE
  AND c IN ('[2]',
            '[3, [4, 5]]',
            '2',
            '3',
            '999',
            999) IS FALSE;
+---+
| c |
+---+
|   |
|   |
|   |
| 1 |
| 1 |
| 1 |
+---+
(6 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A4_B28_C9 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest), unnest(mv_to_array(c_mv_num_with_null_and_empty_val)) AS u(c)
WHERE c_long IN (0,
                 1,
                 2) IS NOT FALSE
  AND c_long IN (3,
                 4) IS FALSE
  AND c IN ('',
            'my_null',
            'my_empty',
            '1',
            '-1',
            '0',
            '999',
            999) IS NOT FALSE
  AND c IN ('[2]',
            '[3, [4, 5]]',
            '2',
            '3',
            '999',
            999) IS FALSE;
+---+
| c |
+---+
|   |
|   |
|   |
| 1 |
| 1 |
| 1 |
+---+
(6 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A4_B29_C1 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM test_unnest,
     unnest(mv_to_array(c_mv_num_with_null_and_empty_val)) AS u(c)
WHERE (c_long BETWEEN 0 AND 2)
  AND (c_long NOT BETWEEN 3 AND 4)
  AND (c BETWEEN '1' AND '2')
  AND (c NOT BETWEEN '3' AND '4');
+---+
| c |
+---+
| 1 |
| 1 |
| 1 |
| 2 |
| 2 |
| 2 |
+---+
(6 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A4_B29_C3 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest,
        unnest(mv_to_array(c_mv_num_with_null_and_empty_val)) AS u(c)
   WHERE (c_long BETWEEN 0 AND 2)
     AND (c_long NOT BETWEEN 3 AND 4)
     AND (c BETWEEN '1' AND '2')
     AND (c NOT BETWEEN '3' AND '4'));
+---+
| c |
+---+
| 1 |
| 1 |
| 1 |
| 2 |
| 2 |
| 2 |
+---+
(6 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A4_B29_C5 TYPE: NEGATIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest
   WHERE (c_long BETWEEN 0 AND 2)
     AND (c_long NOT BETWEEN 3 AND 4)
     AND (c BETWEEN '1' AND '2')
     AND (c NOT BETWEEN '3' AND '4')), unnest(mv_to_array(c_mv_num_with_null_and_empty_val)) AS u(c);
QueryInterruptedException
!error

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A4_B29_C7 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest,
        unnest(mv_to_array(c_mv_num_with_null_and_empty_val)) AS u(c))
WHERE (c_long BETWEEN 0 AND 2)
  AND (c_long NOT BETWEEN 3 AND 4)
  AND (c BETWEEN '1' AND '2')
  AND (c NOT BETWEEN '3' AND '4');
+---+
| c |
+---+
| 1 |
| 1 |
| 1 |
| 2 |
| 2 |
| 2 |
+---+
(6 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A4_B29_C9 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest), unnest(mv_to_array(c_mv_num_with_null_and_empty_val)) AS u(c)
WHERE (c_long BETWEEN 0 AND 2)
  AND (c_long NOT BETWEEN 3 AND 4)
  AND (c BETWEEN '1' AND '2')
  AND (c NOT BETWEEN '3' AND '4');
+---+
| c |
+---+
| 1 |
| 1 |
| 1 |
| 2 |
| 2 |
| 2 |
+---+
(6 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A4_B30_C1 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM test_unnest,
     unnest(mv_to_array(c_mv_num_with_null_and_empty_val)) AS u(c)
WHERE (c_str like '%2')
  AND (c_str not like '%3')
  AND (c like '1%')
  AND (c not like '3%');
+---+
| c |
+---+
| 1 |
+---+
(1 row)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A4_B30_C3 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest,
        unnest(mv_to_array(c_mv_num_with_null_and_empty_val)) AS u(c)
   WHERE (c_str like '%2')
     AND (c_str not like '%3')
     AND (c like '1%')
     AND (c not like '3%'));
+---+
| c |
+---+
| 1 |
+---+
(1 row)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A4_B30_C5 TYPE: NEGATIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest
   WHERE (c_str like '%2')
     AND (c_str not like '%3')
     AND (c like '1%')
     AND (c not like '3%')), unnest(mv_to_array(c_mv_num_with_null_and_empty_val)) AS u(c);
QueryInterruptedException
!error

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A4_B30_C7 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest,
        unnest(mv_to_array(c_mv_num_with_null_and_empty_val)) AS u(c))
WHERE (c_str like '%2')
  AND (c_str not like '%3')
  AND (c like '1%')
  AND (c not like '3%');
+---+
| c |
+---+
| 1 |
+---+
(1 row)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A4_B30_C9 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest), unnest(mv_to_array(c_mv_num_with_null_and_empty_val)) AS u(c)
WHERE (c_str like '%2')
  AND (c_str not like '%3')
  AND (c like '1%')
  AND (c not like '3%');
+---+
| c |
+---+
| 1 |
+---+
(1 row)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A4_B31_C1 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM test_unnest,
     unnest(mv_to_array(c_mv_num_with_null_and_empty_val)) AS u(c)
WHERE c_long IN (0,
                 1,
                 2)
  AND c_long NOT IN (3,
                     4)
  AND c IN ('',
            'my_null',
            'my_empty',
            '1',
            '-1',
            '0',
            '999',
            999)
  AND c NOT IN ('[2]',
                '[3, [4, 5]]',
                '2',
                '3',
                '999',
                999);
+---+
| c |
+---+
|   |
|   |
|   |
| 1 |
| 1 |
| 1 |
+---+
(6 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A4_B31_C3 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest,
        unnest(mv_to_array(c_mv_num_with_null_and_empty_val)) AS u(c)
   WHERE c_long IN (0,
                    1,
                    2)
     AND c_long NOT IN (3,
                        4)
     AND c IN ('',
               'my_null',
               'my_empty',
               '1',
               '-1',
               '0',
               '999',
               999)
     AND c NOT IN ('[2]',
                   '[3, [4, 5]]',
                   '2',
                   '3',
                   '999',
                   999));
+---+
| c |
+---+
|   |
|   |
|   |
| 1 |
| 1 |
| 1 |
+---+
(6 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A4_B31_C5 TYPE: NEGATIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest
   WHERE c_long IN (0,
                    1,
                    2)
     AND c_long NOT IN (3,
                        4)
     AND c IN ('',
               'my_null',
               'my_empty',
               '1',
               '-1',
               '0',
               '999',
               999)
     AND c NOT IN ('[2]',
                   '[3, [4, 5]]',
                   '2',
                   '3',
                   '999',
                   999)), unnest(mv_to_array(c_mv_num_with_null_and_empty_val)) AS u(c);
QueryInterruptedException
!error

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A4_B31_C7 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest,
        unnest(mv_to_array(c_mv_num_with_null_and_empty_val)) AS u(c))
WHERE c_long IN (0,
                 1,
                 2)
  AND c_long NOT IN (3,
                     4)
  AND c IN ('',
            'my_null',
            'my_empty',
            '1',
            '-1',
            '0',
            '999',
            999)
  AND c NOT IN ('[2]',
                '[3, [4, 5]]',
                '2',
                '3',
                '999',
                999);
+---+
| c |
+---+
|   |
|   |
|   |
| 1 |
| 1 |
| 1 |
+---+
(6 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A4_B31_C9 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest), unnest(mv_to_array(c_mv_num_with_null_and_empty_val)) AS u(c)
WHERE c_long IN (0,
                 1,
                 2)
  AND c_long NOT IN (3,
                     4)
  AND c IN ('',
            'my_null',
            'my_empty',
            '1',
            '-1',
            '0',
            '999',
            999)
  AND c NOT IN ('[2]',
                '[3, [4, 5]]',
                '2',
                '3',
                '999',
                999);
+---+
| c |
+---+
|   |
|   |
|   |
| 1 |
| 1 |
| 1 |
+---+
(6 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A4_B32_C1 TYPE: NEGATIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM test_unnest,
     unnest(mv_to_array(c_mv_num_with_null_and_empty_val)) AS u(c)
WHERE c_long IN
    (SELECT col
     FROM (
           VALUES(0),(1),(2)) AS t(col))
  AND c_long NOT IN
    (SELECT col
     FROM (
           VALUES(3),(4)) AS t(col))
  AND c IN
    (SELECT col
     FROM (
           VALUES(''),('my_null'),('my_empty'),('1'),('-1'),('0'),('999')) AS t(col))
  AND c NOT IN
    (SELECT col
     FROM (
           VALUES('[2]'),('[3, [4, 5]]'),('2'),('3'),('999')) AS t(col));
Unhandled Query Planning Failure
!error

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A4_B32_C3 TYPE: NEGATIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest,
        unnest(mv_to_array(c_mv_num_with_null_and_empty_val)) AS u(c)
   WHERE c_long IN
       (SELECT col
        FROM (
              VALUES(0),(1),(2)) AS t(col))
     AND c_long NOT IN
       (SELECT col
        FROM (
              VALUES(3),(4)) AS t(col))
     AND c IN
       (SELECT col
        FROM (
              VALUES(''),('my_null'),('my_empty'),('1'),('-1'),('0'),('999')) AS t(col))
     AND c NOT IN
       (SELECT col
        FROM (
              VALUES('[2]'),('[3, [4, 5]]'),('2'),('3'),('999')) AS t(col)));
Unhandled Query Planning Failure
!error

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A4_B32_C5 TYPE: NEGATIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest
   WHERE c_long IN
       (SELECT col
        FROM (
              VALUES(0),(1),(2)) AS t(col))
     AND c_long NOT IN
       (SELECT col
        FROM (
              VALUES(3),(4)) AS t(col))
     AND c IN
       (SELECT col
        FROM (
              VALUES(''),('my_null'),('my_empty'),('1'),('-1'),('0'),('999')) AS t(col))
     AND c NOT IN
       (SELECT col
        FROM (
              VALUES('[2]'),('[3, [4, 5]]'),('2'),('3'),('999')) AS t(col))), unnest(mv_to_array(c_mv_num_with_null_and_empty_val)) AS u(c);
QueryInterruptedException
!error

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A4_B32_C7 TYPE: NEGATIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest,
        unnest(mv_to_array(c_mv_num_with_null_and_empty_val)) AS u(c))
WHERE c_long IN
    (SELECT col
     FROM (
           VALUES(0),(1),(2)) AS t(col))
  AND c_long NOT IN
    (SELECT col
     FROM (
           VALUES(3),(4)) AS t(col))
  AND c IN
    (SELECT col
     FROM (
           VALUES(''),('my_null'),('my_empty'),('1'),('-1'),('0'),('999')) AS t(col))
  AND c NOT IN
    (SELECT col
     FROM (
           VALUES('[2]'),('[3, [4, 5]]'),('2'),('3'),('999')) AS t(col));
Unhandled Query Planning Failure
!error

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A4_B32_C9 TYPE: NEGATIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest), unnest(mv_to_array(c_mv_num_with_null_and_empty_val)) AS u(c)
WHERE c_long IN
    (SELECT col
     FROM (
           VALUES(0),(1),(2)) AS t(col))
  AND c_long NOT IN
    (SELECT col
     FROM (
           VALUES(3),(4)) AS t(col))
  AND c IN
    (SELECT col
     FROM (
           VALUES(''),('my_null'),('my_empty'),('1'),('-1'),('0'),('999')) AS t(col))
  AND c NOT IN
    (SELECT col
     FROM (
           VALUES('[2]'),('[3, [4, 5]]'),('2'),('3'),('999')) AS t(col));
Unhandled Query Planning Failure
!error

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A4_B33_C1 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM test_unnest,
     unnest(mv_to_array(c_mv_num_with_null_and_empty_val)) AS u(c)
WHERE c_long=1;
+---+
| c |
+---+
|   |
| 1 |
| 2 |
| 3 |
|   |
+---+
(5 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A4_B33_C3 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest,
        unnest(mv_to_array(c_mv_num_with_null_and_empty_val)) AS u(c)
   WHERE c_long=1);
+---+
| c |
+---+
|   |
| 1 |
| 2 |
| 3 |
|   |
+---+
(5 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A4_B33_C5 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest
   WHERE c_long=1), unnest(mv_to_array(c_mv_num_with_null_and_empty_val)) AS u(c);
+---+
| c |
+---+
|   |
| 1 |
| 2 |
| 3 |
|   |
+---+
(5 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A4_B33_C7 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest,
        unnest(mv_to_array(c_mv_num_with_null_and_empty_val)) AS u(c))
WHERE c_long=1;
+---+
| c |
+---+
|   |
| 1 |
| 2 |
| 3 |
|   |
+---+
(5 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A4_B33_C9 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest), unnest(mv_to_array(c_mv_num_with_null_and_empty_val)) AS u(c)
WHERE c_long=1;
+---+
| c |
+---+
|   |
| 1 |
| 2 |
| 3 |
|   |
+---+
(5 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A4_B34_C1 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM test_unnest,
     unnest(mv_to_array(c_mv_num_with_null_and_empty_val)) AS u(c)
WHERE c_long<>1;
+---+
| c |
+---+
|   |
|   |
|   |
|   |
| 1 |
| 1 |
| 1 |
| 1 |
| 2 |
| 2 |
| 2 |
| 2 |
| 3 |
| 3 |
| 3 |
| 3 |
|   |
|   |
|   |
|   |
+---+
(20 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A4_B34_C3 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest,
        unnest(mv_to_array(c_mv_num_with_null_and_empty_val)) AS u(c)
   WHERE c_long<>1);
+---+
| c |
+---+
|   |
|   |
|   |
|   |
| 1 |
| 1 |
| 1 |
| 1 |
| 2 |
| 2 |
| 2 |
| 2 |
| 3 |
| 3 |
| 3 |
| 3 |
|   |
|   |
|   |
|   |
+---+
(20 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A4_B34_C5 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest
   WHERE c_long<>1), unnest(mv_to_array(c_mv_num_with_null_and_empty_val)) AS u(c);
+---+
| c |
+---+
|   |
|   |
|   |
|   |
| 1 |
| 1 |
| 1 |
| 1 |
| 2 |
| 2 |
| 2 |
| 2 |
| 3 |
| 3 |
| 3 |
| 3 |
|   |
|   |
|   |
|   |
+---+
(20 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A4_B34_C7 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest,
        unnest(mv_to_array(c_mv_num_with_null_and_empty_val)) AS u(c))
WHERE c_long<>1;
+---+
| c |
+---+
|   |
|   |
|   |
|   |
| 1 |
| 1 |
| 1 |
| 1 |
| 2 |
| 2 |
| 2 |
| 2 |
| 3 |
| 3 |
| 3 |
| 3 |
|   |
|   |
|   |
|   |
+---+
(20 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A4_B34_C9 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest), unnest(mv_to_array(c_mv_num_with_null_and_empty_val)) AS u(c)
WHERE c_long<>1;
+---+
| c |
+---+
|   |
|   |
|   |
|   |
| 1 |
| 1 |
| 1 |
| 1 |
| 2 |
| 2 |
| 2 |
| 2 |
| 3 |
| 3 |
| 3 |
| 3 |
|   |
|   |
|   |
|   |
+---+
(20 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A4_B35_C1 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM test_unnest,
     unnest(mv_to_array(c_mv_num_with_null_and_empty_val)) AS u(c)
WHERE c_long>1;
+---+
| c |
+---+
|   |
|   |
|   |
| 1 |
| 1 |
| 1 |
| 2 |
| 2 |
| 2 |
| 3 |
| 3 |
| 3 |
|   |
|   |
|   |
+---+
(15 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A4_B35_C3 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest,
        unnest(mv_to_array(c_mv_num_with_null_and_empty_val)) AS u(c)
   WHERE c_long>1);
+---+
| c |
+---+
|   |
|   |
|   |
| 1 |
| 1 |
| 1 |
| 2 |
| 2 |
| 2 |
| 3 |
| 3 |
| 3 |
|   |
|   |
|   |
+---+
(15 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A4_B35_C5 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest
   WHERE c_long>1), unnest(mv_to_array(c_mv_num_with_null_and_empty_val)) AS u(c);
+---+
| c |
+---+
|   |
|   |
|   |
| 1 |
| 1 |
| 1 |
| 2 |
| 2 |
| 2 |
| 3 |
| 3 |
| 3 |
|   |
|   |
|   |
+---+
(15 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A4_B35_C7 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest,
        unnest(mv_to_array(c_mv_num_with_null_and_empty_val)) AS u(c))
WHERE c_long>1;
+---+
| c |
+---+
|   |
|   |
|   |
| 1 |
| 1 |
| 1 |
| 2 |
| 2 |
| 2 |
| 3 |
| 3 |
| 3 |
|   |
|   |
|   |
+---+
(15 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A4_B35_C9 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest), unnest(mv_to_array(c_mv_num_with_null_and_empty_val)) AS u(c)
WHERE c_long>1;
+---+
| c |
+---+
|   |
|   |
|   |
| 1 |
| 1 |
| 1 |
| 2 |
| 2 |
| 2 |
| 3 |
| 3 |
| 3 |
|   |
|   |
|   |
+---+
(15 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A4_B36_C1 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM test_unnest,
     unnest(mv_to_array(c_mv_num_with_null_and_empty_val)) AS u(c)
WHERE c_long>=1;
+---+
| c |
+---+
|   |
|   |
|   |
|   |
| 1 |
| 1 |
| 1 |
| 1 |
| 2 |
| 2 |
| 2 |
| 2 |
| 3 |
| 3 |
| 3 |
| 3 |
|   |
|   |
|   |
|   |
+---+
(20 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A4_B36_C3 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest,
        unnest(mv_to_array(c_mv_num_with_null_and_empty_val)) AS u(c)
   WHERE c_long>=1);
+---+
| c |
+---+
|   |
|   |
|   |
|   |
| 1 |
| 1 |
| 1 |
| 1 |
| 2 |
| 2 |
| 2 |
| 2 |
| 3 |
| 3 |
| 3 |
| 3 |
|   |
|   |
|   |
|   |
+---+
(20 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A4_B36_C5 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest
   WHERE c_long>=1), unnest(mv_to_array(c_mv_num_with_null_and_empty_val)) AS u(c);
+---+
| c |
+---+
|   |
|   |
|   |
|   |
| 1 |
| 1 |
| 1 |
| 1 |
| 2 |
| 2 |
| 2 |
| 2 |
| 3 |
| 3 |
| 3 |
| 3 |
|   |
|   |
|   |
|   |
+---+
(20 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A4_B36_C7 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest,
        unnest(mv_to_array(c_mv_num_with_null_and_empty_val)) AS u(c))
WHERE c_long>=1;
+---+
| c |
+---+
|   |
|   |
|   |
|   |
| 1 |
| 1 |
| 1 |
| 1 |
| 2 |
| 2 |
| 2 |
| 2 |
| 3 |
| 3 |
| 3 |
| 3 |
|   |
|   |
|   |
|   |
+---+
(20 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A4_B36_C9 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest), unnest(mv_to_array(c_mv_num_with_null_and_empty_val)) AS u(c)
WHERE c_long>=1;
+---+
| c |
+---+
|   |
|   |
|   |
|   |
| 1 |
| 1 |
| 1 |
| 1 |
| 2 |
| 2 |
| 2 |
| 2 |
| 3 |
| 3 |
| 3 |
| 3 |
|   |
|   |
|   |
|   |
+---+
(20 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A4_B37_C1 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM test_unnest,
     unnest(mv_to_array(c_mv_num_with_null_and_empty_val)) AS u(c)
WHERE c_long<1;
+---+
| c |
+---+
|   |
| 1 |
| 2 |
| 3 |
|   |
+---+
(5 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A4_B37_C3 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest,
        unnest(mv_to_array(c_mv_num_with_null_and_empty_val)) AS u(c)
   WHERE c_long<1);
+---+
| c |
+---+
|   |
| 1 |
| 2 |
| 3 |
|   |
+---+
(5 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A4_B37_C5 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest
   WHERE c_long<1), unnest(mv_to_array(c_mv_num_with_null_and_empty_val)) AS u(c);
+---+
| c |
+---+
|   |
| 1 |
| 2 |
| 3 |
|   |
+---+
(5 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A4_B37_C7 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest,
        unnest(mv_to_array(c_mv_num_with_null_and_empty_val)) AS u(c))
WHERE c_long<1;
+---+
| c |
+---+
|   |
| 1 |
| 2 |
| 3 |
|   |
+---+
(5 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A4_B37_C9 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest), unnest(mv_to_array(c_mv_num_with_null_and_empty_val)) AS u(c)
WHERE c_long<1;
+---+
| c |
+---+
|   |
| 1 |
| 2 |
| 3 |
|   |
+---+
(5 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A4_B38_C1 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM test_unnest,
     unnest(mv_to_array(c_mv_num_with_null_and_empty_val)) AS u(c)
WHERE c_long<=1;
+---+
| c |
+---+
|   |
|   |
| 1 |
| 1 |
| 2 |
| 2 |
| 3 |
| 3 |
|   |
|   |
+---+
(10 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A4_B38_C3 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest,
        unnest(mv_to_array(c_mv_num_with_null_and_empty_val)) AS u(c)
   WHERE c_long<=1);
+---+
| c |
+---+
|   |
|   |
| 1 |
| 1 |
| 2 |
| 2 |
| 3 |
| 3 |
|   |
|   |
+---+
(10 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A4_B38_C5 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest
   WHERE c_long<=1), unnest(mv_to_array(c_mv_num_with_null_and_empty_val)) AS u(c);
+---+
| c |
+---+
|   |
|   |
| 1 |
| 1 |
| 2 |
| 2 |
| 3 |
| 3 |
|   |
|   |
+---+
(10 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A4_B38_C7 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest,
        unnest(mv_to_array(c_mv_num_with_null_and_empty_val)) AS u(c))
WHERE c_long<=1;
+---+
| c |
+---+
|   |
|   |
| 1 |
| 1 |
| 2 |
| 2 |
| 3 |
| 3 |
|   |
|   |
+---+
(10 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A4_B38_C9 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest), unnest(mv_to_array(c_mv_num_with_null_and_empty_val)) AS u(c)
WHERE c_long<=1;
+---+
| c |
+---+
|   |
|   |
| 1 |
| 1 |
| 2 |
| 2 |
| 3 |
| 3 |
|   |
|   |
+---+
(10 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A4_B39_C1 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM test_unnest,
     unnest(mv_to_array(c_mv_num_with_null_and_empty_val)) AS u(c)
WHERE (NOT c_str<>''
       OR NOT c_str<>'str2'
       OR NOT c_long<>0
       OR NOT c_long<>1
       OR NOT c_long<>2
       OR NOT c_long<>999)
  AND (NOT c_str='str3'
       OR NOT c_str='str4'
       OR NOT c_long=3
       OR NOT c_long=4
       OR NOT c_long=999);
+---+
| c |
+---+
|   |
|   |
|   |
| 1 |
| 1 |
| 1 |
| 2 |
| 2 |
| 2 |
| 3 |
| 3 |
| 3 |
|   |
|   |
|   |
+---+
(15 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A4_B39_C3 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest,
        unnest(mv_to_array(c_mv_num_with_null_and_empty_val)) AS u(c)
   WHERE (NOT c_str<>''
          OR NOT c_str<>'str2'
          OR NOT c_long<>0
          OR NOT c_long<>1
          OR NOT c_long<>2
          OR NOT c_long<>999)
     AND (NOT c_str='str3'
          OR NOT c_str='str4'
          OR NOT c_long=3
          OR NOT c_long=4
          OR NOT c_long=999));
+---+
| c |
+---+
|   |
|   |
|   |
| 1 |
| 1 |
| 1 |
| 2 |
| 2 |
| 2 |
| 3 |
| 3 |
| 3 |
|   |
|   |
|   |
+---+
(15 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A4_B39_C5 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest
   WHERE (NOT c_str<>''
          OR NOT c_str<>'str2'
          OR NOT c_long<>0
          OR NOT c_long<>1
          OR NOT c_long<>2
          OR NOT c_long<>999)
     AND (NOT c_str='str3'
          OR NOT c_str='str4'
          OR NOT c_long=3
          OR NOT c_long=4
          OR NOT c_long=999)), unnest(mv_to_array(c_mv_num_with_null_and_empty_val)) AS u(c);
+---+
| c |
+---+
|   |
|   |
|   |
| 1 |
| 1 |
| 1 |
| 2 |
| 2 |
| 2 |
| 3 |
| 3 |
| 3 |
|   |
|   |
|   |
+---+
(15 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A4_B39_C7 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest,
        unnest(mv_to_array(c_mv_num_with_null_and_empty_val)) AS u(c))
WHERE (NOT c_str<>''
       OR NOT c_str<>'str2'
       OR NOT c_long<>0
       OR NOT c_long<>1
       OR NOT c_long<>2
       OR NOT c_long<>999)
  AND (NOT c_str='str3'
       OR NOT c_str='str4'
       OR NOT c_long=3
       OR NOT c_long=4
       OR NOT c_long=999);
+---+
| c |
+---+
|   |
|   |
|   |
| 1 |
| 1 |
| 1 |
| 2 |
| 2 |
| 2 |
| 3 |
| 3 |
| 3 |
|   |
|   |
|   |
+---+
(15 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A4_B39_C9 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest), unnest(mv_to_array(c_mv_num_with_null_and_empty_val)) AS u(c)
WHERE (NOT c_str<>''
       OR NOT c_str<>'str2'
       OR NOT c_long<>0
       OR NOT c_long<>1
       OR NOT c_long<>2
       OR NOT c_long<>999)
  AND (NOT c_str='str3'
       OR NOT c_str='str4'
       OR NOT c_long=3
       OR NOT c_long=4
       OR NOT c_long=999);
+---+
| c |
+---+
|   |
|   |
|   |
| 1 |
| 1 |
| 1 |
| 2 |
| 2 |
| 2 |
| 3 |
| 3 |
| 3 |
|   |
|   |
|   |
+---+
(15 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A4_B40_C1 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM test_unnest,
     unnest(mv_to_array(c_mv_num_with_null_and_empty_val)) AS u(c)
WHERE (c_str=''
       OR c_str='str2'
       OR c_long=0
       OR c_long=1
       OR c_long=2
       OR c_long=999)
  AND NOT c_str='str3'
  AND NOT c_str='str4'
  AND NOT c_long=3
  AND NOT c_long=4
  AND NOT c_long=999;
+---+
| c |
+---+
|   |
|   |
| 1 |
| 1 |
| 2 |
| 2 |
| 3 |
| 3 |
|   |
|   |
+---+
(10 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A4_B40_C3 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest,
        unnest(mv_to_array(c_mv_num_with_null_and_empty_val)) AS u(c)
   WHERE (c_str=''
          OR c_str='str2'
          OR c_long=0
          OR c_long=1
          OR c_long=2
          OR c_long=999)
     AND NOT c_str='str3'
     AND NOT c_str='str4'
     AND NOT c_long=3
     AND NOT c_long=4
     AND NOT c_long=999);
+---+
| c |
+---+
|   |
|   |
| 1 |
| 1 |
| 2 |
| 2 |
| 3 |
| 3 |
|   |
|   |
+---+
(10 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A4_B40_C5 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest
   WHERE (c_str=''
          OR c_str='str2'
          OR c_long=0
          OR c_long=1
          OR c_long=2
          OR c_long=999)
     AND NOT c_str='str3'
     AND NOT c_str='str4'
     AND NOT c_long=3
     AND NOT c_long=4
     AND NOT c_long=999), unnest(mv_to_array(c_mv_num_with_null_and_empty_val)) AS u(c);
+---+
| c |
+---+
|   |
|   |
| 1 |
| 1 |
| 2 |
| 2 |
| 3 |
| 3 |
|   |
|   |
+---+
(10 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A4_B40_C7 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest,
        unnest(mv_to_array(c_mv_num_with_null_and_empty_val)) AS u(c))
WHERE (c_str=''
       OR c_str='str2'
       OR c_long=0
       OR c_long=1
       OR c_long=2
       OR c_long=999)
  AND NOT c_str='str3'
  AND NOT c_str='str4'
  AND NOT c_long=3
  AND NOT c_long=4
  AND NOT c_long=999;
+---+
| c |
+---+
|   |
|   |
| 1 |
| 1 |
| 2 |
| 2 |
| 3 |
| 3 |
|   |
|   |
+---+
(10 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A4_B40_C9 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest), unnest(mv_to_array(c_mv_num_with_null_and_empty_val)) AS u(c)
WHERE (c_str=''
       OR c_str='str2'
       OR c_long=0
       OR c_long=1
       OR c_long=2
       OR c_long=999)
  AND NOT c_str='str3'
  AND NOT c_str='str4'
  AND NOT c_long=3
  AND NOT c_long=4
  AND NOT c_long=999;
+---+
| c |
+---+
|   |
|   |
| 1 |
| 1 |
| 2 |
| 2 |
| 3 |
| 3 |
|   |
|   |
+---+
(10 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A4_B41_C1 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM test_unnest,
     unnest(mv_to_array(c_mv_num_with_null_and_empty_val)) AS u(c)
WHERE c_str IS NULL;
+---+
| c |
+---+
|   |
| 1 |
| 2 |
| 3 |
|   |
+---+
(5 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A4_B41_C3 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest,
        unnest(mv_to_array(c_mv_num_with_null_and_empty_val)) AS u(c)
   WHERE c_str IS NULL);
+---+
| c |
+---+
|   |
| 1 |
| 2 |
| 3 |
|   |
+---+
(5 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A4_B41_C5 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest
   WHERE c_str IS NULL), unnest(mv_to_array(c_mv_num_with_null_and_empty_val)) AS u(c);
+---+
| c |
+---+
|   |
| 1 |
| 2 |
| 3 |
|   |
+---+
(5 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A4_B41_C7 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest,
        unnest(mv_to_array(c_mv_num_with_null_and_empty_val)) AS u(c))
WHERE c_str IS NULL;
+---+
| c |
+---+
|   |
| 1 |
| 2 |
| 3 |
|   |
+---+
(5 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A4_B41_C9 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest), unnest(mv_to_array(c_mv_num_with_null_and_empty_val)) AS u(c)
WHERE c_str IS NULL;
+---+
| c |
+---+
|   |
| 1 |
| 2 |
| 3 |
|   |
+---+
(5 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A4_B42_C1 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM test_unnest,
     unnest(mv_to_array(c_mv_num_with_null_and_empty_val)) AS u(c)
WHERE c_str IS NOT NULL;
+---+
| c |
+---+
|   |
|   |
|   |
|   |
| 1 |
| 1 |
| 1 |
| 1 |
| 2 |
| 2 |
| 2 |
| 2 |
| 3 |
| 3 |
| 3 |
| 3 |
|   |
|   |
|   |
|   |
+---+
(20 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A4_B42_C3 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest,
        unnest(mv_to_array(c_mv_num_with_null_and_empty_val)) AS u(c)
   WHERE c_str IS NOT NULL);
+---+
| c |
+---+
|   |
|   |
|   |
|   |
| 1 |
| 1 |
| 1 |
| 1 |
| 2 |
| 2 |
| 2 |
| 2 |
| 3 |
| 3 |
| 3 |
| 3 |
|   |
|   |
|   |
|   |
+---+
(20 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A4_B42_C5 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest
   WHERE c_str IS NOT NULL), unnest(mv_to_array(c_mv_num_with_null_and_empty_val)) AS u(c);
+---+
| c |
+---+
|   |
|   |
|   |
|   |
| 1 |
| 1 |
| 1 |
| 1 |
| 2 |
| 2 |
| 2 |
| 2 |
| 3 |
| 3 |
| 3 |
| 3 |
|   |
|   |
|   |
|   |
+---+
(20 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A4_B42_C7 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest,
        unnest(mv_to_array(c_mv_num_with_null_and_empty_val)) AS u(c))
WHERE c_str IS NOT NULL;
+---+
| c |
+---+
|   |
|   |
|   |
|   |
| 1 |
| 1 |
| 1 |
| 1 |
| 2 |
| 2 |
| 2 |
| 2 |
| 3 |
| 3 |
| 3 |
| 3 |
|   |
|   |
|   |
|   |
+---+
(20 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A4_B42_C9 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest), unnest(mv_to_array(c_mv_num_with_null_and_empty_val)) AS u(c)
WHERE c_str IS NOT NULL;
+---+
| c |
+---+
|   |
|   |
|   |
|   |
| 1 |
| 1 |
| 1 |
| 1 |
| 2 |
| 2 |
| 2 |
| 2 |
| 3 |
| 3 |
| 3 |
| 3 |
|   |
|   |
|   |
|   |
+---+
(20 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A4_B43_C1 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM test_unnest,
     unnest(mv_to_array(c_mv_num_with_null_and_empty_val)) AS u(c)
WHERE c_str IN ('',
                'str2',
                999) IS TRUE
  AND c_str IN ('str3',
                'str4',
                999) IS NOT TRUE
  AND c_long IN (0,
                 1,
                 2,
                 999) IS TRUE
  AND c_long IN (3,
                 4,
                 999) IS NOT TRUE;
+---+
| c |
+---+
|   |
|   |
| 1 |
| 1 |
| 2 |
| 2 |
| 3 |
| 3 |
|   |
|   |
+---+
(10 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A4_B43_C3 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest,
        unnest(mv_to_array(c_mv_num_with_null_and_empty_val)) AS u(c)
   WHERE c_str IN ('',
                   'str2',
                   999) IS TRUE
     AND c_str IN ('str3',
                   'str4',
                   999) IS NOT TRUE
     AND c_long IN (0,
                    1,
                    2,
                    999) IS TRUE
     AND c_long IN (3,
                    4,
                    999) IS NOT TRUE);
+---+
| c |
+---+
|   |
|   |
| 1 |
| 1 |
| 2 |
| 2 |
| 3 |
| 3 |
|   |
|   |
+---+
(10 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A4_B43_C5 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest
   WHERE c_str IN ('',
                   'str2',
                   999) IS TRUE
     AND c_str IN ('str3',
                   'str4',
                   999) IS NOT TRUE
     AND c_long IN (0,
                    1,
                    2,
                    999) IS TRUE
     AND c_long IN (3,
                    4,
                    999) IS NOT TRUE), unnest(mv_to_array(c_mv_num_with_null_and_empty_val)) AS u(c);
+---+
| c |
+---+
|   |
|   |
| 1 |
| 1 |
| 2 |
| 2 |
| 3 |
| 3 |
|   |
|   |
+---+
(10 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A4_B43_C7 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest,
        unnest(mv_to_array(c_mv_num_with_null_and_empty_val)) AS u(c))
WHERE c_str IN ('',
                'str2',
                999) IS TRUE
  AND c_str IN ('str3',
                'str4',
                999) IS NOT TRUE
  AND c_long IN (0,
                 1,
                 2,
                 999) IS TRUE
  AND c_long IN (3,
                 4,
                 999) IS NOT TRUE;
+---+
| c |
+---+
|   |
|   |
| 1 |
| 1 |
| 2 |
| 2 |
| 3 |
| 3 |
|   |
|   |
+---+
(10 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A4_B43_C9 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest), unnest(mv_to_array(c_mv_num_with_null_and_empty_val)) AS u(c)
WHERE c_str IN ('',
                'str2',
                999) IS TRUE
  AND c_str IN ('str3',
                'str4',
                999) IS NOT TRUE
  AND c_long IN (0,
                 1,
                 2,
                 999) IS TRUE
  AND c_long IN (3,
                 4,
                 999) IS NOT TRUE;
+---+
| c |
+---+
|   |
|   |
| 1 |
| 1 |
| 2 |
| 2 |
| 3 |
| 3 |
|   |
|   |
+---+
(10 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A4_B44_C1 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM test_unnest,
     unnest(mv_to_array(c_mv_num_with_null_and_empty_val)) AS u(c)
WHERE c_str IN ('',
                'str2',
                999) IS NOT FALSE
  AND c_str IN ('str3',
                'str4',
                999) IS FALSE
  AND c_long IN (0,
                 1,
                 2,
                 999) IS NOT FALSE
  AND c_long IN (3,
                 4,
                 999) IS FALSE;
+---+
| c |
+---+
|   |
|   |
| 1 |
| 1 |
| 2 |
| 2 |
| 3 |
| 3 |
|   |
|   |
+---+
(10 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A4_B44_C3 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest,
        unnest(mv_to_array(c_mv_num_with_null_and_empty_val)) AS u(c)
   WHERE c_str IN ('',
                   'str2',
                   999) IS NOT FALSE
     AND c_str IN ('str3',
                   'str4',
                   999) IS FALSE
     AND c_long IN (0,
                    1,
                    2,
                    999) IS NOT FALSE
     AND c_long IN (3,
                    4,
                    999) IS FALSE);
+---+
| c |
+---+
|   |
|   |
| 1 |
| 1 |
| 2 |
| 2 |
| 3 |
| 3 |
|   |
|   |
+---+
(10 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A4_B44_C5 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest
   WHERE c_str IN ('',
                   'str2',
                   999) IS NOT FALSE
     AND c_str IN ('str3',
                   'str4',
                   999) IS FALSE
     AND c_long IN (0,
                    1,
                    2,
                    999) IS NOT FALSE
     AND c_long IN (3,
                    4,
                    999) IS FALSE), unnest(mv_to_array(c_mv_num_with_null_and_empty_val)) AS u(c);
+---+
| c |
+---+
|   |
|   |
| 1 |
| 1 |
| 2 |
| 2 |
| 3 |
| 3 |
|   |
|   |
+---+
(10 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A4_B44_C7 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest,
        unnest(mv_to_array(c_mv_num_with_null_and_empty_val)) AS u(c))
WHERE c_str IN ('',
                'str2',
                999) IS NOT FALSE
  AND c_str IN ('str3',
                'str4',
                999) IS FALSE
  AND c_long IN (0,
                 1,
                 2,
                 999) IS NOT FALSE
  AND c_long IN (3,
                 4,
                 999) IS FALSE;
+---+
| c |
+---+
|   |
|   |
| 1 |
| 1 |
| 2 |
| 2 |
| 3 |
| 3 |
|   |
|   |
+---+
(10 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A4_B44_C9 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest), unnest(mv_to_array(c_mv_num_with_null_and_empty_val)) AS u(c)
WHERE c_str IN ('',
                'str2',
                999) IS NOT FALSE
  AND c_str IN ('str3',
                'str4',
                999) IS FALSE
  AND c_long IN (0,
                 1,
                 2,
                 999) IS NOT FALSE
  AND c_long IN (3,
                 4,
                 999) IS FALSE;
+---+
| c |
+---+
|   |
|   |
| 1 |
| 1 |
| 2 |
| 2 |
| 3 |
| 3 |
|   |
|   |
+---+
(10 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A4_B45_C1 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM test_unnest,
     unnest(mv_to_array(c_mv_num_with_null_and_empty_val)) AS u(c)
WHERE (c_long BETWEEN 0 AND 2)
  AND (c_long NOT BETWEEN 3 AND 4);
+---+
| c |
+---+
|   |
|   |
|   |
| 1 |
| 1 |
| 1 |
| 2 |
| 2 |
| 2 |
| 3 |
| 3 |
| 3 |
|   |
|   |
|   |
+---+
(15 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A4_B45_C3 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest,
        unnest(mv_to_array(c_mv_num_with_null_and_empty_val)) AS u(c)
   WHERE (c_long BETWEEN 0 AND 2)
     AND (c_long NOT BETWEEN 3 AND 4));
+---+
| c |
+---+
|   |
|   |
|   |
| 1 |
| 1 |
| 1 |
| 2 |
| 2 |
| 2 |
| 3 |
| 3 |
| 3 |
|   |
|   |
|   |
+---+
(15 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A4_B45_C5 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest
   WHERE (c_long BETWEEN 0 AND 2)
     AND (c_long NOT BETWEEN 3 AND 4)), unnest(mv_to_array(c_mv_num_with_null_and_empty_val)) AS u(c);
+---+
| c |
+---+
|   |
|   |
|   |
| 1 |
| 1 |
| 1 |
| 2 |
| 2 |
| 2 |
| 3 |
| 3 |
| 3 |
|   |
|   |
|   |
+---+
(15 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A4_B45_C7 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest,
        unnest(mv_to_array(c_mv_num_with_null_and_empty_val)) AS u(c))
WHERE (c_long BETWEEN 0 AND 2)
  AND (c_long NOT BETWEEN 3 AND 4);
+---+
| c |
+---+
|   |
|   |
|   |
| 1 |
| 1 |
| 1 |
| 2 |
| 2 |
| 2 |
| 3 |
| 3 |
| 3 |
|   |
|   |
|   |
+---+
(15 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A4_B45_C9 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest), unnest(mv_to_array(c_mv_num_with_null_and_empty_val)) AS u(c)
WHERE (c_long BETWEEN 0 AND 2)
  AND (c_long NOT BETWEEN 3 AND 4);
+---+
| c |
+---+
|   |
|   |
|   |
| 1 |
| 1 |
| 1 |
| 2 |
| 2 |
| 2 |
| 3 |
| 3 |
| 3 |
|   |
|   |
|   |
+---+
(15 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A4_B46_C1 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM test_unnest,
     unnest(mv_to_array(c_mv_num_with_null_and_empty_val)) AS u(c)
WHERE (c_str like '%2')
  AND (c_str not like '%3')
  AND (c_str not like '%4');
+---+
| c |
+---+
|   |
| 1 |
| 2 |
| 3 |
|   |
+---+
(5 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A4_B46_C3 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest,
        unnest(mv_to_array(c_mv_num_with_null_and_empty_val)) AS u(c)
   WHERE (c_str like '%2')
     AND (c_str not like '%3')
     AND (c_str not like '%4'));
+---+
| c |
+---+
|   |
| 1 |
| 2 |
| 3 |
|   |
+---+
(5 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A4_B46_C5 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest
   WHERE (c_str like '%2')
     AND (c_str not like '%3')
     AND (c_str not like '%4')), unnest(mv_to_array(c_mv_num_with_null_and_empty_val)) AS u(c);
+---+
| c |
+---+
|   |
| 1 |
| 2 |
| 3 |
|   |
+---+
(5 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A4_B46_C7 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest,
        unnest(mv_to_array(c_mv_num_with_null_and_empty_val)) AS u(c))
WHERE (c_str like '%2')
  AND (c_str not like '%3')
  AND (c_str not like '%4');
+---+
| c |
+---+
|   |
| 1 |
| 2 |
| 3 |
|   |
+---+
(5 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A4_B46_C9 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest), unnest(mv_to_array(c_mv_num_with_null_and_empty_val)) AS u(c)
WHERE (c_str like '%2')
  AND (c_str not like '%3')
  AND (c_str not like '%4');
+---+
| c |
+---+
|   |
| 1 |
| 2 |
| 3 |
|   |
+---+
(5 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A4_B47_C1 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM test_unnest,
     unnest(mv_to_array(c_mv_num_with_null_and_empty_val)) AS u(c)
WHERE c_str IN ('',
                'str2',
                999)
  AND c_str NOT IN ('str3',
                    'str4',
                    999)
  AND c_long IN (0,
                 1,
                 2,
                 999)
  AND c_long NOT IN (3,
                     4,
                     999);
+---+
| c |
+---+
|   |
|   |
| 1 |
| 1 |
| 2 |
| 2 |
| 3 |
| 3 |
|   |
|   |
+---+
(10 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A4_B47_C3 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest,
        unnest(mv_to_array(c_mv_num_with_null_and_empty_val)) AS u(c)
   WHERE c_str IN ('',
                   'str2',
                   999)
     AND c_str NOT IN ('str3',
                       'str4',
                       999)
     AND c_long IN (0,
                    1,
                    2,
                    999)
     AND c_long NOT IN (3,
                        4,
                        999));
+---+
| c |
+---+
|   |
|   |
| 1 |
| 1 |
| 2 |
| 2 |
| 3 |
| 3 |
|   |
|   |
+---+
(10 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A4_B47_C5 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest
   WHERE c_str IN ('',
                   'str2',
                   999)
     AND c_str NOT IN ('str3',
                       'str4',
                       999)
     AND c_long IN (0,
                    1,
                    2,
                    999)
     AND c_long NOT IN (3,
                        4,
                        999)), unnest(mv_to_array(c_mv_num_with_null_and_empty_val)) AS u(c);
+---+
| c |
+---+
|   |
|   |
| 1 |
| 1 |
| 2 |
| 2 |
| 3 |
| 3 |
|   |
|   |
+---+
(10 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A4_B47_C7 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest,
        unnest(mv_to_array(c_mv_num_with_null_and_empty_val)) AS u(c))
WHERE c_str IN ('',
                'str2',
                999)
  AND c_str NOT IN ('str3',
                    'str4',
                    999)
  AND c_long IN (0,
                 1,
                 2,
                 999)
  AND c_long NOT IN (3,
                     4,
                     999);
+---+
| c |
+---+
|   |
|   |
| 1 |
| 1 |
| 2 |
| 2 |
| 3 |
| 3 |
|   |
|   |
+---+
(10 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A4_B47_C9 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest), unnest(mv_to_array(c_mv_num_with_null_and_empty_val)) AS u(c)
WHERE c_str IN ('',
                'str2',
                999)
  AND c_str NOT IN ('str3',
                    'str4',
                    999)
  AND c_long IN (0,
                 1,
                 2,
                 999)
  AND c_long NOT IN (3,
                     4,
                     999);
+---+
| c |
+---+
|   |
|   |
| 1 |
| 1 |
| 2 |
| 2 |
| 3 |
| 3 |
|   |
|   |
+---+
(10 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A4_B48_C1 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM test_unnest,
     unnest(mv_to_array(c_mv_num_with_null_and_empty_val)) AS u(c)
WHERE c_long IN
    (SELECT col
     FROM (
           VALUES(0),(1),(2),(999)) AS t(col))
  AND c_long NOT IN
    (SELECT col
     FROM (
           VALUES(3),(4),(999)) AS t(col));
+---+
| c |
+---+
|   |
|   |
|   |
| 1 |
| 1 |
| 1 |
| 2 |
| 2 |
| 2 |
| 3 |
| 3 |
| 3 |
|   |
|   |
|   |
+---+
(15 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A4_B48_C3 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest,
        unnest(mv_to_array(c_mv_num_with_null_and_empty_val)) AS u(c)
   WHERE c_long IN
       (SELECT col
        FROM (
              VALUES(0),(1),(2),(999)) AS t(col))
     AND c_long NOT IN
       (SELECT col
        FROM (
              VALUES(3),(4),(999)) AS t(col)));
+---+
| c |
+---+
|   |
|   |
|   |
| 1 |
| 1 |
| 1 |
| 2 |
| 2 |
| 2 |
| 3 |
| 3 |
| 3 |
|   |
|   |
|   |
+---+
(15 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A4_B48_C5 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest
   WHERE c_long IN
       (SELECT col
        FROM (
              VALUES(0),(1),(2),(999)) AS t(col))
     AND c_long NOT IN
       (SELECT col
        FROM (
              VALUES(3),(4),(999)) AS t(col))), unnest(mv_to_array(c_mv_num_with_null_and_empty_val)) AS u(c);
+---+
| c |
+---+
|   |
|   |
|   |
| 1 |
| 1 |
| 1 |
| 2 |
| 2 |
| 2 |
| 3 |
| 3 |
| 3 |
|   |
|   |
|   |
+---+
(15 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A4_B48_C7 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest,
        unnest(mv_to_array(c_mv_num_with_null_and_empty_val)) AS u(c))
WHERE c_long IN
    (SELECT col
     FROM (
           VALUES(0),(1),(2),(999)) AS t(col))
  AND c_long NOT IN
    (SELECT col
     FROM (
           VALUES(3),(4),(999)) AS t(col));
+---+
| c |
+---+
|   |
|   |
|   |
| 1 |
| 1 |
| 1 |
| 2 |
| 2 |
| 2 |
| 3 |
| 3 |
| 3 |
|   |
|   |
|   |
+---+
(15 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A4_B48_C9 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest), unnest(mv_to_array(c_mv_num_with_null_and_empty_val)) AS u(c)
WHERE c_long IN
    (SELECT col
     FROM (
           VALUES(0),(1),(2),(999)) AS t(col))
  AND c_long NOT IN
    (SELECT col
     FROM (
           VALUES(3),(4),(999)) AS t(col));
+---+
| c |
+---+
|   |
|   |
|   |
| 1 |
| 1 |
| 1 |
| 2 |
| 2 |
| 2 |
| 3 |
| 3 |
| 3 |
|   |
|   |
|   |
+---+
(15 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A5_B1_C1 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM test_unnest,
     unnest(mv_to_array(c_mv_complex_with_null_and_empty_row)) AS u(c)
WHERE c='1';
+---+
| c |
+---+
| 1 |
| 1 |
| 1 |
+---+
(3 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A5_B1_C3 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest,
        unnest(mv_to_array(c_mv_complex_with_null_and_empty_row)) AS u(c)
   WHERE c='1');
+---+
| c |
+---+
| 1 |
| 1 |
| 1 |
+---+
(3 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A5_B1_C5 TYPE: NEGATIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest
   WHERE c='1'), unnest(mv_to_array(c_mv_complex_with_null_and_empty_row)) AS u(c);
QueryInterruptedException
!error

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A5_B1_C7 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest,
        unnest(mv_to_array(c_mv_complex_with_null_and_empty_row)) AS u(c))
WHERE c='1';
+---+
| c |
+---+
| 1 |
| 1 |
| 1 |
+---+
(3 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A5_B1_C9 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest), unnest(mv_to_array(c_mv_complex_with_null_and_empty_row)) AS u(c)
WHERE c='1';
+---+
| c |
+---+
| 1 |
| 1 |
| 1 |
+---+
(3 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A5_B2_C1 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM test_unnest,
     unnest(mv_to_array(c_mv_complex_with_null_and_empty_row)) AS u(c)
WHERE c<>'1';
+-------------+
| c           |
+-------------+
|             |
|             |
|             |
| [2]         |
| [2]         |
| [2]         |
| [3, [4, 5]] |
| [3, [4, 5]] |
| [3, [4, 5]] |
+-------------+
(9 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A5_B2_C3 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest,
        unnest(mv_to_array(c_mv_complex_with_null_and_empty_row)) AS u(c)
   WHERE c<>'1');
+-------------+
| c           |
+-------------+
|             |
|             |
|             |
| [2]         |
| [2]         |
| [2]         |
| [3, [4, 5]] |
| [3, [4, 5]] |
| [3, [4, 5]] |
+-------------+
(9 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A5_B2_C5 TYPE: NEGATIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest
   WHERE c<>'1'), unnest(mv_to_array(c_mv_complex_with_null_and_empty_row)) AS u(c);
QueryInterruptedException
!error

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A5_B2_C7 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest,
        unnest(mv_to_array(c_mv_complex_with_null_and_empty_row)) AS u(c))
WHERE c<>'1';
+-------------+
| c           |
+-------------+
|             |
|             |
|             |
| [2]         |
| [2]         |
| [2]         |
| [3, [4, 5]] |
| [3, [4, 5]] |
| [3, [4, 5]] |
+-------------+
(9 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A5_B2_C9 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest), unnest(mv_to_array(c_mv_complex_with_null_and_empty_row)) AS u(c)
WHERE c<>'1';
+-------------+
| c           |
+-------------+
|             |
|             |
|             |
| [2]         |
| [2]         |
| [2]         |
| [3, [4, 5]] |
| [3, [4, 5]] |
| [3, [4, 5]] |
+-------------+
(9 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A5_B3_C1 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM test_unnest,
     unnest(mv_to_array(c_mv_complex_with_null_and_empty_row)) AS u(c)
WHERE c>'1';
+-------------+
| c           |
+-------------+
| [2]         |
| [2]         |
| [2]         |
| [3, [4, 5]] |
| [3, [4, 5]] |
| [3, [4, 5]] |
+-------------+
(6 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A5_B3_C3 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest,
        unnest(mv_to_array(c_mv_complex_with_null_and_empty_row)) AS u(c)
   WHERE c>'1');
+-------------+
| c           |
+-------------+
| [2]         |
| [2]         |
| [2]         |
| [3, [4, 5]] |
| [3, [4, 5]] |
| [3, [4, 5]] |
+-------------+
(6 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A5_B3_C5 TYPE: NEGATIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest
   WHERE c>'1'), unnest(mv_to_array(c_mv_complex_with_null_and_empty_row)) AS u(c);
QueryInterruptedException
!error

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A5_B3_C7 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest,
        unnest(mv_to_array(c_mv_complex_with_null_and_empty_row)) AS u(c))
WHERE c>'1';
+-------------+
| c           |
+-------------+
| [2]         |
| [2]         |
| [2]         |
| [3, [4, 5]] |
| [3, [4, 5]] |
| [3, [4, 5]] |
+-------------+
(6 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A5_B3_C9 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest), unnest(mv_to_array(c_mv_complex_with_null_and_empty_row)) AS u(c)
WHERE c>'1';
+-------------+
| c           |
+-------------+
| [2]         |
| [2]         |
| [2]         |
| [3, [4, 5]] |
| [3, [4, 5]] |
| [3, [4, 5]] |
+-------------+
(6 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A5_B4_C1 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM test_unnest,
     unnest(mv_to_array(c_mv_complex_with_null_and_empty_row)) AS u(c)
WHERE c>='1';
+-------------+
| c           |
+-------------+
| 1           |
| 1           |
| 1           |
| [2]         |
| [2]         |
| [2]         |
| [3, [4, 5]] |
| [3, [4, 5]] |
| [3, [4, 5]] |
+-------------+
(9 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A5_B4_C3 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest,
        unnest(mv_to_array(c_mv_complex_with_null_and_empty_row)) AS u(c)
   WHERE c>='1');
+-------------+
| c           |
+-------------+
| 1           |
| 1           |
| 1           |
| [2]         |
| [2]         |
| [2]         |
| [3, [4, 5]] |
| [3, [4, 5]] |
| [3, [4, 5]] |
+-------------+
(9 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A5_B4_C5 TYPE: NEGATIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest
   WHERE c>='1'), unnest(mv_to_array(c_mv_complex_with_null_and_empty_row)) AS u(c);
QueryInterruptedException
!error

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A5_B4_C7 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest,
        unnest(mv_to_array(c_mv_complex_with_null_and_empty_row)) AS u(c))
WHERE c>='1';
+-------------+
| c           |
+-------------+
| 1           |
| 1           |
| 1           |
| [2]         |
| [2]         |
| [2]         |
| [3, [4, 5]] |
| [3, [4, 5]] |
| [3, [4, 5]] |
+-------------+
(9 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A5_B4_C9 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest), unnest(mv_to_array(c_mv_complex_with_null_and_empty_row)) AS u(c)
WHERE c>='1';
+-------------+
| c           |
+-------------+
| 1           |
| 1           |
| 1           |
| [2]         |
| [2]         |
| [2]         |
| [3, [4, 5]] |
| [3, [4, 5]] |
| [3, [4, 5]] |
+-------------+
(9 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A5_B5_C1 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM test_unnest,
     unnest(mv_to_array(c_mv_complex_with_null_and_empty_row)) AS u(c)
WHERE c<'1';
+---+
| c |
+---+
|   |
|   |
|   |
+---+
(3 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A5_B5_C3 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest,
        unnest(mv_to_array(c_mv_complex_with_null_and_empty_row)) AS u(c)
   WHERE c<'1');
+---+
| c |
+---+
|   |
|   |
|   |
+---+
(3 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A5_B5_C5 TYPE: NEGATIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest
   WHERE c<'1'), unnest(mv_to_array(c_mv_complex_with_null_and_empty_row)) AS u(c);
QueryInterruptedException
!error

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A5_B5_C7 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest,
        unnest(mv_to_array(c_mv_complex_with_null_and_empty_row)) AS u(c))
WHERE c<'1';
+---+
| c |
+---+
|   |
|   |
|   |
+---+
(3 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A5_B5_C9 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest), unnest(mv_to_array(c_mv_complex_with_null_and_empty_row)) AS u(c)
WHERE c<'1';
+---+
| c |
+---+
|   |
|   |
|   |
+---+
(3 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A5_B6_C1 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM test_unnest,
     unnest(mv_to_array(c_mv_complex_with_null_and_empty_row)) AS u(c)
WHERE c<='1';
+---+
| c |
+---+
|   |
|   |
|   |
| 1 |
| 1 |
| 1 |
+---+
(6 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A5_B6_C3 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest,
        unnest(mv_to_array(c_mv_complex_with_null_and_empty_row)) AS u(c)
   WHERE c<='1');
+---+
| c |
+---+
|   |
|   |
|   |
| 1 |
| 1 |
| 1 |
+---+
(6 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A5_B6_C5 TYPE: NEGATIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest
   WHERE c<='1'), unnest(mv_to_array(c_mv_complex_with_null_and_empty_row)) AS u(c);
QueryInterruptedException
!error

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A5_B6_C7 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest,
        unnest(mv_to_array(c_mv_complex_with_null_and_empty_row)) AS u(c))
WHERE c<='1';
+---+
| c |
+---+
|   |
|   |
|   |
| 1 |
| 1 |
| 1 |
+---+
(6 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A5_B6_C9 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest), unnest(mv_to_array(c_mv_complex_with_null_and_empty_row)) AS u(c)
WHERE c<='1';
+---+
| c |
+---+
|   |
|   |
|   |
| 1 |
| 1 |
| 1 |
+---+
(6 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A5_B7_C1 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM test_unnest,
     unnest(mv_to_array(c_mv_complex_with_null_and_empty_row)) AS u(c)
WHERE (NOT c<>''
       OR NOT c<>'my_null'
       OR NOT c<>'my_empty'
       OR NOT c<>'1'
       OR NOT c<>'-1'
       OR NOT c<>'0'
       OR NOT c<>'999'
       OR NOT c<>999)
  AND (NOT c='[2]'
       OR NOT c='[3, [4, 5]]'
       OR NOT c='2'
       OR NOT c='3'
       OR NOT c='999'
       OR NOT c=999);
+---+
| c |
+---+
|   |
|   |
|   |
| 1 |
| 1 |
| 1 |
+---+
(6 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A5_B7_C3 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest,
        unnest(mv_to_array(c_mv_complex_with_null_and_empty_row)) AS u(c)
   WHERE (NOT c<>''
          OR NOT c<>'my_null'
          OR NOT c<>'my_empty'
          OR NOT c<>'1'
          OR NOT c<>'-1'
          OR NOT c<>'0'
          OR NOT c<>'999'
          OR NOT c<>999)
     AND (NOT c='[2]'
          OR NOT c='[3, [4, 5]]'
          OR NOT c='2'
          OR NOT c='3'
          OR NOT c='999'
          OR NOT c=999));
+---+
| c |
+---+
|   |
|   |
|   |
| 1 |
| 1 |
| 1 |
+---+
(6 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A5_B7_C5 TYPE: NEGATIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest
   WHERE (NOT c<>''
          OR NOT c<>'my_null'
          OR NOT c<>'my_empty'
          OR NOT c<>'1'
          OR NOT c<>'-1'
          OR NOT c<>'0'
          OR NOT c<>'999'
          OR NOT c<>999)
     AND (NOT c='[2]'
          OR NOT c='[3, [4, 5]]'
          OR NOT c='2'
          OR NOT c='3'
          OR NOT c='999'
          OR NOT c=999)), unnest(mv_to_array(c_mv_complex_with_null_and_empty_row)) AS u(c);
QueryInterruptedException
!error

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A5_B7_C7 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest,
        unnest(mv_to_array(c_mv_complex_with_null_and_empty_row)) AS u(c))
WHERE (NOT c<>''
       OR NOT c<>'my_null'
       OR NOT c<>'my_empty'
       OR NOT c<>'1'
       OR NOT c<>'-1'
       OR NOT c<>'0'
       OR NOT c<>'999'
       OR NOT c<>999)
  AND (NOT c='[2]'
       OR NOT c='[3, [4, 5]]'
       OR NOT c='2'
       OR NOT c='3'
       OR NOT c='999'
       OR NOT c=999);
+---+
| c |
+---+
|   |
|   |
|   |
| 1 |
| 1 |
| 1 |
+---+
(6 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A5_B7_C9 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest), unnest(mv_to_array(c_mv_complex_with_null_and_empty_row)) AS u(c)
WHERE (NOT c<>''
       OR NOT c<>'my_null'
       OR NOT c<>'my_empty'
       OR NOT c<>'1'
       OR NOT c<>'-1'
       OR NOT c<>'0'
       OR NOT c<>'999'
       OR NOT c<>999)
  AND (NOT c='[2]'
       OR NOT c='[3, [4, 5]]'
       OR NOT c='2'
       OR NOT c='3'
       OR NOT c='999'
       OR NOT c=999);
+---+
| c |
+---+
|   |
|   |
|   |
| 1 |
| 1 |
| 1 |
+---+
(6 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A5_B8_C1 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM test_unnest,
     unnest(mv_to_array(c_mv_complex_with_null_and_empty_row)) AS u(c)
WHERE (c=''
       OR c='my_null'
       OR c='my_empty'
       OR c='1'
       OR c='-1'
       OR c='0'
       OR c='999'
       OR c=999)
  AND NOT c='[2]'
  AND NOT c='[3, [4, 5]]'
  AND NOT c='2'
  AND NOT c='3'
  AND NOT c='999'
  AND NOT c=999;
+---+
| c |
+---+
|   |
|   |
|   |
| 1 |
| 1 |
| 1 |
+---+
(6 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A5_B8_C3 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest,
        unnest(mv_to_array(c_mv_complex_with_null_and_empty_row)) AS u(c)
   WHERE (c=''
          OR c='my_null'
          OR c='my_empty'
          OR c='1'
          OR c='-1'
          OR c='0'
          OR c='999'
          OR c=999)
     AND NOT c='[2]'
     AND NOT c='[3, [4, 5]]'
     AND NOT c='2'
     AND NOT c='3'
     AND NOT c='999'
     AND NOT c=999);
+---+
| c |
+---+
|   |
|   |
|   |
| 1 |
| 1 |
| 1 |
+---+
(6 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A5_B8_C5 TYPE: NEGATIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest
   WHERE (c=''
          OR c='my_null'
          OR c='my_empty'
          OR c='1'
          OR c='-1'
          OR c='0'
          OR c='999'
          OR c=999)
     AND NOT c='[2]'
     AND NOT c='[3, [4, 5]]'
     AND NOT c='2'
     AND NOT c='3'
     AND NOT c='999'
     AND NOT c=999), unnest(mv_to_array(c_mv_complex_with_null_and_empty_row)) AS u(c);
QueryInterruptedException
!error

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A5_B8_C7 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest,
        unnest(mv_to_array(c_mv_complex_with_null_and_empty_row)) AS u(c))
WHERE (c=''
       OR c='my_null'
       OR c='my_empty'
       OR c='1'
       OR c='-1'
       OR c='0'
       OR c='999'
       OR c=999)
  AND NOT c='[2]'
  AND NOT c='[3, [4, 5]]'
  AND NOT c='2'
  AND NOT c='3'
  AND NOT c='999'
  AND NOT c=999;
+---+
| c |
+---+
|   |
|   |
|   |
| 1 |
| 1 |
| 1 |
+---+
(6 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A5_B8_C9 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest), unnest(mv_to_array(c_mv_complex_with_null_and_empty_row)) AS u(c)
WHERE (c=''
       OR c='my_null'
       OR c='my_empty'
       OR c='1'
       OR c='-1'
       OR c='0'
       OR c='999'
       OR c=999)
  AND NOT c='[2]'
  AND NOT c='[3, [4, 5]]'
  AND NOT c='2'
  AND NOT c='3'
  AND NOT c='999'
  AND NOT c=999;
+---+
| c |
+---+
|   |
|   |
|   |
| 1 |
| 1 |
| 1 |
+---+
(6 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A5_B9_C1 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM test_unnest,
     unnest(mv_to_array(c_mv_complex_with_null_and_empty_row)) AS u(c)
WHERE c IS NULL;
+---+
| c |
+---+
|   |
|   |
|   |
|   |
|   |
+---+
(5 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A5_B9_C3 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest,
        unnest(mv_to_array(c_mv_complex_with_null_and_empty_row)) AS u(c)
   WHERE c IS NULL);
+---+
| c |
+---+
|   |
|   |
|   |
|   |
|   |
+---+
(5 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A5_B9_C5 TYPE: NEGATIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest
   WHERE c IS NULL), unnest(mv_to_array(c_mv_complex_with_null_and_empty_row)) AS u(c);
QueryInterruptedException
!error

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A5_B9_C7 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest,
        unnest(mv_to_array(c_mv_complex_with_null_and_empty_row)) AS u(c))
WHERE c IS NULL;
+---+
| c |
+---+
|   |
|   |
|   |
|   |
|   |
+---+
(5 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A5_B9_C9 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest), unnest(mv_to_array(c_mv_complex_with_null_and_empty_row)) AS u(c)
WHERE c IS NULL;
+---+
| c |
+---+
|   |
|   |
|   |
|   |
|   |
+---+
(5 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A5_B10_C1 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM test_unnest,
     unnest(mv_to_array(c_mv_complex_with_null_and_empty_row)) AS u(c)
WHERE c IS NOT NULL;
+-------------+
| c           |
+-------------+
|             |
|             |
|             |
| 1           |
| 1           |
| 1           |
| [2]         |
| [2]         |
| [2]         |
| [3, [4, 5]] |
| [3, [4, 5]] |
| [3, [4, 5]] |
+-------------+
(12 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A5_B10_C3 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest,
        unnest(mv_to_array(c_mv_complex_with_null_and_empty_row)) AS u(c)
   WHERE c IS NOT NULL);
+-------------+
| c           |
+-------------+
|             |
|             |
|             |
| 1           |
| 1           |
| 1           |
| [2]         |
| [2]         |
| [2]         |
| [3, [4, 5]] |
| [3, [4, 5]] |
| [3, [4, 5]] |
+-------------+
(12 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A5_B10_C5 TYPE: NEGATIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest
   WHERE c IS NOT NULL), unnest(mv_to_array(c_mv_complex_with_null_and_empty_row)) AS u(c);
QueryInterruptedException
!error

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A5_B10_C7 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest,
        unnest(mv_to_array(c_mv_complex_with_null_and_empty_row)) AS u(c))
WHERE c IS NOT NULL;
+-------------+
| c           |
+-------------+
|             |
|             |
|             |
| 1           |
| 1           |
| 1           |
| [2]         |
| [2]         |
| [2]         |
| [3, [4, 5]] |
| [3, [4, 5]] |
| [3, [4, 5]] |
+-------------+
(12 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A5_B10_C9 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest), unnest(mv_to_array(c_mv_complex_with_null_and_empty_row)) AS u(c)
WHERE c IS NOT NULL;
+-------------+
| c           |
+-------------+
|             |
|             |
|             |
| 1           |
| 1           |
| 1           |
| [2]         |
| [2]         |
| [2]         |
| [3, [4, 5]] |
| [3, [4, 5]] |
| [3, [4, 5]] |
+-------------+
(12 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A5_B11_C1 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM test_unnest,
     unnest(mv_to_array(c_mv_complex_with_null_and_empty_row)) AS u(c)
WHERE c IN ('',
            'my_null',
            'my_empty',
            '1',
            '-1',
            '0',
            '999',
            999) IS TRUE
  AND c IN ('[2]',
            '[3, [4, 5]]',
            '2',
            '3',
            '999',
            999) IS NOT TRUE;
+---+
| c |
+---+
|   |
|   |
|   |
| 1 |
| 1 |
| 1 |
+---+
(6 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A5_B11_C3 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest,
        unnest(mv_to_array(c_mv_complex_with_null_and_empty_row)) AS u(c)
   WHERE c IN ('',
               'my_null',
               'my_empty',
               '1',
               '-1',
               '0',
               '999',
               999) IS TRUE
     AND c IN ('[2]',
               '[3, [4, 5]]',
               '2',
               '3',
               '999',
               999) IS NOT TRUE);
+---+
| c |
+---+
|   |
|   |
|   |
| 1 |
| 1 |
| 1 |
+---+
(6 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A5_B11_C5 TYPE: NEGATIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest
   WHERE c IN ('',
               'my_null',
               'my_empty',
               '1',
               '-1',
               '0',
               '999',
               999) IS TRUE
     AND c IN ('[2]',
               '[3, [4, 5]]',
               '2',
               '3',
               '999',
               999) IS NOT TRUE), unnest(mv_to_array(c_mv_complex_with_null_and_empty_row)) AS u(c);
QueryInterruptedException
!error

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A5_B11_C7 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest,
        unnest(mv_to_array(c_mv_complex_with_null_and_empty_row)) AS u(c))
WHERE c IN ('',
            'my_null',
            'my_empty',
            '1',
            '-1',
            '0',
            '999',
            999) IS TRUE
  AND c IN ('[2]',
            '[3, [4, 5]]',
            '2',
            '3',
            '999',
            999) IS NOT TRUE;
+---+
| c |
+---+
|   |
|   |
|   |
| 1 |
| 1 |
| 1 |
+---+
(6 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A5_B11_C9 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest), unnest(mv_to_array(c_mv_complex_with_null_and_empty_row)) AS u(c)
WHERE c IN ('',
            'my_null',
            'my_empty',
            '1',
            '-1',
            '0',
            '999',
            999) IS TRUE
  AND c IN ('[2]',
            '[3, [4, 5]]',
            '2',
            '3',
            '999',
            999) IS NOT TRUE;
+---+
| c |
+---+
|   |
|   |
|   |
| 1 |
| 1 |
| 1 |
+---+
(6 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A5_B12_C1 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM test_unnest,
     unnest(mv_to_array(c_mv_complex_with_null_and_empty_row)) AS u(c)
WHERE c IN ('',
            'my_null',
            'my_empty',
            '1',
            '-1',
            '0',
            '999',
            999) IS NOT FALSE
  AND c IN ('[2]',
            '[3, [4, 5]]',
            '2',
            '3',
            '999',
            999) IS FALSE;
+---+
| c |
+---+
|   |
|   |
|   |
| 1 |
| 1 |
| 1 |
+---+
(6 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A5_B12_C3 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest,
        unnest(mv_to_array(c_mv_complex_with_null_and_empty_row)) AS u(c)
   WHERE c IN ('',
               'my_null',
               'my_empty',
               '1',
               '-1',
               '0',
               '999',
               999) IS NOT FALSE
     AND c IN ('[2]',
               '[3, [4, 5]]',
               '2',
               '3',
               '999',
               999) IS FALSE);
+---+
| c |
+---+
|   |
|   |
|   |
| 1 |
| 1 |
| 1 |
+---+
(6 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A5_B12_C5 TYPE: NEGATIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest
   WHERE c IN ('',
               'my_null',
               'my_empty',
               '1',
               '-1',
               '0',
               '999',
               999) IS NOT FALSE
     AND c IN ('[2]',
               '[3, [4, 5]]',
               '2',
               '3',
               '999',
               999) IS FALSE), unnest(mv_to_array(c_mv_complex_with_null_and_empty_row)) AS u(c);
QueryInterruptedException
!error

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A5_B12_C7 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest,
        unnest(mv_to_array(c_mv_complex_with_null_and_empty_row)) AS u(c))
WHERE c IN ('',
            'my_null',
            'my_empty',
            '1',
            '-1',
            '0',
            '999',
            999) IS NOT FALSE
  AND c IN ('[2]',
            '[3, [4, 5]]',
            '2',
            '3',
            '999',
            999) IS FALSE;
+---+
| c |
+---+
|   |
|   |
|   |
| 1 |
| 1 |
| 1 |
+---+
(6 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A5_B12_C9 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest), unnest(mv_to_array(c_mv_complex_with_null_and_empty_row)) AS u(c)
WHERE c IN ('',
            'my_null',
            'my_empty',
            '1',
            '-1',
            '0',
            '999',
            999) IS NOT FALSE
  AND c IN ('[2]',
            '[3, [4, 5]]',
            '2',
            '3',
            '999',
            999) IS FALSE;
+---+
| c |
+---+
|   |
|   |
|   |
| 1 |
| 1 |
| 1 |
+---+
(6 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A5_B13_C1 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM test_unnest,
     unnest(mv_to_array(c_mv_complex_with_null_and_empty_row)) AS u(c)
WHERE (c BETWEEN '1' AND '2')
  AND (c NOT BETWEEN '3' AND '4');
+---+
| c |
+---+
| 1 |
| 1 |
| 1 |
+---+
(3 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A5_B13_C3 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest,
        unnest(mv_to_array(c_mv_complex_with_null_and_empty_row)) AS u(c)
   WHERE (c BETWEEN '1' AND '2')
     AND (c NOT BETWEEN '3' AND '4'));
+---+
| c |
+---+
| 1 |
| 1 |
| 1 |
+---+
(3 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A5_B13_C5 TYPE: NEGATIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest
   WHERE (c BETWEEN '1' AND '2')
     AND (c NOT BETWEEN '3' AND '4')), unnest(mv_to_array(c_mv_complex_with_null_and_empty_row)) AS u(c);
QueryInterruptedException
!error

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A5_B13_C7 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest,
        unnest(mv_to_array(c_mv_complex_with_null_and_empty_row)) AS u(c))
WHERE (c BETWEEN '1' AND '2')
  AND (c NOT BETWEEN '3' AND '4');
+---+
| c |
+---+
| 1 |
| 1 |
| 1 |
+---+
(3 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A5_B13_C9 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest), unnest(mv_to_array(c_mv_complex_with_null_and_empty_row)) AS u(c)
WHERE (c BETWEEN '1' AND '2')
  AND (c NOT BETWEEN '3' AND '4');
+---+
| c |
+---+
| 1 |
| 1 |
| 1 |
+---+
(3 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A5_B14_C1 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM test_unnest,
     unnest(mv_to_array(c_mv_complex_with_null_and_empty_row)) AS u(c)
WHERE (c like '1%')
  AND (c not like '3%');
+---+
| c |
+---+
| 1 |
| 1 |
| 1 |
+---+
(3 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A5_B14_C3 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest,
        unnest(mv_to_array(c_mv_complex_with_null_and_empty_row)) AS u(c)
   WHERE (c like '1%')
     AND (c not like '3%'));
+---+
| c |
+---+
| 1 |
| 1 |
| 1 |
+---+
(3 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A5_B14_C5 TYPE: NEGATIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest
   WHERE (c like '1%')
     AND (c not like '3%')), unnest(mv_to_array(c_mv_complex_with_null_and_empty_row)) AS u(c);
QueryInterruptedException
!error

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A5_B14_C7 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest,
        unnest(mv_to_array(c_mv_complex_with_null_and_empty_row)) AS u(c))
WHERE (c like '1%')
  AND (c not like '3%');
+---+
| c |
+---+
| 1 |
| 1 |
| 1 |
+---+
(3 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A5_B14_C9 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest), unnest(mv_to_array(c_mv_complex_with_null_and_empty_row)) AS u(c)
WHERE (c like '1%')
  AND (c not like '3%');
+---+
| c |
+---+
| 1 |
| 1 |
| 1 |
+---+
(3 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A5_B15_C1 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM test_unnest,
     unnest(mv_to_array(c_mv_complex_with_null_and_empty_row)) AS u(c)
WHERE c IN ('',
            'my_null',
            'my_empty',
            '1',
            '-1',
            '0',
            '999',
            999)
  AND c NOT IN ('[2]',
                '[3, [4, 5]]',
                '2',
                '3',
                '999',
                999);
+---+
| c |
+---+
|   |
|   |
|   |
| 1 |
| 1 |
| 1 |
+---+
(6 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A5_B15_C3 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest,
        unnest(mv_to_array(c_mv_complex_with_null_and_empty_row)) AS u(c)
   WHERE c IN ('',
               'my_null',
               'my_empty',
               '1',
               '-1',
               '0',
               '999',
               999)
     AND c NOT IN ('[2]',
                   '[3, [4, 5]]',
                   '2',
                   '3',
                   '999',
                   999));
+---+
| c |
+---+
|   |
|   |
|   |
| 1 |
| 1 |
| 1 |
+---+
(6 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A5_B15_C5 TYPE: NEGATIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest
   WHERE c IN ('',
               'my_null',
               'my_empty',
               '1',
               '-1',
               '0',
               '999',
               999)
     AND c NOT IN ('[2]',
                   '[3, [4, 5]]',
                   '2',
                   '3',
                   '999',
                   999)), unnest(mv_to_array(c_mv_complex_with_null_and_empty_row)) AS u(c);
QueryInterruptedException
!error

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A5_B15_C7 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest,
        unnest(mv_to_array(c_mv_complex_with_null_and_empty_row)) AS u(c))
WHERE c IN ('',
            'my_null',
            'my_empty',
            '1',
            '-1',
            '0',
            '999',
            999)
  AND c NOT IN ('[2]',
                '[3, [4, 5]]',
                '2',
                '3',
                '999',
                999);
+---+
| c |
+---+
|   |
|   |
|   |
| 1 |
| 1 |
| 1 |
+---+
(6 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A5_B15_C9 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest), unnest(mv_to_array(c_mv_complex_with_null_and_empty_row)) AS u(c)
WHERE c IN ('',
            'my_null',
            'my_empty',
            '1',
            '-1',
            '0',
            '999',
            999)
  AND c NOT IN ('[2]',
                '[3, [4, 5]]',
                '2',
                '3',
                '999',
                999);
+---+
| c |
+---+
|   |
|   |
|   |
| 1 |
| 1 |
| 1 |
+---+
(6 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A5_B16_C1 TYPE: NEGATIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM test_unnest,
     unnest(mv_to_array(c_mv_complex_with_null_and_empty_row)) AS u(c)
WHERE c IN
    (SELECT col
     FROM (
           VALUES(''),('my_null'),('my_empty'),('1'),('-1'),('0'),('999')) AS t(col))
  AND c NOT IN
    (SELECT col
     FROM (
           VALUES('[2]'),('[3, [4, 5]]'),('2'),('3'),('999')) AS t(col));
Unhandled Query Planning Failure
!error

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A5_B16_C3 TYPE: NEGATIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest,
        unnest(mv_to_array(c_mv_complex_with_null_and_empty_row)) AS u(c)
   WHERE c IN
       (SELECT col
        FROM (
              VALUES(''),('my_null'),('my_empty'),('1'),('-1'),('0'),('999')) AS t(col))
     AND c NOT IN
       (SELECT col
        FROM (
              VALUES('[2]'),('[3, [4, 5]]'),('2'),('3'),('999')) AS t(col)));
Unhandled Query Planning Failure
!error

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A5_B16_C5 TYPE: NEGATIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest
   WHERE c IN
       (SELECT col
        FROM (
              VALUES(''),('my_null'),('my_empty'),('1'),('-1'),('0'),('999')) AS t(col))
     AND c NOT IN
       (SELECT col
        FROM (
              VALUES('[2]'),('[3, [4, 5]]'),('2'),('3'),('999')) AS t(col))), unnest(mv_to_array(c_mv_complex_with_null_and_empty_row)) AS u(c);
QueryInterruptedException
!error

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A5_B16_C7 TYPE: NEGATIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest,
        unnest(mv_to_array(c_mv_complex_with_null_and_empty_row)) AS u(c))
WHERE c IN
    (SELECT col
     FROM (
           VALUES(''),('my_null'),('my_empty'),('1'),('-1'),('0'),('999')) AS t(col))
  AND c NOT IN
    (SELECT col
     FROM (
           VALUES('[2]'),('[3, [4, 5]]'),('2'),('3'),('999')) AS t(col));
Unhandled Query Planning Failure
!error

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A5_B16_C9 TYPE: NEGATIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest), unnest(mv_to_array(c_mv_complex_with_null_and_empty_row)) AS u(c)
WHERE c IN
    (SELECT col
     FROM (
           VALUES(''),('my_null'),('my_empty'),('1'),('-1'),('0'),('999')) AS t(col))
  AND c NOT IN
    (SELECT col
     FROM (
           VALUES('[2]'),('[3, [4, 5]]'),('2'),('3'),('999')) AS t(col));
Unhandled Query Planning Failure
!error

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A5_B17_C1 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM test_unnest,
     unnest(mv_to_array(c_mv_complex_with_null_and_empty_row)) AS u(c)
WHERE c_long=1
  AND c='1';
+---+
| c |
+---+
+---+
(0 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A5_B17_C3 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest,
        unnest(mv_to_array(c_mv_complex_with_null_and_empty_row)) AS u(c)
   WHERE c_long=1
     AND c='1');
+---+
| c |
+---+
+---+
(0 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A5_B17_C5 TYPE: NEGATIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest
   WHERE c_long=1
     AND c='1'), unnest(mv_to_array(c_mv_complex_with_null_and_empty_row)) AS u(c);
QueryInterruptedException
!error

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A5_B17_C7 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest,
        unnest(mv_to_array(c_mv_complex_with_null_and_empty_row)) AS u(c))
WHERE c_long=1
  AND c='1';
+---+
| c |
+---+
+---+
(0 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A5_B17_C9 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest), unnest(mv_to_array(c_mv_complex_with_null_and_empty_row)) AS u(c)
WHERE c_long=1
  AND c='1';
+---+
| c |
+---+
+---+
(0 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A5_B18_C1 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM test_unnest,
     unnest(mv_to_array(c_mv_complex_with_null_and_empty_row)) AS u(c)
WHERE c_long<>1
  AND c<>'1';
+-------------+
| c           |
+-------------+
|             |
|             |
|             |
| [2]         |
| [2]         |
| [2]         |
| [3, [4, 5]] |
| [3, [4, 5]] |
| [3, [4, 5]] |
+-------------+
(9 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A5_B18_C3 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest,
        unnest(mv_to_array(c_mv_complex_with_null_and_empty_row)) AS u(c)
   WHERE c_long<>1
     AND c<>'1');
+-------------+
| c           |
+-------------+
|             |
|             |
|             |
| [2]         |
| [2]         |
| [2]         |
| [3, [4, 5]] |
| [3, [4, 5]] |
| [3, [4, 5]] |
+-------------+
(9 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A5_B18_C5 TYPE: NEGATIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest
   WHERE c_long<>1
     AND c<>'1'), unnest(mv_to_array(c_mv_complex_with_null_and_empty_row)) AS u(c);
QueryInterruptedException
!error

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A5_B18_C7 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest,
        unnest(mv_to_array(c_mv_complex_with_null_and_empty_row)) AS u(c))
WHERE c_long<>1
  AND c<>'1';
+-------------+
| c           |
+-------------+
|             |
|             |
|             |
| [2]         |
| [2]         |
| [2]         |
| [3, [4, 5]] |
| [3, [4, 5]] |
| [3, [4, 5]] |
+-------------+
(9 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A5_B18_C9 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest), unnest(mv_to_array(c_mv_complex_with_null_and_empty_row)) AS u(c)
WHERE c_long<>1
  AND c<>'1';
+-------------+
| c           |
+-------------+
|             |
|             |
|             |
| [2]         |
| [2]         |
| [2]         |
| [3, [4, 5]] |
| [3, [4, 5]] |
| [3, [4, 5]] |
+-------------+
(9 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A5_B19_C1 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM test_unnest,
     unnest(mv_to_array(c_mv_complex_with_null_and_empty_row)) AS u(c)
WHERE c_long>1
  AND c>'1';
+-------------+
| c           |
+-------------+
| [2]         |
| [2]         |
| [2]         |
| [3, [4, 5]] |
| [3, [4, 5]] |
| [3, [4, 5]] |
+-------------+
(6 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A5_B19_C3 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest,
        unnest(mv_to_array(c_mv_complex_with_null_and_empty_row)) AS u(c)
   WHERE c_long>1
     AND c>'1');
+-------------+
| c           |
+-------------+
| [2]         |
| [2]         |
| [2]         |
| [3, [4, 5]] |
| [3, [4, 5]] |
| [3, [4, 5]] |
+-------------+
(6 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A5_B19_C5 TYPE: NEGATIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest
   WHERE c_long>1
     AND c>'1'), unnest(mv_to_array(c_mv_complex_with_null_and_empty_row)) AS u(c);
QueryInterruptedException
!error

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A5_B19_C7 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest,
        unnest(mv_to_array(c_mv_complex_with_null_and_empty_row)) AS u(c))
WHERE c_long>1
  AND c>'1';
+-------------+
| c           |
+-------------+
| [2]         |
| [2]         |
| [2]         |
| [3, [4, 5]] |
| [3, [4, 5]] |
| [3, [4, 5]] |
+-------------+
(6 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A5_B19_C9 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest), unnest(mv_to_array(c_mv_complex_with_null_and_empty_row)) AS u(c)
WHERE c_long>1
  AND c>'1';
+-------------+
| c           |
+-------------+
| [2]         |
| [2]         |
| [2]         |
| [3, [4, 5]] |
| [3, [4, 5]] |
| [3, [4, 5]] |
+-------------+
(6 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A5_B20_C1 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM test_unnest,
     unnest(mv_to_array(c_mv_complex_with_null_and_empty_row)) AS u(c)
WHERE c_long>=1
  AND c>='1';
+-------------+
| c           |
+-------------+
| 1           |
| 1           |
| 1           |
| [2]         |
| [2]         |
| [2]         |
| [3, [4, 5]] |
| [3, [4, 5]] |
| [3, [4, 5]] |
+-------------+
(9 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A5_B20_C3 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest,
        unnest(mv_to_array(c_mv_complex_with_null_and_empty_row)) AS u(c)
   WHERE c_long>=1
     AND c>='1');
+-------------+
| c           |
+-------------+
| 1           |
| 1           |
| 1           |
| [2]         |
| [2]         |
| [2]         |
| [3, [4, 5]] |
| [3, [4, 5]] |
| [3, [4, 5]] |
+-------------+
(9 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A5_B20_C5 TYPE: NEGATIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest
   WHERE c_long>=1
     AND c>='1'), unnest(mv_to_array(c_mv_complex_with_null_and_empty_row)) AS u(c);
QueryInterruptedException
!error

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A5_B20_C7 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest,
        unnest(mv_to_array(c_mv_complex_with_null_and_empty_row)) AS u(c))
WHERE c_long>=1
  AND c>='1';
+-------------+
| c           |
+-------------+
| 1           |
| 1           |
| 1           |
| [2]         |
| [2]         |
| [2]         |
| [3, [4, 5]] |
| [3, [4, 5]] |
| [3, [4, 5]] |
+-------------+
(9 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A5_B20_C9 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest), unnest(mv_to_array(c_mv_complex_with_null_and_empty_row)) AS u(c)
WHERE c_long>=1
  AND c>='1';
+-------------+
| c           |
+-------------+
| 1           |
| 1           |
| 1           |
| [2]         |
| [2]         |
| [2]         |
| [3, [4, 5]] |
| [3, [4, 5]] |
| [3, [4, 5]] |
+-------------+
(9 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A5_B21_C1 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM test_unnest,
     unnest(mv_to_array(c_mv_complex_with_null_and_empty_row)) AS u(c)
WHERE c_long<1
  AND c<'1';
+---+
| c |
+---+
+---+
(0 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A5_B21_C3 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest,
        unnest(mv_to_array(c_mv_complex_with_null_and_empty_row)) AS u(c)
   WHERE c_long<1
     AND c<'1');
+---+
| c |
+---+
+---+
(0 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A5_B21_C5 TYPE: NEGATIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest
   WHERE c_long<1
     AND c<'1'), unnest(mv_to_array(c_mv_complex_with_null_and_empty_row)) AS u(c);
QueryInterruptedException
!error

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A5_B21_C7 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest,
        unnest(mv_to_array(c_mv_complex_with_null_and_empty_row)) AS u(c))
WHERE c_long<1
  AND c<'1';
+---+
| c |
+---+
+---+
(0 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A5_B21_C9 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest), unnest(mv_to_array(c_mv_complex_with_null_and_empty_row)) AS u(c)
WHERE c_long<1
  AND c<'1';
+---+
| c |
+---+
+---+
(0 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A5_B22_C1 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM test_unnest,
     unnest(mv_to_array(c_mv_complex_with_null_and_empty_row)) AS u(c)
WHERE c_long<=1
  AND c<='1';
+---+
| c |
+---+
+---+
(0 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A5_B22_C3 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest,
        unnest(mv_to_array(c_mv_complex_with_null_and_empty_row)) AS u(c)
   WHERE c_long<=1
     AND c<='1');
+---+
| c |
+---+
+---+
(0 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A5_B22_C5 TYPE: NEGATIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest
   WHERE c_long<=1
     AND c<='1'), unnest(mv_to_array(c_mv_complex_with_null_and_empty_row)) AS u(c);
QueryInterruptedException
!error

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A5_B22_C7 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest,
        unnest(mv_to_array(c_mv_complex_with_null_and_empty_row)) AS u(c))
WHERE c_long<=1
  AND c<='1';
+---+
| c |
+---+
+---+
(0 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A5_B22_C9 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest), unnest(mv_to_array(c_mv_complex_with_null_and_empty_row)) AS u(c)
WHERE c_long<=1
  AND c<='1';
+---+
| c |
+---+
+---+
(0 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A5_B23_C1 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM test_unnest,
     unnest(mv_to_array(c_mv_complex_with_null_and_empty_row)) AS u(c)
WHERE NOT (c_long<>0
           AND c_long<>1
           AND c_long<>2)
  AND (NOT c<>''
       OR NOT c<>'my_null'
       OR NOT c<>'my_empty'
       OR NOT c<>'1'
       OR NOT c<>'-1'
       OR NOT c<>'0'
       OR NOT c<>'999'
       OR NOT c<>999)
  AND (NOT c='[2]'
       OR NOT c='[3, [4, 5]]'
       OR NOT c='2'
       OR NOT c='3'
       OR NOT c='999'
       OR NOT c=999);
+---+
| c |
+---+
|   |
| 1 |
+---+
(2 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A5_B23_C3 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest,
        unnest(mv_to_array(c_mv_complex_with_null_and_empty_row)) AS u(c)
   WHERE NOT (c_long<>0
              AND c_long<>1
              AND c_long<>2)
     AND (NOT c<>''
          OR NOT c<>'my_null'
          OR NOT c<>'my_empty'
          OR NOT c<>'1'
          OR NOT c<>'-1'
          OR NOT c<>'0'
          OR NOT c<>'999'
          OR NOT c<>999)
     AND (NOT c='[2]'
          OR NOT c='[3, [4, 5]]'
          OR NOT c='2'
          OR NOT c='3'
          OR NOT c='999'
          OR NOT c=999));
+---+
| c |
+---+
|   |
| 1 |
+---+
(2 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A5_B23_C5 TYPE: NEGATIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest
   WHERE NOT (c_long<>0
              AND c_long<>1
              AND c_long<>2)
     AND (NOT c<>''
          OR NOT c<>'my_null'
          OR NOT c<>'my_empty'
          OR NOT c<>'1'
          OR NOT c<>'-1'
          OR NOT c<>'0'
          OR NOT c<>'999'
          OR NOT c<>999)
     AND (NOT c='[2]'
          OR NOT c='[3, [4, 5]]'
          OR NOT c='2'
          OR NOT c='3'
          OR NOT c='999'
          OR NOT c=999)), unnest(mv_to_array(c_mv_complex_with_null_and_empty_row)) AS u(c);
QueryInterruptedException
!error

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A5_B23_C7 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest,
        unnest(mv_to_array(c_mv_complex_with_null_and_empty_row)) AS u(c))
WHERE NOT (c_long<>0
           AND c_long<>1
           AND c_long<>2)
  AND (NOT c<>''
       OR NOT c<>'my_null'
       OR NOT c<>'my_empty'
       OR NOT c<>'1'
       OR NOT c<>'-1'
       OR NOT c<>'0'
       OR NOT c<>'999'
       OR NOT c<>999)
  AND (NOT c='[2]'
       OR NOT c='[3, [4, 5]]'
       OR NOT c='2'
       OR NOT c='3'
       OR NOT c='999'
       OR NOT c=999);
+---+
| c |
+---+
|   |
| 1 |
+---+
(2 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A5_B23_C9 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest), unnest(mv_to_array(c_mv_complex_with_null_and_empty_row)) AS u(c)
WHERE NOT (c_long<>0
           AND c_long<>1
           AND c_long<>2)
  AND (NOT c<>''
       OR NOT c<>'my_null'
       OR NOT c<>'my_empty'
       OR NOT c<>'1'
       OR NOT c<>'-1'
       OR NOT c<>'0'
       OR NOT c<>'999'
       OR NOT c<>999)
  AND (NOT c='[2]'
       OR NOT c='[3, [4, 5]]'
       OR NOT c='2'
       OR NOT c='3'
       OR NOT c='999'
       OR NOT c=999);
+---+
| c |
+---+
|   |
| 1 |
+---+
(2 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A5_B24_C1 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM test_unnest,
     unnest(mv_to_array(c_mv_complex_with_null_and_empty_row)) AS u(c)
WHERE (c_long=0
       OR c_long=1
       OR c_long=2)
  AND (c=''
       OR c='my_null'
       OR c='my_empty'
       OR c='1'
       OR c='-1'
       OR c='0'
       OR c='999'
       OR c=999)
  AND NOT c='[2]'
  AND NOT c='[3, [4, 5]]'
  AND NOT c='2'
  AND NOT c='3'
  AND NOT c='999'
  AND NOT c=999;
+---+
| c |
+---+
|   |
| 1 |
+---+
(2 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A5_B24_C3 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest,
        unnest(mv_to_array(c_mv_complex_with_null_and_empty_row)) AS u(c)
   WHERE (c_long=0
          OR c_long=1
          OR c_long=2)
     AND (c=''
          OR c='my_null'
          OR c='my_empty'
          OR c='1'
          OR c='-1'
          OR c='0'
          OR c='999'
          OR c=999)
     AND NOT c='[2]'
     AND NOT c='[3, [4, 5]]'
     AND NOT c='2'
     AND NOT c='3'
     AND NOT c='999'
     AND NOT c=999);
+---+
| c |
+---+
|   |
| 1 |
+---+
(2 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A5_B24_C5 TYPE: NEGATIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest
   WHERE (c_long=0
          OR c_long=1
          OR c_long=2)
     AND (c=''
          OR c='my_null'
          OR c='my_empty'
          OR c='1'
          OR c='-1'
          OR c='0'
          OR c='999'
          OR c=999)
     AND NOT c='[2]'
     AND NOT c='[3, [4, 5]]'
     AND NOT c='2'
     AND NOT c='3'
     AND NOT c='999'
     AND NOT c=999), unnest(mv_to_array(c_mv_complex_with_null_and_empty_row)) AS u(c);
QueryInterruptedException
!error

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A5_B24_C7 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest,
        unnest(mv_to_array(c_mv_complex_with_null_and_empty_row)) AS u(c))
WHERE (c_long=0
       OR c_long=1
       OR c_long=2)
  AND (c=''
       OR c='my_null'
       OR c='my_empty'
       OR c='1'
       OR c='-1'
       OR c='0'
       OR c='999'
       OR c=999)
  AND NOT c='[2]'
  AND NOT c='[3, [4, 5]]'
  AND NOT c='2'
  AND NOT c='3'
  AND NOT c='999'
  AND NOT c=999;
+---+
| c |
+---+
|   |
| 1 |
+---+
(2 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A5_B24_C9 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest), unnest(mv_to_array(c_mv_complex_with_null_and_empty_row)) AS u(c)
WHERE (c_long=0
       OR c_long=1
       OR c_long=2)
  AND (c=''
       OR c='my_null'
       OR c='my_empty'
       OR c='1'
       OR c='-1'
       OR c='0'
       OR c='999'
       OR c=999)
  AND NOT c='[2]'
  AND NOT c='[3, [4, 5]]'
  AND NOT c='2'
  AND NOT c='3'
  AND NOT c='999'
  AND NOT c=999;
+---+
| c |
+---+
|   |
| 1 |
+---+
(2 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A5_B25_C1 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM test_unnest,
     unnest(mv_to_array(c_mv_complex_with_null_and_empty_row)) AS u(c)
WHERE c_str IS NULL
  AND c IS NULL;
+---+
| c |
+---+
|   |
+---+
(1 row)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A5_B25_C3 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest,
        unnest(mv_to_array(c_mv_complex_with_null_and_empty_row)) AS u(c)
   WHERE c_str IS NULL
     AND c IS NULL);
+---+
| c |
+---+
|   |
+---+
(1 row)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A5_B25_C5 TYPE: NEGATIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest
   WHERE c_str IS NULL
     AND c IS NULL), unnest(mv_to_array(c_mv_complex_with_null_and_empty_row)) AS u(c);
QueryInterruptedException
!error

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A5_B25_C7 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest,
        unnest(mv_to_array(c_mv_complex_with_null_and_empty_row)) AS u(c))
WHERE c_str IS NULL
  AND c IS NULL;
+---+
| c |
+---+
|   |
+---+
(1 row)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A5_B25_C9 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest), unnest(mv_to_array(c_mv_complex_with_null_and_empty_row)) AS u(c)
WHERE c_str IS NULL
  AND c IS NULL;
+---+
| c |
+---+
|   |
+---+
(1 row)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A5_B26_C1 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM test_unnest,
     unnest(mv_to_array(c_mv_complex_with_null_and_empty_row)) AS u(c)
WHERE c_str IS NOT NULL
  AND c IS NOT NULL;
+-------------+
| c           |
+-------------+
|             |
|             |
|             |
| 1           |
| 1           |
| 1           |
| [2]         |
| [2]         |
| [2]         |
| [3, [4, 5]] |
| [3, [4, 5]] |
| [3, [4, 5]] |
+-------------+
(12 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A5_B26_C3 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest,
        unnest(mv_to_array(c_mv_complex_with_null_and_empty_row)) AS u(c)
   WHERE c_str IS NOT NULL
     AND c IS NOT NULL);
+-------------+
| c           |
+-------------+
|             |
|             |
|             |
| 1           |
| 1           |
| 1           |
| [2]         |
| [2]         |
| [2]         |
| [3, [4, 5]] |
| [3, [4, 5]] |
| [3, [4, 5]] |
+-------------+
(12 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A5_B26_C5 TYPE: NEGATIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest
   WHERE c_str IS NOT NULL
     AND c IS NOT NULL), unnest(mv_to_array(c_mv_complex_with_null_and_empty_row)) AS u(c);
QueryInterruptedException
!error

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A5_B26_C7 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest,
        unnest(mv_to_array(c_mv_complex_with_null_and_empty_row)) AS u(c))
WHERE c_str IS NOT NULL
  AND c IS NOT NULL;
+-------------+
| c           |
+-------------+
|             |
|             |
|             |
| 1           |
| 1           |
| 1           |
| [2]         |
| [2]         |
| [2]         |
| [3, [4, 5]] |
| [3, [4, 5]] |
| [3, [4, 5]] |
+-------------+
(12 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A5_B26_C9 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest), unnest(mv_to_array(c_mv_complex_with_null_and_empty_row)) AS u(c)
WHERE c_str IS NOT NULL
  AND c IS NOT NULL;
+-------------+
| c           |
+-------------+
|             |
|             |
|             |
| 1           |
| 1           |
| 1           |
| [2]         |
| [2]         |
| [2]         |
| [3, [4, 5]] |
| [3, [4, 5]] |
| [3, [4, 5]] |
+-------------+
(12 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A5_B27_C1 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM test_unnest,
     unnest(mv_to_array(c_mv_complex_with_null_and_empty_row)) AS u(c)
WHERE c_long IN (0,
                 1,
                 2) IS TRUE
  AND c_long IN (3,
                 4) IS NOT TRUE
  AND c IN ('',
            'my_null',
            'my_empty',
            '1',
            '-1',
            '0',
            '999',
            999) IS TRUE
  AND c IN ('[2]',
            '[3, [4, 5]]',
            '2',
            '3',
            '999',
            999) IS NOT TRUE;
+---+
| c |
+---+
|   |
| 1 |
+---+
(2 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A5_B27_C3 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest,
        unnest(mv_to_array(c_mv_complex_with_null_and_empty_row)) AS u(c)
   WHERE c_long IN (0,
                    1,
                    2) IS TRUE
     AND c_long IN (3,
                    4) IS NOT TRUE
     AND c IN ('',
               'my_null',
               'my_empty',
               '1',
               '-1',
               '0',
               '999',
               999) IS TRUE
     AND c IN ('[2]',
               '[3, [4, 5]]',
               '2',
               '3',
               '999',
               999) IS NOT TRUE);
+---+
| c |
+---+
|   |
| 1 |
+---+
(2 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A5_B27_C5 TYPE: NEGATIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest
   WHERE c_long IN (0,
                    1,
                    2) IS TRUE
     AND c_long IN (3,
                    4) IS NOT TRUE
     AND c IN ('',
               'my_null',
               'my_empty',
               '1',
               '-1',
               '0',
               '999',
               999) IS TRUE
     AND c IN ('[2]',
               '[3, [4, 5]]',
               '2',
               '3',
               '999',
               999) IS NOT TRUE), unnest(mv_to_array(c_mv_complex_with_null_and_empty_row)) AS u(c);
QueryInterruptedException
!error

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A5_B27_C7 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest,
        unnest(mv_to_array(c_mv_complex_with_null_and_empty_row)) AS u(c))
WHERE c_long IN (0,
                 1,
                 2) IS TRUE
  AND c_long IN (3,
                 4) IS NOT TRUE
  AND c IN ('',
            'my_null',
            'my_empty',
            '1',
            '-1',
            '0',
            '999',
            999) IS TRUE
  AND c IN ('[2]',
            '[3, [4, 5]]',
            '2',
            '3',
            '999',
            999) IS NOT TRUE;
+---+
| c |
+---+
|   |
| 1 |
+---+
(2 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A5_B27_C9 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest), unnest(mv_to_array(c_mv_complex_with_null_and_empty_row)) AS u(c)
WHERE c_long IN (0,
                 1,
                 2) IS TRUE
  AND c_long IN (3,
                 4) IS NOT TRUE
  AND c IN ('',
            'my_null',
            'my_empty',
            '1',
            '-1',
            '0',
            '999',
            999) IS TRUE
  AND c IN ('[2]',
            '[3, [4, 5]]',
            '2',
            '3',
            '999',
            999) IS NOT TRUE;
+---+
| c |
+---+
|   |
| 1 |
+---+
(2 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A5_B28_C1 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM test_unnest,
     unnest(mv_to_array(c_mv_complex_with_null_and_empty_row)) AS u(c)
WHERE c_long IN (0,
                 1,
                 2) IS NOT FALSE
  AND c_long IN (3,
                 4) IS FALSE
  AND c IN ('',
            'my_null',
            'my_empty',
            '1',
            '-1',
            '0',
            '999',
            999) IS NOT FALSE
  AND c IN ('[2]',
            '[3, [4, 5]]',
            '2',
            '3',
            '999',
            999) IS FALSE;
+---+
| c |
+---+
|   |
| 1 |
+---+
(2 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A5_B28_C3 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest,
        unnest(mv_to_array(c_mv_complex_with_null_and_empty_row)) AS u(c)
   WHERE c_long IN (0,
                    1,
                    2) IS NOT FALSE
     AND c_long IN (3,
                    4) IS FALSE
     AND c IN ('',
               'my_null',
               'my_empty',
               '1',
               '-1',
               '0',
               '999',
               999) IS NOT FALSE
     AND c IN ('[2]',
               '[3, [4, 5]]',
               '2',
               '3',
               '999',
               999) IS FALSE);
+---+
| c |
+---+
|   |
| 1 |
+---+
(2 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A5_B28_C5 TYPE: NEGATIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest
   WHERE c_long IN (0,
                    1,
                    2) IS NOT FALSE
     AND c_long IN (3,
                    4) IS FALSE
     AND c IN ('',
               'my_null',
               'my_empty',
               '1',
               '-1',
               '0',
               '999',
               999) IS NOT FALSE
     AND c IN ('[2]',
               '[3, [4, 5]]',
               '2',
               '3',
               '999',
               999) IS FALSE), unnest(mv_to_array(c_mv_complex_with_null_and_empty_row)) AS u(c);
QueryInterruptedException
!error

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A5_B28_C7 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest,
        unnest(mv_to_array(c_mv_complex_with_null_and_empty_row)) AS u(c))
WHERE c_long IN (0,
                 1,
                 2) IS NOT FALSE
  AND c_long IN (3,
                 4) IS FALSE
  AND c IN ('',
            'my_null',
            'my_empty',
            '1',
            '-1',
            '0',
            '999',
            999) IS NOT FALSE
  AND c IN ('[2]',
            '[3, [4, 5]]',
            '2',
            '3',
            '999',
            999) IS FALSE;
+---+
| c |
+---+
|   |
| 1 |
+---+
(2 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A5_B28_C9 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest), unnest(mv_to_array(c_mv_complex_with_null_and_empty_row)) AS u(c)
WHERE c_long IN (0,
                 1,
                 2) IS NOT FALSE
  AND c_long IN (3,
                 4) IS FALSE
  AND c IN ('',
            'my_null',
            'my_empty',
            '1',
            '-1',
            '0',
            '999',
            999) IS NOT FALSE
  AND c IN ('[2]',
            '[3, [4, 5]]',
            '2',
            '3',
            '999',
            999) IS FALSE;
+---+
| c |
+---+
|   |
| 1 |
+---+
(2 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A5_B29_C1 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM test_unnest,
     unnest(mv_to_array(c_mv_complex_with_null_and_empty_row)) AS u(c)
WHERE (c_long BETWEEN 0 AND 2)
  AND (c_long NOT BETWEEN 3 AND 4)
  AND (c BETWEEN '1' AND '2')
  AND (c NOT BETWEEN '3' AND '4');
+---+
| c |
+---+
| 1 |
+---+
(1 row)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A5_B29_C3 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest,
        unnest(mv_to_array(c_mv_complex_with_null_and_empty_row)) AS u(c)
   WHERE (c_long BETWEEN 0 AND 2)
     AND (c_long NOT BETWEEN 3 AND 4)
     AND (c BETWEEN '1' AND '2')
     AND (c NOT BETWEEN '3' AND '4'));
+---+
| c |
+---+
| 1 |
+---+
(1 row)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A5_B29_C5 TYPE: NEGATIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest
   WHERE (c_long BETWEEN 0 AND 2)
     AND (c_long NOT BETWEEN 3 AND 4)
     AND (c BETWEEN '1' AND '2')
     AND (c NOT BETWEEN '3' AND '4')), unnest(mv_to_array(c_mv_complex_with_null_and_empty_row)) AS u(c);
QueryInterruptedException
!error

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A5_B29_C7 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest,
        unnest(mv_to_array(c_mv_complex_with_null_and_empty_row)) AS u(c))
WHERE (c_long BETWEEN 0 AND 2)
  AND (c_long NOT BETWEEN 3 AND 4)
  AND (c BETWEEN '1' AND '2')
  AND (c NOT BETWEEN '3' AND '4');
+---+
| c |
+---+
| 1 |
+---+
(1 row)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A5_B29_C9 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest), unnest(mv_to_array(c_mv_complex_with_null_and_empty_row)) AS u(c)
WHERE (c_long BETWEEN 0 AND 2)
  AND (c_long NOT BETWEEN 3 AND 4)
  AND (c BETWEEN '1' AND '2')
  AND (c NOT BETWEEN '3' AND '4');
+---+
| c |
+---+
| 1 |
+---+
(1 row)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A5_B30_C1 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM test_unnest,
     unnest(mv_to_array(c_mv_complex_with_null_and_empty_row)) AS u(c)
WHERE (c_str like '%2')
  AND (c_str not like '%3')
  AND (c like '1%')
  AND (c not like '3%');
+---+
| c |
+---+
| 1 |
+---+
(1 row)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A5_B30_C3 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest,
        unnest(mv_to_array(c_mv_complex_with_null_and_empty_row)) AS u(c)
   WHERE (c_str like '%2')
     AND (c_str not like '%3')
     AND (c like '1%')
     AND (c not like '3%'));
+---+
| c |
+---+
| 1 |
+---+
(1 row)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A5_B30_C5 TYPE: NEGATIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest
   WHERE (c_str like '%2')
     AND (c_str not like '%3')
     AND (c like '1%')
     AND (c not like '3%')), unnest(mv_to_array(c_mv_complex_with_null_and_empty_row)) AS u(c);
QueryInterruptedException
!error

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A5_B30_C7 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest,
        unnest(mv_to_array(c_mv_complex_with_null_and_empty_row)) AS u(c))
WHERE (c_str like '%2')
  AND (c_str not like '%3')
  AND (c like '1%')
  AND (c not like '3%');
+---+
| c |
+---+
| 1 |
+---+
(1 row)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A5_B30_C9 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest), unnest(mv_to_array(c_mv_complex_with_null_and_empty_row)) AS u(c)
WHERE (c_str like '%2')
  AND (c_str not like '%3')
  AND (c like '1%')
  AND (c not like '3%');
+---+
| c |
+---+
| 1 |
+---+
(1 row)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A5_B31_C1 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM test_unnest,
     unnest(mv_to_array(c_mv_complex_with_null_and_empty_row)) AS u(c)
WHERE c_long IN (0,
                 1,
                 2)
  AND c_long NOT IN (3,
                     4)
  AND c IN ('',
            'my_null',
            'my_empty',
            '1',
            '-1',
            '0',
            '999',
            999)
  AND c NOT IN ('[2]',
                '[3, [4, 5]]',
                '2',
                '3',
                '999',
                999);
+---+
| c |
+---+
|   |
| 1 |
+---+
(2 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A5_B31_C3 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest,
        unnest(mv_to_array(c_mv_complex_with_null_and_empty_row)) AS u(c)
   WHERE c_long IN (0,
                    1,
                    2)
     AND c_long NOT IN (3,
                        4)
     AND c IN ('',
               'my_null',
               'my_empty',
               '1',
               '-1',
               '0',
               '999',
               999)
     AND c NOT IN ('[2]',
                   '[3, [4, 5]]',
                   '2',
                   '3',
                   '999',
                   999));
+---+
| c |
+---+
|   |
| 1 |
+---+
(2 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A5_B31_C5 TYPE: NEGATIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest
   WHERE c_long IN (0,
                    1,
                    2)
     AND c_long NOT IN (3,
                        4)
     AND c IN ('',
               'my_null',
               'my_empty',
               '1',
               '-1',
               '0',
               '999',
               999)
     AND c NOT IN ('[2]',
                   '[3, [4, 5]]',
                   '2',
                   '3',
                   '999',
                   999)), unnest(mv_to_array(c_mv_complex_with_null_and_empty_row)) AS u(c);
QueryInterruptedException
!error

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A5_B31_C7 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest,
        unnest(mv_to_array(c_mv_complex_with_null_and_empty_row)) AS u(c))
WHERE c_long IN (0,
                 1,
                 2)
  AND c_long NOT IN (3,
                     4)
  AND c IN ('',
            'my_null',
            'my_empty',
            '1',
            '-1',
            '0',
            '999',
            999)
  AND c NOT IN ('[2]',
                '[3, [4, 5]]',
                '2',
                '3',
                '999',
                999);
+---+
| c |
+---+
|   |
| 1 |
+---+
(2 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A5_B31_C9 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest), unnest(mv_to_array(c_mv_complex_with_null_and_empty_row)) AS u(c)
WHERE c_long IN (0,
                 1,
                 2)
  AND c_long NOT IN (3,
                     4)
  AND c IN ('',
            'my_null',
            'my_empty',
            '1',
            '-1',
            '0',
            '999',
            999)
  AND c NOT IN ('[2]',
                '[3, [4, 5]]',
                '2',
                '3',
                '999',
                999);
+---+
| c |
+---+
|   |
| 1 |
+---+
(2 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A5_B32_C1 TYPE: NEGATIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM test_unnest,
     unnest(mv_to_array(c_mv_complex_with_null_and_empty_row)) AS u(c)
WHERE c_long IN
    (SELECT col
     FROM (
           VALUES(0),(1),(2)) AS t(col))
  AND c_long NOT IN
    (SELECT col
     FROM (
           VALUES(3),(4)) AS t(col))
  AND c IN
    (SELECT col
     FROM (
           VALUES(''),('my_null'),('my_empty'),('1'),('-1'),('0'),('999')) AS t(col))
  AND c NOT IN
    (SELECT col
     FROM (
           VALUES('[2]'),('[3, [4, 5]]'),('2'),('3'),('999')) AS t(col));
Unhandled Query Planning Failure
!error

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A5_B32_C3 TYPE: NEGATIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest,
        unnest(mv_to_array(c_mv_complex_with_null_and_empty_row)) AS u(c)
   WHERE c_long IN
       (SELECT col
        FROM (
              VALUES(0),(1),(2)) AS t(col))
     AND c_long NOT IN
       (SELECT col
        FROM (
              VALUES(3),(4)) AS t(col))
     AND c IN
       (SELECT col
        FROM (
              VALUES(''),('my_null'),('my_empty'),('1'),('-1'),('0'),('999')) AS t(col))
     AND c NOT IN
       (SELECT col
        FROM (
              VALUES('[2]'),('[3, [4, 5]]'),('2'),('3'),('999')) AS t(col)));
Unhandled Query Planning Failure
!error

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A5_B32_C5 TYPE: NEGATIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest
   WHERE c_long IN
       (SELECT col
        FROM (
              VALUES(0),(1),(2)) AS t(col))
     AND c_long NOT IN
       (SELECT col
        FROM (
              VALUES(3),(4)) AS t(col))
     AND c IN
       (SELECT col
        FROM (
              VALUES(''),('my_null'),('my_empty'),('1'),('-1'),('0'),('999')) AS t(col))
     AND c NOT IN
       (SELECT col
        FROM (
              VALUES('[2]'),('[3, [4, 5]]'),('2'),('3'),('999')) AS t(col))), unnest(mv_to_array(c_mv_complex_with_null_and_empty_row)) AS u(c);
QueryInterruptedException
!error

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A5_B32_C7 TYPE: NEGATIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest,
        unnest(mv_to_array(c_mv_complex_with_null_and_empty_row)) AS u(c))
WHERE c_long IN
    (SELECT col
     FROM (
           VALUES(0),(1),(2)) AS t(col))
  AND c_long NOT IN
    (SELECT col
     FROM (
           VALUES(3),(4)) AS t(col))
  AND c IN
    (SELECT col
     FROM (
           VALUES(''),('my_null'),('my_empty'),('1'),('-1'),('0'),('999')) AS t(col))
  AND c NOT IN
    (SELECT col
     FROM (
           VALUES('[2]'),('[3, [4, 5]]'),('2'),('3'),('999')) AS t(col));
Unhandled Query Planning Failure
!error

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A5_B32_C9 TYPE: NEGATIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest), unnest(mv_to_array(c_mv_complex_with_null_and_empty_row)) AS u(c)
WHERE c_long IN
    (SELECT col
     FROM (
           VALUES(0),(1),(2)) AS t(col))
  AND c_long NOT IN
    (SELECT col
     FROM (
           VALUES(3),(4)) AS t(col))
  AND c IN
    (SELECT col
     FROM (
           VALUES(''),('my_null'),('my_empty'),('1'),('-1'),('0'),('999')) AS t(col))
  AND c NOT IN
    (SELECT col
     FROM (
           VALUES('[2]'),('[3, [4, 5]]'),('2'),('3'),('999')) AS t(col));
Unhandled Query Planning Failure
!error

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A5_B33_C1 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM test_unnest,
     unnest(mv_to_array(c_mv_complex_with_null_and_empty_row)) AS u(c)
WHERE c_long=1;
+---+
| c |
+---+
|   |
+---+
(1 row)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A5_B33_C3 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest,
        unnest(mv_to_array(c_mv_complex_with_null_and_empty_row)) AS u(c)
   WHERE c_long=1);
+---+
| c |
+---+
|   |
+---+
(1 row)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A5_B33_C5 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest
   WHERE c_long=1), unnest(mv_to_array(c_mv_complex_with_null_and_empty_row)) AS u(c);
+---+
| c |
+---+
|   |
+---+
(1 row)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A5_B33_C7 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest,
        unnest(mv_to_array(c_mv_complex_with_null_and_empty_row)) AS u(c))
WHERE c_long=1;
+---+
| c |
+---+
|   |
+---+
(1 row)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A5_B33_C9 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest), unnest(mv_to_array(c_mv_complex_with_null_and_empty_row)) AS u(c)
WHERE c_long=1;
+---+
| c |
+---+
|   |
+---+
(1 row)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A5_B34_C1 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM test_unnest,
     unnest(mv_to_array(c_mv_complex_with_null_and_empty_row)) AS u(c)
WHERE c_long<>1;
+-------------+
| c           |
+-------------+
|             |
|             |
|             |
| 1           |
| 1           |
| 1           |
| [2]         |
| [2]         |
| [2]         |
| [3, [4, 5]] |
| [3, [4, 5]] |
| [3, [4, 5]] |
|             |
|             |
|             |
|             |
+-------------+
(16 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A5_B34_C3 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest,
        unnest(mv_to_array(c_mv_complex_with_null_and_empty_row)) AS u(c)
   WHERE c_long<>1);
+-------------+
| c           |
+-------------+
|             |
|             |
|             |
| 1           |
| 1           |
| 1           |
| [2]         |
| [2]         |
| [2]         |
| [3, [4, 5]] |
| [3, [4, 5]] |
| [3, [4, 5]] |
|             |
|             |
|             |
|             |
+-------------+
(16 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A5_B34_C5 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest
   WHERE c_long<>1), unnest(mv_to_array(c_mv_complex_with_null_and_empty_row)) AS u(c);
+-------------+
| c           |
+-------------+
|             |
|             |
|             |
| 1           |
| 1           |
| 1           |
| [2]         |
| [2]         |
| [2]         |
| [3, [4, 5]] |
| [3, [4, 5]] |
| [3, [4, 5]] |
|             |
|             |
|             |
|             |
+-------------+
(16 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A5_B34_C7 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest,
        unnest(mv_to_array(c_mv_complex_with_null_and_empty_row)) AS u(c))
WHERE c_long<>1;
+-------------+
| c           |
+-------------+
|             |
|             |
|             |
| 1           |
| 1           |
| 1           |
| [2]         |
| [2]         |
| [2]         |
| [3, [4, 5]] |
| [3, [4, 5]] |
| [3, [4, 5]] |
|             |
|             |
|             |
|             |
+-------------+
(16 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A5_B34_C9 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest), unnest(mv_to_array(c_mv_complex_with_null_and_empty_row)) AS u(c)
WHERE c_long<>1;
+-------------+
| c           |
+-------------+
|             |
|             |
|             |
| 1           |
| 1           |
| 1           |
| [2]         |
| [2]         |
| [2]         |
| [3, [4, 5]] |
| [3, [4, 5]] |
| [3, [4, 5]] |
|             |
|             |
|             |
|             |
+-------------+
(16 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A5_B35_C1 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM test_unnest,
     unnest(mv_to_array(c_mv_complex_with_null_and_empty_row)) AS u(c)
WHERE c_long>1;
+-------------+
| c           |
+-------------+
|             |
|             |
|             |
| 1           |
| 1           |
| 1           |
| [2]         |
| [2]         |
| [2]         |
| [3, [4, 5]] |
| [3, [4, 5]] |
| [3, [4, 5]] |
|             |
|             |
|             |
+-------------+
(15 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A5_B35_C3 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest,
        unnest(mv_to_array(c_mv_complex_with_null_and_empty_row)) AS u(c)
   WHERE c_long>1);
+-------------+
| c           |
+-------------+
|             |
|             |
|             |
| 1           |
| 1           |
| 1           |
| [2]         |
| [2]         |
| [2]         |
| [3, [4, 5]] |
| [3, [4, 5]] |
| [3, [4, 5]] |
|             |
|             |
|             |
+-------------+
(15 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A5_B35_C5 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest
   WHERE c_long>1), unnest(mv_to_array(c_mv_complex_with_null_and_empty_row)) AS u(c);
+-------------+
| c           |
+-------------+
|             |
|             |
|             |
| 1           |
| 1           |
| 1           |
| [2]         |
| [2]         |
| [2]         |
| [3, [4, 5]] |
| [3, [4, 5]] |
| [3, [4, 5]] |
|             |
|             |
|             |
+-------------+
(15 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A5_B35_C7 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest,
        unnest(mv_to_array(c_mv_complex_with_null_and_empty_row)) AS u(c))
WHERE c_long>1;
+-------------+
| c           |
+-------------+
|             |
|             |
|             |
| 1           |
| 1           |
| 1           |
| [2]         |
| [2]         |
| [2]         |
| [3, [4, 5]] |
| [3, [4, 5]] |
| [3, [4, 5]] |
|             |
|             |
|             |
+-------------+
(15 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A5_B35_C9 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest), unnest(mv_to_array(c_mv_complex_with_null_and_empty_row)) AS u(c)
WHERE c_long>1;
+-------------+
| c           |
+-------------+
|             |
|             |
|             |
| 1           |
| 1           |
| 1           |
| [2]         |
| [2]         |
| [2]         |
| [3, [4, 5]] |
| [3, [4, 5]] |
| [3, [4, 5]] |
|             |
|             |
|             |
+-------------+
(15 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A5_B36_C1 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM test_unnest,
     unnest(mv_to_array(c_mv_complex_with_null_and_empty_row)) AS u(c)
WHERE c_long>=1;
+-------------+
| c           |
+-------------+
|             |
|             |
|             |
| 1           |
| 1           |
| 1           |
| [2]         |
| [2]         |
| [2]         |
| [3, [4, 5]] |
| [3, [4, 5]] |
| [3, [4, 5]] |
|             |
|             |
|             |
|             |
+-------------+
(16 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A5_B36_C3 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest,
        unnest(mv_to_array(c_mv_complex_with_null_and_empty_row)) AS u(c)
   WHERE c_long>=1);
+-------------+
| c           |
+-------------+
|             |
|             |
|             |
| 1           |
| 1           |
| 1           |
| [2]         |
| [2]         |
| [2]         |
| [3, [4, 5]] |
| [3, [4, 5]] |
| [3, [4, 5]] |
|             |
|             |
|             |
|             |
+-------------+
(16 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A5_B36_C5 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest
   WHERE c_long>=1), unnest(mv_to_array(c_mv_complex_with_null_and_empty_row)) AS u(c);
+-------------+
| c           |
+-------------+
|             |
|             |
|             |
| 1           |
| 1           |
| 1           |
| [2]         |
| [2]         |
| [2]         |
| [3, [4, 5]] |
| [3, [4, 5]] |
| [3, [4, 5]] |
|             |
|             |
|             |
|             |
+-------------+
(16 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A5_B36_C7 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest,
        unnest(mv_to_array(c_mv_complex_with_null_and_empty_row)) AS u(c))
WHERE c_long>=1;
+-------------+
| c           |
+-------------+
|             |
|             |
|             |
| 1           |
| 1           |
| 1           |
| [2]         |
| [2]         |
| [2]         |
| [3, [4, 5]] |
| [3, [4, 5]] |
| [3, [4, 5]] |
|             |
|             |
|             |
|             |
+-------------+
(16 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A5_B36_C9 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest), unnest(mv_to_array(c_mv_complex_with_null_and_empty_row)) AS u(c)
WHERE c_long>=1;
+-------------+
| c           |
+-------------+
|             |
|             |
|             |
| 1           |
| 1           |
| 1           |
| [2]         |
| [2]         |
| [2]         |
| [3, [4, 5]] |
| [3, [4, 5]] |
| [3, [4, 5]] |
|             |
|             |
|             |
|             |
+-------------+
(16 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A5_B37_C1 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM test_unnest,
     unnest(mv_to_array(c_mv_complex_with_null_and_empty_row)) AS u(c)
WHERE c_long<1;
+---+
| c |
+---+
|   |
+---+
(1 row)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A5_B37_C3 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest,
        unnest(mv_to_array(c_mv_complex_with_null_and_empty_row)) AS u(c)
   WHERE c_long<1);
+---+
| c |
+---+
|   |
+---+
(1 row)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A5_B37_C5 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest
   WHERE c_long<1), unnest(mv_to_array(c_mv_complex_with_null_and_empty_row)) AS u(c);
+---+
| c |
+---+
|   |
+---+
(1 row)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A5_B37_C7 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest,
        unnest(mv_to_array(c_mv_complex_with_null_and_empty_row)) AS u(c))
WHERE c_long<1;
+---+
| c |
+---+
|   |
+---+
(1 row)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A5_B37_C9 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest), unnest(mv_to_array(c_mv_complex_with_null_and_empty_row)) AS u(c)
WHERE c_long<1;
+---+
| c |
+---+
|   |
+---+
(1 row)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A5_B38_C1 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM test_unnest,
     unnest(mv_to_array(c_mv_complex_with_null_and_empty_row)) AS u(c)
WHERE c_long<=1;
+---+
| c |
+---+
|   |
|   |
+---+
(2 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A5_B38_C3 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest,
        unnest(mv_to_array(c_mv_complex_with_null_and_empty_row)) AS u(c)
   WHERE c_long<=1);
+---+
| c |
+---+
|   |
|   |
+---+
(2 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A5_B38_C5 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest
   WHERE c_long<=1), unnest(mv_to_array(c_mv_complex_with_null_and_empty_row)) AS u(c);
+---+
| c |
+---+
|   |
|   |
+---+
(2 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A5_B38_C7 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest,
        unnest(mv_to_array(c_mv_complex_with_null_and_empty_row)) AS u(c))
WHERE c_long<=1;
+---+
| c |
+---+
|   |
|   |
+---+
(2 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A5_B38_C9 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest), unnest(mv_to_array(c_mv_complex_with_null_and_empty_row)) AS u(c)
WHERE c_long<=1;
+---+
| c |
+---+
|   |
|   |
+---+
(2 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A5_B39_C1 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM test_unnest,
     unnest(mv_to_array(c_mv_complex_with_null_and_empty_row)) AS u(c)
WHERE (NOT c_str<>''
       OR NOT c_str<>'str2'
       OR NOT c_long<>0
       OR NOT c_long<>1
       OR NOT c_long<>2
       OR NOT c_long<>999)
  AND (NOT c_str='str3'
       OR NOT c_str='str4'
       OR NOT c_long=3
       OR NOT c_long=4
       OR NOT c_long=999);
+-------------+
| c           |
+-------------+
|             |
| 1           |
| [2]         |
| [3, [4, 5]] |
|             |
|             |
|             |
+-------------+
(7 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A5_B39_C3 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest,
        unnest(mv_to_array(c_mv_complex_with_null_and_empty_row)) AS u(c)
   WHERE (NOT c_str<>''
          OR NOT c_str<>'str2'
          OR NOT c_long<>0
          OR NOT c_long<>1
          OR NOT c_long<>2
          OR NOT c_long<>999)
     AND (NOT c_str='str3'
          OR NOT c_str='str4'
          OR NOT c_long=3
          OR NOT c_long=4
          OR NOT c_long=999));
+-------------+
| c           |
+-------------+
|             |
| 1           |
| [2]         |
| [3, [4, 5]] |
|             |
|             |
|             |
+-------------+
(7 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A5_B39_C5 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest
   WHERE (NOT c_str<>''
          OR NOT c_str<>'str2'
          OR NOT c_long<>0
          OR NOT c_long<>1
          OR NOT c_long<>2
          OR NOT c_long<>999)
     AND (NOT c_str='str3'
          OR NOT c_str='str4'
          OR NOT c_long=3
          OR NOT c_long=4
          OR NOT c_long=999)), unnest(mv_to_array(c_mv_complex_with_null_and_empty_row)) AS u(c);
+-------------+
| c           |
+-------------+
|             |
| 1           |
| [2]         |
| [3, [4, 5]] |
|             |
|             |
|             |
+-------------+
(7 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A5_B39_C7 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest,
        unnest(mv_to_array(c_mv_complex_with_null_and_empty_row)) AS u(c))
WHERE (NOT c_str<>''
       OR NOT c_str<>'str2'
       OR NOT c_long<>0
       OR NOT c_long<>1
       OR NOT c_long<>2
       OR NOT c_long<>999)
  AND (NOT c_str='str3'
       OR NOT c_str='str4'
       OR NOT c_long=3
       OR NOT c_long=4
       OR NOT c_long=999);
+-------------+
| c           |
+-------------+
|             |
| 1           |
| [2]         |
| [3, [4, 5]] |
|             |
|             |
|             |
+-------------+
(7 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A5_B39_C9 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest), unnest(mv_to_array(c_mv_complex_with_null_and_empty_row)) AS u(c)
WHERE (NOT c_str<>''
       OR NOT c_str<>'str2'
       OR NOT c_long<>0
       OR NOT c_long<>1
       OR NOT c_long<>2
       OR NOT c_long<>999)
  AND (NOT c_str='str3'
       OR NOT c_str='str4'
       OR NOT c_long=3
       OR NOT c_long=4
       OR NOT c_long=999);
+-------------+
| c           |
+-------------+
|             |
| 1           |
| [2]         |
| [3, [4, 5]] |
|             |
|             |
|             |
+-------------+
(7 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A5_B40_C1 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM test_unnest,
     unnest(mv_to_array(c_mv_complex_with_null_and_empty_row)) AS u(c)
WHERE (c_str=''
       OR c_str='str2'
       OR c_long=0
       OR c_long=1
       OR c_long=2
       OR c_long=999)
  AND NOT c_str='str3'
  AND NOT c_str='str4'
  AND NOT c_long=3
  AND NOT c_long=4
  AND NOT c_long=999;
+-------------+
| c           |
+-------------+
|             |
| 1           |
| [2]         |
| [3, [4, 5]] |
|             |
|             |
+-------------+
(6 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A5_B40_C3 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest,
        unnest(mv_to_array(c_mv_complex_with_null_and_empty_row)) AS u(c)
   WHERE (c_str=''
          OR c_str='str2'
          OR c_long=0
          OR c_long=1
          OR c_long=2
          OR c_long=999)
     AND NOT c_str='str3'
     AND NOT c_str='str4'
     AND NOT c_long=3
     AND NOT c_long=4
     AND NOT c_long=999);
+-------------+
| c           |
+-------------+
|             |
| 1           |
| [2]         |
| [3, [4, 5]] |
|             |
|             |
+-------------+
(6 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A5_B40_C5 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest
   WHERE (c_str=''
          OR c_str='str2'
          OR c_long=0
          OR c_long=1
          OR c_long=2
          OR c_long=999)
     AND NOT c_str='str3'
     AND NOT c_str='str4'
     AND NOT c_long=3
     AND NOT c_long=4
     AND NOT c_long=999), unnest(mv_to_array(c_mv_complex_with_null_and_empty_row)) AS u(c);
+-------------+
| c           |
+-------------+
|             |
| 1           |
| [2]         |
| [3, [4, 5]] |
|             |
|             |
+-------------+
(6 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A5_B40_C7 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest,
        unnest(mv_to_array(c_mv_complex_with_null_and_empty_row)) AS u(c))
WHERE (c_str=''
       OR c_str='str2'
       OR c_long=0
       OR c_long=1
       OR c_long=2
       OR c_long=999)
  AND NOT c_str='str3'
  AND NOT c_str='str4'
  AND NOT c_long=3
  AND NOT c_long=4
  AND NOT c_long=999;
+-------------+
| c           |
+-------------+
|             |
| 1           |
| [2]         |
| [3, [4, 5]] |
|             |
|             |
+-------------+
(6 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A5_B40_C9 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest), unnest(mv_to_array(c_mv_complex_with_null_and_empty_row)) AS u(c)
WHERE (c_str=''
       OR c_str='str2'
       OR c_long=0
       OR c_long=1
       OR c_long=2
       OR c_long=999)
  AND NOT c_str='str3'
  AND NOT c_str='str4'
  AND NOT c_long=3
  AND NOT c_long=4
  AND NOT c_long=999;
+-------------+
| c           |
+-------------+
|             |
| 1           |
| [2]         |
| [3, [4, 5]] |
|             |
|             |
+-------------+
(6 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A5_B41_C1 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM test_unnest,
     unnest(mv_to_array(c_mv_complex_with_null_and_empty_row)) AS u(c)
WHERE c_str IS NULL;
+---+
| c |
+---+
|   |
+---+
(1 row)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A5_B41_C3 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest,
        unnest(mv_to_array(c_mv_complex_with_null_and_empty_row)) AS u(c)
   WHERE c_str IS NULL);
+---+
| c |
+---+
|   |
+---+
(1 row)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A5_B41_C5 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest
   WHERE c_str IS NULL), unnest(mv_to_array(c_mv_complex_with_null_and_empty_row)) AS u(c);
+---+
| c |
+---+
|   |
+---+
(1 row)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A5_B41_C7 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest,
        unnest(mv_to_array(c_mv_complex_with_null_and_empty_row)) AS u(c))
WHERE c_str IS NULL;
+---+
| c |
+---+
|   |
+---+
(1 row)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A5_B41_C9 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest), unnest(mv_to_array(c_mv_complex_with_null_and_empty_row)) AS u(c)
WHERE c_str IS NULL;
+---+
| c |
+---+
|   |
+---+
(1 row)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A5_B42_C1 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM test_unnest,
     unnest(mv_to_array(c_mv_complex_with_null_and_empty_row)) AS u(c)
WHERE c_str IS NOT NULL;
+-------------+
| c           |
+-------------+
|             |
|             |
|             |
| 1           |
| 1           |
| 1           |
| [2]         |
| [2]         |
| [2]         |
| [3, [4, 5]] |
| [3, [4, 5]] |
| [3, [4, 5]] |
|             |
|             |
|             |
|             |
+-------------+
(16 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A5_B42_C3 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest,
        unnest(mv_to_array(c_mv_complex_with_null_and_empty_row)) AS u(c)
   WHERE c_str IS NOT NULL);
+-------------+
| c           |
+-------------+
|             |
|             |
|             |
| 1           |
| 1           |
| 1           |
| [2]         |
| [2]         |
| [2]         |
| [3, [4, 5]] |
| [3, [4, 5]] |
| [3, [4, 5]] |
|             |
|             |
|             |
|             |
+-------------+
(16 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A5_B42_C5 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest
   WHERE c_str IS NOT NULL), unnest(mv_to_array(c_mv_complex_with_null_and_empty_row)) AS u(c);
+-------------+
| c           |
+-------------+
|             |
|             |
|             |
| 1           |
| 1           |
| 1           |
| [2]         |
| [2]         |
| [2]         |
| [3, [4, 5]] |
| [3, [4, 5]] |
| [3, [4, 5]] |
|             |
|             |
|             |
|             |
+-------------+
(16 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A5_B42_C7 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest,
        unnest(mv_to_array(c_mv_complex_with_null_and_empty_row)) AS u(c))
WHERE c_str IS NOT NULL;
+-------------+
| c           |
+-------------+
|             |
|             |
|             |
| 1           |
| 1           |
| 1           |
| [2]         |
| [2]         |
| [2]         |
| [3, [4, 5]] |
| [3, [4, 5]] |
| [3, [4, 5]] |
|             |
|             |
|             |
|             |
+-------------+
(16 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A5_B42_C9 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest), unnest(mv_to_array(c_mv_complex_with_null_and_empty_row)) AS u(c)
WHERE c_str IS NOT NULL;
+-------------+
| c           |
+-------------+
|             |
|             |
|             |
| 1           |
| 1           |
| 1           |
| [2]         |
| [2]         |
| [2]         |
| [3, [4, 5]] |
| [3, [4, 5]] |
| [3, [4, 5]] |
|             |
|             |
|             |
|             |
+-------------+
(16 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A5_B43_C1 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM test_unnest,
     unnest(mv_to_array(c_mv_complex_with_null_and_empty_row)) AS u(c)
WHERE c_str IN ('',
                'str2',
                999) IS TRUE
  AND c_str IN ('str3',
                'str4',
                999) IS NOT TRUE
  AND c_long IN (0,
                 1,
                 2,
                 999) IS TRUE
  AND c_long IN (3,
                 4,
                 999) IS NOT TRUE;
+-------------+
| c           |
+-------------+
|             |
| 1           |
| [2]         |
| [3, [4, 5]] |
|             |
|             |
+-------------+
(6 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A5_B43_C3 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest,
        unnest(mv_to_array(c_mv_complex_with_null_and_empty_row)) AS u(c)
   WHERE c_str IN ('',
                   'str2',
                   999) IS TRUE
     AND c_str IN ('str3',
                   'str4',
                   999) IS NOT TRUE
     AND c_long IN (0,
                    1,
                    2,
                    999) IS TRUE
     AND c_long IN (3,
                    4,
                    999) IS NOT TRUE);
+-------------+
| c           |
+-------------+
|             |
| 1           |
| [2]         |
| [3, [4, 5]] |
|             |
|             |
+-------------+
(6 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A5_B43_C5 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest
   WHERE c_str IN ('',
                   'str2',
                   999) IS TRUE
     AND c_str IN ('str3',
                   'str4',
                   999) IS NOT TRUE
     AND c_long IN (0,
                    1,
                    2,
                    999) IS TRUE
     AND c_long IN (3,
                    4,
                    999) IS NOT TRUE), unnest(mv_to_array(c_mv_complex_with_null_and_empty_row)) AS u(c);
+-------------+
| c           |
+-------------+
|             |
| 1           |
| [2]         |
| [3, [4, 5]] |
|             |
|             |
+-------------+
(6 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A5_B43_C7 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest,
        unnest(mv_to_array(c_mv_complex_with_null_and_empty_row)) AS u(c))
WHERE c_str IN ('',
                'str2',
                999) IS TRUE
  AND c_str IN ('str3',
                'str4',
                999) IS NOT TRUE
  AND c_long IN (0,
                 1,
                 2,
                 999) IS TRUE
  AND c_long IN (3,
                 4,
                 999) IS NOT TRUE;
+-------------+
| c           |
+-------------+
|             |
| 1           |
| [2]         |
| [3, [4, 5]] |
|             |
|             |
+-------------+
(6 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A5_B43_C9 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest), unnest(mv_to_array(c_mv_complex_with_null_and_empty_row)) AS u(c)
WHERE c_str IN ('',
                'str2',
                999) IS TRUE
  AND c_str IN ('str3',
                'str4',
                999) IS NOT TRUE
  AND c_long IN (0,
                 1,
                 2,
                 999) IS TRUE
  AND c_long IN (3,
                 4,
                 999) IS NOT TRUE;
+-------------+
| c           |
+-------------+
|             |
| 1           |
| [2]         |
| [3, [4, 5]] |
|             |
|             |
+-------------+
(6 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A5_B44_C1 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM test_unnest,
     unnest(mv_to_array(c_mv_complex_with_null_and_empty_row)) AS u(c)
WHERE c_str IN ('',
                'str2',
                999) IS NOT FALSE
  AND c_str IN ('str3',
                'str4',
                999) IS FALSE
  AND c_long IN (0,
                 1,
                 2,
                 999) IS NOT FALSE
  AND c_long IN (3,
                 4,
                 999) IS FALSE;
+-------------+
| c           |
+-------------+
|             |
| 1           |
| [2]         |
| [3, [4, 5]] |
|             |
|             |
+-------------+
(6 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A5_B44_C3 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest,
        unnest(mv_to_array(c_mv_complex_with_null_and_empty_row)) AS u(c)
   WHERE c_str IN ('',
                   'str2',
                   999) IS NOT FALSE
     AND c_str IN ('str3',
                   'str4',
                   999) IS FALSE
     AND c_long IN (0,
                    1,
                    2,
                    999) IS NOT FALSE
     AND c_long IN (3,
                    4,
                    999) IS FALSE);
+-------------+
| c           |
+-------------+
|             |
| 1           |
| [2]         |
| [3, [4, 5]] |
|             |
|             |
+-------------+
(6 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A5_B44_C5 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest
   WHERE c_str IN ('',
                   'str2',
                   999) IS NOT FALSE
     AND c_str IN ('str3',
                   'str4',
                   999) IS FALSE
     AND c_long IN (0,
                    1,
                    2,
                    999) IS NOT FALSE
     AND c_long IN (3,
                    4,
                    999) IS FALSE), unnest(mv_to_array(c_mv_complex_with_null_and_empty_row)) AS u(c);
+-------------+
| c           |
+-------------+
|             |
| 1           |
| [2]         |
| [3, [4, 5]] |
|             |
|             |
+-------------+
(6 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A5_B44_C7 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest,
        unnest(mv_to_array(c_mv_complex_with_null_and_empty_row)) AS u(c))
WHERE c_str IN ('',
                'str2',
                999) IS NOT FALSE
  AND c_str IN ('str3',
                'str4',
                999) IS FALSE
  AND c_long IN (0,
                 1,
                 2,
                 999) IS NOT FALSE
  AND c_long IN (3,
                 4,
                 999) IS FALSE;
+-------------+
| c           |
+-------------+
|             |
| 1           |
| [2]         |
| [3, [4, 5]] |
|             |
|             |
+-------------+
(6 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A5_B44_C9 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest), unnest(mv_to_array(c_mv_complex_with_null_and_empty_row)) AS u(c)
WHERE c_str IN ('',
                'str2',
                999) IS NOT FALSE
  AND c_str IN ('str3',
                'str4',
                999) IS FALSE
  AND c_long IN (0,
                 1,
                 2,
                 999) IS NOT FALSE
  AND c_long IN (3,
                 4,
                 999) IS FALSE;
+-------------+
| c           |
+-------------+
|             |
| 1           |
| [2]         |
| [3, [4, 5]] |
|             |
|             |
+-------------+
(6 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A5_B45_C1 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM test_unnest,
     unnest(mv_to_array(c_mv_complex_with_null_and_empty_row)) AS u(c)
WHERE (c_long BETWEEN 0 AND 2)
  AND (c_long NOT BETWEEN 3 AND 4);
+-------------+
| c           |
+-------------+
|             |
| 1           |
| [2]         |
| [3, [4, 5]] |
|             |
|             |
|             |
+-------------+
(7 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A5_B45_C3 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest,
        unnest(mv_to_array(c_mv_complex_with_null_and_empty_row)) AS u(c)
   WHERE (c_long BETWEEN 0 AND 2)
     AND (c_long NOT BETWEEN 3 AND 4));
+-------------+
| c           |
+-------------+
|             |
| 1           |
| [2]         |
| [3, [4, 5]] |
|             |
|             |
|             |
+-------------+
(7 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A5_B45_C5 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest
   WHERE (c_long BETWEEN 0 AND 2)
     AND (c_long NOT BETWEEN 3 AND 4)), unnest(mv_to_array(c_mv_complex_with_null_and_empty_row)) AS u(c);
+-------------+
| c           |
+-------------+
|             |
| 1           |
| [2]         |
| [3, [4, 5]] |
|             |
|             |
|             |
+-------------+
(7 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A5_B45_C7 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest,
        unnest(mv_to_array(c_mv_complex_with_null_and_empty_row)) AS u(c))
WHERE (c_long BETWEEN 0 AND 2)
  AND (c_long NOT BETWEEN 3 AND 4);
+-------------+
| c           |
+-------------+
|             |
| 1           |
| [2]         |
| [3, [4, 5]] |
|             |
|             |
|             |
+-------------+
(7 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A5_B45_C9 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest), unnest(mv_to_array(c_mv_complex_with_null_and_empty_row)) AS u(c)
WHERE (c_long BETWEEN 0 AND 2)
  AND (c_long NOT BETWEEN 3 AND 4);
+-------------+
| c           |
+-------------+
|             |
| 1           |
| [2]         |
| [3, [4, 5]] |
|             |
|             |
|             |
+-------------+
(7 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A5_B46_C1 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM test_unnest,
     unnest(mv_to_array(c_mv_complex_with_null_and_empty_row)) AS u(c)
WHERE (c_str like '%2')
  AND (c_str not like '%3')
  AND (c_str not like '%4');
+-------------+
| c           |
+-------------+
|             |
| 1           |
| [2]         |
| [3, [4, 5]] |
|             |
+-------------+
(5 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A5_B46_C3 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest,
        unnest(mv_to_array(c_mv_complex_with_null_and_empty_row)) AS u(c)
   WHERE (c_str like '%2')
     AND (c_str not like '%3')
     AND (c_str not like '%4'));
+-------------+
| c           |
+-------------+
|             |
| 1           |
| [2]         |
| [3, [4, 5]] |
|             |
+-------------+
(5 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A5_B46_C5 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest
   WHERE (c_str like '%2')
     AND (c_str not like '%3')
     AND (c_str not like '%4')), unnest(mv_to_array(c_mv_complex_with_null_and_empty_row)) AS u(c);
+-------------+
| c           |
+-------------+
|             |
| 1           |
| [2]         |
| [3, [4, 5]] |
|             |
+-------------+
(5 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A5_B46_C7 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest,
        unnest(mv_to_array(c_mv_complex_with_null_and_empty_row)) AS u(c))
WHERE (c_str like '%2')
  AND (c_str not like '%3')
  AND (c_str not like '%4');
+-------------+
| c           |
+-------------+
|             |
| 1           |
| [2]         |
| [3, [4, 5]] |
|             |
+-------------+
(5 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A5_B46_C9 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest), unnest(mv_to_array(c_mv_complex_with_null_and_empty_row)) AS u(c)
WHERE (c_str like '%2')
  AND (c_str not like '%3')
  AND (c_str not like '%4');
+-------------+
| c           |
+-------------+
|             |
| 1           |
| [2]         |
| [3, [4, 5]] |
|             |
+-------------+
(5 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A5_B47_C1 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM test_unnest,
     unnest(mv_to_array(c_mv_complex_with_null_and_empty_row)) AS u(c)
WHERE c_str IN ('',
                'str2',
                999)
  AND c_str NOT IN ('str3',
                    'str4',
                    999)
  AND c_long IN (0,
                 1,
                 2,
                 999)
  AND c_long NOT IN (3,
                     4,
                     999);
+-------------+
| c           |
+-------------+
|             |
| 1           |
| [2]         |
| [3, [4, 5]] |
|             |
|             |
+-------------+
(6 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A5_B47_C3 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest,
        unnest(mv_to_array(c_mv_complex_with_null_and_empty_row)) AS u(c)
   WHERE c_str IN ('',
                   'str2',
                   999)
     AND c_str NOT IN ('str3',
                       'str4',
                       999)
     AND c_long IN (0,
                    1,
                    2,
                    999)
     AND c_long NOT IN (3,
                        4,
                        999));
+-------------+
| c           |
+-------------+
|             |
| 1           |
| [2]         |
| [3, [4, 5]] |
|             |
|             |
+-------------+
(6 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A5_B47_C5 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest
   WHERE c_str IN ('',
                   'str2',
                   999)
     AND c_str NOT IN ('str3',
                       'str4',
                       999)
     AND c_long IN (0,
                    1,
                    2,
                    999)
     AND c_long NOT IN (3,
                        4,
                        999)), unnest(mv_to_array(c_mv_complex_with_null_and_empty_row)) AS u(c);
+-------------+
| c           |
+-------------+
|             |
| 1           |
| [2]         |
| [3, [4, 5]] |
|             |
|             |
+-------------+
(6 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A5_B47_C7 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest,
        unnest(mv_to_array(c_mv_complex_with_null_and_empty_row)) AS u(c))
WHERE c_str IN ('',
                'str2',
                999)
  AND c_str NOT IN ('str3',
                    'str4',
                    999)
  AND c_long IN (0,
                 1,
                 2,
                 999)
  AND c_long NOT IN (3,
                     4,
                     999);
+-------------+
| c           |
+-------------+
|             |
| 1           |
| [2]         |
| [3, [4, 5]] |
|             |
|             |
+-------------+
(6 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A5_B47_C9 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest), unnest(mv_to_array(c_mv_complex_with_null_and_empty_row)) AS u(c)
WHERE c_str IN ('',
                'str2',
                999)
  AND c_str NOT IN ('str3',
                    'str4',
                    999)
  AND c_long IN (0,
                 1,
                 2,
                 999)
  AND c_long NOT IN (3,
                     4,
                     999);
+-------------+
| c           |
+-------------+
|             |
| 1           |
| [2]         |
| [3, [4, 5]] |
|             |
|             |
+-------------+
(6 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A5_B48_C1 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM test_unnest,
     unnest(mv_to_array(c_mv_complex_with_null_and_empty_row)) AS u(c)
WHERE c_long IN
    (SELECT col
     FROM (
           VALUES(0),(1),(2),(999)) AS t(col))
  AND c_long NOT IN
    (SELECT col
     FROM (
           VALUES(3),(4),(999)) AS t(col));
+-------------+
| c           |
+-------------+
|             |
| 1           |
| [2]         |
| [3, [4, 5]] |
|             |
|             |
|             |
+-------------+
(7 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A5_B48_C3 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest,
        unnest(mv_to_array(c_mv_complex_with_null_and_empty_row)) AS u(c)
   WHERE c_long IN
       (SELECT col
        FROM (
              VALUES(0),(1),(2),(999)) AS t(col))
     AND c_long NOT IN
       (SELECT col
        FROM (
              VALUES(3),(4),(999)) AS t(col)));
+-------------+
| c           |
+-------------+
|             |
| 1           |
| [2]         |
| [3, [4, 5]] |
|             |
|             |
|             |
+-------------+
(7 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A5_B48_C5 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest
   WHERE c_long IN
       (SELECT col
        FROM (
              VALUES(0),(1),(2),(999)) AS t(col))
     AND c_long NOT IN
       (SELECT col
        FROM (
              VALUES(3),(4),(999)) AS t(col))), unnest(mv_to_array(c_mv_complex_with_null_and_empty_row)) AS u(c);
+-------------+
| c           |
+-------------+
|             |
| 1           |
| [2]         |
| [3, [4, 5]] |
|             |
|             |
|             |
+-------------+
(7 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A5_B48_C7 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest,
        unnest(mv_to_array(c_mv_complex_with_null_and_empty_row)) AS u(c))
WHERE c_long IN
    (SELECT col
     FROM (
           VALUES(0),(1),(2),(999)) AS t(col))
  AND c_long NOT IN
    (SELECT col
     FROM (
           VALUES(3),(4),(999)) AS t(col));
+-------------+
| c           |
+-------------+
|             |
| 1           |
| [2]         |
| [3, [4, 5]] |
|             |
|             |
|             |
+-------------+
(7 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A5_B48_C9 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest), unnest(mv_to_array(c_mv_complex_with_null_and_empty_row)) AS u(c)
WHERE c_long IN
    (SELECT col
     FROM (
           VALUES(0),(1),(2),(999)) AS t(col))
  AND c_long NOT IN
    (SELECT col
     FROM (
           VALUES(3),(4),(999)) AS t(col));
+-------------+
| c           |
+-------------+
|             |
| 1           |
| [2]         |
| [3, [4, 5]] |
|             |
|             |
|             |
+-------------+
(7 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A6_B1_C1 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM test_unnest,
     unnest(mv_to_array(c_mv_num_with_null_and_empty_row)) AS u(c)
WHERE c='1';
+---+
| c |
+---+
| 1 |
| 1 |
| 1 |
+---+
(3 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A6_B1_C3 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest,
        unnest(mv_to_array(c_mv_num_with_null_and_empty_row)) AS u(c)
   WHERE c='1');
+---+
| c |
+---+
| 1 |
| 1 |
| 1 |
+---+
(3 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A6_B1_C5 TYPE: NEGATIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest
   WHERE c='1'), unnest(mv_to_array(c_mv_num_with_null_and_empty_row)) AS u(c);
QueryInterruptedException
!error

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A6_B1_C7 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest,
        unnest(mv_to_array(c_mv_num_with_null_and_empty_row)) AS u(c))
WHERE c='1';
+---+
| c |
+---+
| 1 |
| 1 |
| 1 |
+---+
(3 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A6_B1_C9 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest), unnest(mv_to_array(c_mv_num_with_null_and_empty_row)) AS u(c)
WHERE c='1';
+---+
| c |
+---+
| 1 |
| 1 |
| 1 |
+---+
(3 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A6_B2_C1 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM test_unnest,
     unnest(mv_to_array(c_mv_num_with_null_and_empty_row)) AS u(c)
WHERE c<>'1';
+---+
| c |
+---+
|   |
|   |
|   |
| 2 |
| 2 |
| 2 |
| 3 |
| 3 |
| 3 |
+---+
(9 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A6_B2_C3 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest,
        unnest(mv_to_array(c_mv_num_with_null_and_empty_row)) AS u(c)
   WHERE c<>'1');
+---+
| c |
+---+
|   |
|   |
|   |
| 2 |
| 2 |
| 2 |
| 3 |
| 3 |
| 3 |
+---+
(9 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A6_B2_C5 TYPE: NEGATIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest
   WHERE c<>'1'), unnest(mv_to_array(c_mv_num_with_null_and_empty_row)) AS u(c);
QueryInterruptedException
!error

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A6_B2_C7 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest,
        unnest(mv_to_array(c_mv_num_with_null_and_empty_row)) AS u(c))
WHERE c<>'1';
+---+
| c |
+---+
|   |
|   |
|   |
| 2 |
| 2 |
| 2 |
| 3 |
| 3 |
| 3 |
+---+
(9 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A6_B2_C9 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest), unnest(mv_to_array(c_mv_num_with_null_and_empty_row)) AS u(c)
WHERE c<>'1';
+---+
| c |
+---+
|   |
|   |
|   |
| 2 |
| 2 |
| 2 |
| 3 |
| 3 |
| 3 |
+---+
(9 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A6_B3_C1 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM test_unnest,
     unnest(mv_to_array(c_mv_num_with_null_and_empty_row)) AS u(c)
WHERE c>'1';
+---+
| c |
+---+
| 2 |
| 2 |
| 2 |
| 3 |
| 3 |
| 3 |
+---+
(6 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A6_B3_C3 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest,
        unnest(mv_to_array(c_mv_num_with_null_and_empty_row)) AS u(c)
   WHERE c>'1');
+---+
| c |
+---+
| 2 |
| 2 |
| 2 |
| 3 |
| 3 |
| 3 |
+---+
(6 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A6_B3_C5 TYPE: NEGATIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest
   WHERE c>'1'), unnest(mv_to_array(c_mv_num_with_null_and_empty_row)) AS u(c);
QueryInterruptedException
!error

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A6_B3_C7 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest,
        unnest(mv_to_array(c_mv_num_with_null_and_empty_row)) AS u(c))
WHERE c>'1';
+---+
| c |
+---+
| 2 |
| 2 |
| 2 |
| 3 |
| 3 |
| 3 |
+---+
(6 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A6_B3_C9 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest), unnest(mv_to_array(c_mv_num_with_null_and_empty_row)) AS u(c)
WHERE c>'1';
+---+
| c |
+---+
| 2 |
| 2 |
| 2 |
| 3 |
| 3 |
| 3 |
+---+
(6 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A6_B4_C1 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM test_unnest,
     unnest(mv_to_array(c_mv_num_with_null_and_empty_row)) AS u(c)
WHERE c>='1';
+---+
| c |
+---+
| 1 |
| 1 |
| 1 |
| 2 |
| 2 |
| 2 |
| 3 |
| 3 |
| 3 |
+---+
(9 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A6_B4_C3 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest,
        unnest(mv_to_array(c_mv_num_with_null_and_empty_row)) AS u(c)
   WHERE c>='1');
+---+
| c |
+---+
| 1 |
| 1 |
| 1 |
| 2 |
| 2 |
| 2 |
| 3 |
| 3 |
| 3 |
+---+
(9 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A6_B4_C5 TYPE: NEGATIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest
   WHERE c>='1'), unnest(mv_to_array(c_mv_num_with_null_and_empty_row)) AS u(c);
QueryInterruptedException
!error

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A6_B4_C7 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest,
        unnest(mv_to_array(c_mv_num_with_null_and_empty_row)) AS u(c))
WHERE c>='1';
+---+
| c |
+---+
| 1 |
| 1 |
| 1 |
| 2 |
| 2 |
| 2 |
| 3 |
| 3 |
| 3 |
+---+
(9 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A6_B4_C9 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest), unnest(mv_to_array(c_mv_num_with_null_and_empty_row)) AS u(c)
WHERE c>='1';
+---+
| c |
+---+
| 1 |
| 1 |
| 1 |
| 2 |
| 2 |
| 2 |
| 3 |
| 3 |
| 3 |
+---+
(9 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A6_B5_C1 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM test_unnest,
     unnest(mv_to_array(c_mv_num_with_null_and_empty_row)) AS u(c)
WHERE c<'1';
+---+
| c |
+---+
|   |
|   |
|   |
+---+
(3 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A6_B5_C3 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest,
        unnest(mv_to_array(c_mv_num_with_null_and_empty_row)) AS u(c)
   WHERE c<'1');
+---+
| c |
+---+
|   |
|   |
|   |
+---+
(3 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A6_B5_C5 TYPE: NEGATIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest
   WHERE c<'1'), unnest(mv_to_array(c_mv_num_with_null_and_empty_row)) AS u(c);
QueryInterruptedException
!error

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A6_B5_C7 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest,
        unnest(mv_to_array(c_mv_num_with_null_and_empty_row)) AS u(c))
WHERE c<'1';
+---+
| c |
+---+
|   |
|   |
|   |
+---+
(3 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A6_B5_C9 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest), unnest(mv_to_array(c_mv_num_with_null_and_empty_row)) AS u(c)
WHERE c<'1';
+---+
| c |
+---+
|   |
|   |
|   |
+---+
(3 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A6_B6_C1 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM test_unnest,
     unnest(mv_to_array(c_mv_num_with_null_and_empty_row)) AS u(c)
WHERE c<='1';
+---+
| c |
+---+
|   |
|   |
|   |
| 1 |
| 1 |
| 1 |
+---+
(6 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A6_B6_C3 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest,
        unnest(mv_to_array(c_mv_num_with_null_and_empty_row)) AS u(c)
   WHERE c<='1');
+---+
| c |
+---+
|   |
|   |
|   |
| 1 |
| 1 |
| 1 |
+---+
(6 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A6_B6_C5 TYPE: NEGATIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest
   WHERE c<='1'), unnest(mv_to_array(c_mv_num_with_null_and_empty_row)) AS u(c);
QueryInterruptedException
!error

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A6_B6_C7 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest,
        unnest(mv_to_array(c_mv_num_with_null_and_empty_row)) AS u(c))
WHERE c<='1';
+---+
| c |
+---+
|   |
|   |
|   |
| 1 |
| 1 |
| 1 |
+---+
(6 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A6_B6_C9 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest), unnest(mv_to_array(c_mv_num_with_null_and_empty_row)) AS u(c)
WHERE c<='1';
+---+
| c |
+---+
|   |
|   |
|   |
| 1 |
| 1 |
| 1 |
+---+
(6 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A6_B7_C1 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM test_unnest,
     unnest(mv_to_array(c_mv_num_with_null_and_empty_row)) AS u(c)
WHERE (NOT c<>''
       OR NOT c<>'my_null'
       OR NOT c<>'my_empty'
       OR NOT c<>'1'
       OR NOT c<>'-1'
       OR NOT c<>'0'
       OR NOT c<>'999'
       OR NOT c<>999)
  AND (NOT c='[2]'
       OR NOT c='[3, [4, 5]]'
       OR NOT c='2'
       OR NOT c='3'
       OR NOT c='999'
       OR NOT c=999);
+---+
| c |
+---+
|   |
|   |
|   |
| 1 |
| 1 |
| 1 |
+---+
(6 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A6_B7_C3 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest,
        unnest(mv_to_array(c_mv_num_with_null_and_empty_row)) AS u(c)
   WHERE (NOT c<>''
          OR NOT c<>'my_null'
          OR NOT c<>'my_empty'
          OR NOT c<>'1'
          OR NOT c<>'-1'
          OR NOT c<>'0'
          OR NOT c<>'999'
          OR NOT c<>999)
     AND (NOT c='[2]'
          OR NOT c='[3, [4, 5]]'
          OR NOT c='2'
          OR NOT c='3'
          OR NOT c='999'
          OR NOT c=999));
+---+
| c |
+---+
|   |
|   |
|   |
| 1 |
| 1 |
| 1 |
+---+
(6 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A6_B7_C5 TYPE: NEGATIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest
   WHERE (NOT c<>''
          OR NOT c<>'my_null'
          OR NOT c<>'my_empty'
          OR NOT c<>'1'
          OR NOT c<>'-1'
          OR NOT c<>'0'
          OR NOT c<>'999'
          OR NOT c<>999)
     AND (NOT c='[2]'
          OR NOT c='[3, [4, 5]]'
          OR NOT c='2'
          OR NOT c='3'
          OR NOT c='999'
          OR NOT c=999)), unnest(mv_to_array(c_mv_num_with_null_and_empty_row)) AS u(c);
QueryInterruptedException
!error

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A6_B7_C7 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest,
        unnest(mv_to_array(c_mv_num_with_null_and_empty_row)) AS u(c))
WHERE (NOT c<>''
       OR NOT c<>'my_null'
       OR NOT c<>'my_empty'
       OR NOT c<>'1'
       OR NOT c<>'-1'
       OR NOT c<>'0'
       OR NOT c<>'999'
       OR NOT c<>999)
  AND (NOT c='[2]'
       OR NOT c='[3, [4, 5]]'
       OR NOT c='2'
       OR NOT c='3'
       OR NOT c='999'
       OR NOT c=999);
+---+
| c |
+---+
|   |
|   |
|   |
| 1 |
| 1 |
| 1 |
+---+
(6 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A6_B7_C9 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest), unnest(mv_to_array(c_mv_num_with_null_and_empty_row)) AS u(c)
WHERE (NOT c<>''
       OR NOT c<>'my_null'
       OR NOT c<>'my_empty'
       OR NOT c<>'1'
       OR NOT c<>'-1'
       OR NOT c<>'0'
       OR NOT c<>'999'
       OR NOT c<>999)
  AND (NOT c='[2]'
       OR NOT c='[3, [4, 5]]'
       OR NOT c='2'
       OR NOT c='3'
       OR NOT c='999'
       OR NOT c=999);
+---+
| c |
+---+
|   |
|   |
|   |
| 1 |
| 1 |
| 1 |
+---+
(6 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A6_B8_C1 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM test_unnest,
     unnest(mv_to_array(c_mv_num_with_null_and_empty_row)) AS u(c)
WHERE (c=''
       OR c='my_null'
       OR c='my_empty'
       OR c='1'
       OR c='-1'
       OR c='0'
       OR c='999'
       OR c=999)
  AND NOT c='[2]'
  AND NOT c='[3, [4, 5]]'
  AND NOT c='2'
  AND NOT c='3'
  AND NOT c='999'
  AND NOT c=999;
+---+
| c |
+---+
|   |
|   |
|   |
| 1 |
| 1 |
| 1 |
+---+
(6 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A6_B8_C3 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest,
        unnest(mv_to_array(c_mv_num_with_null_and_empty_row)) AS u(c)
   WHERE (c=''
          OR c='my_null'
          OR c='my_empty'
          OR c='1'
          OR c='-1'
          OR c='0'
          OR c='999'
          OR c=999)
     AND NOT c='[2]'
     AND NOT c='[3, [4, 5]]'
     AND NOT c='2'
     AND NOT c='3'
     AND NOT c='999'
     AND NOT c=999);
+---+
| c |
+---+
|   |
|   |
|   |
| 1 |
| 1 |
| 1 |
+---+
(6 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A6_B8_C5 TYPE: NEGATIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest
   WHERE (c=''
          OR c='my_null'
          OR c='my_empty'
          OR c='1'
          OR c='-1'
          OR c='0'
          OR c='999'
          OR c=999)
     AND NOT c='[2]'
     AND NOT c='[3, [4, 5]]'
     AND NOT c='2'
     AND NOT c='3'
     AND NOT c='999'
     AND NOT c=999), unnest(mv_to_array(c_mv_num_with_null_and_empty_row)) AS u(c);
QueryInterruptedException
!error

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A6_B8_C7 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest,
        unnest(mv_to_array(c_mv_num_with_null_and_empty_row)) AS u(c))
WHERE (c=''
       OR c='my_null'
       OR c='my_empty'
       OR c='1'
       OR c='-1'
       OR c='0'
       OR c='999'
       OR c=999)
  AND NOT c='[2]'
  AND NOT c='[3, [4, 5]]'
  AND NOT c='2'
  AND NOT c='3'
  AND NOT c='999'
  AND NOT c=999;
+---+
| c |
+---+
|   |
|   |
|   |
| 1 |
| 1 |
| 1 |
+---+
(6 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A6_B8_C9 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest), unnest(mv_to_array(c_mv_num_with_null_and_empty_row)) AS u(c)
WHERE (c=''
       OR c='my_null'
       OR c='my_empty'
       OR c='1'
       OR c='-1'
       OR c='0'
       OR c='999'
       OR c=999)
  AND NOT c='[2]'
  AND NOT c='[3, [4, 5]]'
  AND NOT c='2'
  AND NOT c='3'
  AND NOT c='999'
  AND NOT c=999;
+---+
| c |
+---+
|   |
|   |
|   |
| 1 |
| 1 |
| 1 |
+---+
(6 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A6_B9_C1 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM test_unnest,
     unnest(mv_to_array(c_mv_num_with_null_and_empty_row)) AS u(c)
WHERE c IS NULL;
+---+
| c |
+---+
|   |
|   |
|   |
|   |
|   |
+---+
(5 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A6_B9_C3 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest,
        unnest(mv_to_array(c_mv_num_with_null_and_empty_row)) AS u(c)
   WHERE c IS NULL);
+---+
| c |
+---+
|   |
|   |
|   |
|   |
|   |
+---+
(5 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A6_B9_C5 TYPE: NEGATIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest
   WHERE c IS NULL), unnest(mv_to_array(c_mv_num_with_null_and_empty_row)) AS u(c);
QueryInterruptedException
!error

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A6_B9_C7 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest,
        unnest(mv_to_array(c_mv_num_with_null_and_empty_row)) AS u(c))
WHERE c IS NULL;
+---+
| c |
+---+
|   |
|   |
|   |
|   |
|   |
+---+
(5 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A6_B9_C9 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest), unnest(mv_to_array(c_mv_num_with_null_and_empty_row)) AS u(c)
WHERE c IS NULL;
+---+
| c |
+---+
|   |
|   |
|   |
|   |
|   |
+---+
(5 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A6_B10_C1 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM test_unnest,
     unnest(mv_to_array(c_mv_num_with_null_and_empty_row)) AS u(c)
WHERE c IS NOT NULL;
+---+
| c |
+---+
|   |
|   |
|   |
| 1 |
| 1 |
| 1 |
| 2 |
| 2 |
| 2 |
| 3 |
| 3 |
| 3 |
+---+
(12 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A6_B10_C3 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest,
        unnest(mv_to_array(c_mv_num_with_null_and_empty_row)) AS u(c)
   WHERE c IS NOT NULL);
+---+
| c |
+---+
|   |
|   |
|   |
| 1 |
| 1 |
| 1 |
| 2 |
| 2 |
| 2 |
| 3 |
| 3 |
| 3 |
+---+
(12 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A6_B10_C5 TYPE: NEGATIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest
   WHERE c IS NOT NULL), unnest(mv_to_array(c_mv_num_with_null_and_empty_row)) AS u(c);
QueryInterruptedException
!error

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A6_B10_C7 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest,
        unnest(mv_to_array(c_mv_num_with_null_and_empty_row)) AS u(c))
WHERE c IS NOT NULL;
+---+
| c |
+---+
|   |
|   |
|   |
| 1 |
| 1 |
| 1 |
| 2 |
| 2 |
| 2 |
| 3 |
| 3 |
| 3 |
+---+
(12 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A6_B10_C9 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest), unnest(mv_to_array(c_mv_num_with_null_and_empty_row)) AS u(c)
WHERE c IS NOT NULL;
+---+
| c |
+---+
|   |
|   |
|   |
| 1 |
| 1 |
| 1 |
| 2 |
| 2 |
| 2 |
| 3 |
| 3 |
| 3 |
+---+
(12 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A6_B11_C1 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM test_unnest,
     unnest(mv_to_array(c_mv_num_with_null_and_empty_row)) AS u(c)
WHERE c IN ('',
            'my_null',
            'my_empty',
            '1',
            '-1',
            '0',
            '999',
            999) IS TRUE
  AND c IN ('[2]',
            '[3, [4, 5]]',
            '2',
            '3',
            '999',
            999) IS NOT TRUE;
+---+
| c |
+---+
|   |
|   |
|   |
| 1 |
| 1 |
| 1 |
+---+
(6 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A6_B11_C3 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest,
        unnest(mv_to_array(c_mv_num_with_null_and_empty_row)) AS u(c)
   WHERE c IN ('',
               'my_null',
               'my_empty',
               '1',
               '-1',
               '0',
               '999',
               999) IS TRUE
     AND c IN ('[2]',
               '[3, [4, 5]]',
               '2',
               '3',
               '999',
               999) IS NOT TRUE);
+---+
| c |
+---+
|   |
|   |
|   |
| 1 |
| 1 |
| 1 |
+---+
(6 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A6_B11_C5 TYPE: NEGATIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest
   WHERE c IN ('',
               'my_null',
               'my_empty',
               '1',
               '-1',
               '0',
               '999',
               999) IS TRUE
     AND c IN ('[2]',
               '[3, [4, 5]]',
               '2',
               '3',
               '999',
               999) IS NOT TRUE), unnest(mv_to_array(c_mv_num_with_null_and_empty_row)) AS u(c);
QueryInterruptedException
!error

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A6_B11_C7 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest,
        unnest(mv_to_array(c_mv_num_with_null_and_empty_row)) AS u(c))
WHERE c IN ('',
            'my_null',
            'my_empty',
            '1',
            '-1',
            '0',
            '999',
            999) IS TRUE
  AND c IN ('[2]',
            '[3, [4, 5]]',
            '2',
            '3',
            '999',
            999) IS NOT TRUE;
+---+
| c |
+---+
|   |
|   |
|   |
| 1 |
| 1 |
| 1 |
+---+
(6 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A6_B11_C9 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest), unnest(mv_to_array(c_mv_num_with_null_and_empty_row)) AS u(c)
WHERE c IN ('',
            'my_null',
            'my_empty',
            '1',
            '-1',
            '0',
            '999',
            999) IS TRUE
  AND c IN ('[2]',
            '[3, [4, 5]]',
            '2',
            '3',
            '999',
            999) IS NOT TRUE;
+---+
| c |
+---+
|   |
|   |
|   |
| 1 |
| 1 |
| 1 |
+---+
(6 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A6_B12_C1 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM test_unnest,
     unnest(mv_to_array(c_mv_num_with_null_and_empty_row)) AS u(c)
WHERE c IN ('',
            'my_null',
            'my_empty',
            '1',
            '-1',
            '0',
            '999',
            999) IS NOT FALSE
  AND c IN ('[2]',
            '[3, [4, 5]]',
            '2',
            '3',
            '999',
            999) IS FALSE;
+---+
| c |
+---+
|   |
|   |
|   |
| 1 |
| 1 |
| 1 |
+---+
(6 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A6_B12_C3 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest,
        unnest(mv_to_array(c_mv_num_with_null_and_empty_row)) AS u(c)
   WHERE c IN ('',
               'my_null',
               'my_empty',
               '1',
               '-1',
               '0',
               '999',
               999) IS NOT FALSE
     AND c IN ('[2]',
               '[3, [4, 5]]',
               '2',
               '3',
               '999',
               999) IS FALSE);
+---+
| c |
+---+
|   |
|   |
|   |
| 1 |
| 1 |
| 1 |
+---+
(6 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A6_B12_C5 TYPE: NEGATIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest
   WHERE c IN ('',
               'my_null',
               'my_empty',
               '1',
               '-1',
               '0',
               '999',
               999) IS NOT FALSE
     AND c IN ('[2]',
               '[3, [4, 5]]',
               '2',
               '3',
               '999',
               999) IS FALSE), unnest(mv_to_array(c_mv_num_with_null_and_empty_row)) AS u(c);
QueryInterruptedException
!error

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A6_B12_C7 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest,
        unnest(mv_to_array(c_mv_num_with_null_and_empty_row)) AS u(c))
WHERE c IN ('',
            'my_null',
            'my_empty',
            '1',
            '-1',
            '0',
            '999',
            999) IS NOT FALSE
  AND c IN ('[2]',
            '[3, [4, 5]]',
            '2',
            '3',
            '999',
            999) IS FALSE;
+---+
| c |
+---+
|   |
|   |
|   |
| 1 |
| 1 |
| 1 |
+---+
(6 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A6_B12_C9 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest), unnest(mv_to_array(c_mv_num_with_null_and_empty_row)) AS u(c)
WHERE c IN ('',
            'my_null',
            'my_empty',
            '1',
            '-1',
            '0',
            '999',
            999) IS NOT FALSE
  AND c IN ('[2]',
            '[3, [4, 5]]',
            '2',
            '3',
            '999',
            999) IS FALSE;
+---+
| c |
+---+
|   |
|   |
|   |
| 1 |
| 1 |
| 1 |
+---+
(6 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A6_B13_C1 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM test_unnest,
     unnest(mv_to_array(c_mv_num_with_null_and_empty_row)) AS u(c)
WHERE (c BETWEEN '1' AND '2')
  AND (c NOT BETWEEN '3' AND '4');
+---+
| c |
+---+
| 1 |
| 1 |
| 1 |
| 2 |
| 2 |
| 2 |
+---+
(6 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A6_B13_C3 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest,
        unnest(mv_to_array(c_mv_num_with_null_and_empty_row)) AS u(c)
   WHERE (c BETWEEN '1' AND '2')
     AND (c NOT BETWEEN '3' AND '4'));
+---+
| c |
+---+
| 1 |
| 1 |
| 1 |
| 2 |
| 2 |
| 2 |
+---+
(6 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A6_B13_C5 TYPE: NEGATIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest
   WHERE (c BETWEEN '1' AND '2')
     AND (c NOT BETWEEN '3' AND '4')), unnest(mv_to_array(c_mv_num_with_null_and_empty_row)) AS u(c);
QueryInterruptedException
!error

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A6_B13_C7 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest,
        unnest(mv_to_array(c_mv_num_with_null_and_empty_row)) AS u(c))
WHERE (c BETWEEN '1' AND '2')
  AND (c NOT BETWEEN '3' AND '4');
+---+
| c |
+---+
| 1 |
| 1 |
| 1 |
| 2 |
| 2 |
| 2 |
+---+
(6 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A6_B13_C9 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest), unnest(mv_to_array(c_mv_num_with_null_and_empty_row)) AS u(c)
WHERE (c BETWEEN '1' AND '2')
  AND (c NOT BETWEEN '3' AND '4');
+---+
| c |
+---+
| 1 |
| 1 |
| 1 |
| 2 |
| 2 |
| 2 |
+---+
(6 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A6_B14_C1 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM test_unnest,
     unnest(mv_to_array(c_mv_num_with_null_and_empty_row)) AS u(c)
WHERE (c like '1%')
  AND (c not like '3%');
+---+
| c |
+---+
| 1 |
| 1 |
| 1 |
+---+
(3 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A6_B14_C3 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest,
        unnest(mv_to_array(c_mv_num_with_null_and_empty_row)) AS u(c)
   WHERE (c like '1%')
     AND (c not like '3%'));
+---+
| c |
+---+
| 1 |
| 1 |
| 1 |
+---+
(3 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A6_B14_C5 TYPE: NEGATIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest
   WHERE (c like '1%')
     AND (c not like '3%')), unnest(mv_to_array(c_mv_num_with_null_and_empty_row)) AS u(c);
QueryInterruptedException
!error

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A6_B14_C7 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest,
        unnest(mv_to_array(c_mv_num_with_null_and_empty_row)) AS u(c))
WHERE (c like '1%')
  AND (c not like '3%');
+---+
| c |
+---+
| 1 |
| 1 |
| 1 |
+---+
(3 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A6_B14_C9 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest), unnest(mv_to_array(c_mv_num_with_null_and_empty_row)) AS u(c)
WHERE (c like '1%')
  AND (c not like '3%');
+---+
| c |
+---+
| 1 |
| 1 |
| 1 |
+---+
(3 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A6_B15_C1 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM test_unnest,
     unnest(mv_to_array(c_mv_num_with_null_and_empty_row)) AS u(c)
WHERE c IN ('',
            'my_null',
            'my_empty',
            '1',
            '-1',
            '0',
            '999',
            999)
  AND c NOT IN ('[2]',
                '[3, [4, 5]]',
                '2',
                '3',
                '999',
                999);
+---+
| c |
+---+
|   |
|   |
|   |
| 1 |
| 1 |
| 1 |
+---+
(6 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A6_B15_C3 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest,
        unnest(mv_to_array(c_mv_num_with_null_and_empty_row)) AS u(c)
   WHERE c IN ('',
               'my_null',
               'my_empty',
               '1',
               '-1',
               '0',
               '999',
               999)
     AND c NOT IN ('[2]',
                   '[3, [4, 5]]',
                   '2',
                   '3',
                   '999',
                   999));
+---+
| c |
+---+
|   |
|   |
|   |
| 1 |
| 1 |
| 1 |
+---+
(6 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A6_B15_C5 TYPE: NEGATIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest
   WHERE c IN ('',
               'my_null',
               'my_empty',
               '1',
               '-1',
               '0',
               '999',
               999)
     AND c NOT IN ('[2]',
                   '[3, [4, 5]]',
                   '2',
                   '3',
                   '999',
                   999)), unnest(mv_to_array(c_mv_num_with_null_and_empty_row)) AS u(c);
QueryInterruptedException
!error

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A6_B15_C7 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest,
        unnest(mv_to_array(c_mv_num_with_null_and_empty_row)) AS u(c))
WHERE c IN ('',
            'my_null',
            'my_empty',
            '1',
            '-1',
            '0',
            '999',
            999)
  AND c NOT IN ('[2]',
                '[3, [4, 5]]',
                '2',
                '3',
                '999',
                999);
+---+
| c |
+---+
|   |
|   |
|   |
| 1 |
| 1 |
| 1 |
+---+
(6 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A6_B15_C9 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest), unnest(mv_to_array(c_mv_num_with_null_and_empty_row)) AS u(c)
WHERE c IN ('',
            'my_null',
            'my_empty',
            '1',
            '-1',
            '0',
            '999',
            999)
  AND c NOT IN ('[2]',
                '[3, [4, 5]]',
                '2',
                '3',
                '999',
                999);
+---+
| c |
+---+
|   |
|   |
|   |
| 1 |
| 1 |
| 1 |
+---+
(6 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A6_B16_C1 TYPE: NEGATIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM test_unnest,
     unnest(mv_to_array(c_mv_num_with_null_and_empty_row)) AS u(c)
WHERE c IN
    (SELECT col
     FROM (
           VALUES(''),('my_null'),('my_empty'),('1'),('-1'),('0'),('999')) AS t(col))
  AND c NOT IN
    (SELECT col
     FROM (
           VALUES('[2]'),('[3, [4, 5]]'),('2'),('3'),('999')) AS t(col));
Unhandled Query Planning Failure
!error

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A6_B16_C3 TYPE: NEGATIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest,
        unnest(mv_to_array(c_mv_num_with_null_and_empty_row)) AS u(c)
   WHERE c IN
       (SELECT col
        FROM (
              VALUES(''),('my_null'),('my_empty'),('1'),('-1'),('0'),('999')) AS t(col))
     AND c NOT IN
       (SELECT col
        FROM (
              VALUES('[2]'),('[3, [4, 5]]'),('2'),('3'),('999')) AS t(col)));
Unhandled Query Planning Failure
!error

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A6_B16_C5 TYPE: NEGATIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest
   WHERE c IN
       (SELECT col
        FROM (
              VALUES(''),('my_null'),('my_empty'),('1'),('-1'),('0'),('999')) AS t(col))
     AND c NOT IN
       (SELECT col
        FROM (
              VALUES('[2]'),('[3, [4, 5]]'),('2'),('3'),('999')) AS t(col))), unnest(mv_to_array(c_mv_num_with_null_and_empty_row)) AS u(c);
QueryInterruptedException
!error

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A6_B16_C7 TYPE: NEGATIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest,
        unnest(mv_to_array(c_mv_num_with_null_and_empty_row)) AS u(c))
WHERE c IN
    (SELECT col
     FROM (
           VALUES(''),('my_null'),('my_empty'),('1'),('-1'),('0'),('999')) AS t(col))
  AND c NOT IN
    (SELECT col
     FROM (
           VALUES('[2]'),('[3, [4, 5]]'),('2'),('3'),('999')) AS t(col));
Unhandled Query Planning Failure
!error

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A6_B16_C9 TYPE: NEGATIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest), unnest(mv_to_array(c_mv_num_with_null_and_empty_row)) AS u(c)
WHERE c IN
    (SELECT col
     FROM (
           VALUES(''),('my_null'),('my_empty'),('1'),('-1'),('0'),('999')) AS t(col))
  AND c NOT IN
    (SELECT col
     FROM (
           VALUES('[2]'),('[3, [4, 5]]'),('2'),('3'),('999')) AS t(col));
Unhandled Query Planning Failure
!error

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A6_B17_C1 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM test_unnest,
     unnest(mv_to_array(c_mv_num_with_null_and_empty_row)) AS u(c)
WHERE c_long=1
  AND c='1';
+---+
| c |
+---+
+---+
(0 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A6_B17_C3 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest,
        unnest(mv_to_array(c_mv_num_with_null_and_empty_row)) AS u(c)
   WHERE c_long=1
     AND c='1');
+---+
| c |
+---+
+---+
(0 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A6_B17_C5 TYPE: NEGATIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest
   WHERE c_long=1
     AND c='1'), unnest(mv_to_array(c_mv_num_with_null_and_empty_row)) AS u(c);
QueryInterruptedException
!error

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A6_B17_C7 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest,
        unnest(mv_to_array(c_mv_num_with_null_and_empty_row)) AS u(c))
WHERE c_long=1
  AND c='1';
+---+
| c |
+---+
+---+
(0 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A6_B17_C9 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest), unnest(mv_to_array(c_mv_num_with_null_and_empty_row)) AS u(c)
WHERE c_long=1
  AND c='1';
+---+
| c |
+---+
+---+
(0 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A6_B18_C1 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM test_unnest,
     unnest(mv_to_array(c_mv_num_with_null_and_empty_row)) AS u(c)
WHERE c_long<>1
  AND c<>'1';
+---+
| c |
+---+
|   |
|   |
|   |
| 2 |
| 2 |
| 2 |
| 3 |
| 3 |
| 3 |
+---+
(9 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A6_B18_C3 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest,
        unnest(mv_to_array(c_mv_num_with_null_and_empty_row)) AS u(c)
   WHERE c_long<>1
     AND c<>'1');
+---+
| c |
+---+
|   |
|   |
|   |
| 2 |
| 2 |
| 2 |
| 3 |
| 3 |
| 3 |
+---+
(9 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A6_B18_C5 TYPE: NEGATIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest
   WHERE c_long<>1
     AND c<>'1'), unnest(mv_to_array(c_mv_num_with_null_and_empty_row)) AS u(c);
QueryInterruptedException
!error

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A6_B18_C7 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest,
        unnest(mv_to_array(c_mv_num_with_null_and_empty_row)) AS u(c))
WHERE c_long<>1
  AND c<>'1';
+---+
| c |
+---+
|   |
|   |
|   |
| 2 |
| 2 |
| 2 |
| 3 |
| 3 |
| 3 |
+---+
(9 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A6_B18_C9 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest), unnest(mv_to_array(c_mv_num_with_null_and_empty_row)) AS u(c)
WHERE c_long<>1
  AND c<>'1';
+---+
| c |
+---+
|   |
|   |
|   |
| 2 |
| 2 |
| 2 |
| 3 |
| 3 |
| 3 |
+---+
(9 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A6_B19_C1 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM test_unnest,
     unnest(mv_to_array(c_mv_num_with_null_and_empty_row)) AS u(c)
WHERE c_long>1
  AND c>'1';
+---+
| c |
+---+
| 2 |
| 2 |
| 2 |
| 3 |
| 3 |
| 3 |
+---+
(6 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A6_B19_C3 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest,
        unnest(mv_to_array(c_mv_num_with_null_and_empty_row)) AS u(c)
   WHERE c_long>1
     AND c>'1');
+---+
| c |
+---+
| 2 |
| 2 |
| 2 |
| 3 |
| 3 |
| 3 |
+---+
(6 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A6_B19_C5 TYPE: NEGATIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest
   WHERE c_long>1
     AND c>'1'), unnest(mv_to_array(c_mv_num_with_null_and_empty_row)) AS u(c);
QueryInterruptedException
!error

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A6_B19_C7 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest,
        unnest(mv_to_array(c_mv_num_with_null_and_empty_row)) AS u(c))
WHERE c_long>1
  AND c>'1';
+---+
| c |
+---+
| 2 |
| 2 |
| 2 |
| 3 |
| 3 |
| 3 |
+---+
(6 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A6_B19_C9 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest), unnest(mv_to_array(c_mv_num_with_null_and_empty_row)) AS u(c)
WHERE c_long>1
  AND c>'1';
+---+
| c |
+---+
| 2 |
| 2 |
| 2 |
| 3 |
| 3 |
| 3 |
+---+
(6 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A6_B20_C1 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM test_unnest,
     unnest(mv_to_array(c_mv_num_with_null_and_empty_row)) AS u(c)
WHERE c_long>=1
  AND c>='1';
+---+
| c |
+---+
| 1 |
| 1 |
| 1 |
| 2 |
| 2 |
| 2 |
| 3 |
| 3 |
| 3 |
+---+
(9 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A6_B20_C3 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest,
        unnest(mv_to_array(c_mv_num_with_null_and_empty_row)) AS u(c)
   WHERE c_long>=1
     AND c>='1');
+---+
| c |
+---+
| 1 |
| 1 |
| 1 |
| 2 |
| 2 |
| 2 |
| 3 |
| 3 |
| 3 |
+---+
(9 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A6_B20_C5 TYPE: NEGATIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest
   WHERE c_long>=1
     AND c>='1'), unnest(mv_to_array(c_mv_num_with_null_and_empty_row)) AS u(c);
QueryInterruptedException
!error

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A6_B20_C7 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest,
        unnest(mv_to_array(c_mv_num_with_null_and_empty_row)) AS u(c))
WHERE c_long>=1
  AND c>='1';
+---+
| c |
+---+
| 1 |
| 1 |
| 1 |
| 2 |
| 2 |
| 2 |
| 3 |
| 3 |
| 3 |
+---+
(9 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A6_B20_C9 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest), unnest(mv_to_array(c_mv_num_with_null_and_empty_row)) AS u(c)
WHERE c_long>=1
  AND c>='1';
+---+
| c |
+---+
| 1 |
| 1 |
| 1 |
| 2 |
| 2 |
| 2 |
| 3 |
| 3 |
| 3 |
+---+
(9 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A6_B21_C1 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM test_unnest,
     unnest(mv_to_array(c_mv_num_with_null_and_empty_row)) AS u(c)
WHERE c_long<1
  AND c<'1';
+---+
| c |
+---+
+---+
(0 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A6_B21_C3 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest,
        unnest(mv_to_array(c_mv_num_with_null_and_empty_row)) AS u(c)
   WHERE c_long<1
     AND c<'1');
+---+
| c |
+---+
+---+
(0 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A6_B21_C5 TYPE: NEGATIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest
   WHERE c_long<1
     AND c<'1'), unnest(mv_to_array(c_mv_num_with_null_and_empty_row)) AS u(c);
QueryInterruptedException
!error

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A6_B21_C7 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest,
        unnest(mv_to_array(c_mv_num_with_null_and_empty_row)) AS u(c))
WHERE c_long<1
  AND c<'1';
+---+
| c |
+---+
+---+
(0 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A6_B21_C9 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest), unnest(mv_to_array(c_mv_num_with_null_and_empty_row)) AS u(c)
WHERE c_long<1
  AND c<'1';
+---+
| c |
+---+
+---+
(0 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A6_B22_C1 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM test_unnest,
     unnest(mv_to_array(c_mv_num_with_null_and_empty_row)) AS u(c)
WHERE c_long<=1
  AND c<='1';
+---+
| c |
+---+
+---+
(0 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A6_B22_C3 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest,
        unnest(mv_to_array(c_mv_num_with_null_and_empty_row)) AS u(c)
   WHERE c_long<=1
     AND c<='1');
+---+
| c |
+---+
+---+
(0 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A6_B22_C5 TYPE: NEGATIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest
   WHERE c_long<=1
     AND c<='1'), unnest(mv_to_array(c_mv_num_with_null_and_empty_row)) AS u(c);
QueryInterruptedException
!error

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A6_B22_C7 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest,
        unnest(mv_to_array(c_mv_num_with_null_and_empty_row)) AS u(c))
WHERE c_long<=1
  AND c<='1';
+---+
| c |
+---+
+---+
(0 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A6_B22_C9 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest), unnest(mv_to_array(c_mv_num_with_null_and_empty_row)) AS u(c)
WHERE c_long<=1
  AND c<='1';
+---+
| c |
+---+
+---+
(0 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A6_B23_C1 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM test_unnest,
     unnest(mv_to_array(c_mv_num_with_null_and_empty_row)) AS u(c)
WHERE NOT (c_long<>0
           AND c_long<>1
           AND c_long<>2)
  AND (NOT c<>''
       OR NOT c<>'my_null'
       OR NOT c<>'my_empty'
       OR NOT c<>'1'
       OR NOT c<>'-1'
       OR NOT c<>'0'
       OR NOT c<>'999'
       OR NOT c<>999)
  AND (NOT c='[2]'
       OR NOT c='[3, [4, 5]]'
       OR NOT c='2'
       OR NOT c='3'
       OR NOT c='999'
       OR NOT c=999);
+---+
| c |
+---+
|   |
| 1 |
+---+
(2 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A6_B23_C3 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest,
        unnest(mv_to_array(c_mv_num_with_null_and_empty_row)) AS u(c)
   WHERE NOT (c_long<>0
              AND c_long<>1
              AND c_long<>2)
     AND (NOT c<>''
          OR NOT c<>'my_null'
          OR NOT c<>'my_empty'
          OR NOT c<>'1'
          OR NOT c<>'-1'
          OR NOT c<>'0'
          OR NOT c<>'999'
          OR NOT c<>999)
     AND (NOT c='[2]'
          OR NOT c='[3, [4, 5]]'
          OR NOT c='2'
          OR NOT c='3'
          OR NOT c='999'
          OR NOT c=999));
+---+
| c |
+---+
|   |
| 1 |
+---+
(2 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A6_B23_C5 TYPE: NEGATIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest
   WHERE NOT (c_long<>0
              AND c_long<>1
              AND c_long<>2)
     AND (NOT c<>''
          OR NOT c<>'my_null'
          OR NOT c<>'my_empty'
          OR NOT c<>'1'
          OR NOT c<>'-1'
          OR NOT c<>'0'
          OR NOT c<>'999'
          OR NOT c<>999)
     AND (NOT c='[2]'
          OR NOT c='[3, [4, 5]]'
          OR NOT c='2'
          OR NOT c='3'
          OR NOT c='999'
          OR NOT c=999)), unnest(mv_to_array(c_mv_num_with_null_and_empty_row)) AS u(c);
QueryInterruptedException
!error

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A6_B23_C7 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest,
        unnest(mv_to_array(c_mv_num_with_null_and_empty_row)) AS u(c))
WHERE NOT (c_long<>0
           AND c_long<>1
           AND c_long<>2)
  AND (NOT c<>''
       OR NOT c<>'my_null'
       OR NOT c<>'my_empty'
       OR NOT c<>'1'
       OR NOT c<>'-1'
       OR NOT c<>'0'
       OR NOT c<>'999'
       OR NOT c<>999)
  AND (NOT c='[2]'
       OR NOT c='[3, [4, 5]]'
       OR NOT c='2'
       OR NOT c='3'
       OR NOT c='999'
       OR NOT c=999);
+---+
| c |
+---+
|   |
| 1 |
+---+
(2 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A6_B23_C9 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest), unnest(mv_to_array(c_mv_num_with_null_and_empty_row)) AS u(c)
WHERE NOT (c_long<>0
           AND c_long<>1
           AND c_long<>2)
  AND (NOT c<>''
       OR NOT c<>'my_null'
       OR NOT c<>'my_empty'
       OR NOT c<>'1'
       OR NOT c<>'-1'
       OR NOT c<>'0'
       OR NOT c<>'999'
       OR NOT c<>999)
  AND (NOT c='[2]'
       OR NOT c='[3, [4, 5]]'
       OR NOT c='2'
       OR NOT c='3'
       OR NOT c='999'
       OR NOT c=999);
+---+
| c |
+---+
|   |
| 1 |
+---+
(2 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A6_B24_C1 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM test_unnest,
     unnest(mv_to_array(c_mv_num_with_null_and_empty_row)) AS u(c)
WHERE (c_long=0
       OR c_long=1
       OR c_long=2)
  AND (c=''
       OR c='my_null'
       OR c='my_empty'
       OR c='1'
       OR c='-1'
       OR c='0'
       OR c='999'
       OR c=999)
  AND NOT c='[2]'
  AND NOT c='[3, [4, 5]]'
  AND NOT c='2'
  AND NOT c='3'
  AND NOT c='999'
  AND NOT c=999;
+---+
| c |
+---+
|   |
| 1 |
+---+
(2 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A6_B24_C3 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest,
        unnest(mv_to_array(c_mv_num_with_null_and_empty_row)) AS u(c)
   WHERE (c_long=0
          OR c_long=1
          OR c_long=2)
     AND (c=''
          OR c='my_null'
          OR c='my_empty'
          OR c='1'
          OR c='-1'
          OR c='0'
          OR c='999'
          OR c=999)
     AND NOT c='[2]'
     AND NOT c='[3, [4, 5]]'
     AND NOT c='2'
     AND NOT c='3'
     AND NOT c='999'
     AND NOT c=999);
+---+
| c |
+---+
|   |
| 1 |
+---+
(2 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A6_B24_C5 TYPE: NEGATIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest
   WHERE (c_long=0
          OR c_long=1
          OR c_long=2)
     AND (c=''
          OR c='my_null'
          OR c='my_empty'
          OR c='1'
          OR c='-1'
          OR c='0'
          OR c='999'
          OR c=999)
     AND NOT c='[2]'
     AND NOT c='[3, [4, 5]]'
     AND NOT c='2'
     AND NOT c='3'
     AND NOT c='999'
     AND NOT c=999), unnest(mv_to_array(c_mv_num_with_null_and_empty_row)) AS u(c);
QueryInterruptedException
!error

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A6_B24_C7 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest,
        unnest(mv_to_array(c_mv_num_with_null_and_empty_row)) AS u(c))
WHERE (c_long=0
       OR c_long=1
       OR c_long=2)
  AND (c=''
       OR c='my_null'
       OR c='my_empty'
       OR c='1'
       OR c='-1'
       OR c='0'
       OR c='999'
       OR c=999)
  AND NOT c='[2]'
  AND NOT c='[3, [4, 5]]'
  AND NOT c='2'
  AND NOT c='3'
  AND NOT c='999'
  AND NOT c=999;
+---+
| c |
+---+
|   |
| 1 |
+---+
(2 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A6_B24_C9 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest), unnest(mv_to_array(c_mv_num_with_null_and_empty_row)) AS u(c)
WHERE (c_long=0
       OR c_long=1
       OR c_long=2)
  AND (c=''
       OR c='my_null'
       OR c='my_empty'
       OR c='1'
       OR c='-1'
       OR c='0'
       OR c='999'
       OR c=999)
  AND NOT c='[2]'
  AND NOT c='[3, [4, 5]]'
  AND NOT c='2'
  AND NOT c='3'
  AND NOT c='999'
  AND NOT c=999;
+---+
| c |
+---+
|   |
| 1 |
+---+
(2 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A6_B25_C1 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM test_unnest,
     unnest(mv_to_array(c_mv_num_with_null_and_empty_row)) AS u(c)
WHERE c_str IS NULL
  AND c IS NULL;
+---+
| c |
+---+
|   |
+---+
(1 row)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A6_B25_C3 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest,
        unnest(mv_to_array(c_mv_num_with_null_and_empty_row)) AS u(c)
   WHERE c_str IS NULL
     AND c IS NULL);
+---+
| c |
+---+
|   |
+---+
(1 row)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A6_B25_C5 TYPE: NEGATIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest
   WHERE c_str IS NULL
     AND c IS NULL), unnest(mv_to_array(c_mv_num_with_null_and_empty_row)) AS u(c);
QueryInterruptedException
!error

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A6_B25_C7 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest,
        unnest(mv_to_array(c_mv_num_with_null_and_empty_row)) AS u(c))
WHERE c_str IS NULL
  AND c IS NULL;
+---+
| c |
+---+
|   |
+---+
(1 row)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A6_B25_C9 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest), unnest(mv_to_array(c_mv_num_with_null_and_empty_row)) AS u(c)
WHERE c_str IS NULL
  AND c IS NULL;
+---+
| c |
+---+
|   |
+---+
(1 row)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A6_B26_C1 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM test_unnest,
     unnest(mv_to_array(c_mv_num_with_null_and_empty_row)) AS u(c)
WHERE c_str IS NOT NULL
  AND c IS NOT NULL;
+---+
| c |
+---+
|   |
|   |
|   |
| 1 |
| 1 |
| 1 |
| 2 |
| 2 |
| 2 |
| 3 |
| 3 |
| 3 |
+---+
(12 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A6_B26_C3 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest,
        unnest(mv_to_array(c_mv_num_with_null_and_empty_row)) AS u(c)
   WHERE c_str IS NOT NULL
     AND c IS NOT NULL);
+---+
| c |
+---+
|   |
|   |
|   |
| 1 |
| 1 |
| 1 |
| 2 |
| 2 |
| 2 |
| 3 |
| 3 |
| 3 |
+---+
(12 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A6_B26_C5 TYPE: NEGATIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest
   WHERE c_str IS NOT NULL
     AND c IS NOT NULL), unnest(mv_to_array(c_mv_num_with_null_and_empty_row)) AS u(c);
QueryInterruptedException
!error

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A6_B26_C7 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest,
        unnest(mv_to_array(c_mv_num_with_null_and_empty_row)) AS u(c))
WHERE c_str IS NOT NULL
  AND c IS NOT NULL;
+---+
| c |
+---+
|   |
|   |
|   |
| 1 |
| 1 |
| 1 |
| 2 |
| 2 |
| 2 |
| 3 |
| 3 |
| 3 |
+---+
(12 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A6_B26_C9 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest), unnest(mv_to_array(c_mv_num_with_null_and_empty_row)) AS u(c)
WHERE c_str IS NOT NULL
  AND c IS NOT NULL;
+---+
| c |
+---+
|   |
|   |
|   |
| 1 |
| 1 |
| 1 |
| 2 |
| 2 |
| 2 |
| 3 |
| 3 |
| 3 |
+---+
(12 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A6_B27_C1 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM test_unnest,
     unnest(mv_to_array(c_mv_num_with_null_and_empty_row)) AS u(c)
WHERE c_long IN (0,
                 1,
                 2) IS TRUE
  AND c_long IN (3,
                 4) IS NOT TRUE
  AND c IN ('',
            'my_null',
            'my_empty',
            '1',
            '-1',
            '0',
            '999',
            999) IS TRUE
  AND c IN ('[2]',
            '[3, [4, 5]]',
            '2',
            '3',
            '999',
            999) IS NOT TRUE;
+---+
| c |
+---+
|   |
| 1 |
+---+
(2 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A6_B27_C3 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest,
        unnest(mv_to_array(c_mv_num_with_null_and_empty_row)) AS u(c)
   WHERE c_long IN (0,
                    1,
                    2) IS TRUE
     AND c_long IN (3,
                    4) IS NOT TRUE
     AND c IN ('',
               'my_null',
               'my_empty',
               '1',
               '-1',
               '0',
               '999',
               999) IS TRUE
     AND c IN ('[2]',
               '[3, [4, 5]]',
               '2',
               '3',
               '999',
               999) IS NOT TRUE);
+---+
| c |
+---+
|   |
| 1 |
+---+
(2 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A6_B27_C5 TYPE: NEGATIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest
   WHERE c_long IN (0,
                    1,
                    2) IS TRUE
     AND c_long IN (3,
                    4) IS NOT TRUE
     AND c IN ('',
               'my_null',
               'my_empty',
               '1',
               '-1',
               '0',
               '999',
               999) IS TRUE
     AND c IN ('[2]',
               '[3, [4, 5]]',
               '2',
               '3',
               '999',
               999) IS NOT TRUE), unnest(mv_to_array(c_mv_num_with_null_and_empty_row)) AS u(c);
QueryInterruptedException
!error

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A6_B27_C7 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest,
        unnest(mv_to_array(c_mv_num_with_null_and_empty_row)) AS u(c))
WHERE c_long IN (0,
                 1,
                 2) IS TRUE
  AND c_long IN (3,
                 4) IS NOT TRUE
  AND c IN ('',
            'my_null',
            'my_empty',
            '1',
            '-1',
            '0',
            '999',
            999) IS TRUE
  AND c IN ('[2]',
            '[3, [4, 5]]',
            '2',
            '3',
            '999',
            999) IS NOT TRUE;
+---+
| c |
+---+
|   |
| 1 |
+---+
(2 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A6_B27_C9 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest), unnest(mv_to_array(c_mv_num_with_null_and_empty_row)) AS u(c)
WHERE c_long IN (0,
                 1,
                 2) IS TRUE
  AND c_long IN (3,
                 4) IS NOT TRUE
  AND c IN ('',
            'my_null',
            'my_empty',
            '1',
            '-1',
            '0',
            '999',
            999) IS TRUE
  AND c IN ('[2]',
            '[3, [4, 5]]',
            '2',
            '3',
            '999',
            999) IS NOT TRUE;
+---+
| c |
+---+
|   |
| 1 |
+---+
(2 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A6_B28_C1 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM test_unnest,
     unnest(mv_to_array(c_mv_num_with_null_and_empty_row)) AS u(c)
WHERE c_long IN (0,
                 1,
                 2) IS NOT FALSE
  AND c_long IN (3,
                 4) IS FALSE
  AND c IN ('',
            'my_null',
            'my_empty',
            '1',
            '-1',
            '0',
            '999',
            999) IS NOT FALSE
  AND c IN ('[2]',
            '[3, [4, 5]]',
            '2',
            '3',
            '999',
            999) IS FALSE;
+---+
| c |
+---+
|   |
| 1 |
+---+
(2 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A6_B28_C3 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest,
        unnest(mv_to_array(c_mv_num_with_null_and_empty_row)) AS u(c)
   WHERE c_long IN (0,
                    1,
                    2) IS NOT FALSE
     AND c_long IN (3,
                    4) IS FALSE
     AND c IN ('',
               'my_null',
               'my_empty',
               '1',
               '-1',
               '0',
               '999',
               999) IS NOT FALSE
     AND c IN ('[2]',
               '[3, [4, 5]]',
               '2',
               '3',
               '999',
               999) IS FALSE);
+---+
| c |
+---+
|   |
| 1 |
+---+
(2 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A6_B28_C5 TYPE: NEGATIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest
   WHERE c_long IN (0,
                    1,
                    2) IS NOT FALSE
     AND c_long IN (3,
                    4) IS FALSE
     AND c IN ('',
               'my_null',
               'my_empty',
               '1',
               '-1',
               '0',
               '999',
               999) IS NOT FALSE
     AND c IN ('[2]',
               '[3, [4, 5]]',
               '2',
               '3',
               '999',
               999) IS FALSE), unnest(mv_to_array(c_mv_num_with_null_and_empty_row)) AS u(c);
QueryInterruptedException
!error

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A6_B28_C7 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest,
        unnest(mv_to_array(c_mv_num_with_null_and_empty_row)) AS u(c))
WHERE c_long IN (0,
                 1,
                 2) IS NOT FALSE
  AND c_long IN (3,
                 4) IS FALSE
  AND c IN ('',
            'my_null',
            'my_empty',
            '1',
            '-1',
            '0',
            '999',
            999) IS NOT FALSE
  AND c IN ('[2]',
            '[3, [4, 5]]',
            '2',
            '3',
            '999',
            999) IS FALSE;
+---+
| c |
+---+
|   |
| 1 |
+---+
(2 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A6_B28_C9 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest), unnest(mv_to_array(c_mv_num_with_null_and_empty_row)) AS u(c)
WHERE c_long IN (0,
                 1,
                 2) IS NOT FALSE
  AND c_long IN (3,
                 4) IS FALSE
  AND c IN ('',
            'my_null',
            'my_empty',
            '1',
            '-1',
            '0',
            '999',
            999) IS NOT FALSE
  AND c IN ('[2]',
            '[3, [4, 5]]',
            '2',
            '3',
            '999',
            999) IS FALSE;
+---+
| c |
+---+
|   |
| 1 |
+---+
(2 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A6_B29_C1 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM test_unnest,
     unnest(mv_to_array(c_mv_num_with_null_and_empty_row)) AS u(c)
WHERE (c_long BETWEEN 0 AND 2)
  AND (c_long NOT BETWEEN 3 AND 4)
  AND (c BETWEEN '1' AND '2')
  AND (c NOT BETWEEN '3' AND '4');
+---+
| c |
+---+
| 1 |
| 2 |
+---+
(2 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A6_B29_C3 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest,
        unnest(mv_to_array(c_mv_num_with_null_and_empty_row)) AS u(c)
   WHERE (c_long BETWEEN 0 AND 2)
     AND (c_long NOT BETWEEN 3 AND 4)
     AND (c BETWEEN '1' AND '2')
     AND (c NOT BETWEEN '3' AND '4'));
+---+
| c |
+---+
| 1 |
| 2 |
+---+
(2 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A6_B29_C5 TYPE: NEGATIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest
   WHERE (c_long BETWEEN 0 AND 2)
     AND (c_long NOT BETWEEN 3 AND 4)
     AND (c BETWEEN '1' AND '2')
     AND (c NOT BETWEEN '3' AND '4')), unnest(mv_to_array(c_mv_num_with_null_and_empty_row)) AS u(c);
QueryInterruptedException
!error

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A6_B29_C7 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest,
        unnest(mv_to_array(c_mv_num_with_null_and_empty_row)) AS u(c))
WHERE (c_long BETWEEN 0 AND 2)
  AND (c_long NOT BETWEEN 3 AND 4)
  AND (c BETWEEN '1' AND '2')
  AND (c NOT BETWEEN '3' AND '4');
+---+
| c |
+---+
| 1 |
| 2 |
+---+
(2 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A6_B29_C9 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest), unnest(mv_to_array(c_mv_num_with_null_and_empty_row)) AS u(c)
WHERE (c_long BETWEEN 0 AND 2)
  AND (c_long NOT BETWEEN 3 AND 4)
  AND (c BETWEEN '1' AND '2')
  AND (c NOT BETWEEN '3' AND '4');
+---+
| c |
+---+
| 1 |
| 2 |
+---+
(2 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A6_B30_C1 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM test_unnest,
     unnest(mv_to_array(c_mv_num_with_null_and_empty_row)) AS u(c)
WHERE (c_str like '%2')
  AND (c_str not like '%3')
  AND (c like '1%')
  AND (c not like '3%');
+---+
| c |
+---+
| 1 |
+---+
(1 row)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A6_B30_C3 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest,
        unnest(mv_to_array(c_mv_num_with_null_and_empty_row)) AS u(c)
   WHERE (c_str like '%2')
     AND (c_str not like '%3')
     AND (c like '1%')
     AND (c not like '3%'));
+---+
| c |
+---+
| 1 |
+---+
(1 row)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A6_B30_C5 TYPE: NEGATIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest
   WHERE (c_str like '%2')
     AND (c_str not like '%3')
     AND (c like '1%')
     AND (c not like '3%')), unnest(mv_to_array(c_mv_num_with_null_and_empty_row)) AS u(c);
QueryInterruptedException
!error

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A6_B30_C7 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest,
        unnest(mv_to_array(c_mv_num_with_null_and_empty_row)) AS u(c))
WHERE (c_str like '%2')
  AND (c_str not like '%3')
  AND (c like '1%')
  AND (c not like '3%');
+---+
| c |
+---+
| 1 |
+---+
(1 row)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A6_B30_C9 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest), unnest(mv_to_array(c_mv_num_with_null_and_empty_row)) AS u(c)
WHERE (c_str like '%2')
  AND (c_str not like '%3')
  AND (c like '1%')
  AND (c not like '3%');
+---+
| c |
+---+
| 1 |
+---+
(1 row)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A6_B31_C1 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM test_unnest,
     unnest(mv_to_array(c_mv_num_with_null_and_empty_row)) AS u(c)
WHERE c_long IN (0,
                 1,
                 2)
  AND c_long NOT IN (3,
                     4)
  AND c IN ('',
            'my_null',
            'my_empty',
            '1',
            '-1',
            '0',
            '999',
            999)
  AND c NOT IN ('[2]',
                '[3, [4, 5]]',
                '2',
                '3',
                '999',
                999);
+---+
| c |
+---+
|   |
| 1 |
+---+
(2 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A6_B31_C3 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest,
        unnest(mv_to_array(c_mv_num_with_null_and_empty_row)) AS u(c)
   WHERE c_long IN (0,
                    1,
                    2)
     AND c_long NOT IN (3,
                        4)
     AND c IN ('',
               'my_null',
               'my_empty',
               '1',
               '-1',
               '0',
               '999',
               999)
     AND c NOT IN ('[2]',
                   '[3, [4, 5]]',
                   '2',
                   '3',
                   '999',
                   999));
+---+
| c |
+---+
|   |
| 1 |
+---+
(2 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A6_B31_C5 TYPE: NEGATIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest
   WHERE c_long IN (0,
                    1,
                    2)
     AND c_long NOT IN (3,
                        4)
     AND c IN ('',
               'my_null',
               'my_empty',
               '1',
               '-1',
               '0',
               '999',
               999)
     AND c NOT IN ('[2]',
                   '[3, [4, 5]]',
                   '2',
                   '3',
                   '999',
                   999)), unnest(mv_to_array(c_mv_num_with_null_and_empty_row)) AS u(c);
QueryInterruptedException
!error

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A6_B31_C7 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest,
        unnest(mv_to_array(c_mv_num_with_null_and_empty_row)) AS u(c))
WHERE c_long IN (0,
                 1,
                 2)
  AND c_long NOT IN (3,
                     4)
  AND c IN ('',
            'my_null',
            'my_empty',
            '1',
            '-1',
            '0',
            '999',
            999)
  AND c NOT IN ('[2]',
                '[3, [4, 5]]',
                '2',
                '3',
                '999',
                999);
+---+
| c |
+---+
|   |
| 1 |
+---+
(2 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A6_B31_C9 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest), unnest(mv_to_array(c_mv_num_with_null_and_empty_row)) AS u(c)
WHERE c_long IN (0,
                 1,
                 2)
  AND c_long NOT IN (3,
                     4)
  AND c IN ('',
            'my_null',
            'my_empty',
            '1',
            '-1',
            '0',
            '999',
            999)
  AND c NOT IN ('[2]',
                '[3, [4, 5]]',
                '2',
                '3',
                '999',
                999);
+---+
| c |
+---+
|   |
| 1 |
+---+
(2 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A6_B32_C1 TYPE: NEGATIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM test_unnest,
     unnest(mv_to_array(c_mv_num_with_null_and_empty_row)) AS u(c)
WHERE c_long IN
    (SELECT col
     FROM (
           VALUES(0),(1),(2)) AS t(col))
  AND c_long NOT IN
    (SELECT col
     FROM (
           VALUES(3),(4)) AS t(col))
  AND c IN
    (SELECT col
     FROM (
           VALUES(''),('my_null'),('my_empty'),('1'),('-1'),('0'),('999')) AS t(col))
  AND c NOT IN
    (SELECT col
     FROM (
           VALUES('[2]'),('[3, [4, 5]]'),('2'),('3'),('999')) AS t(col));
Unhandled Query Planning Failure
!error

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A6_B32_C3 TYPE: NEGATIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest,
        unnest(mv_to_array(c_mv_num_with_null_and_empty_row)) AS u(c)
   WHERE c_long IN
       (SELECT col
        FROM (
              VALUES(0),(1),(2)) AS t(col))
     AND c_long NOT IN
       (SELECT col
        FROM (
              VALUES(3),(4)) AS t(col))
     AND c IN
       (SELECT col
        FROM (
              VALUES(''),('my_null'),('my_empty'),('1'),('-1'),('0'),('999')) AS t(col))
     AND c NOT IN
       (SELECT col
        FROM (
              VALUES('[2]'),('[3, [4, 5]]'),('2'),('3'),('999')) AS t(col)));
Unhandled Query Planning Failure
!error

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A6_B32_C5 TYPE: NEGATIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest
   WHERE c_long IN
       (SELECT col
        FROM (
              VALUES(0),(1),(2)) AS t(col))
     AND c_long NOT IN
       (SELECT col
        FROM (
              VALUES(3),(4)) AS t(col))
     AND c IN
       (SELECT col
        FROM (
              VALUES(''),('my_null'),('my_empty'),('1'),('-1'),('0'),('999')) AS t(col))
     AND c NOT IN
       (SELECT col
        FROM (
              VALUES('[2]'),('[3, [4, 5]]'),('2'),('3'),('999')) AS t(col))), unnest(mv_to_array(c_mv_num_with_null_and_empty_row)) AS u(c);
QueryInterruptedException
!error

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A6_B32_C7 TYPE: NEGATIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest,
        unnest(mv_to_array(c_mv_num_with_null_and_empty_row)) AS u(c))
WHERE c_long IN
    (SELECT col
     FROM (
           VALUES(0),(1),(2)) AS t(col))
  AND c_long NOT IN
    (SELECT col
     FROM (
           VALUES(3),(4)) AS t(col))
  AND c IN
    (SELECT col
     FROM (
           VALUES(''),('my_null'),('my_empty'),('1'),('-1'),('0'),('999')) AS t(col))
  AND c NOT IN
    (SELECT col
     FROM (
           VALUES('[2]'),('[3, [4, 5]]'),('2'),('3'),('999')) AS t(col));
Unhandled Query Planning Failure
!error

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A6_B32_C9 TYPE: NEGATIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest), unnest(mv_to_array(c_mv_num_with_null_and_empty_row)) AS u(c)
WHERE c_long IN
    (SELECT col
     FROM (
           VALUES(0),(1),(2)) AS t(col))
  AND c_long NOT IN
    (SELECT col
     FROM (
           VALUES(3),(4)) AS t(col))
  AND c IN
    (SELECT col
     FROM (
           VALUES(''),('my_null'),('my_empty'),('1'),('-1'),('0'),('999')) AS t(col))
  AND c NOT IN
    (SELECT col
     FROM (
           VALUES('[2]'),('[3, [4, 5]]'),('2'),('3'),('999')) AS t(col));
Unhandled Query Planning Failure
!error

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A6_B33_C1 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM test_unnest,
     unnest(mv_to_array(c_mv_num_with_null_and_empty_row)) AS u(c)
WHERE c_long=1;
+---+
| c |
+---+
|   |
+---+
(1 row)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A6_B33_C3 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest,
        unnest(mv_to_array(c_mv_num_with_null_and_empty_row)) AS u(c)
   WHERE c_long=1);
+---+
| c |
+---+
|   |
+---+
(1 row)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A6_B33_C5 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest
   WHERE c_long=1), unnest(mv_to_array(c_mv_num_with_null_and_empty_row)) AS u(c);
+---+
| c |
+---+
|   |
+---+
(1 row)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A6_B33_C7 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest,
        unnest(mv_to_array(c_mv_num_with_null_and_empty_row)) AS u(c))
WHERE c_long=1;
+---+
| c |
+---+
|   |
+---+
(1 row)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A6_B33_C9 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest), unnest(mv_to_array(c_mv_num_with_null_and_empty_row)) AS u(c)
WHERE c_long=1;
+---+
| c |
+---+
|   |
+---+
(1 row)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A6_B34_C1 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM test_unnest,
     unnest(mv_to_array(c_mv_num_with_null_and_empty_row)) AS u(c)
WHERE c_long<>1;
+---+
| c |
+---+
|   |
|   |
|   |
| 1 |
| 1 |
| 1 |
| 2 |
| 2 |
| 2 |
| 3 |
| 3 |
| 3 |
|   |
|   |
|   |
|   |
+---+
(16 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A6_B34_C3 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest,
        unnest(mv_to_array(c_mv_num_with_null_and_empty_row)) AS u(c)
   WHERE c_long<>1);
+---+
| c |
+---+
|   |
|   |
|   |
| 1 |
| 1 |
| 1 |
| 2 |
| 2 |
| 2 |
| 3 |
| 3 |
| 3 |
|   |
|   |
|   |
|   |
+---+
(16 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A6_B34_C5 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest
   WHERE c_long<>1), unnest(mv_to_array(c_mv_num_with_null_and_empty_row)) AS u(c);
+---+
| c |
+---+
|   |
|   |
|   |
| 1 |
| 1 |
| 1 |
| 2 |
| 2 |
| 2 |
| 3 |
| 3 |
| 3 |
|   |
|   |
|   |
|   |
+---+
(16 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A6_B34_C7 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest,
        unnest(mv_to_array(c_mv_num_with_null_and_empty_row)) AS u(c))
WHERE c_long<>1;
+---+
| c |
+---+
|   |
|   |
|   |
| 1 |
| 1 |
| 1 |
| 2 |
| 2 |
| 2 |
| 3 |
| 3 |
| 3 |
|   |
|   |
|   |
|   |
+---+
(16 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A6_B34_C9 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest), unnest(mv_to_array(c_mv_num_with_null_and_empty_row)) AS u(c)
WHERE c_long<>1;
+---+
| c |
+---+
|   |
|   |
|   |
| 1 |
| 1 |
| 1 |
| 2 |
| 2 |
| 2 |
| 3 |
| 3 |
| 3 |
|   |
|   |
|   |
|   |
+---+
(16 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A6_B35_C1 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM test_unnest,
     unnest(mv_to_array(c_mv_num_with_null_and_empty_row)) AS u(c)
WHERE c_long>1;
+---+
| c |
+---+
|   |
|   |
|   |
| 1 |
| 1 |
| 1 |
| 2 |
| 2 |
| 2 |
| 3 |
| 3 |
| 3 |
|   |
|   |
|   |
+---+
(15 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A6_B35_C3 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest,
        unnest(mv_to_array(c_mv_num_with_null_and_empty_row)) AS u(c)
   WHERE c_long>1);
+---+
| c |
+---+
|   |
|   |
|   |
| 1 |
| 1 |
| 1 |
| 2 |
| 2 |
| 2 |
| 3 |
| 3 |
| 3 |
|   |
|   |
|   |
+---+
(15 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A6_B35_C5 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest
   WHERE c_long>1), unnest(mv_to_array(c_mv_num_with_null_and_empty_row)) AS u(c);
+---+
| c |
+---+
|   |
|   |
|   |
| 1 |
| 1 |
| 1 |
| 2 |
| 2 |
| 2 |
| 3 |
| 3 |
| 3 |
|   |
|   |
|   |
+---+
(15 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A6_B35_C7 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest,
        unnest(mv_to_array(c_mv_num_with_null_and_empty_row)) AS u(c))
WHERE c_long>1;
+---+
| c |
+---+
|   |
|   |
|   |
| 1 |
| 1 |
| 1 |
| 2 |
| 2 |
| 2 |
| 3 |
| 3 |
| 3 |
|   |
|   |
|   |
+---+
(15 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A6_B35_C9 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest), unnest(mv_to_array(c_mv_num_with_null_and_empty_row)) AS u(c)
WHERE c_long>1;
+---+
| c |
+---+
|   |
|   |
|   |
| 1 |
| 1 |
| 1 |
| 2 |
| 2 |
| 2 |
| 3 |
| 3 |
| 3 |
|   |
|   |
|   |
+---+
(15 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A6_B36_C1 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM test_unnest,
     unnest(mv_to_array(c_mv_num_with_null_and_empty_row)) AS u(c)
WHERE c_long>=1;
+---+
| c |
+---+
|   |
|   |
|   |
| 1 |
| 1 |
| 1 |
| 2 |
| 2 |
| 2 |
| 3 |
| 3 |
| 3 |
|   |
|   |
|   |
|   |
+---+
(16 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A6_B36_C3 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest,
        unnest(mv_to_array(c_mv_num_with_null_and_empty_row)) AS u(c)
   WHERE c_long>=1);
+---+
| c |
+---+
|   |
|   |
|   |
| 1 |
| 1 |
| 1 |
| 2 |
| 2 |
| 2 |
| 3 |
| 3 |
| 3 |
|   |
|   |
|   |
|   |
+---+
(16 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A6_B36_C5 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest
   WHERE c_long>=1), unnest(mv_to_array(c_mv_num_with_null_and_empty_row)) AS u(c);
+---+
| c |
+---+
|   |
|   |
|   |
| 1 |
| 1 |
| 1 |
| 2 |
| 2 |
| 2 |
| 3 |
| 3 |
| 3 |
|   |
|   |
|   |
|   |
+---+
(16 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A6_B36_C7 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest,
        unnest(mv_to_array(c_mv_num_with_null_and_empty_row)) AS u(c))
WHERE c_long>=1;
+---+
| c |
+---+
|   |
|   |
|   |
| 1 |
| 1 |
| 1 |
| 2 |
| 2 |
| 2 |
| 3 |
| 3 |
| 3 |
|   |
|   |
|   |
|   |
+---+
(16 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A6_B36_C9 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest), unnest(mv_to_array(c_mv_num_with_null_and_empty_row)) AS u(c)
WHERE c_long>=1;
+---+
| c |
+---+
|   |
|   |
|   |
| 1 |
| 1 |
| 1 |
| 2 |
| 2 |
| 2 |
| 3 |
| 3 |
| 3 |
|   |
|   |
|   |
|   |
+---+
(16 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A6_B37_C1 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM test_unnest,
     unnest(mv_to_array(c_mv_num_with_null_and_empty_row)) AS u(c)
WHERE c_long<1;
+---+
| c |
+---+
|   |
+---+
(1 row)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A6_B37_C3 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest,
        unnest(mv_to_array(c_mv_num_with_null_and_empty_row)) AS u(c)
   WHERE c_long<1);
+---+
| c |
+---+
|   |
+---+
(1 row)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A6_B37_C5 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest
   WHERE c_long<1), unnest(mv_to_array(c_mv_num_with_null_and_empty_row)) AS u(c);
+---+
| c |
+---+
|   |
+---+
(1 row)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A6_B37_C7 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest,
        unnest(mv_to_array(c_mv_num_with_null_and_empty_row)) AS u(c))
WHERE c_long<1;
+---+
| c |
+---+
|   |
+---+
(1 row)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A6_B37_C9 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest), unnest(mv_to_array(c_mv_num_with_null_and_empty_row)) AS u(c)
WHERE c_long<1;
+---+
| c |
+---+
|   |
+---+
(1 row)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A6_B38_C1 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM test_unnest,
     unnest(mv_to_array(c_mv_num_with_null_and_empty_row)) AS u(c)
WHERE c_long<=1;
+---+
| c |
+---+
|   |
|   |
+---+
(2 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A6_B38_C3 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest,
        unnest(mv_to_array(c_mv_num_with_null_and_empty_row)) AS u(c)
   WHERE c_long<=1);
+---+
| c |
+---+
|   |
|   |
+---+
(2 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A6_B38_C5 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest
   WHERE c_long<=1), unnest(mv_to_array(c_mv_num_with_null_and_empty_row)) AS u(c);
+---+
| c |
+---+
|   |
|   |
+---+
(2 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A6_B38_C7 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest,
        unnest(mv_to_array(c_mv_num_with_null_and_empty_row)) AS u(c))
WHERE c_long<=1;
+---+
| c |
+---+
|   |
|   |
+---+
(2 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A6_B38_C9 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest), unnest(mv_to_array(c_mv_num_with_null_and_empty_row)) AS u(c)
WHERE c_long<=1;
+---+
| c |
+---+
|   |
|   |
+---+
(2 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A6_B39_C1 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM test_unnest,
     unnest(mv_to_array(c_mv_num_with_null_and_empty_row)) AS u(c)
WHERE (NOT c_str<>''
       OR NOT c_str<>'str2'
       OR NOT c_long<>0
       OR NOT c_long<>1
       OR NOT c_long<>2
       OR NOT c_long<>999)
  AND (NOT c_str='str3'
       OR NOT c_str='str4'
       OR NOT c_long=3
       OR NOT c_long=4
       OR NOT c_long=999);
+---+
| c |
+---+
|   |
| 1 |
| 2 |
| 3 |
|   |
|   |
|   |
+---+
(7 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A6_B39_C3 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest,
        unnest(mv_to_array(c_mv_num_with_null_and_empty_row)) AS u(c)
   WHERE (NOT c_str<>''
          OR NOT c_str<>'str2'
          OR NOT c_long<>0
          OR NOT c_long<>1
          OR NOT c_long<>2
          OR NOT c_long<>999)
     AND (NOT c_str='str3'
          OR NOT c_str='str4'
          OR NOT c_long=3
          OR NOT c_long=4
          OR NOT c_long=999));
+---+
| c |
+---+
|   |
| 1 |
| 2 |
| 3 |
|   |
|   |
|   |
+---+
(7 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A6_B39_C5 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest
   WHERE (NOT c_str<>''
          OR NOT c_str<>'str2'
          OR NOT c_long<>0
          OR NOT c_long<>1
          OR NOT c_long<>2
          OR NOT c_long<>999)
     AND (NOT c_str='str3'
          OR NOT c_str='str4'
          OR NOT c_long=3
          OR NOT c_long=4
          OR NOT c_long=999)), unnest(mv_to_array(c_mv_num_with_null_and_empty_row)) AS u(c);
+---+
| c |
+---+
|   |
| 1 |
| 2 |
| 3 |
|   |
|   |
|   |
+---+
(7 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A6_B39_C7 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest,
        unnest(mv_to_array(c_mv_num_with_null_and_empty_row)) AS u(c))
WHERE (NOT c_str<>''
       OR NOT c_str<>'str2'
       OR NOT c_long<>0
       OR NOT c_long<>1
       OR NOT c_long<>2
       OR NOT c_long<>999)
  AND (NOT c_str='str3'
       OR NOT c_str='str4'
       OR NOT c_long=3
       OR NOT c_long=4
       OR NOT c_long=999);
+---+
| c |
+---+
|   |
| 1 |
| 2 |
| 3 |
|   |
|   |
|   |
+---+
(7 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A6_B39_C9 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest), unnest(mv_to_array(c_mv_num_with_null_and_empty_row)) AS u(c)
WHERE (NOT c_str<>''
       OR NOT c_str<>'str2'
       OR NOT c_long<>0
       OR NOT c_long<>1
       OR NOT c_long<>2
       OR NOT c_long<>999)
  AND (NOT c_str='str3'
       OR NOT c_str='str4'
       OR NOT c_long=3
       OR NOT c_long=4
       OR NOT c_long=999);
+---+
| c |
+---+
|   |
| 1 |
| 2 |
| 3 |
|   |
|   |
|   |
+---+
(7 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A6_B40_C1 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM test_unnest,
     unnest(mv_to_array(c_mv_num_with_null_and_empty_row)) AS u(c)
WHERE (c_str=''
       OR c_str='str2'
       OR c_long=0
       OR c_long=1
       OR c_long=2
       OR c_long=999)
  AND NOT c_str='str3'
  AND NOT c_str='str4'
  AND NOT c_long=3
  AND NOT c_long=4
  AND NOT c_long=999;
+---+
| c |
+---+
|   |
| 1 |
| 2 |
| 3 |
|   |
|   |
+---+
(6 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A6_B40_C3 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest,
        unnest(mv_to_array(c_mv_num_with_null_and_empty_row)) AS u(c)
   WHERE (c_str=''
          OR c_str='str2'
          OR c_long=0
          OR c_long=1
          OR c_long=2
          OR c_long=999)
     AND NOT c_str='str3'
     AND NOT c_str='str4'
     AND NOT c_long=3
     AND NOT c_long=4
     AND NOT c_long=999);
+---+
| c |
+---+
|   |
| 1 |
| 2 |
| 3 |
|   |
|   |
+---+
(6 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A6_B40_C5 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest
   WHERE (c_str=''
          OR c_str='str2'
          OR c_long=0
          OR c_long=1
          OR c_long=2
          OR c_long=999)
     AND NOT c_str='str3'
     AND NOT c_str='str4'
     AND NOT c_long=3
     AND NOT c_long=4
     AND NOT c_long=999), unnest(mv_to_array(c_mv_num_with_null_and_empty_row)) AS u(c);
+---+
| c |
+---+
|   |
| 1 |
| 2 |
| 3 |
|   |
|   |
+---+
(6 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A6_B40_C7 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest,
        unnest(mv_to_array(c_mv_num_with_null_and_empty_row)) AS u(c))
WHERE (c_str=''
       OR c_str='str2'
       OR c_long=0
       OR c_long=1
       OR c_long=2
       OR c_long=999)
  AND NOT c_str='str3'
  AND NOT c_str='str4'
  AND NOT c_long=3
  AND NOT c_long=4
  AND NOT c_long=999;
+---+
| c |
+---+
|   |
| 1 |
| 2 |
| 3 |
|   |
|   |
+---+
(6 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A6_B40_C9 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest), unnest(mv_to_array(c_mv_num_with_null_and_empty_row)) AS u(c)
WHERE (c_str=''
       OR c_str='str2'
       OR c_long=0
       OR c_long=1
       OR c_long=2
       OR c_long=999)
  AND NOT c_str='str3'
  AND NOT c_str='str4'
  AND NOT c_long=3
  AND NOT c_long=4
  AND NOT c_long=999;
+---+
| c |
+---+
|   |
| 1 |
| 2 |
| 3 |
|   |
|   |
+---+
(6 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A6_B41_C1 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM test_unnest,
     unnest(mv_to_array(c_mv_num_with_null_and_empty_row)) AS u(c)
WHERE c_str IS NULL;
+---+
| c |
+---+
|   |
+---+
(1 row)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A6_B41_C3 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest,
        unnest(mv_to_array(c_mv_num_with_null_and_empty_row)) AS u(c)
   WHERE c_str IS NULL);
+---+
| c |
+---+
|   |
+---+
(1 row)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A6_B41_C5 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest
   WHERE c_str IS NULL), unnest(mv_to_array(c_mv_num_with_null_and_empty_row)) AS u(c);
+---+
| c |
+---+
|   |
+---+
(1 row)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A6_B41_C7 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest,
        unnest(mv_to_array(c_mv_num_with_null_and_empty_row)) AS u(c))
WHERE c_str IS NULL;
+---+
| c |
+---+
|   |
+---+
(1 row)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A6_B41_C9 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest), unnest(mv_to_array(c_mv_num_with_null_and_empty_row)) AS u(c)
WHERE c_str IS NULL;
+---+
| c |
+---+
|   |
+---+
(1 row)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A6_B42_C1 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM test_unnest,
     unnest(mv_to_array(c_mv_num_with_null_and_empty_row)) AS u(c)
WHERE c_str IS NOT NULL;
+---+
| c |
+---+
|   |
|   |
|   |
| 1 |
| 1 |
| 1 |
| 2 |
| 2 |
| 2 |
| 3 |
| 3 |
| 3 |
|   |
|   |
|   |
|   |
+---+
(16 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A6_B42_C3 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest,
        unnest(mv_to_array(c_mv_num_with_null_and_empty_row)) AS u(c)
   WHERE c_str IS NOT NULL);
+---+
| c |
+---+
|   |
|   |
|   |
| 1 |
| 1 |
| 1 |
| 2 |
| 2 |
| 2 |
| 3 |
| 3 |
| 3 |
|   |
|   |
|   |
|   |
+---+
(16 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A6_B42_C5 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest
   WHERE c_str IS NOT NULL), unnest(mv_to_array(c_mv_num_with_null_and_empty_row)) AS u(c);
+---+
| c |
+---+
|   |
|   |
|   |
| 1 |
| 1 |
| 1 |
| 2 |
| 2 |
| 2 |
| 3 |
| 3 |
| 3 |
|   |
|   |
|   |
|   |
+---+
(16 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A6_B42_C7 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest,
        unnest(mv_to_array(c_mv_num_with_null_and_empty_row)) AS u(c))
WHERE c_str IS NOT NULL;
+---+
| c |
+---+
|   |
|   |
|   |
| 1 |
| 1 |
| 1 |
| 2 |
| 2 |
| 2 |
| 3 |
| 3 |
| 3 |
|   |
|   |
|   |
|   |
+---+
(16 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A6_B42_C9 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest), unnest(mv_to_array(c_mv_num_with_null_and_empty_row)) AS u(c)
WHERE c_str IS NOT NULL;
+---+
| c |
+---+
|   |
|   |
|   |
| 1 |
| 1 |
| 1 |
| 2 |
| 2 |
| 2 |
| 3 |
| 3 |
| 3 |
|   |
|   |
|   |
|   |
+---+
(16 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A6_B43_C1 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM test_unnest,
     unnest(mv_to_array(c_mv_num_with_null_and_empty_row)) AS u(c)
WHERE c_str IN ('',
                'str2',
                999) IS TRUE
  AND c_str IN ('str3',
                'str4',
                999) IS NOT TRUE
  AND c_long IN (0,
                 1,
                 2,
                 999) IS TRUE
  AND c_long IN (3,
                 4,
                 999) IS NOT TRUE;
+---+
| c |
+---+
|   |
| 1 |
| 2 |
| 3 |
|   |
|   |
+---+
(6 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A6_B43_C3 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest,
        unnest(mv_to_array(c_mv_num_with_null_and_empty_row)) AS u(c)
   WHERE c_str IN ('',
                   'str2',
                   999) IS TRUE
     AND c_str IN ('str3',
                   'str4',
                   999) IS NOT TRUE
     AND c_long IN (0,
                    1,
                    2,
                    999) IS TRUE
     AND c_long IN (3,
                    4,
                    999) IS NOT TRUE);
+---+
| c |
+---+
|   |
| 1 |
| 2 |
| 3 |
|   |
|   |
+---+
(6 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A6_B43_C5 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest
   WHERE c_str IN ('',
                   'str2',
                   999) IS TRUE
     AND c_str IN ('str3',
                   'str4',
                   999) IS NOT TRUE
     AND c_long IN (0,
                    1,
                    2,
                    999) IS TRUE
     AND c_long IN (3,
                    4,
                    999) IS NOT TRUE), unnest(mv_to_array(c_mv_num_with_null_and_empty_row)) AS u(c);
+---+
| c |
+---+
|   |
| 1 |
| 2 |
| 3 |
|   |
|   |
+---+
(6 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A6_B43_C7 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest,
        unnest(mv_to_array(c_mv_num_with_null_and_empty_row)) AS u(c))
WHERE c_str IN ('',
                'str2',
                999) IS TRUE
  AND c_str IN ('str3',
                'str4',
                999) IS NOT TRUE
  AND c_long IN (0,
                 1,
                 2,
                 999) IS TRUE
  AND c_long IN (3,
                 4,
                 999) IS NOT TRUE;
+---+
| c |
+---+
|   |
| 1 |
| 2 |
| 3 |
|   |
|   |
+---+
(6 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A6_B43_C9 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest), unnest(mv_to_array(c_mv_num_with_null_and_empty_row)) AS u(c)
WHERE c_str IN ('',
                'str2',
                999) IS TRUE
  AND c_str IN ('str3',
                'str4',
                999) IS NOT TRUE
  AND c_long IN (0,
                 1,
                 2,
                 999) IS TRUE
  AND c_long IN (3,
                 4,
                 999) IS NOT TRUE;
+---+
| c |
+---+
|   |
| 1 |
| 2 |
| 3 |
|   |
|   |
+---+
(6 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A6_B44_C1 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM test_unnest,
     unnest(mv_to_array(c_mv_num_with_null_and_empty_row)) AS u(c)
WHERE c_str IN ('',
                'str2',
                999) IS NOT FALSE
  AND c_str IN ('str3',
                'str4',
                999) IS FALSE
  AND c_long IN (0,
                 1,
                 2,
                 999) IS NOT FALSE
  AND c_long IN (3,
                 4,
                 999) IS FALSE;
+---+
| c |
+---+
|   |
| 1 |
| 2 |
| 3 |
|   |
|   |
+---+
(6 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A6_B44_C3 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest,
        unnest(mv_to_array(c_mv_num_with_null_and_empty_row)) AS u(c)
   WHERE c_str IN ('',
                   'str2',
                   999) IS NOT FALSE
     AND c_str IN ('str3',
                   'str4',
                   999) IS FALSE
     AND c_long IN (0,
                    1,
                    2,
                    999) IS NOT FALSE
     AND c_long IN (3,
                    4,
                    999) IS FALSE);
+---+
| c |
+---+
|   |
| 1 |
| 2 |
| 3 |
|   |
|   |
+---+
(6 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A6_B44_C5 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest
   WHERE c_str IN ('',
                   'str2',
                   999) IS NOT FALSE
     AND c_str IN ('str3',
                   'str4',
                   999) IS FALSE
     AND c_long IN (0,
                    1,
                    2,
                    999) IS NOT FALSE
     AND c_long IN (3,
                    4,
                    999) IS FALSE), unnest(mv_to_array(c_mv_num_with_null_and_empty_row)) AS u(c);
+---+
| c |
+---+
|   |
| 1 |
| 2 |
| 3 |
|   |
|   |
+---+
(6 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A6_B44_C7 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest,
        unnest(mv_to_array(c_mv_num_with_null_and_empty_row)) AS u(c))
WHERE c_str IN ('',
                'str2',
                999) IS NOT FALSE
  AND c_str IN ('str3',
                'str4',
                999) IS FALSE
  AND c_long IN (0,
                 1,
                 2,
                 999) IS NOT FALSE
  AND c_long IN (3,
                 4,
                 999) IS FALSE;
+---+
| c |
+---+
|   |
| 1 |
| 2 |
| 3 |
|   |
|   |
+---+
(6 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A6_B44_C9 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest), unnest(mv_to_array(c_mv_num_with_null_and_empty_row)) AS u(c)
WHERE c_str IN ('',
                'str2',
                999) IS NOT FALSE
  AND c_str IN ('str3',
                'str4',
                999) IS FALSE
  AND c_long IN (0,
                 1,
                 2,
                 999) IS NOT FALSE
  AND c_long IN (3,
                 4,
                 999) IS FALSE;
+---+
| c |
+---+
|   |
| 1 |
| 2 |
| 3 |
|   |
|   |
+---+
(6 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A6_B45_C1 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM test_unnest,
     unnest(mv_to_array(c_mv_num_with_null_and_empty_row)) AS u(c)
WHERE (c_long BETWEEN 0 AND 2)
  AND (c_long NOT BETWEEN 3 AND 4);
+---+
| c |
+---+
|   |
| 1 |
| 2 |
| 3 |
|   |
|   |
|   |
+---+
(7 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A6_B45_C3 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest,
        unnest(mv_to_array(c_mv_num_with_null_and_empty_row)) AS u(c)
   WHERE (c_long BETWEEN 0 AND 2)
     AND (c_long NOT BETWEEN 3 AND 4));
+---+
| c |
+---+
|   |
| 1 |
| 2 |
| 3 |
|   |
|   |
|   |
+---+
(7 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A6_B45_C5 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest
   WHERE (c_long BETWEEN 0 AND 2)
     AND (c_long NOT BETWEEN 3 AND 4)), unnest(mv_to_array(c_mv_num_with_null_and_empty_row)) AS u(c);
+---+
| c |
+---+
|   |
| 1 |
| 2 |
| 3 |
|   |
|   |
|   |
+---+
(7 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A6_B45_C7 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest,
        unnest(mv_to_array(c_mv_num_with_null_and_empty_row)) AS u(c))
WHERE (c_long BETWEEN 0 AND 2)
  AND (c_long NOT BETWEEN 3 AND 4);
+---+
| c |
+---+
|   |
| 1 |
| 2 |
| 3 |
|   |
|   |
|   |
+---+
(7 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A6_B45_C9 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest), unnest(mv_to_array(c_mv_num_with_null_and_empty_row)) AS u(c)
WHERE (c_long BETWEEN 0 AND 2)
  AND (c_long NOT BETWEEN 3 AND 4);
+---+
| c |
+---+
|   |
| 1 |
| 2 |
| 3 |
|   |
|   |
|   |
+---+
(7 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A6_B46_C1 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM test_unnest,
     unnest(mv_to_array(c_mv_num_with_null_and_empty_row)) AS u(c)
WHERE (c_str like '%2')
  AND (c_str not like '%3')
  AND (c_str not like '%4');
+---+
| c |
+---+
|   |
| 1 |
| 2 |
| 3 |
|   |
+---+
(5 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A6_B46_C3 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest,
        unnest(mv_to_array(c_mv_num_with_null_and_empty_row)) AS u(c)
   WHERE (c_str like '%2')
     AND (c_str not like '%3')
     AND (c_str not like '%4'));
+---+
| c |
+---+
|   |
| 1 |
| 2 |
| 3 |
|   |
+---+
(5 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A6_B46_C5 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest
   WHERE (c_str like '%2')
     AND (c_str not like '%3')
     AND (c_str not like '%4')), unnest(mv_to_array(c_mv_num_with_null_and_empty_row)) AS u(c);
+---+
| c |
+---+
|   |
| 1 |
| 2 |
| 3 |
|   |
+---+
(5 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A6_B46_C7 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest,
        unnest(mv_to_array(c_mv_num_with_null_and_empty_row)) AS u(c))
WHERE (c_str like '%2')
  AND (c_str not like '%3')
  AND (c_str not like '%4');
+---+
| c |
+---+
|   |
| 1 |
| 2 |
| 3 |
|   |
+---+
(5 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A6_B46_C9 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest), unnest(mv_to_array(c_mv_num_with_null_and_empty_row)) AS u(c)
WHERE (c_str like '%2')
  AND (c_str not like '%3')
  AND (c_str not like '%4');
+---+
| c |
+---+
|   |
| 1 |
| 2 |
| 3 |
|   |
+---+
(5 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A6_B47_C1 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM test_unnest,
     unnest(mv_to_array(c_mv_num_with_null_and_empty_row)) AS u(c)
WHERE c_str IN ('',
                'str2',
                999)
  AND c_str NOT IN ('str3',
                    'str4',
                    999)
  AND c_long IN (0,
                 1,
                 2,
                 999)
  AND c_long NOT IN (3,
                     4,
                     999);
+---+
| c |
+---+
|   |
| 1 |
| 2 |
| 3 |
|   |
|   |
+---+
(6 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A6_B47_C3 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest,
        unnest(mv_to_array(c_mv_num_with_null_and_empty_row)) AS u(c)
   WHERE c_str IN ('',
                   'str2',
                   999)
     AND c_str NOT IN ('str3',
                       'str4',
                       999)
     AND c_long IN (0,
                    1,
                    2,
                    999)
     AND c_long NOT IN (3,
                        4,
                        999));
+---+
| c |
+---+
|   |
| 1 |
| 2 |
| 3 |
|   |
|   |
+---+
(6 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A6_B47_C5 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest
   WHERE c_str IN ('',
                   'str2',
                   999)
     AND c_str NOT IN ('str3',
                       'str4',
                       999)
     AND c_long IN (0,
                    1,
                    2,
                    999)
     AND c_long NOT IN (3,
                        4,
                        999)), unnest(mv_to_array(c_mv_num_with_null_and_empty_row)) AS u(c);
+---+
| c |
+---+
|   |
| 1 |
| 2 |
| 3 |
|   |
|   |
+---+
(6 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A6_B47_C7 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest,
        unnest(mv_to_array(c_mv_num_with_null_and_empty_row)) AS u(c))
WHERE c_str IN ('',
                'str2',
                999)
  AND c_str NOT IN ('str3',
                    'str4',
                    999)
  AND c_long IN (0,
                 1,
                 2,
                 999)
  AND c_long NOT IN (3,
                     4,
                     999);
+---+
| c |
+---+
|   |
| 1 |
| 2 |
| 3 |
|   |
|   |
+---+
(6 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A6_B47_C9 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest), unnest(mv_to_array(c_mv_num_with_null_and_empty_row)) AS u(c)
WHERE c_str IN ('',
                'str2',
                999)
  AND c_str NOT IN ('str3',
                    'str4',
                    999)
  AND c_long IN (0,
                 1,
                 2,
                 999)
  AND c_long NOT IN (3,
                     4,
                     999);
+---+
| c |
+---+
|   |
| 1 |
| 2 |
| 3 |
|   |
|   |
+---+
(6 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A6_B48_C1 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM test_unnest,
     unnest(mv_to_array(c_mv_num_with_null_and_empty_row)) AS u(c)
WHERE c_long IN
    (SELECT col
     FROM (
           VALUES(0),(1),(2),(999)) AS t(col))
  AND c_long NOT IN
    (SELECT col
     FROM (
           VALUES(3),(4),(999)) AS t(col));
+---+
| c |
+---+
|   |
| 1 |
| 2 |
| 3 |
|   |
|   |
|   |
+---+
(7 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A6_B48_C3 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest,
        unnest(mv_to_array(c_mv_num_with_null_and_empty_row)) AS u(c)
   WHERE c_long IN
       (SELECT col
        FROM (
              VALUES(0),(1),(2),(999)) AS t(col))
     AND c_long NOT IN
       (SELECT col
        FROM (
              VALUES(3),(4),(999)) AS t(col)));
+---+
| c |
+---+
|   |
| 1 |
| 2 |
| 3 |
|   |
|   |
|   |
+---+
(7 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A6_B48_C5 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest
   WHERE c_long IN
       (SELECT col
        FROM (
              VALUES(0),(1),(2),(999)) AS t(col))
     AND c_long NOT IN
       (SELECT col
        FROM (
              VALUES(3),(4),(999)) AS t(col))), unnest(mv_to_array(c_mv_num_with_null_and_empty_row)) AS u(c);
+---+
| c |
+---+
|   |
| 1 |
| 2 |
| 3 |
|   |
|   |
|   |
+---+
(7 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A6_B48_C7 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest,
        unnest(mv_to_array(c_mv_num_with_null_and_empty_row)) AS u(c))
WHERE c_long IN
    (SELECT col
     FROM (
           VALUES(0),(1),(2),(999)) AS t(col))
  AND c_long NOT IN
    (SELECT col
     FROM (
           VALUES(3),(4),(999)) AS t(col));
+---+
| c |
+---+
|   |
| 1 |
| 2 |
| 3 |
|   |
|   |
|   |
+---+
(7 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A6_B48_C9 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest), unnest(mv_to_array(c_mv_num_with_null_and_empty_row)) AS u(c)
WHERE c_long IN
    (SELECT col
     FROM (
           VALUES(0),(1),(2),(999)) AS t(col))
  AND c_long NOT IN
    (SELECT col
     FROM (
           VALUES(3),(4),(999)) AS t(col));
+---+
| c |
+---+
|   |
| 1 |
| 2 |
| 3 |
|   |
|   |
|   |
+---+
(7 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A7_B1_C1 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM test_unnest,
     unnest(mv_to_array(c_mv_all_null_and_empty_val)) AS u(c)
WHERE c='1';
+---+
| c |
+---+
+---+
(0 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A7_B1_C3 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest,
        unnest(mv_to_array(c_mv_all_null_and_empty_val)) AS u(c)
   WHERE c='1');
+---+
| c |
+---+
+---+
(0 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A7_B1_C5 TYPE: NEGATIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest
   WHERE c='1'), unnest(mv_to_array(c_mv_all_null_and_empty_val)) AS u(c);
QueryInterruptedException
!error

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A7_B1_C7 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest,
        unnest(mv_to_array(c_mv_all_null_and_empty_val)) AS u(c))
WHERE c='1';
+---+
| c |
+---+
+---+
(0 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A7_B1_C9 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest), unnest(mv_to_array(c_mv_all_null_and_empty_val)) AS u(c)
WHERE c='1';
+---+
| c |
+---+
+---+
(0 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A7_B2_C1 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM test_unnest,
     unnest(mv_to_array(c_mv_all_null_and_empty_val)) AS u(c)
WHERE c<>'1';
+---+
| c |
+---+
|   |
|   |
|   |
|   |
|   |
|   |
|   |
|   |
|   |
|   |
+---+
(10 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A7_B2_C3 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest,
        unnest(mv_to_array(c_mv_all_null_and_empty_val)) AS u(c)
   WHERE c<>'1');
+---+
| c |
+---+
|   |
|   |
|   |
|   |
|   |
|   |
|   |
|   |
|   |
|   |
+---+
(10 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A7_B2_C5 TYPE: NEGATIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest
   WHERE c<>'1'), unnest(mv_to_array(c_mv_all_null_and_empty_val)) AS u(c);
QueryInterruptedException
!error

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A7_B2_C7 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest,
        unnest(mv_to_array(c_mv_all_null_and_empty_val)) AS u(c))
WHERE c<>'1';
+---+
| c |
+---+
|   |
|   |
|   |
|   |
|   |
|   |
|   |
|   |
|   |
|   |
+---+
(10 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A7_B2_C9 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest), unnest(mv_to_array(c_mv_all_null_and_empty_val)) AS u(c)
WHERE c<>'1';
+---+
| c |
+---+
|   |
|   |
|   |
|   |
|   |
|   |
|   |
|   |
|   |
|   |
+---+
(10 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A7_B3_C1 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM test_unnest,
     unnest(mv_to_array(c_mv_all_null_and_empty_val)) AS u(c)
WHERE c>'1';
+---+
| c |
+---+
+---+
(0 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A7_B3_C3 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest,
        unnest(mv_to_array(c_mv_all_null_and_empty_val)) AS u(c)
   WHERE c>'1');
+---+
| c |
+---+
+---+
(0 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A7_B3_C5 TYPE: NEGATIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest
   WHERE c>'1'), unnest(mv_to_array(c_mv_all_null_and_empty_val)) AS u(c);
QueryInterruptedException
!error

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A7_B3_C7 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest,
        unnest(mv_to_array(c_mv_all_null_and_empty_val)) AS u(c))
WHERE c>'1';
+---+
| c |
+---+
+---+
(0 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A7_B3_C9 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest), unnest(mv_to_array(c_mv_all_null_and_empty_val)) AS u(c)
WHERE c>'1';
+---+
| c |
+---+
+---+
(0 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A7_B4_C1 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM test_unnest,
     unnest(mv_to_array(c_mv_all_null_and_empty_val)) AS u(c)
WHERE c>='1';
+---+
| c |
+---+
+---+
(0 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A7_B4_C3 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest,
        unnest(mv_to_array(c_mv_all_null_and_empty_val)) AS u(c)
   WHERE c>='1');
+---+
| c |
+---+
+---+
(0 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A7_B4_C5 TYPE: NEGATIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest
   WHERE c>='1'), unnest(mv_to_array(c_mv_all_null_and_empty_val)) AS u(c);
QueryInterruptedException
!error

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A7_B4_C7 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest,
        unnest(mv_to_array(c_mv_all_null_and_empty_val)) AS u(c))
WHERE c>='1';
+---+
| c |
+---+
+---+
(0 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A7_B4_C9 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest), unnest(mv_to_array(c_mv_all_null_and_empty_val)) AS u(c)
WHERE c>='1';
+---+
| c |
+---+
+---+
(0 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A7_B5_C1 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM test_unnest,
     unnest(mv_to_array(c_mv_all_null_and_empty_val)) AS u(c)
WHERE c<'1';
+---+
| c |
+---+
|   |
|   |
|   |
|   |
|   |
|   |
|   |
|   |
|   |
|   |
+---+
(10 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A7_B5_C3 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest,
        unnest(mv_to_array(c_mv_all_null_and_empty_val)) AS u(c)
   WHERE c<'1');
+---+
| c |
+---+
|   |
|   |
|   |
|   |
|   |
|   |
|   |
|   |
|   |
|   |
+---+
(10 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A7_B5_C5 TYPE: NEGATIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest
   WHERE c<'1'), unnest(mv_to_array(c_mv_all_null_and_empty_val)) AS u(c);
QueryInterruptedException
!error

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A7_B5_C7 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest,
        unnest(mv_to_array(c_mv_all_null_and_empty_val)) AS u(c))
WHERE c<'1';
+---+
| c |
+---+
|   |
|   |
|   |
|   |
|   |
|   |
|   |
|   |
|   |
|   |
+---+
(10 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A7_B5_C9 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest), unnest(mv_to_array(c_mv_all_null_and_empty_val)) AS u(c)
WHERE c<'1';
+---+
| c |
+---+
|   |
|   |
|   |
|   |
|   |
|   |
|   |
|   |
|   |
|   |
+---+
(10 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A7_B6_C1 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM test_unnest,
     unnest(mv_to_array(c_mv_all_null_and_empty_val)) AS u(c)
WHERE c<='1';
+---+
| c |
+---+
|   |
|   |
|   |
|   |
|   |
|   |
|   |
|   |
|   |
|   |
+---+
(10 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A7_B6_C3 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest,
        unnest(mv_to_array(c_mv_all_null_and_empty_val)) AS u(c)
   WHERE c<='1');
+---+
| c |
+---+
|   |
|   |
|   |
|   |
|   |
|   |
|   |
|   |
|   |
|   |
+---+
(10 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A7_B6_C5 TYPE: NEGATIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest
   WHERE c<='1'), unnest(mv_to_array(c_mv_all_null_and_empty_val)) AS u(c);
QueryInterruptedException
!error

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A7_B6_C7 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest,
        unnest(mv_to_array(c_mv_all_null_and_empty_val)) AS u(c))
WHERE c<='1';
+---+
| c |
+---+
|   |
|   |
|   |
|   |
|   |
|   |
|   |
|   |
|   |
|   |
+---+
(10 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A7_B6_C9 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest), unnest(mv_to_array(c_mv_all_null_and_empty_val)) AS u(c)
WHERE c<='1';
+---+
| c |
+---+
|   |
|   |
|   |
|   |
|   |
|   |
|   |
|   |
|   |
|   |
+---+
(10 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A7_B7_C1 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM test_unnest,
     unnest(mv_to_array(c_mv_all_null_and_empty_val)) AS u(c)
WHERE (NOT c<>''
       OR NOT c<>'my_null'
       OR NOT c<>'my_empty'
       OR NOT c<>'1'
       OR NOT c<>'-1'
       OR NOT c<>'0'
       OR NOT c<>'999'
       OR NOT c<>999)
  AND (NOT c='[2]'
       OR NOT c='[3, [4, 5]]'
       OR NOT c='2'
       OR NOT c='3'
       OR NOT c='999'
       OR NOT c=999);
+---+
| c |
+---+
|   |
|   |
|   |
|   |
|   |
|   |
|   |
|   |
|   |
|   |
+---+
(10 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A7_B7_C3 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest,
        unnest(mv_to_array(c_mv_all_null_and_empty_val)) AS u(c)
   WHERE (NOT c<>''
          OR NOT c<>'my_null'
          OR NOT c<>'my_empty'
          OR NOT c<>'1'
          OR NOT c<>'-1'
          OR NOT c<>'0'
          OR NOT c<>'999'
          OR NOT c<>999)
     AND (NOT c='[2]'
          OR NOT c='[3, [4, 5]]'
          OR NOT c='2'
          OR NOT c='3'
          OR NOT c='999'
          OR NOT c=999));
+---+
| c |
+---+
|   |
|   |
|   |
|   |
|   |
|   |
|   |
|   |
|   |
|   |
+---+
(10 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A7_B7_C5 TYPE: NEGATIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest
   WHERE (NOT c<>''
          OR NOT c<>'my_null'
          OR NOT c<>'my_empty'
          OR NOT c<>'1'
          OR NOT c<>'-1'
          OR NOT c<>'0'
          OR NOT c<>'999'
          OR NOT c<>999)
     AND (NOT c='[2]'
          OR NOT c='[3, [4, 5]]'
          OR NOT c='2'
          OR NOT c='3'
          OR NOT c='999'
          OR NOT c=999)), unnest(mv_to_array(c_mv_all_null_and_empty_val)) AS u(c);
QueryInterruptedException
!error

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A7_B7_C7 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest,
        unnest(mv_to_array(c_mv_all_null_and_empty_val)) AS u(c))
WHERE (NOT c<>''
       OR NOT c<>'my_null'
       OR NOT c<>'my_empty'
       OR NOT c<>'1'
       OR NOT c<>'-1'
       OR NOT c<>'0'
       OR NOT c<>'999'
       OR NOT c<>999)
  AND (NOT c='[2]'
       OR NOT c='[3, [4, 5]]'
       OR NOT c='2'
       OR NOT c='3'
       OR NOT c='999'
       OR NOT c=999);
+---+
| c |
+---+
|   |
|   |
|   |
|   |
|   |
|   |
|   |
|   |
|   |
|   |
+---+
(10 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A7_B7_C9 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest), unnest(mv_to_array(c_mv_all_null_and_empty_val)) AS u(c)
WHERE (NOT c<>''
       OR NOT c<>'my_null'
       OR NOT c<>'my_empty'
       OR NOT c<>'1'
       OR NOT c<>'-1'
       OR NOT c<>'0'
       OR NOT c<>'999'
       OR NOT c<>999)
  AND (NOT c='[2]'
       OR NOT c='[3, [4, 5]]'
       OR NOT c='2'
       OR NOT c='3'
       OR NOT c='999'
       OR NOT c=999);
+---+
| c |
+---+
|   |
|   |
|   |
|   |
|   |
|   |
|   |
|   |
|   |
|   |
+---+
(10 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A7_B8_C1 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM test_unnest,
     unnest(mv_to_array(c_mv_all_null_and_empty_val)) AS u(c)
WHERE (c=''
       OR c='my_null'
       OR c='my_empty'
       OR c='1'
       OR c='-1'
       OR c='0'
       OR c='999'
       OR c=999)
  AND NOT c='[2]'
  AND NOT c='[3, [4, 5]]'
  AND NOT c='2'
  AND NOT c='3'
  AND NOT c='999'
  AND NOT c=999;
+---+
| c |
+---+
|   |
|   |
|   |
|   |
|   |
|   |
|   |
|   |
|   |
|   |
+---+
(10 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A7_B8_C3 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest,
        unnest(mv_to_array(c_mv_all_null_and_empty_val)) AS u(c)
   WHERE (c=''
          OR c='my_null'
          OR c='my_empty'
          OR c='1'
          OR c='-1'
          OR c='0'
          OR c='999'
          OR c=999)
     AND NOT c='[2]'
     AND NOT c='[3, [4, 5]]'
     AND NOT c='2'
     AND NOT c='3'
     AND NOT c='999'
     AND NOT c=999);
+---+
| c |
+---+
|   |
|   |
|   |
|   |
|   |
|   |
|   |
|   |
|   |
|   |
+---+
(10 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A7_B8_C5 TYPE: NEGATIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest
   WHERE (c=''
          OR c='my_null'
          OR c='my_empty'
          OR c='1'
          OR c='-1'
          OR c='0'
          OR c='999'
          OR c=999)
     AND NOT c='[2]'
     AND NOT c='[3, [4, 5]]'
     AND NOT c='2'
     AND NOT c='3'
     AND NOT c='999'
     AND NOT c=999), unnest(mv_to_array(c_mv_all_null_and_empty_val)) AS u(c);
QueryInterruptedException
!error

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A7_B8_C7 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest,
        unnest(mv_to_array(c_mv_all_null_and_empty_val)) AS u(c))
WHERE (c=''
       OR c='my_null'
       OR c='my_empty'
       OR c='1'
       OR c='-1'
       OR c='0'
       OR c='999'
       OR c=999)
  AND NOT c='[2]'
  AND NOT c='[3, [4, 5]]'
  AND NOT c='2'
  AND NOT c='3'
  AND NOT c='999'
  AND NOT c=999;
+---+
| c |
+---+
|   |
|   |
|   |
|   |
|   |
|   |
|   |
|   |
|   |
|   |
+---+
(10 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A7_B8_C9 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest), unnest(mv_to_array(c_mv_all_null_and_empty_val)) AS u(c)
WHERE (c=''
       OR c='my_null'
       OR c='my_empty'
       OR c='1'
       OR c='-1'
       OR c='0'
       OR c='999'
       OR c=999)
  AND NOT c='[2]'
  AND NOT c='[3, [4, 5]]'
  AND NOT c='2'
  AND NOT c='3'
  AND NOT c='999'
  AND NOT c=999;
+---+
| c |
+---+
|   |
|   |
|   |
|   |
|   |
|   |
|   |
|   |
|   |
|   |
+---+
(10 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A7_B9_C1 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM test_unnest,
     unnest(mv_to_array(c_mv_all_null_and_empty_val)) AS u(c)
WHERE c IS NULL;
+---+
| c |
+---+
|   |
|   |
|   |
|   |
|   |
|   |
|   |
|   |
|   |
|   |
|   |
|   |
|   |
|   |
|   |
+---+
(15 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A7_B9_C3 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest,
        unnest(mv_to_array(c_mv_all_null_and_empty_val)) AS u(c)
   WHERE c IS NULL);
+---+
| c |
+---+
|   |
|   |
|   |
|   |
|   |
|   |
|   |
|   |
|   |
|   |
|   |
|   |
|   |
|   |
|   |
+---+
(15 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A7_B9_C5 TYPE: NEGATIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest
   WHERE c IS NULL), unnest(mv_to_array(c_mv_all_null_and_empty_val)) AS u(c);
QueryInterruptedException
!error

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A7_B9_C7 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest,
        unnest(mv_to_array(c_mv_all_null_and_empty_val)) AS u(c))
WHERE c IS NULL;
+---+
| c |
+---+
|   |
|   |
|   |
|   |
|   |
|   |
|   |
|   |
|   |
|   |
|   |
|   |
|   |
|   |
|   |
+---+
(15 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A7_B9_C9 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest), unnest(mv_to_array(c_mv_all_null_and_empty_val)) AS u(c)
WHERE c IS NULL;
+---+
| c |
+---+
|   |
|   |
|   |
|   |
|   |
|   |
|   |
|   |
|   |
|   |
|   |
|   |
|   |
|   |
|   |
+---+
(15 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A7_B10_C1 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM test_unnest,
     unnest(mv_to_array(c_mv_all_null_and_empty_val)) AS u(c)
WHERE c IS NOT NULL;
+---+
| c |
+---+
|   |
|   |
|   |
|   |
|   |
|   |
|   |
|   |
|   |
|   |
+---+
(10 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A7_B10_C3 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest,
        unnest(mv_to_array(c_mv_all_null_and_empty_val)) AS u(c)
   WHERE c IS NOT NULL);
+---+
| c |
+---+
|   |
|   |
|   |
|   |
|   |
|   |
|   |
|   |
|   |
|   |
+---+
(10 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A7_B10_C5 TYPE: NEGATIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest
   WHERE c IS NOT NULL), unnest(mv_to_array(c_mv_all_null_and_empty_val)) AS u(c);
QueryInterruptedException
!error

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A7_B10_C7 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest,
        unnest(mv_to_array(c_mv_all_null_and_empty_val)) AS u(c))
WHERE c IS NOT NULL;
+---+
| c |
+---+
|   |
|   |
|   |
|   |
|   |
|   |
|   |
|   |
|   |
|   |
+---+
(10 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A7_B10_C9 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest), unnest(mv_to_array(c_mv_all_null_and_empty_val)) AS u(c)
WHERE c IS NOT NULL;
+---+
| c |
+---+
|   |
|   |
|   |
|   |
|   |
|   |
|   |
|   |
|   |
|   |
+---+
(10 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A7_B11_C1 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM test_unnest,
     unnest(mv_to_array(c_mv_all_null_and_empty_val)) AS u(c)
WHERE c IN ('',
            'my_null',
            'my_empty',
            '1',
            '-1',
            '0',
            '999',
            999) IS TRUE
  AND c IN ('[2]',
            '[3, [4, 5]]',
            '2',
            '3',
            '999',
            999) IS NOT TRUE;
+---+
| c |
+---+
|   |
|   |
|   |
|   |
|   |
|   |
|   |
|   |
|   |
|   |
+---+
(10 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A7_B11_C3 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest,
        unnest(mv_to_array(c_mv_all_null_and_empty_val)) AS u(c)
   WHERE c IN ('',
               'my_null',
               'my_empty',
               '1',
               '-1',
               '0',
               '999',
               999) IS TRUE
     AND c IN ('[2]',
               '[3, [4, 5]]',
               '2',
               '3',
               '999',
               999) IS NOT TRUE);
+---+
| c |
+---+
|   |
|   |
|   |
|   |
|   |
|   |
|   |
|   |
|   |
|   |
+---+
(10 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A7_B11_C5 TYPE: NEGATIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest
   WHERE c IN ('',
               'my_null',
               'my_empty',
               '1',
               '-1',
               '0',
               '999',
               999) IS TRUE
     AND c IN ('[2]',
               '[3, [4, 5]]',
               '2',
               '3',
               '999',
               999) IS NOT TRUE), unnest(mv_to_array(c_mv_all_null_and_empty_val)) AS u(c);
QueryInterruptedException
!error

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A7_B11_C7 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest,
        unnest(mv_to_array(c_mv_all_null_and_empty_val)) AS u(c))
WHERE c IN ('',
            'my_null',
            'my_empty',
            '1',
            '-1',
            '0',
            '999',
            999) IS TRUE
  AND c IN ('[2]',
            '[3, [4, 5]]',
            '2',
            '3',
            '999',
            999) IS NOT TRUE;
+---+
| c |
+---+
|   |
|   |
|   |
|   |
|   |
|   |
|   |
|   |
|   |
|   |
+---+
(10 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A7_B11_C9 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest), unnest(mv_to_array(c_mv_all_null_and_empty_val)) AS u(c)
WHERE c IN ('',
            'my_null',
            'my_empty',
            '1',
            '-1',
            '0',
            '999',
            999) IS TRUE
  AND c IN ('[2]',
            '[3, [4, 5]]',
            '2',
            '3',
            '999',
            999) IS NOT TRUE;
+---+
| c |
+---+
|   |
|   |
|   |
|   |
|   |
|   |
|   |
|   |
|   |
|   |
+---+
(10 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A7_B12_C1 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM test_unnest,
     unnest(mv_to_array(c_mv_all_null_and_empty_val)) AS u(c)
WHERE c IN ('',
            'my_null',
            'my_empty',
            '1',
            '-1',
            '0',
            '999',
            999) IS NOT FALSE
  AND c IN ('[2]',
            '[3, [4, 5]]',
            '2',
            '3',
            '999',
            999) IS FALSE;
+---+
| c |
+---+
|   |
|   |
|   |
|   |
|   |
|   |
|   |
|   |
|   |
|   |
+---+
(10 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A7_B12_C3 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest,
        unnest(mv_to_array(c_mv_all_null_and_empty_val)) AS u(c)
   WHERE c IN ('',
               'my_null',
               'my_empty',
               '1',
               '-1',
               '0',
               '999',
               999) IS NOT FALSE
     AND c IN ('[2]',
               '[3, [4, 5]]',
               '2',
               '3',
               '999',
               999) IS FALSE);
+---+
| c |
+---+
|   |
|   |
|   |
|   |
|   |
|   |
|   |
|   |
|   |
|   |
+---+
(10 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A7_B12_C5 TYPE: NEGATIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest
   WHERE c IN ('',
               'my_null',
               'my_empty',
               '1',
               '-1',
               '0',
               '999',
               999) IS NOT FALSE
     AND c IN ('[2]',
               '[3, [4, 5]]',
               '2',
               '3',
               '999',
               999) IS FALSE), unnest(mv_to_array(c_mv_all_null_and_empty_val)) AS u(c);
QueryInterruptedException
!error

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A7_B12_C7 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest,
        unnest(mv_to_array(c_mv_all_null_and_empty_val)) AS u(c))
WHERE c IN ('',
            'my_null',
            'my_empty',
            '1',
            '-1',
            '0',
            '999',
            999) IS NOT FALSE
  AND c IN ('[2]',
            '[3, [4, 5]]',
            '2',
            '3',
            '999',
            999) IS FALSE;
+---+
| c |
+---+
|   |
|   |
|   |
|   |
|   |
|   |
|   |
|   |
|   |
|   |
+---+
(10 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A7_B12_C9 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest), unnest(mv_to_array(c_mv_all_null_and_empty_val)) AS u(c)
WHERE c IN ('',
            'my_null',
            'my_empty',
            '1',
            '-1',
            '0',
            '999',
            999) IS NOT FALSE
  AND c IN ('[2]',
            '[3, [4, 5]]',
            '2',
            '3',
            '999',
            999) IS FALSE;
+---+
| c |
+---+
|   |
|   |
|   |
|   |
|   |
|   |
|   |
|   |
|   |
|   |
+---+
(10 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A7_B13_C1 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM test_unnest,
     unnest(mv_to_array(c_mv_all_null_and_empty_val)) AS u(c)
WHERE (c BETWEEN '1' AND '2')
  AND (c NOT BETWEEN '3' AND '4');
+---+
| c |
+---+
+---+
(0 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A7_B13_C3 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest,
        unnest(mv_to_array(c_mv_all_null_and_empty_val)) AS u(c)
   WHERE (c BETWEEN '1' AND '2')
     AND (c NOT BETWEEN '3' AND '4'));
+---+
| c |
+---+
+---+
(0 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A7_B13_C5 TYPE: NEGATIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest
   WHERE (c BETWEEN '1' AND '2')
     AND (c NOT BETWEEN '3' AND '4')), unnest(mv_to_array(c_mv_all_null_and_empty_val)) AS u(c);
QueryInterruptedException
!error

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A7_B13_C7 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest,
        unnest(mv_to_array(c_mv_all_null_and_empty_val)) AS u(c))
WHERE (c BETWEEN '1' AND '2')
  AND (c NOT BETWEEN '3' AND '4');
+---+
| c |
+---+
+---+
(0 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A7_B13_C9 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest), unnest(mv_to_array(c_mv_all_null_and_empty_val)) AS u(c)
WHERE (c BETWEEN '1' AND '2')
  AND (c NOT BETWEEN '3' AND '4');
+---+
| c |
+---+
+---+
(0 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A7_B14_C1 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM test_unnest,
     unnest(mv_to_array(c_mv_all_null_and_empty_val)) AS u(c)
WHERE (c like '1%')
  AND (c not like '3%');
+---+
| c |
+---+
+---+
(0 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A7_B14_C3 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest,
        unnest(mv_to_array(c_mv_all_null_and_empty_val)) AS u(c)
   WHERE (c like '1%')
     AND (c not like '3%'));
+---+
| c |
+---+
+---+
(0 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A7_B14_C5 TYPE: NEGATIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest
   WHERE (c like '1%')
     AND (c not like '3%')), unnest(mv_to_array(c_mv_all_null_and_empty_val)) AS u(c);
QueryInterruptedException
!error

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A7_B14_C7 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest,
        unnest(mv_to_array(c_mv_all_null_and_empty_val)) AS u(c))
WHERE (c like '1%')
  AND (c not like '3%');
+---+
| c |
+---+
+---+
(0 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A7_B14_C9 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest), unnest(mv_to_array(c_mv_all_null_and_empty_val)) AS u(c)
WHERE (c like '1%')
  AND (c not like '3%');
+---+
| c |
+---+
+---+
(0 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A7_B15_C1 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM test_unnest,
     unnest(mv_to_array(c_mv_all_null_and_empty_val)) AS u(c)
WHERE c IN ('',
            'my_null',
            'my_empty',
            '1',
            '-1',
            '0',
            '999',
            999)
  AND c NOT IN ('[2]',
                '[3, [4, 5]]',
                '2',
                '3',
                '999',
                999);
+---+
| c |
+---+
|   |
|   |
|   |
|   |
|   |
|   |
|   |
|   |
|   |
|   |
+---+
(10 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A7_B15_C3 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest,
        unnest(mv_to_array(c_mv_all_null_and_empty_val)) AS u(c)
   WHERE c IN ('',
               'my_null',
               'my_empty',
               '1',
               '-1',
               '0',
               '999',
               999)
     AND c NOT IN ('[2]',
                   '[3, [4, 5]]',
                   '2',
                   '3',
                   '999',
                   999));
+---+
| c |
+---+
|   |
|   |
|   |
|   |
|   |
|   |
|   |
|   |
|   |
|   |
+---+
(10 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A7_B15_C5 TYPE: NEGATIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest
   WHERE c IN ('',
               'my_null',
               'my_empty',
               '1',
               '-1',
               '0',
               '999',
               999)
     AND c NOT IN ('[2]',
                   '[3, [4, 5]]',
                   '2',
                   '3',
                   '999',
                   999)), unnest(mv_to_array(c_mv_all_null_and_empty_val)) AS u(c);
QueryInterruptedException
!error

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A7_B15_C7 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest,
        unnest(mv_to_array(c_mv_all_null_and_empty_val)) AS u(c))
WHERE c IN ('',
            'my_null',
            'my_empty',
            '1',
            '-1',
            '0',
            '999',
            999)
  AND c NOT IN ('[2]',
                '[3, [4, 5]]',
                '2',
                '3',
                '999',
                999);
+---+
| c |
+---+
|   |
|   |
|   |
|   |
|   |
|   |
|   |
|   |
|   |
|   |
+---+
(10 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A7_B15_C9 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest), unnest(mv_to_array(c_mv_all_null_and_empty_val)) AS u(c)
WHERE c IN ('',
            'my_null',
            'my_empty',
            '1',
            '-1',
            '0',
            '999',
            999)
  AND c NOT IN ('[2]',
                '[3, [4, 5]]',
                '2',
                '3',
                '999',
                999);
+---+
| c |
+---+
|   |
|   |
|   |
|   |
|   |
|   |
|   |
|   |
|   |
|   |
+---+
(10 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A7_B16_C1 TYPE: NEGATIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM test_unnest,
     unnest(mv_to_array(c_mv_all_null_and_empty_val)) AS u(c)
WHERE c IN
    (SELECT col
     FROM (
           VALUES(''),('my_null'),('my_empty'),('1'),('-1'),('0'),('999')) AS t(col))
  AND c NOT IN
    (SELECT col
     FROM (
           VALUES('[2]'),('[3, [4, 5]]'),('2'),('3'),('999')) AS t(col));
Unhandled Query Planning Failure
!error

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A7_B16_C3 TYPE: NEGATIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest,
        unnest(mv_to_array(c_mv_all_null_and_empty_val)) AS u(c)
   WHERE c IN
       (SELECT col
        FROM (
              VALUES(''),('my_null'),('my_empty'),('1'),('-1'),('0'),('999')) AS t(col))
     AND c NOT IN
       (SELECT col
        FROM (
              VALUES('[2]'),('[3, [4, 5]]'),('2'),('3'),('999')) AS t(col)));
Unhandled Query Planning Failure
!error

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A7_B16_C5 TYPE: NEGATIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest
   WHERE c IN
       (SELECT col
        FROM (
              VALUES(''),('my_null'),('my_empty'),('1'),('-1'),('0'),('999')) AS t(col))
     AND c NOT IN
       (SELECT col
        FROM (
              VALUES('[2]'),('[3, [4, 5]]'),('2'),('3'),('999')) AS t(col))), unnest(mv_to_array(c_mv_all_null_and_empty_val)) AS u(c);
QueryInterruptedException
!error

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A7_B16_C7 TYPE: NEGATIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest,
        unnest(mv_to_array(c_mv_all_null_and_empty_val)) AS u(c))
WHERE c IN
    (SELECT col
     FROM (
           VALUES(''),('my_null'),('my_empty'),('1'),('-1'),('0'),('999')) AS t(col))
  AND c NOT IN
    (SELECT col
     FROM (
           VALUES('[2]'),('[3, [4, 5]]'),('2'),('3'),('999')) AS t(col));
Unhandled Query Planning Failure
!error

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A7_B16_C9 TYPE: NEGATIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest), unnest(mv_to_array(c_mv_all_null_and_empty_val)) AS u(c)
WHERE c IN
    (SELECT col
     FROM (
           VALUES(''),('my_null'),('my_empty'),('1'),('-1'),('0'),('999')) AS t(col))
  AND c NOT IN
    (SELECT col
     FROM (
           VALUES('[2]'),('[3, [4, 5]]'),('2'),('3'),('999')) AS t(col));
Unhandled Query Planning Failure
!error

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A7_B17_C1 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM test_unnest,
     unnest(mv_to_array(c_mv_all_null_and_empty_val)) AS u(c)
WHERE c_long=1
  AND c='1';
+---+
| c |
+---+
+---+
(0 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A7_B17_C3 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest,
        unnest(mv_to_array(c_mv_all_null_and_empty_val)) AS u(c)
   WHERE c_long=1
     AND c='1');
+---+
| c |
+---+
+---+
(0 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A7_B17_C5 TYPE: NEGATIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest
   WHERE c_long=1
     AND c='1'), unnest(mv_to_array(c_mv_all_null_and_empty_val)) AS u(c);
QueryInterruptedException
!error

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A7_B17_C7 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest,
        unnest(mv_to_array(c_mv_all_null_and_empty_val)) AS u(c))
WHERE c_long=1
  AND c='1';
+---+
| c |
+---+
+---+
(0 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A7_B17_C9 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest), unnest(mv_to_array(c_mv_all_null_and_empty_val)) AS u(c)
WHERE c_long=1
  AND c='1';
+---+
| c |
+---+
+---+
(0 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A7_B18_C1 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM test_unnest,
     unnest(mv_to_array(c_mv_all_null_and_empty_val)) AS u(c)
WHERE c_long<>1
  AND c<>'1';
+---+
| c |
+---+
|   |
|   |
|   |
|   |
|   |
|   |
|   |
|   |
+---+
(8 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A7_B18_C3 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest,
        unnest(mv_to_array(c_mv_all_null_and_empty_val)) AS u(c)
   WHERE c_long<>1
     AND c<>'1');
+---+
| c |
+---+
|   |
|   |
|   |
|   |
|   |
|   |
|   |
|   |
+---+
(8 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A7_B18_C5 TYPE: NEGATIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest
   WHERE c_long<>1
     AND c<>'1'), unnest(mv_to_array(c_mv_all_null_and_empty_val)) AS u(c);
QueryInterruptedException
!error

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A7_B18_C7 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest,
        unnest(mv_to_array(c_mv_all_null_and_empty_val)) AS u(c))
WHERE c_long<>1
  AND c<>'1';
+---+
| c |
+---+
|   |
|   |
|   |
|   |
|   |
|   |
|   |
|   |
+---+
(8 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A7_B18_C9 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest), unnest(mv_to_array(c_mv_all_null_and_empty_val)) AS u(c)
WHERE c_long<>1
  AND c<>'1';
+---+
| c |
+---+
|   |
|   |
|   |
|   |
|   |
|   |
|   |
|   |
+---+
(8 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A7_B19_C1 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM test_unnest,
     unnest(mv_to_array(c_mv_all_null_and_empty_val)) AS u(c)
WHERE c_long>1
  AND c>'1';
+---+
| c |
+---+
+---+
(0 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A7_B19_C3 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest,
        unnest(mv_to_array(c_mv_all_null_and_empty_val)) AS u(c)
   WHERE c_long>1
     AND c>'1');
+---+
| c |
+---+
+---+
(0 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A7_B19_C5 TYPE: NEGATIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest
   WHERE c_long>1
     AND c>'1'), unnest(mv_to_array(c_mv_all_null_and_empty_val)) AS u(c);
QueryInterruptedException
!error

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A7_B19_C7 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest,
        unnest(mv_to_array(c_mv_all_null_and_empty_val)) AS u(c))
WHERE c_long>1
  AND c>'1';
+---+
| c |
+---+
+---+
(0 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A7_B19_C9 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest), unnest(mv_to_array(c_mv_all_null_and_empty_val)) AS u(c)
WHERE c_long>1
  AND c>'1';
+---+
| c |
+---+
+---+
(0 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A7_B20_C1 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM test_unnest,
     unnest(mv_to_array(c_mv_all_null_and_empty_val)) AS u(c)
WHERE c_long>=1
  AND c>='1';
+---+
| c |
+---+
+---+
(0 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A7_B20_C3 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest,
        unnest(mv_to_array(c_mv_all_null_and_empty_val)) AS u(c)
   WHERE c_long>=1
     AND c>='1');
+---+
| c |
+---+
+---+
(0 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A7_B20_C5 TYPE: NEGATIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest
   WHERE c_long>=1
     AND c>='1'), unnest(mv_to_array(c_mv_all_null_and_empty_val)) AS u(c);
QueryInterruptedException
!error

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A7_B20_C7 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest,
        unnest(mv_to_array(c_mv_all_null_and_empty_val)) AS u(c))
WHERE c_long>=1
  AND c>='1';
+---+
| c |
+---+
+---+
(0 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A7_B20_C9 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest), unnest(mv_to_array(c_mv_all_null_and_empty_val)) AS u(c)
WHERE c_long>=1
  AND c>='1';
+---+
| c |
+---+
+---+
(0 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A7_B21_C1 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM test_unnest,
     unnest(mv_to_array(c_mv_all_null_and_empty_val)) AS u(c)
WHERE c_long<1
  AND c<'1';
+---+
| c |
+---+
|   |
|   |
+---+
(2 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A7_B21_C3 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest,
        unnest(mv_to_array(c_mv_all_null_and_empty_val)) AS u(c)
   WHERE c_long<1
     AND c<'1');
+---+
| c |
+---+
|   |
|   |
+---+
(2 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A7_B21_C5 TYPE: NEGATIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest
   WHERE c_long<1
     AND c<'1'), unnest(mv_to_array(c_mv_all_null_and_empty_val)) AS u(c);
QueryInterruptedException
!error

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A7_B21_C7 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest,
        unnest(mv_to_array(c_mv_all_null_and_empty_val)) AS u(c))
WHERE c_long<1
  AND c<'1';
+---+
| c |
+---+
|   |
|   |
+---+
(2 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A7_B21_C9 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest), unnest(mv_to_array(c_mv_all_null_and_empty_val)) AS u(c)
WHERE c_long<1
  AND c<'1';
+---+
| c |
+---+
|   |
|   |
+---+
(2 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A7_B22_C1 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM test_unnest,
     unnest(mv_to_array(c_mv_all_null_and_empty_val)) AS u(c)
WHERE c_long<=1
  AND c<='1';
+---+
| c |
+---+
|   |
|   |
|   |
|   |
+---+
(4 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A7_B22_C3 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest,
        unnest(mv_to_array(c_mv_all_null_and_empty_val)) AS u(c)
   WHERE c_long<=1
     AND c<='1');
+---+
| c |
+---+
|   |
|   |
|   |
|   |
+---+
(4 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A7_B22_C5 TYPE: NEGATIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest
   WHERE c_long<=1
     AND c<='1'), unnest(mv_to_array(c_mv_all_null_and_empty_val)) AS u(c);
QueryInterruptedException
!error

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A7_B22_C7 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest,
        unnest(mv_to_array(c_mv_all_null_and_empty_val)) AS u(c))
WHERE c_long<=1
  AND c<='1';
+---+
| c |
+---+
|   |
|   |
|   |
|   |
+---+
(4 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A7_B22_C9 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest), unnest(mv_to_array(c_mv_all_null_and_empty_val)) AS u(c)
WHERE c_long<=1
  AND c<='1';
+---+
| c |
+---+
|   |
|   |
|   |
|   |
+---+
(4 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A7_B23_C1 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM test_unnest,
     unnest(mv_to_array(c_mv_all_null_and_empty_val)) AS u(c)
WHERE NOT (c_long<>0
           AND c_long<>1
           AND c_long<>2)
  AND (NOT c<>''
       OR NOT c<>'my_null'
       OR NOT c<>'my_empty'
       OR NOT c<>'1'
       OR NOT c<>'-1'
       OR NOT c<>'0'
       OR NOT c<>'999'
       OR NOT c<>999)
  AND (NOT c='[2]'
       OR NOT c='[3, [4, 5]]'
       OR NOT c='2'
       OR NOT c='3'
       OR NOT c='999'
       OR NOT c=999);
+---+
| c |
+---+
|   |
|   |
|   |
|   |
|   |
|   |
+---+
(6 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A7_B23_C3 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest,
        unnest(mv_to_array(c_mv_all_null_and_empty_val)) AS u(c)
   WHERE NOT (c_long<>0
              AND c_long<>1
              AND c_long<>2)
     AND (NOT c<>''
          OR NOT c<>'my_null'
          OR NOT c<>'my_empty'
          OR NOT c<>'1'
          OR NOT c<>'-1'
          OR NOT c<>'0'
          OR NOT c<>'999'
          OR NOT c<>999)
     AND (NOT c='[2]'
          OR NOT c='[3, [4, 5]]'
          OR NOT c='2'
          OR NOT c='3'
          OR NOT c='999'
          OR NOT c=999));
+---+
| c |
+---+
|   |
|   |
|   |
|   |
|   |
|   |
+---+
(6 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A7_B23_C5 TYPE: NEGATIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest
   WHERE NOT (c_long<>0
              AND c_long<>1
              AND c_long<>2)
     AND (NOT c<>''
          OR NOT c<>'my_null'
          OR NOT c<>'my_empty'
          OR NOT c<>'1'
          OR NOT c<>'-1'
          OR NOT c<>'0'
          OR NOT c<>'999'
          OR NOT c<>999)
     AND (NOT c='[2]'
          OR NOT c='[3, [4, 5]]'
          OR NOT c='2'
          OR NOT c='3'
          OR NOT c='999'
          OR NOT c=999)), unnest(mv_to_array(c_mv_all_null_and_empty_val)) AS u(c);
QueryInterruptedException
!error

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A7_B23_C7 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest,
        unnest(mv_to_array(c_mv_all_null_and_empty_val)) AS u(c))
WHERE NOT (c_long<>0
           AND c_long<>1
           AND c_long<>2)
  AND (NOT c<>''
       OR NOT c<>'my_null'
       OR NOT c<>'my_empty'
       OR NOT c<>'1'
       OR NOT c<>'-1'
       OR NOT c<>'0'
       OR NOT c<>'999'
       OR NOT c<>999)
  AND (NOT c='[2]'
       OR NOT c='[3, [4, 5]]'
       OR NOT c='2'
       OR NOT c='3'
       OR NOT c='999'
       OR NOT c=999);
+---+
| c |
+---+
|   |
|   |
|   |
|   |
|   |
|   |
+---+
(6 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A7_B23_C9 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest), unnest(mv_to_array(c_mv_all_null_and_empty_val)) AS u(c)
WHERE NOT (c_long<>0
           AND c_long<>1
           AND c_long<>2)
  AND (NOT c<>''
       OR NOT c<>'my_null'
       OR NOT c<>'my_empty'
       OR NOT c<>'1'
       OR NOT c<>'-1'
       OR NOT c<>'0'
       OR NOT c<>'999'
       OR NOT c<>999)
  AND (NOT c='[2]'
       OR NOT c='[3, [4, 5]]'
       OR NOT c='2'
       OR NOT c='3'
       OR NOT c='999'
       OR NOT c=999);
+---+
| c |
+---+
|   |
|   |
|   |
|   |
|   |
|   |
+---+
(6 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A7_B24_C1 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM test_unnest,
     unnest(mv_to_array(c_mv_all_null_and_empty_val)) AS u(c)
WHERE (c_long=0
       OR c_long=1
       OR c_long=2)
  AND (c=''
       OR c='my_null'
       OR c='my_empty'
       OR c='1'
       OR c='-1'
       OR c='0'
       OR c='999'
       OR c=999)
  AND NOT c='[2]'
  AND NOT c='[3, [4, 5]]'
  AND NOT c='2'
  AND NOT c='3'
  AND NOT c='999'
  AND NOT c=999;
+---+
| c |
+---+
|   |
|   |
|   |
|   |
|   |
|   |
+---+
(6 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A7_B24_C3 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest,
        unnest(mv_to_array(c_mv_all_null_and_empty_val)) AS u(c)
   WHERE (c_long=0
          OR c_long=1
          OR c_long=2)
     AND (c=''
          OR c='my_null'
          OR c='my_empty'
          OR c='1'
          OR c='-1'
          OR c='0'
          OR c='999'
          OR c=999)
     AND NOT c='[2]'
     AND NOT c='[3, [4, 5]]'
     AND NOT c='2'
     AND NOT c='3'
     AND NOT c='999'
     AND NOT c=999);
+---+
| c |
+---+
|   |
|   |
|   |
|   |
|   |
|   |
+---+
(6 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A7_B24_C5 TYPE: NEGATIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest
   WHERE (c_long=0
          OR c_long=1
          OR c_long=2)
     AND (c=''
          OR c='my_null'
          OR c='my_empty'
          OR c='1'
          OR c='-1'
          OR c='0'
          OR c='999'
          OR c=999)
     AND NOT c='[2]'
     AND NOT c='[3, [4, 5]]'
     AND NOT c='2'
     AND NOT c='3'
     AND NOT c='999'
     AND NOT c=999), unnest(mv_to_array(c_mv_all_null_and_empty_val)) AS u(c);
QueryInterruptedException
!error

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A7_B24_C7 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest,
        unnest(mv_to_array(c_mv_all_null_and_empty_val)) AS u(c))
WHERE (c_long=0
       OR c_long=1
       OR c_long=2)
  AND (c=''
       OR c='my_null'
       OR c='my_empty'
       OR c='1'
       OR c='-1'
       OR c='0'
       OR c='999'
       OR c=999)
  AND NOT c='[2]'
  AND NOT c='[3, [4, 5]]'
  AND NOT c='2'
  AND NOT c='3'
  AND NOT c='999'
  AND NOT c=999;
+---+
| c |
+---+
|   |
|   |
|   |
|   |
|   |
|   |
+---+
(6 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A7_B24_C9 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest), unnest(mv_to_array(c_mv_all_null_and_empty_val)) AS u(c)
WHERE (c_long=0
       OR c_long=1
       OR c_long=2)
  AND (c=''
       OR c='my_null'
       OR c='my_empty'
       OR c='1'
       OR c='-1'
       OR c='0'
       OR c='999'
       OR c=999)
  AND NOT c='[2]'
  AND NOT c='[3, [4, 5]]'
  AND NOT c='2'
  AND NOT c='3'
  AND NOT c='999'
  AND NOT c=999;
+---+
| c |
+---+
|   |
|   |
|   |
|   |
|   |
|   |
+---+
(6 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A7_B25_C1 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM test_unnest,
     unnest(mv_to_array(c_mv_all_null_and_empty_val)) AS u(c)
WHERE c_str IS NULL
  AND c IS NULL;
+---+
| c |
+---+
|   |
|   |
|   |
+---+
(3 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A7_B25_C3 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest,
        unnest(mv_to_array(c_mv_all_null_and_empty_val)) AS u(c)
   WHERE c_str IS NULL
     AND c IS NULL);
+---+
| c |
+---+
|   |
|   |
|   |
+---+
(3 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A7_B25_C5 TYPE: NEGATIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest
   WHERE c_str IS NULL
     AND c IS NULL), unnest(mv_to_array(c_mv_all_null_and_empty_val)) AS u(c);
QueryInterruptedException
!error

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A7_B25_C7 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest,
        unnest(mv_to_array(c_mv_all_null_and_empty_val)) AS u(c))
WHERE c_str IS NULL
  AND c IS NULL;
+---+
| c |
+---+
|   |
|   |
|   |
+---+
(3 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A7_B25_C9 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest), unnest(mv_to_array(c_mv_all_null_and_empty_val)) AS u(c)
WHERE c_str IS NULL
  AND c IS NULL;
+---+
| c |
+---+
|   |
|   |
|   |
+---+
(3 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A7_B26_C1 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM test_unnest,
     unnest(mv_to_array(c_mv_all_null_and_empty_val)) AS u(c)
WHERE c_str IS NOT NULL
  AND c IS NOT NULL;
+---+
| c |
+---+
|   |
|   |
|   |
|   |
|   |
|   |
|   |
|   |
+---+
(8 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A7_B26_C3 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest,
        unnest(mv_to_array(c_mv_all_null_and_empty_val)) AS u(c)
   WHERE c_str IS NOT NULL
     AND c IS NOT NULL);
+---+
| c |
+---+
|   |
|   |
|   |
|   |
|   |
|   |
|   |
|   |
+---+
(8 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A7_B26_C5 TYPE: NEGATIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest
   WHERE c_str IS NOT NULL
     AND c IS NOT NULL), unnest(mv_to_array(c_mv_all_null_and_empty_val)) AS u(c);
QueryInterruptedException
!error

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A7_B26_C7 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest,
        unnest(mv_to_array(c_mv_all_null_and_empty_val)) AS u(c))
WHERE c_str IS NOT NULL
  AND c IS NOT NULL;
+---+
| c |
+---+
|   |
|   |
|   |
|   |
|   |
|   |
|   |
|   |
+---+
(8 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A7_B26_C9 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest), unnest(mv_to_array(c_mv_all_null_and_empty_val)) AS u(c)
WHERE c_str IS NOT NULL
  AND c IS NOT NULL;
+---+
| c |
+---+
|   |
|   |
|   |
|   |
|   |
|   |
|   |
|   |
+---+
(8 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A7_B27_C1 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM test_unnest,
     unnest(mv_to_array(c_mv_all_null_and_empty_val)) AS u(c)
WHERE c_long IN (0,
                 1,
                 2) IS TRUE
  AND c_long IN (3,
                 4) IS NOT TRUE
  AND c IN ('',
            'my_null',
            'my_empty',
            '1',
            '-1',
            '0',
            '999',
            999) IS TRUE
  AND c IN ('[2]',
            '[3, [4, 5]]',
            '2',
            '3',
            '999',
            999) IS NOT TRUE;
+---+
| c |
+---+
|   |
|   |
|   |
|   |
|   |
|   |
+---+
(6 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A7_B27_C3 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest,
        unnest(mv_to_array(c_mv_all_null_and_empty_val)) AS u(c)
   WHERE c_long IN (0,
                    1,
                    2) IS TRUE
     AND c_long IN (3,
                    4) IS NOT TRUE
     AND c IN ('',
               'my_null',
               'my_empty',
               '1',
               '-1',
               '0',
               '999',
               999) IS TRUE
     AND c IN ('[2]',
               '[3, [4, 5]]',
               '2',
               '3',
               '999',
               999) IS NOT TRUE);
+---+
| c |
+---+
|   |
|   |
|   |
|   |
|   |
|   |
+---+
(6 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A7_B27_C5 TYPE: NEGATIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest
   WHERE c_long IN (0,
                    1,
                    2) IS TRUE
     AND c_long IN (3,
                    4) IS NOT TRUE
     AND c IN ('',
               'my_null',
               'my_empty',
               '1',
               '-1',
               '0',
               '999',
               999) IS TRUE
     AND c IN ('[2]',
               '[3, [4, 5]]',
               '2',
               '3',
               '999',
               999) IS NOT TRUE), unnest(mv_to_array(c_mv_all_null_and_empty_val)) AS u(c);
QueryInterruptedException
!error

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A7_B27_C7 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest,
        unnest(mv_to_array(c_mv_all_null_and_empty_val)) AS u(c))
WHERE c_long IN (0,
                 1,
                 2) IS TRUE
  AND c_long IN (3,
                 4) IS NOT TRUE
  AND c IN ('',
            'my_null',
            'my_empty',
            '1',
            '-1',
            '0',
            '999',
            999) IS TRUE
  AND c IN ('[2]',
            '[3, [4, 5]]',
            '2',
            '3',
            '999',
            999) IS NOT TRUE;
+---+
| c |
+---+
|   |
|   |
|   |
|   |
|   |
|   |
+---+
(6 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A7_B27_C9 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest), unnest(mv_to_array(c_mv_all_null_and_empty_val)) AS u(c)
WHERE c_long IN (0,
                 1,
                 2) IS TRUE
  AND c_long IN (3,
                 4) IS NOT TRUE
  AND c IN ('',
            'my_null',
            'my_empty',
            '1',
            '-1',
            '0',
            '999',
            999) IS TRUE
  AND c IN ('[2]',
            '[3, [4, 5]]',
            '2',
            '3',
            '999',
            999) IS NOT TRUE;
+---+
| c |
+---+
|   |
|   |
|   |
|   |
|   |
|   |
+---+
(6 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A7_B28_C1 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM test_unnest,
     unnest(mv_to_array(c_mv_all_null_and_empty_val)) AS u(c)
WHERE c_long IN (0,
                 1,
                 2) IS NOT FALSE
  AND c_long IN (3,
                 4) IS FALSE
  AND c IN ('',
            'my_null',
            'my_empty',
            '1',
            '-1',
            '0',
            '999',
            999) IS NOT FALSE
  AND c IN ('[2]',
            '[3, [4, 5]]',
            '2',
            '3',
            '999',
            999) IS FALSE;
+---+
| c |
+---+
|   |
|   |
|   |
|   |
|   |
|   |
+---+
(6 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A7_B28_C3 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest,
        unnest(mv_to_array(c_mv_all_null_and_empty_val)) AS u(c)
   WHERE c_long IN (0,
                    1,
                    2) IS NOT FALSE
     AND c_long IN (3,
                    4) IS FALSE
     AND c IN ('',
               'my_null',
               'my_empty',
               '1',
               '-1',
               '0',
               '999',
               999) IS NOT FALSE
     AND c IN ('[2]',
               '[3, [4, 5]]',
               '2',
               '3',
               '999',
               999) IS FALSE);
+---+
| c |
+---+
|   |
|   |
|   |
|   |
|   |
|   |
+---+
(6 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A7_B28_C5 TYPE: NEGATIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest
   WHERE c_long IN (0,
                    1,
                    2) IS NOT FALSE
     AND c_long IN (3,
                    4) IS FALSE
     AND c IN ('',
               'my_null',
               'my_empty',
               '1',
               '-1',
               '0',
               '999',
               999) IS NOT FALSE
     AND c IN ('[2]',
               '[3, [4, 5]]',
               '2',
               '3',
               '999',
               999) IS FALSE), unnest(mv_to_array(c_mv_all_null_and_empty_val)) AS u(c);
QueryInterruptedException
!error

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A7_B28_C7 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest,
        unnest(mv_to_array(c_mv_all_null_and_empty_val)) AS u(c))
WHERE c_long IN (0,
                 1,
                 2) IS NOT FALSE
  AND c_long IN (3,
                 4) IS FALSE
  AND c IN ('',
            'my_null',
            'my_empty',
            '1',
            '-1',
            '0',
            '999',
            999) IS NOT FALSE
  AND c IN ('[2]',
            '[3, [4, 5]]',
            '2',
            '3',
            '999',
            999) IS FALSE;
+---+
| c |
+---+
|   |
|   |
|   |
|   |
|   |
|   |
+---+
(6 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A7_B28_C9 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest), unnest(mv_to_array(c_mv_all_null_and_empty_val)) AS u(c)
WHERE c_long IN (0,
                 1,
                 2) IS NOT FALSE
  AND c_long IN (3,
                 4) IS FALSE
  AND c IN ('',
            'my_null',
            'my_empty',
            '1',
            '-1',
            '0',
            '999',
            999) IS NOT FALSE
  AND c IN ('[2]',
            '[3, [4, 5]]',
            '2',
            '3',
            '999',
            999) IS FALSE;
+---+
| c |
+---+
|   |
|   |
|   |
|   |
|   |
|   |
+---+
(6 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A7_B29_C1 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM test_unnest,
     unnest(mv_to_array(c_mv_all_null_and_empty_val)) AS u(c)
WHERE (c_long BETWEEN 0 AND 2)
  AND (c_long NOT BETWEEN 3 AND 4)
  AND (c BETWEEN '1' AND '2')
  AND (c NOT BETWEEN '3' AND '4');
+---+
| c |
+---+
+---+
(0 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A7_B29_C3 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest,
        unnest(mv_to_array(c_mv_all_null_and_empty_val)) AS u(c)
   WHERE (c_long BETWEEN 0 AND 2)
     AND (c_long NOT BETWEEN 3 AND 4)
     AND (c BETWEEN '1' AND '2')
     AND (c NOT BETWEEN '3' AND '4'));
+---+
| c |
+---+
+---+
(0 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A7_B29_C5 TYPE: NEGATIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest
   WHERE (c_long BETWEEN 0 AND 2)
     AND (c_long NOT BETWEEN 3 AND 4)
     AND (c BETWEEN '1' AND '2')
     AND (c NOT BETWEEN '3' AND '4')), unnest(mv_to_array(c_mv_all_null_and_empty_val)) AS u(c);
QueryInterruptedException
!error

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A7_B29_C7 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest,
        unnest(mv_to_array(c_mv_all_null_and_empty_val)) AS u(c))
WHERE (c_long BETWEEN 0 AND 2)
  AND (c_long NOT BETWEEN 3 AND 4)
  AND (c BETWEEN '1' AND '2')
  AND (c NOT BETWEEN '3' AND '4');
+---+
| c |
+---+
+---+
(0 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A7_B29_C9 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest), unnest(mv_to_array(c_mv_all_null_and_empty_val)) AS u(c)
WHERE (c_long BETWEEN 0 AND 2)
  AND (c_long NOT BETWEEN 3 AND 4)
  AND (c BETWEEN '1' AND '2')
  AND (c NOT BETWEEN '3' AND '4');
+---+
| c |
+---+
+---+
(0 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A7_B30_C1 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM test_unnest,
     unnest(mv_to_array(c_mv_all_null_and_empty_val)) AS u(c)
WHERE (c_str like '%2')
  AND (c_str not like '%3')
  AND (c like '1%')
  AND (c not like '3%');
+---+
| c |
+---+
+---+
(0 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A7_B30_C3 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest,
        unnest(mv_to_array(c_mv_all_null_and_empty_val)) AS u(c)
   WHERE (c_str like '%2')
     AND (c_str not like '%3')
     AND (c like '1%')
     AND (c not like '3%'));
+---+
| c |
+---+
+---+
(0 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A7_B30_C5 TYPE: NEGATIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest
   WHERE (c_str like '%2')
     AND (c_str not like '%3')
     AND (c like '1%')
     AND (c not like '3%')), unnest(mv_to_array(c_mv_all_null_and_empty_val)) AS u(c);
QueryInterruptedException
!error

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A7_B30_C7 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest,
        unnest(mv_to_array(c_mv_all_null_and_empty_val)) AS u(c))
WHERE (c_str like '%2')
  AND (c_str not like '%3')
  AND (c like '1%')
  AND (c not like '3%');
+---+
| c |
+---+
+---+
(0 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A7_B30_C9 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest), unnest(mv_to_array(c_mv_all_null_and_empty_val)) AS u(c)
WHERE (c_str like '%2')
  AND (c_str not like '%3')
  AND (c like '1%')
  AND (c not like '3%');
+---+
| c |
+---+
+---+
(0 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A7_B31_C1 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM test_unnest,
     unnest(mv_to_array(c_mv_all_null_and_empty_val)) AS u(c)
WHERE c_long IN (0,
                 1,
                 2)
  AND c_long NOT IN (3,
                     4)
  AND c IN ('',
            'my_null',
            'my_empty',
            '1',
            '-1',
            '0',
            '999',
            999)
  AND c NOT IN ('[2]',
                '[3, [4, 5]]',
                '2',
                '3',
                '999',
                999);
+---+
| c |
+---+
|   |
|   |
|   |
|   |
|   |
|   |
+---+
(6 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A7_B31_C3 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest,
        unnest(mv_to_array(c_mv_all_null_and_empty_val)) AS u(c)
   WHERE c_long IN (0,
                    1,
                    2)
     AND c_long NOT IN (3,
                        4)
     AND c IN ('',
               'my_null',
               'my_empty',
               '1',
               '-1',
               '0',
               '999',
               999)
     AND c NOT IN ('[2]',
                   '[3, [4, 5]]',
                   '2',
                   '3',
                   '999',
                   999));
+---+
| c |
+---+
|   |
|   |
|   |
|   |
|   |
|   |
+---+
(6 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A7_B31_C5 TYPE: NEGATIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest
   WHERE c_long IN (0,
                    1,
                    2)
     AND c_long NOT IN (3,
                        4)
     AND c IN ('',
               'my_null',
               'my_empty',
               '1',
               '-1',
               '0',
               '999',
               999)
     AND c NOT IN ('[2]',
                   '[3, [4, 5]]',
                   '2',
                   '3',
                   '999',
                   999)), unnest(mv_to_array(c_mv_all_null_and_empty_val)) AS u(c);
QueryInterruptedException
!error

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A7_B31_C7 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest,
        unnest(mv_to_array(c_mv_all_null_and_empty_val)) AS u(c))
WHERE c_long IN (0,
                 1,
                 2)
  AND c_long NOT IN (3,
                     4)
  AND c IN ('',
            'my_null',
            'my_empty',
            '1',
            '-1',
            '0',
            '999',
            999)
  AND c NOT IN ('[2]',
                '[3, [4, 5]]',
                '2',
                '3',
                '999',
                999);
+---+
| c |
+---+
|   |
|   |
|   |
|   |
|   |
|   |
+---+
(6 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A7_B31_C9 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest), unnest(mv_to_array(c_mv_all_null_and_empty_val)) AS u(c)
WHERE c_long IN (0,
                 1,
                 2)
  AND c_long NOT IN (3,
                     4)
  AND c IN ('',
            'my_null',
            'my_empty',
            '1',
            '-1',
            '0',
            '999',
            999)
  AND c NOT IN ('[2]',
                '[3, [4, 5]]',
                '2',
                '3',
                '999',
                999);
+---+
| c |
+---+
|   |
|   |
|   |
|   |
|   |
|   |
+---+
(6 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A7_B32_C1 TYPE: NEGATIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM test_unnest,
     unnest(mv_to_array(c_mv_all_null_and_empty_val)) AS u(c)
WHERE c_long IN
    (SELECT col
     FROM (
           VALUES(0),(1),(2)) AS t(col))
  AND c_long NOT IN
    (SELECT col
     FROM (
           VALUES(3),(4)) AS t(col))
  AND c IN
    (SELECT col
     FROM (
           VALUES(''),('my_null'),('my_empty'),('1'),('-1'),('0'),('999')) AS t(col))
  AND c NOT IN
    (SELECT col
     FROM (
           VALUES('[2]'),('[3, [4, 5]]'),('2'),('3'),('999')) AS t(col));
Unhandled Query Planning Failure
!error

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A7_B32_C3 TYPE: NEGATIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest,
        unnest(mv_to_array(c_mv_all_null_and_empty_val)) AS u(c)
   WHERE c_long IN
       (SELECT col
        FROM (
              VALUES(0),(1),(2)) AS t(col))
     AND c_long NOT IN
       (SELECT col
        FROM (
              VALUES(3),(4)) AS t(col))
     AND c IN
       (SELECT col
        FROM (
              VALUES(''),('my_null'),('my_empty'),('1'),('-1'),('0'),('999')) AS t(col))
     AND c NOT IN
       (SELECT col
        FROM (
              VALUES('[2]'),('[3, [4, 5]]'),('2'),('3'),('999')) AS t(col)));
Unhandled Query Planning Failure
!error

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A7_B32_C5 TYPE: NEGATIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest
   WHERE c_long IN
       (SELECT col
        FROM (
              VALUES(0),(1),(2)) AS t(col))
     AND c_long NOT IN
       (SELECT col
        FROM (
              VALUES(3),(4)) AS t(col))
     AND c IN
       (SELECT col
        FROM (
              VALUES(''),('my_null'),('my_empty'),('1'),('-1'),('0'),('999')) AS t(col))
     AND c NOT IN
       (SELECT col
        FROM (
              VALUES('[2]'),('[3, [4, 5]]'),('2'),('3'),('999')) AS t(col))), unnest(mv_to_array(c_mv_all_null_and_empty_val)) AS u(c);
QueryInterruptedException
!error

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A7_B32_C7 TYPE: NEGATIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest,
        unnest(mv_to_array(c_mv_all_null_and_empty_val)) AS u(c))
WHERE c_long IN
    (SELECT col
     FROM (
           VALUES(0),(1),(2)) AS t(col))
  AND c_long NOT IN
    (SELECT col
     FROM (
           VALUES(3),(4)) AS t(col))
  AND c IN
    (SELECT col
     FROM (
           VALUES(''),('my_null'),('my_empty'),('1'),('-1'),('0'),('999')) AS t(col))
  AND c NOT IN
    (SELECT col
     FROM (
           VALUES('[2]'),('[3, [4, 5]]'),('2'),('3'),('999')) AS t(col));
Unhandled Query Planning Failure
!error

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A7_B32_C9 TYPE: NEGATIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest), unnest(mv_to_array(c_mv_all_null_and_empty_val)) AS u(c)
WHERE c_long IN
    (SELECT col
     FROM (
           VALUES(0),(1),(2)) AS t(col))
  AND c_long NOT IN
    (SELECT col
     FROM (
           VALUES(3),(4)) AS t(col))
  AND c IN
    (SELECT col
     FROM (
           VALUES(''),('my_null'),('my_empty'),('1'),('-1'),('0'),('999')) AS t(col))
  AND c NOT IN
    (SELECT col
     FROM (
           VALUES('[2]'),('[3, [4, 5]]'),('2'),('3'),('999')) AS t(col));
Unhandled Query Planning Failure
!error

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A7_B33_C1 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM test_unnest,
     unnest(mv_to_array(c_mv_all_null_and_empty_val)) AS u(c)
WHERE c_long=1;
+---+
| c |
+---+
|   |
|   |
|   |
|   |
|   |
+---+
(5 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A7_B33_C3 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest,
        unnest(mv_to_array(c_mv_all_null_and_empty_val)) AS u(c)
   WHERE c_long=1);
+---+
| c |
+---+
|   |
|   |
|   |
|   |
|   |
+---+
(5 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A7_B33_C5 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest
   WHERE c_long=1), unnest(mv_to_array(c_mv_all_null_and_empty_val)) AS u(c);
+---+
| c |
+---+
|   |
|   |
|   |
|   |
|   |
+---+
(5 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A7_B33_C7 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest,
        unnest(mv_to_array(c_mv_all_null_and_empty_val)) AS u(c))
WHERE c_long=1;
+---+
| c |
+---+
|   |
|   |
|   |
|   |
|   |
+---+
(5 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A7_B33_C9 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest), unnest(mv_to_array(c_mv_all_null_and_empty_val)) AS u(c)
WHERE c_long=1;
+---+
| c |
+---+
|   |
|   |
|   |
|   |
|   |
+---+
(5 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A7_B34_C1 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM test_unnest,
     unnest(mv_to_array(c_mv_all_null_and_empty_val)) AS u(c)
WHERE c_long<>1;
+---+
| c |
+---+
|   |
|   |
|   |
|   |
|   |
|   |
|   |
|   |
|   |
|   |
|   |
|   |
|   |
|   |
|   |
|   |
|   |
|   |
|   |
|   |
+---+
(20 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A7_B34_C3 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest,
        unnest(mv_to_array(c_mv_all_null_and_empty_val)) AS u(c)
   WHERE c_long<>1);
+---+
| c |
+---+
|   |
|   |
|   |
|   |
|   |
|   |
|   |
|   |
|   |
|   |
|   |
|   |
|   |
|   |
|   |
|   |
|   |
|   |
|   |
|   |
+---+
(20 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A7_B34_C5 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest
   WHERE c_long<>1), unnest(mv_to_array(c_mv_all_null_and_empty_val)) AS u(c);
+---+
| c |
+---+
|   |
|   |
|   |
|   |
|   |
|   |
|   |
|   |
|   |
|   |
|   |
|   |
|   |
|   |
|   |
|   |
|   |
|   |
|   |
|   |
+---+
(20 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A7_B34_C7 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest,
        unnest(mv_to_array(c_mv_all_null_and_empty_val)) AS u(c))
WHERE c_long<>1;
+---+
| c |
+---+
|   |
|   |
|   |
|   |
|   |
|   |
|   |
|   |
|   |
|   |
|   |
|   |
|   |
|   |
|   |
|   |
|   |
|   |
|   |
|   |
+---+
(20 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A7_B34_C9 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest), unnest(mv_to_array(c_mv_all_null_and_empty_val)) AS u(c)
WHERE c_long<>1;
+---+
| c |
+---+
|   |
|   |
|   |
|   |
|   |
|   |
|   |
|   |
|   |
|   |
|   |
|   |
|   |
|   |
|   |
|   |
|   |
|   |
|   |
|   |
+---+
(20 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A7_B35_C1 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM test_unnest,
     unnest(mv_to_array(c_mv_all_null_and_empty_val)) AS u(c)
WHERE c_long>1;
+---+
| c |
+---+
|   |
|   |
|   |
|   |
|   |
|   |
|   |
|   |
|   |
|   |
|   |
|   |
|   |
|   |
|   |
+---+
(15 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A7_B35_C3 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest,
        unnest(mv_to_array(c_mv_all_null_and_empty_val)) AS u(c)
   WHERE c_long>1);
+---+
| c |
+---+
|   |
|   |
|   |
|   |
|   |
|   |
|   |
|   |
|   |
|   |
|   |
|   |
|   |
|   |
|   |
+---+
(15 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A7_B35_C5 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest
   WHERE c_long>1), unnest(mv_to_array(c_mv_all_null_and_empty_val)) AS u(c);
+---+
| c |
+---+
|   |
|   |
|   |
|   |
|   |
|   |
|   |
|   |
|   |
|   |
|   |
|   |
|   |
|   |
|   |
+---+
(15 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A7_B35_C7 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest,
        unnest(mv_to_array(c_mv_all_null_and_empty_val)) AS u(c))
WHERE c_long>1;
+---+
| c |
+---+
|   |
|   |
|   |
|   |
|   |
|   |
|   |
|   |
|   |
|   |
|   |
|   |
|   |
|   |
|   |
+---+
(15 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A7_B35_C9 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest), unnest(mv_to_array(c_mv_all_null_and_empty_val)) AS u(c)
WHERE c_long>1;
+---+
| c |
+---+
|   |
|   |
|   |
|   |
|   |
|   |
|   |
|   |
|   |
|   |
|   |
|   |
|   |
|   |
|   |
+---+
(15 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A7_B36_C1 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM test_unnest,
     unnest(mv_to_array(c_mv_all_null_and_empty_val)) AS u(c)
WHERE c_long>=1;
+---+
| c |
+---+
|   |
|   |
|   |
|   |
|   |
|   |
|   |
|   |
|   |
|   |
|   |
|   |
|   |
|   |
|   |
|   |
|   |
|   |
|   |
|   |
+---+
(20 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A7_B36_C3 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest,
        unnest(mv_to_array(c_mv_all_null_and_empty_val)) AS u(c)
   WHERE c_long>=1);
+---+
| c |
+---+
|   |
|   |
|   |
|   |
|   |
|   |
|   |
|   |
|   |
|   |
|   |
|   |
|   |
|   |
|   |
|   |
|   |
|   |
|   |
|   |
+---+
(20 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A7_B36_C5 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest
   WHERE c_long>=1), unnest(mv_to_array(c_mv_all_null_and_empty_val)) AS u(c);
+---+
| c |
+---+
|   |
|   |
|   |
|   |
|   |
|   |
|   |
|   |
|   |
|   |
|   |
|   |
|   |
|   |
|   |
|   |
|   |
|   |
|   |
|   |
+---+
(20 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A7_B36_C7 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest,
        unnest(mv_to_array(c_mv_all_null_and_empty_val)) AS u(c))
WHERE c_long>=1;
+---+
| c |
+---+
|   |
|   |
|   |
|   |
|   |
|   |
|   |
|   |
|   |
|   |
|   |
|   |
|   |
|   |
|   |
|   |
|   |
|   |
|   |
|   |
+---+
(20 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A7_B36_C9 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest), unnest(mv_to_array(c_mv_all_null_and_empty_val)) AS u(c)
WHERE c_long>=1;
+---+
| c |
+---+
|   |
|   |
|   |
|   |
|   |
|   |
|   |
|   |
|   |
|   |
|   |
|   |
|   |
|   |
|   |
|   |
|   |
|   |
|   |
|   |
+---+
(20 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A7_B37_C1 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM test_unnest,
     unnest(mv_to_array(c_mv_all_null_and_empty_val)) AS u(c)
WHERE c_long<1;
+---+
| c |
+---+
|   |
|   |
|   |
|   |
|   |
+---+
(5 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A7_B37_C3 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest,
        unnest(mv_to_array(c_mv_all_null_and_empty_val)) AS u(c)
   WHERE c_long<1);
+---+
| c |
+---+
|   |
|   |
|   |
|   |
|   |
+---+
(5 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A7_B37_C5 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest
   WHERE c_long<1), unnest(mv_to_array(c_mv_all_null_and_empty_val)) AS u(c);
+---+
| c |
+---+
|   |
|   |
|   |
|   |
|   |
+---+
(5 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A7_B37_C7 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest,
        unnest(mv_to_array(c_mv_all_null_and_empty_val)) AS u(c))
WHERE c_long<1;
+---+
| c |
+---+
|   |
|   |
|   |
|   |
|   |
+---+
(5 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A7_B37_C9 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest), unnest(mv_to_array(c_mv_all_null_and_empty_val)) AS u(c)
WHERE c_long<1;
+---+
| c |
+---+
|   |
|   |
|   |
|   |
|   |
+---+
(5 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A7_B38_C1 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM test_unnest,
     unnest(mv_to_array(c_mv_all_null_and_empty_val)) AS u(c)
WHERE c_long<=1;
+---+
| c |
+---+
|   |
|   |
|   |
|   |
|   |
|   |
|   |
|   |
|   |
|   |
+---+
(10 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A7_B38_C3 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest,
        unnest(mv_to_array(c_mv_all_null_and_empty_val)) AS u(c)
   WHERE c_long<=1);
+---+
| c |
+---+
|   |
|   |
|   |
|   |
|   |
|   |
|   |
|   |
|   |
|   |
+---+
(10 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A7_B38_C5 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest
   WHERE c_long<=1), unnest(mv_to_array(c_mv_all_null_and_empty_val)) AS u(c);
+---+
| c |
+---+
|   |
|   |
|   |
|   |
|   |
|   |
|   |
|   |
|   |
|   |
+---+
(10 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A7_B38_C7 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest,
        unnest(mv_to_array(c_mv_all_null_and_empty_val)) AS u(c))
WHERE c_long<=1;
+---+
| c |
+---+
|   |
|   |
|   |
|   |
|   |
|   |
|   |
|   |
|   |
|   |
+---+
(10 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A7_B38_C9 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest), unnest(mv_to_array(c_mv_all_null_and_empty_val)) AS u(c)
WHERE c_long<=1;
+---+
| c |
+---+
|   |
|   |
|   |
|   |
|   |
|   |
|   |
|   |
|   |
|   |
+---+
(10 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A7_B39_C1 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM test_unnest,
     unnest(mv_to_array(c_mv_all_null_and_empty_val)) AS u(c)
WHERE (NOT c_str<>''
       OR NOT c_str<>'str2'
       OR NOT c_long<>0
       OR NOT c_long<>1
       OR NOT c_long<>2
       OR NOT c_long<>999)
  AND (NOT c_str='str3'
       OR NOT c_str='str4'
       OR NOT c_long=3
       OR NOT c_long=4
       OR NOT c_long=999);
+---+
| c |
+---+
|   |
|   |
|   |
|   |
|   |
|   |
|   |
|   |
|   |
|   |
|   |
|   |
|   |
|   |
|   |
+---+
(15 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A7_B39_C3 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest,
        unnest(mv_to_array(c_mv_all_null_and_empty_val)) AS u(c)
   WHERE (NOT c_str<>''
          OR NOT c_str<>'str2'
          OR NOT c_long<>0
          OR NOT c_long<>1
          OR NOT c_long<>2
          OR NOT c_long<>999)
     AND (NOT c_str='str3'
          OR NOT c_str='str4'
          OR NOT c_long=3
          OR NOT c_long=4
          OR NOT c_long=999));
+---+
| c |
+---+
|   |
|   |
|   |
|   |
|   |
|   |
|   |
|   |
|   |
|   |
|   |
|   |
|   |
|   |
|   |
+---+
(15 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A7_B39_C5 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest
   WHERE (NOT c_str<>''
          OR NOT c_str<>'str2'
          OR NOT c_long<>0
          OR NOT c_long<>1
          OR NOT c_long<>2
          OR NOT c_long<>999)
     AND (NOT c_str='str3'
          OR NOT c_str='str4'
          OR NOT c_long=3
          OR NOT c_long=4
          OR NOT c_long=999)), unnest(mv_to_array(c_mv_all_null_and_empty_val)) AS u(c);
+---+
| c |
+---+
|   |
|   |
|   |
|   |
|   |
|   |
|   |
|   |
|   |
|   |
|   |
|   |
|   |
|   |
|   |
+---+
(15 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A7_B39_C7 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest,
        unnest(mv_to_array(c_mv_all_null_and_empty_val)) AS u(c))
WHERE (NOT c_str<>''
       OR NOT c_str<>'str2'
       OR NOT c_long<>0
       OR NOT c_long<>1
       OR NOT c_long<>2
       OR NOT c_long<>999)
  AND (NOT c_str='str3'
       OR NOT c_str='str4'
       OR NOT c_long=3
       OR NOT c_long=4
       OR NOT c_long=999);
+---+
| c |
+---+
|   |
|   |
|   |
|   |
|   |
|   |
|   |
|   |
|   |
|   |
|   |
|   |
|   |
|   |
|   |
+---+
(15 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A7_B39_C9 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest), unnest(mv_to_array(c_mv_all_null_and_empty_val)) AS u(c)
WHERE (NOT c_str<>''
       OR NOT c_str<>'str2'
       OR NOT c_long<>0
       OR NOT c_long<>1
       OR NOT c_long<>2
       OR NOT c_long<>999)
  AND (NOT c_str='str3'
       OR NOT c_str='str4'
       OR NOT c_long=3
       OR NOT c_long=4
       OR NOT c_long=999);
+---+
| c |
+---+
|   |
|   |
|   |
|   |
|   |
|   |
|   |
|   |
|   |
|   |
|   |
|   |
|   |
|   |
|   |
+---+
(15 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A7_B40_C1 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM test_unnest,
     unnest(mv_to_array(c_mv_all_null_and_empty_val)) AS u(c)
WHERE (c_str=''
       OR c_str='str2'
       OR c_long=0
       OR c_long=1
       OR c_long=2
       OR c_long=999)
  AND NOT c_str='str3'
  AND NOT c_str='str4'
  AND NOT c_long=3
  AND NOT c_long=4
  AND NOT c_long=999;
+---+
| c |
+---+
|   |
|   |
|   |
|   |
|   |
|   |
|   |
|   |
|   |
|   |
+---+
(10 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A7_B40_C3 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest,
        unnest(mv_to_array(c_mv_all_null_and_empty_val)) AS u(c)
   WHERE (c_str=''
          OR c_str='str2'
          OR c_long=0
          OR c_long=1
          OR c_long=2
          OR c_long=999)
     AND NOT c_str='str3'
     AND NOT c_str='str4'
     AND NOT c_long=3
     AND NOT c_long=4
     AND NOT c_long=999);
+---+
| c |
+---+
|   |
|   |
|   |
|   |
|   |
|   |
|   |
|   |
|   |
|   |
+---+
(10 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A7_B40_C5 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest
   WHERE (c_str=''
          OR c_str='str2'
          OR c_long=0
          OR c_long=1
          OR c_long=2
          OR c_long=999)
     AND NOT c_str='str3'
     AND NOT c_str='str4'
     AND NOT c_long=3
     AND NOT c_long=4
     AND NOT c_long=999), unnest(mv_to_array(c_mv_all_null_and_empty_val)) AS u(c);
+---+
| c |
+---+
|   |
|   |
|   |
|   |
|   |
|   |
|   |
|   |
|   |
|   |
+---+
(10 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A7_B40_C7 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest,
        unnest(mv_to_array(c_mv_all_null_and_empty_val)) AS u(c))
WHERE (c_str=''
       OR c_str='str2'
       OR c_long=0
       OR c_long=1
       OR c_long=2
       OR c_long=999)
  AND NOT c_str='str3'
  AND NOT c_str='str4'
  AND NOT c_long=3
  AND NOT c_long=4
  AND NOT c_long=999;
+---+
| c |
+---+
|   |
|   |
|   |
|   |
|   |
|   |
|   |
|   |
|   |
|   |
+---+
(10 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A7_B40_C9 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest), unnest(mv_to_array(c_mv_all_null_and_empty_val)) AS u(c)
WHERE (c_str=''
       OR c_str='str2'
       OR c_long=0
       OR c_long=1
       OR c_long=2
       OR c_long=999)
  AND NOT c_str='str3'
  AND NOT c_str='str4'
  AND NOT c_long=3
  AND NOT c_long=4
  AND NOT c_long=999;
+---+
| c |
+---+
|   |
|   |
|   |
|   |
|   |
|   |
|   |
|   |
|   |
|   |
+---+
(10 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A7_B41_C1 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM test_unnest,
     unnest(mv_to_array(c_mv_all_null_and_empty_val)) AS u(c)
WHERE c_str IS NULL;
+---+
| c |
+---+
|   |
|   |
|   |
|   |
|   |
+---+
(5 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A7_B41_C3 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest,
        unnest(mv_to_array(c_mv_all_null_and_empty_val)) AS u(c)
   WHERE c_str IS NULL);
+---+
| c |
+---+
|   |
|   |
|   |
|   |
|   |
+---+
(5 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A7_B41_C5 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest
   WHERE c_str IS NULL), unnest(mv_to_array(c_mv_all_null_and_empty_val)) AS u(c);
+---+
| c |
+---+
|   |
|   |
|   |
|   |
|   |
+---+
(5 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A7_B41_C7 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest,
        unnest(mv_to_array(c_mv_all_null_and_empty_val)) AS u(c))
WHERE c_str IS NULL;
+---+
| c |
+---+
|   |
|   |
|   |
|   |
|   |
+---+
(5 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A7_B41_C9 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest), unnest(mv_to_array(c_mv_all_null_and_empty_val)) AS u(c)
WHERE c_str IS NULL;
+---+
| c |
+---+
|   |
|   |
|   |
|   |
|   |
+---+
(5 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A7_B42_C1 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM test_unnest,
     unnest(mv_to_array(c_mv_all_null_and_empty_val)) AS u(c)
WHERE c_str IS NOT NULL;
+---+
| c |
+---+
|   |
|   |
|   |
|   |
|   |
|   |
|   |
|   |
|   |
|   |
|   |
|   |
|   |
|   |
|   |
|   |
|   |
|   |
|   |
|   |
+---+
(20 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A7_B42_C3 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest,
        unnest(mv_to_array(c_mv_all_null_and_empty_val)) AS u(c)
   WHERE c_str IS NOT NULL);
+---+
| c |
+---+
|   |
|   |
|   |
|   |
|   |
|   |
|   |
|   |
|   |
|   |
|   |
|   |
|   |
|   |
|   |
|   |
|   |
|   |
|   |
|   |
+---+
(20 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A7_B42_C5 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest
   WHERE c_str IS NOT NULL), unnest(mv_to_array(c_mv_all_null_and_empty_val)) AS u(c);
+---+
| c |
+---+
|   |
|   |
|   |
|   |
|   |
|   |
|   |
|   |
|   |
|   |
|   |
|   |
|   |
|   |
|   |
|   |
|   |
|   |
|   |
|   |
+---+
(20 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A7_B42_C7 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest,
        unnest(mv_to_array(c_mv_all_null_and_empty_val)) AS u(c))
WHERE c_str IS NOT NULL;
+---+
| c |
+---+
|   |
|   |
|   |
|   |
|   |
|   |
|   |
|   |
|   |
|   |
|   |
|   |
|   |
|   |
|   |
|   |
|   |
|   |
|   |
|   |
+---+
(20 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A7_B42_C9 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest), unnest(mv_to_array(c_mv_all_null_and_empty_val)) AS u(c)
WHERE c_str IS NOT NULL;
+---+
| c |
+---+
|   |
|   |
|   |
|   |
|   |
|   |
|   |
|   |
|   |
|   |
|   |
|   |
|   |
|   |
|   |
|   |
|   |
|   |
|   |
|   |
+---+
(20 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A7_B43_C1 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM test_unnest,
     unnest(mv_to_array(c_mv_all_null_and_empty_val)) AS u(c)
WHERE c_str IN ('',
                'str2',
                999) IS TRUE
  AND c_str IN ('str3',
                'str4',
                999) IS NOT TRUE
  AND c_long IN (0,
                 1,
                 2,
                 999) IS TRUE
  AND c_long IN (3,
                 4,
                 999) IS NOT TRUE;
+---+
| c |
+---+
|   |
|   |
|   |
|   |
|   |
|   |
|   |
|   |
|   |
|   |
+---+
(10 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A7_B43_C3 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest,
        unnest(mv_to_array(c_mv_all_null_and_empty_val)) AS u(c)
   WHERE c_str IN ('',
                   'str2',
                   999) IS TRUE
     AND c_str IN ('str3',
                   'str4',
                   999) IS NOT TRUE
     AND c_long IN (0,
                    1,
                    2,
                    999) IS TRUE
     AND c_long IN (3,
                    4,
                    999) IS NOT TRUE);
+---+
| c |
+---+
|   |
|   |
|   |
|   |
|   |
|   |
|   |
|   |
|   |
|   |
+---+
(10 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A7_B43_C5 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest
   WHERE c_str IN ('',
                   'str2',
                   999) IS TRUE
     AND c_str IN ('str3',
                   'str4',
                   999) IS NOT TRUE
     AND c_long IN (0,
                    1,
                    2,
                    999) IS TRUE
     AND c_long IN (3,
                    4,
                    999) IS NOT TRUE), unnest(mv_to_array(c_mv_all_null_and_empty_val)) AS u(c);
+---+
| c |
+---+
|   |
|   |
|   |
|   |
|   |
|   |
|   |
|   |
|   |
|   |
+---+
(10 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A7_B43_C7 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest,
        unnest(mv_to_array(c_mv_all_null_and_empty_val)) AS u(c))
WHERE c_str IN ('',
                'str2',
                999) IS TRUE
  AND c_str IN ('str3',
                'str4',
                999) IS NOT TRUE
  AND c_long IN (0,
                 1,
                 2,
                 999) IS TRUE
  AND c_long IN (3,
                 4,
                 999) IS NOT TRUE;
+---+
| c |
+---+
|   |
|   |
|   |
|   |
|   |
|   |
|   |
|   |
|   |
|   |
+---+
(10 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A7_B43_C9 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest), unnest(mv_to_array(c_mv_all_null_and_empty_val)) AS u(c)
WHERE c_str IN ('',
                'str2',
                999) IS TRUE
  AND c_str IN ('str3',
                'str4',
                999) IS NOT TRUE
  AND c_long IN (0,
                 1,
                 2,
                 999) IS TRUE
  AND c_long IN (3,
                 4,
                 999) IS NOT TRUE;
+---+
| c |
+---+
|   |
|   |
|   |
|   |
|   |
|   |
|   |
|   |
|   |
|   |
+---+
(10 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A7_B44_C1 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM test_unnest,
     unnest(mv_to_array(c_mv_all_null_and_empty_val)) AS u(c)
WHERE c_str IN ('',
                'str2',
                999) IS NOT FALSE
  AND c_str IN ('str3',
                'str4',
                999) IS FALSE
  AND c_long IN (0,
                 1,
                 2,
                 999) IS NOT FALSE
  AND c_long IN (3,
                 4,
                 999) IS FALSE;
+---+
| c |
+---+
|   |
|   |
|   |
|   |
|   |
|   |
|   |
|   |
|   |
|   |
+---+
(10 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A7_B44_C3 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest,
        unnest(mv_to_array(c_mv_all_null_and_empty_val)) AS u(c)
   WHERE c_str IN ('',
                   'str2',
                   999) IS NOT FALSE
     AND c_str IN ('str3',
                   'str4',
                   999) IS FALSE
     AND c_long IN (0,
                    1,
                    2,
                    999) IS NOT FALSE
     AND c_long IN (3,
                    4,
                    999) IS FALSE);
+---+
| c |
+---+
|   |
|   |
|   |
|   |
|   |
|   |
|   |
|   |
|   |
|   |
+---+
(10 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A7_B44_C5 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest
   WHERE c_str IN ('',
                   'str2',
                   999) IS NOT FALSE
     AND c_str IN ('str3',
                   'str4',
                   999) IS FALSE
     AND c_long IN (0,
                    1,
                    2,
                    999) IS NOT FALSE
     AND c_long IN (3,
                    4,
                    999) IS FALSE), unnest(mv_to_array(c_mv_all_null_and_empty_val)) AS u(c);
+---+
| c |
+---+
|   |
|   |
|   |
|   |
|   |
|   |
|   |
|   |
|   |
|   |
+---+
(10 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A7_B44_C7 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest,
        unnest(mv_to_array(c_mv_all_null_and_empty_val)) AS u(c))
WHERE c_str IN ('',
                'str2',
                999) IS NOT FALSE
  AND c_str IN ('str3',
                'str4',
                999) IS FALSE
  AND c_long IN (0,
                 1,
                 2,
                 999) IS NOT FALSE
  AND c_long IN (3,
                 4,
                 999) IS FALSE;
+---+
| c |
+---+
|   |
|   |
|   |
|   |
|   |
|   |
|   |
|   |
|   |
|   |
+---+
(10 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A7_B44_C9 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest), unnest(mv_to_array(c_mv_all_null_and_empty_val)) AS u(c)
WHERE c_str IN ('',
                'str2',
                999) IS NOT FALSE
  AND c_str IN ('str3',
                'str4',
                999) IS FALSE
  AND c_long IN (0,
                 1,
                 2,
                 999) IS NOT FALSE
  AND c_long IN (3,
                 4,
                 999) IS FALSE;
+---+
| c |
+---+
|   |
|   |
|   |
|   |
|   |
|   |
|   |
|   |
|   |
|   |
+---+
(10 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A7_B45_C1 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM test_unnest,
     unnest(mv_to_array(c_mv_all_null_and_empty_val)) AS u(c)
WHERE (c_long BETWEEN 0 AND 2)
  AND (c_long NOT BETWEEN 3 AND 4);
+---+
| c |
+---+
|   |
|   |
|   |
|   |
|   |
|   |
|   |
|   |
|   |
|   |
|   |
|   |
|   |
|   |
|   |
+---+
(15 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A7_B45_C3 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest,
        unnest(mv_to_array(c_mv_all_null_and_empty_val)) AS u(c)
   WHERE (c_long BETWEEN 0 AND 2)
     AND (c_long NOT BETWEEN 3 AND 4));
+---+
| c |
+---+
|   |
|   |
|   |
|   |
|   |
|   |
|   |
|   |
|   |
|   |
|   |
|   |
|   |
|   |
|   |
+---+
(15 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A7_B45_C5 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest
   WHERE (c_long BETWEEN 0 AND 2)
     AND (c_long NOT BETWEEN 3 AND 4)), unnest(mv_to_array(c_mv_all_null_and_empty_val)) AS u(c);
+---+
| c |
+---+
|   |
|   |
|   |
|   |
|   |
|   |
|   |
|   |
|   |
|   |
|   |
|   |
|   |
|   |
|   |
+---+
(15 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A7_B45_C7 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest,
        unnest(mv_to_array(c_mv_all_null_and_empty_val)) AS u(c))
WHERE (c_long BETWEEN 0 AND 2)
  AND (c_long NOT BETWEEN 3 AND 4);
+---+
| c |
+---+
|   |
|   |
|   |
|   |
|   |
|   |
|   |
|   |
|   |
|   |
|   |
|   |
|   |
|   |
|   |
+---+
(15 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A7_B45_C9 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest), unnest(mv_to_array(c_mv_all_null_and_empty_val)) AS u(c)
WHERE (c_long BETWEEN 0 AND 2)
  AND (c_long NOT BETWEEN 3 AND 4);
+---+
| c |
+---+
|   |
|   |
|   |
|   |
|   |
|   |
|   |
|   |
|   |
|   |
|   |
|   |
|   |
|   |
|   |
+---+
(15 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A7_B46_C1 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM test_unnest,
     unnest(mv_to_array(c_mv_all_null_and_empty_val)) AS u(c)
WHERE (c_str like '%2')
  AND (c_str not like '%3')
  AND (c_str not like '%4');
+---+
| c |
+---+
|   |
|   |
|   |
|   |
|   |
+---+
(5 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A7_B46_C3 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest,
        unnest(mv_to_array(c_mv_all_null_and_empty_val)) AS u(c)
   WHERE (c_str like '%2')
     AND (c_str not like '%3')
     AND (c_str not like '%4'));
+---+
| c |
+---+
|   |
|   |
|   |
|   |
|   |
+---+
(5 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A7_B46_C5 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest
   WHERE (c_str like '%2')
     AND (c_str not like '%3')
     AND (c_str not like '%4')), unnest(mv_to_array(c_mv_all_null_and_empty_val)) AS u(c);
+---+
| c |
+---+
|   |
|   |
|   |
|   |
|   |
+---+
(5 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A7_B46_C7 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest,
        unnest(mv_to_array(c_mv_all_null_and_empty_val)) AS u(c))
WHERE (c_str like '%2')
  AND (c_str not like '%3')
  AND (c_str not like '%4');
+---+
| c |
+---+
|   |
|   |
|   |
|   |
|   |
+---+
(5 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A7_B46_C9 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest), unnest(mv_to_array(c_mv_all_null_and_empty_val)) AS u(c)
WHERE (c_str like '%2')
  AND (c_str not like '%3')
  AND (c_str not like '%4');
+---+
| c |
+---+
|   |
|   |
|   |
|   |
|   |
+---+
(5 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A7_B47_C1 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM test_unnest,
     unnest(mv_to_array(c_mv_all_null_and_empty_val)) AS u(c)
WHERE c_str IN ('',
                'str2',
                999)
  AND c_str NOT IN ('str3',
                    'str4',
                    999)
  AND c_long IN (0,
                 1,
                 2,
                 999)
  AND c_long NOT IN (3,
                     4,
                     999);
+---+
| c |
+---+
|   |
|   |
|   |
|   |
|   |
|   |
|   |
|   |
|   |
|   |
+---+
(10 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A7_B47_C3 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest,
        unnest(mv_to_array(c_mv_all_null_and_empty_val)) AS u(c)
   WHERE c_str IN ('',
                   'str2',
                   999)
     AND c_str NOT IN ('str3',
                       'str4',
                       999)
     AND c_long IN (0,
                    1,
                    2,
                    999)
     AND c_long NOT IN (3,
                        4,
                        999));
+---+
| c |
+---+
|   |
|   |
|   |
|   |
|   |
|   |
|   |
|   |
|   |
|   |
+---+
(10 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A7_B47_C5 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest
   WHERE c_str IN ('',
                   'str2',
                   999)
     AND c_str NOT IN ('str3',
                       'str4',
                       999)
     AND c_long IN (0,
                    1,
                    2,
                    999)
     AND c_long NOT IN (3,
                        4,
                        999)), unnest(mv_to_array(c_mv_all_null_and_empty_val)) AS u(c);
+---+
| c |
+---+
|   |
|   |
|   |
|   |
|   |
|   |
|   |
|   |
|   |
|   |
+---+
(10 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A7_B47_C7 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest,
        unnest(mv_to_array(c_mv_all_null_and_empty_val)) AS u(c))
WHERE c_str IN ('',
                'str2',
                999)
  AND c_str NOT IN ('str3',
                    'str4',
                    999)
  AND c_long IN (0,
                 1,
                 2,
                 999)
  AND c_long NOT IN (3,
                     4,
                     999);
+---+
| c |
+---+
|   |
|   |
|   |
|   |
|   |
|   |
|   |
|   |
|   |
|   |
+---+
(10 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A7_B47_C9 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest), unnest(mv_to_array(c_mv_all_null_and_empty_val)) AS u(c)
WHERE c_str IN ('',
                'str2',
                999)
  AND c_str NOT IN ('str3',
                    'str4',
                    999)
  AND c_long IN (0,
                 1,
                 2,
                 999)
  AND c_long NOT IN (3,
                     4,
                     999);
+---+
| c |
+---+
|   |
|   |
|   |
|   |
|   |
|   |
|   |
|   |
|   |
|   |
+---+
(10 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A7_B48_C1 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM test_unnest,
     unnest(mv_to_array(c_mv_all_null_and_empty_val)) AS u(c)
WHERE c_long IN
    (SELECT col
     FROM (
           VALUES(0),(1),(2),(999)) AS t(col))
  AND c_long NOT IN
    (SELECT col
     FROM (
           VALUES(3),(4),(999)) AS t(col));
+---+
| c |
+---+
|   |
|   |
|   |
|   |
|   |
|   |
|   |
|   |
|   |
|   |
|   |
|   |
|   |
|   |
|   |
+---+
(15 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A7_B48_C3 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest,
        unnest(mv_to_array(c_mv_all_null_and_empty_val)) AS u(c)
   WHERE c_long IN
       (SELECT col
        FROM (
              VALUES(0),(1),(2),(999)) AS t(col))
     AND c_long NOT IN
       (SELECT col
        FROM (
              VALUES(3),(4),(999)) AS t(col)));
+---+
| c |
+---+
|   |
|   |
|   |
|   |
|   |
|   |
|   |
|   |
|   |
|   |
|   |
|   |
|   |
|   |
|   |
+---+
(15 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A7_B48_C5 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest
   WHERE c_long IN
       (SELECT col
        FROM (
              VALUES(0),(1),(2),(999)) AS t(col))
     AND c_long NOT IN
       (SELECT col
        FROM (
              VALUES(3),(4),(999)) AS t(col))), unnest(mv_to_array(c_mv_all_null_and_empty_val)) AS u(c);
+---+
| c |
+---+
|   |
|   |
|   |
|   |
|   |
|   |
|   |
|   |
|   |
|   |
|   |
|   |
|   |
|   |
|   |
+---+
(15 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A7_B48_C7 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest,
        unnest(mv_to_array(c_mv_all_null_and_empty_val)) AS u(c))
WHERE c_long IN
    (SELECT col
     FROM (
           VALUES(0),(1),(2),(999)) AS t(col))
  AND c_long NOT IN
    (SELECT col
     FROM (
           VALUES(3),(4),(999)) AS t(col));
+---+
| c |
+---+
|   |
|   |
|   |
|   |
|   |
|   |
|   |
|   |
|   |
|   |
|   |
|   |
|   |
|   |
|   |
+---+
(15 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A7_B48_C9 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT *
   FROM test_unnest), unnest(mv_to_array(c_mv_all_null_and_empty_val)) AS u(c)
WHERE c_long IN
    (SELECT col
     FROM (
           VALUES(0),(1),(2),(999)) AS t(col))
  AND c_long NOT IN
    (SELECT col
     FROM (
           VALUES(3),(4),(999)) AS t(col));
+---+
| c |
+---+
|   |
|   |
|   |
|   |
|   |
|   |
|   |
|   |
|   |
|   |
|   |
|   |
|   |
|   |
|   |
+---+
(15 rows)

!ok

#-------------------------------------------------------------------------
# Total query count 1681 Positive tests: 1401 Negative tests: 280
#-------------------------------------------------------------------------
