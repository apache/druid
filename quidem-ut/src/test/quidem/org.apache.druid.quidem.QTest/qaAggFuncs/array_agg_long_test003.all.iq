!set useApproximateCountDistinct false
!use druidtest://?componentSupplier=AllDruidEnginesComponentSupplier&datasets=sql/src/test/quidem/qatests/qaAggFuncs
!set outputformat mysql
#-------------------------------------------------------------------------
# TESTCASE: test003 TEST_ID: SEL_DATASOURCE
#-------------------------------------------------------------------------
SELECT count(*) cnt
FROM test_agg_funcs;
+-----+
| cnt |
+-----+
|  18 |
+-----+
(1 row)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test003 TEST_ID: A01
#-------------------------------------------------------------------------
SELECT array[1111111111,
             2222222222] AS col;
+--------------------------+
| col                      |
+--------------------------+
| [1111111111, 2222222222] |
+--------------------------+
(1 row)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test003 TEST_ID: A02
#-------------------------------------------------------------------------
SELECT array_agg(DISTINCT 1111111111, 100000) AS col;
is not supported
!error

#-------------------------------------------------------------------------
# TESTCASE: test003 TEST_ID: A03
#-------------------------------------------------------------------------
SELECT strlen(array_to_string(col, '|')) AS LEN
FROM
  (SELECT array_agg(DISTINCT tab0l0, 100000) AS col
   FROM test_agg_funcs);
+-----+
| LEN |
+-----+
|  26 |
+-----+
(1 row)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test003 TEST_ID: A04
#-------------------------------------------------------------------------
SELECT array_length(array_agg(DISTINCT tab0l0, 100000)) AS col
FROM test_agg_funcs;
+-----+
| col |
+-----+
|   3 |
+-----+
(1 row)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test003 TEST_ID: A05
#-------------------------------------------------------------------------
SELECT array_offset(array_agg(DISTINCT tab0l0, 100000), 100) AS col
FROM test_agg_funcs
WHERE tab0l0=1111111111;
+-----+
| col |
+-----+
|     |
+-----+
(1 row)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test003 TEST_ID: A06
#-------------------------------------------------------------------------
SELECT array_ordinal(array_agg(DISTINCT tab0l0, 100000), 100) AS col
FROM test_agg_funcs
WHERE tab0l0=2222222222;
+-----+
| col |
+-----+
|     |
+-----+
(1 row)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test003 TEST_ID: A07
#-------------------------------------------------------------------------
SELECT array_contains(array_agg(DISTINCT tab0l0, 100000), 1111111111) AS col
FROM test_agg_funcs;
+------+
| col  |
+------+
| true |
+------+
(1 row)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test003 TEST_ID: A08
#-------------------------------------------------------------------------
SELECT array_contains(array_agg(DISTINCT tab0l0, 100000), array[1111111111, 2222222222]) AS col
FROM test_agg_funcs;
+------+
| col  |
+------+
| true |
+------+
(1 row)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test003 TEST_ID: A09
#-------------------------------------------------------------------------
SELECT array_contains(array_agg(DISTINCT tab0l0, 100000), 3333333333) AS col
FROM test_agg_funcs;
+-------+
| col   |
+-------+
| false |
+-------+
(1 row)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test003 TEST_ID: A10
#-------------------------------------------------------------------------
SELECT array_contains(array_agg(DISTINCT tab0l0, 100000), array[1111111111, 3333333333]) AS col
FROM test_agg_funcs;
+-------+
| col   |
+-------+
| false |
+-------+
(1 row)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test003 TEST_ID: A11
#-------------------------------------------------------------------------
SELECT array_overlap(array_agg(DISTINCT tab0l0, 100000), array[1111111111, 3333333333]) AS col
FROM test_agg_funcs;
+------+
| col  |
+------+
| true |
+------+
(1 row)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test003 TEST_ID: A12
#-------------------------------------------------------------------------
SELECT array_overlap(array_agg(DISTINCT tab0l0, 100000), array[3333333333, 4444444444]) AS col
FROM test_agg_funcs;
+-------+
| col   |
+-------+
| false |
+-------+
(1 row)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test003 TEST_ID: A13
#-------------------------------------------------------------------------
SELECT array_overlap(array_agg(DISTINCT tab0l0, 100000), array_agg(DISTINCT tab0l0, 100000)) AS col
FROM test_agg_funcs;
+------+
| col  |
+------+
| true |
+------+
(1 row)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test003 TEST_ID: A14
#-------------------------------------------------------------------------
SELECT array_offset_of(array_agg(DISTINCT tab0l0, 100000), 1111111111) AS col
FROM test_agg_funcs
WHERE tab0l0=1111111111;
+-----+
| col |
+-----+
|   0 |
+-----+
(1 row)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test003 TEST_ID: A15
#-------------------------------------------------------------------------
SELECT array_offset_of(array_agg(DISTINCT tab0l0, 100000), 3333333333) AS col
FROM test_agg_funcs
WHERE tab0l0=1111111111;
+-----+
| col |
+-----+
|     |
+-----+
(1 row)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test003 TEST_ID: A16
#-------------------------------------------------------------------------
SELECT array_ordinal_of(array_agg(DISTINCT tab0l0, 100000), 1111111111) AS col
FROM test_agg_funcs
WHERE tab0l0=1111111111;
+-----+
| col |
+-----+
|   1 |
+-----+
(1 row)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test003 TEST_ID: A17
#-------------------------------------------------------------------------
SELECT array_ordinal_of(array_agg(DISTINCT tab0l0, 100000), 3333333333) AS col
FROM test_agg_funcs
WHERE tab0l0=1111111111;
+-----+
| col |
+-----+
|     |
+-----+
(1 row)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test003 TEST_ID: A18
#-------------------------------------------------------------------------
SELECT strlen(array_to_string(array_agg(DISTINCT tab0l0, 100000), '|')) AS col
FROM test_agg_funcs;
+-----+
| col |
+-----+
|  26 |
+-----+
(1 row)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test003 TEST_ID: A19
#-------------------------------------------------------------------------
SELECT contains_string(array_to_string(array_agg(DISTINCT tab0l0, 100000), '|'), '1111111111')
AND contains_string(array_to_string(array_agg(DISTINCT tab0l0, 100000), '|'), '|') AS col
FROM test_agg_funcs;
+------+
| col  |
+------+
| true |
+------+
(1 row)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test003 TEST_ID: A20
#-------------------------------------------------------------------------
SELECT strlen(array_to_string(col, '|')) AS LEN
FROM
  (SELECT array_prepend(3333333333, array_agg(DISTINCT tab0l0, 100000)) AS col
   FROM test_agg_funcs);
+-----+
| LEN |
+-----+
|  37 |
+-----+
(1 row)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test003 TEST_ID: A21
#-------------------------------------------------------------------------
SELECT array_length(array_prepend(3333333333, array_agg(DISTINCT tab0l0, 100000))) AS col
FROM test_agg_funcs;
+-----+
| col |
+-----+
|   4 |
+-----+
(1 row)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test003 TEST_ID: A22
#-------------------------------------------------------------------------
SELECT strlen(array_to_string(col, '|')) AS LEN
FROM
  (SELECT array_append(array_agg(DISTINCT tab0l0, 100000), 3333333333) AS col
   FROM test_agg_funcs);
+-----+
| LEN |
+-----+
|  37 |
+-----+
(1 row)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test003 TEST_ID: A23
#-------------------------------------------------------------------------
SELECT array_length(array_append(array_agg(DISTINCT tab0l0, 100000), 3333333333)) AS col
FROM test_agg_funcs;
+-----+
| col |
+-----+
|   4 |
+-----+
(1 row)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test003 TEST_ID: A24
#-------------------------------------------------------------------------
SELECT strlen(array_to_string(col, '|')) AS LEN
FROM
  (SELECT array_concat(array_agg(DISTINCT tab0l0, 100000), array[3333333333]) AS col
   FROM test_agg_funcs);
+-----+
| LEN |
+-----+
|  37 |
+-----+
(1 row)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test003 TEST_ID: A25
#-------------------------------------------------------------------------
SELECT array_length(array_concat(array_agg(DISTINCT tab0l0, 100000), array[3333333333])) AS col
FROM test_agg_funcs;
+-----+
| col |
+-----+
|   4 |
+-----+
(1 row)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test003 TEST_ID: A26
#-------------------------------------------------------------------------
SELECT strlen(array_to_string(col, '|')) AS LEN
FROM
  (SELECT array_concat(array_agg(DISTINCT tab0l0, 100000), array_agg(DISTINCT tab0l0, 100000)) AS col
   FROM test_agg_funcs);
+-----+
| LEN |
+-----+
|  53 |
+-----+
(1 row)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test003 TEST_ID: A27
#-------------------------------------------------------------------------
SELECT array_length(array_concat(array_agg(DISTINCT tab0l0, 100000), array_agg(DISTINCT tab0l0, 100000))) AS col
FROM test_agg_funcs;
+-----+
| col |
+-----+
|   6 |
+-----+
(1 row)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test003 TEST_ID: A28
#-------------------------------------------------------------------------
SELECT array_slice(array_agg(DISTINCT tab0l0, 100000), 0, 1) AS col
FROM test_agg_funcs
WHERE tab0l0=1111111111;
+--------------+
| col          |
+--------------+
| [1111111111] |
+--------------+
(1 row)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test003 TEST_ID: A29
#-------------------------------------------------------------------------
SELECT array_slice(array_agg(DISTINCT tab0l0, 100000), 100, 101) AS col
FROM test_agg_funcs
WHERE tab0l0=1111111111;
+-----+
| col |
+-----+
|     |
+-----+
(1 row)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test003 TEST_ID: A30
#-------------------------------------------------------------------------
SELECT strlen(array_to_string(col, '|')) AS LEN
FROM
  (SELECT array_agg(DISTINCT t0.tab0l0, 100000) AS col
   FROM test_agg_funcs t0,
        test_agg_funcs t1,
        test_agg_funcs t2
   WHERE t0.tab0l0 IS NOT NULL);
+-----+
| LEN |
+-----+
|  21 |
+-----+
(1 row)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test003 TEST_ID: A31
#-------------------------------------------------------------------------
SELECT strlen(col) AS LEN
FROM
  (SELECT array_to_string(array_agg(DISTINCT t0.tab0l0, 100000), '') AS col
   FROM test_agg_funcs t0,
        test_agg_funcs t1,
        test_agg_funcs t2
   WHERE t0.tab0l0 IS NOT NULL);
+-----+
| LEN |
+-----+
|  20 |
+-----+
(1 row)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test003 TEST_ID: A32
#-------------------------------------------------------------------------
SELECT length(array_to_string(array_agg(DISTINCT t0.tab0l0, 100000), '')) AS col
FROM test_agg_funcs t0,
     test_agg_funcs t1,
     test_agg_funcs t2
WHERE t0.tab0l0 IS NOT NULL;
+-----+
| col |
+-----+
|  20 |
+-----+
(1 row)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test003 TEST_ID: A33
#-------------------------------------------------------------------------
SELECT strlen(array_to_string(col, '|')) AS LEN
FROM
  (SELECT array_agg(DISTINCT t0.tab0l0, 100000) AS col
   FROM test_agg_funcs t0,
        test_agg_funcs t1,
        test_agg_funcs t2
   GROUP BY t0.tab0l0);
+-----+
| LEN |
+-----+
|  10 |
|  10 |
|     |
+-----+
(3 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test003 TEST_ID: A34
#-------------------------------------------------------------------------
SELECT strlen(col) AS LEN
FROM
  (SELECT array_to_string(array_agg(DISTINCT t0.tab0l0, 100000), '') AS col
   FROM test_agg_funcs t0,
        test_agg_funcs t1,
        test_agg_funcs t2
   GROUP BY t0.tab0l0);
+-----+
| LEN |
+-----+
|  10 |
|  10 |
|     |
+-----+
(3 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test003 TEST_ID: A35
#-------------------------------------------------------------------------
SELECT length(array_to_string(array_agg(DISTINCT t0.tab0l0, 100000), '')) AS col
FROM test_agg_funcs t0,
     test_agg_funcs t1,
     test_agg_funcs t2
GROUP BY t0.tab0l0;
+-----+
| col |
+-----+
|  10 |
|  10 |
|     |
+-----+
(3 rows)

!ok

