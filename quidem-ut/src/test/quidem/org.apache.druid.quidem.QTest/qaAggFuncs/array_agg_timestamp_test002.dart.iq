!set useApproximateCountDistinct false
!use druidtest://?componentSupplier=DartComponentSupplier&datasets=sql/src/test/quidem/qatests/qaAggFuncs
!set outputformat mysql
#-------------------------------------------------------------------------
# TESTCASE: test002 TEST_ID: SEL_DATASOURCE
#-------------------------------------------------------------------------
SELECT count(*) cnt
FROM test_agg_funcs;
+-----+
| cnt |
+-----+
|  18 |
+-----+
(1 row)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test002 TEST_ID: A01
#-------------------------------------------------------------------------
SELECT array[timestamp '2020-01-01 01:01:01.000', timestamp '2020-02-01 01:01:01.000'] AS col;
+--------------------------------------------+
| col                                        |
+--------------------------------------------+
| [2020-01-01 01:01:01, 2020-02-01 01:01:01] |
+--------------------------------------------+
(1 row)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test002 TEST_ID: A02
#-------------------------------------------------------------------------
SELECT array_agg(DISTINCT timestamp '2020-01-01 01:01:01.000') AS col;
+-----------------------+
| col                   |
+-----------------------+
| [2020-01-01 01:01:01] |
+-----------------------+
(1 row)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test002 TEST_ID: A03
#-------------------------------------------------------------------------
SELECT strlen(array_to_string(col, '|')) AS LEN
FROM
  (SELECT array_agg(DISTINCT __time) AS col
   FROM test_agg_funcs);
+-----+
| LEN |
+-----+
|  27 |
+-----+
(1 row)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test002 TEST_ID: A04
#-------------------------------------------------------------------------
SELECT array_length(array_agg(DISTINCT __time)) AS col
FROM test_agg_funcs;
+-----+
| col |
+-----+
|   2 |
+-----+
(1 row)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test002 TEST_ID: A05
#-------------------------------------------------------------------------
SELECT array_offset(array_agg(DISTINCT __time), 100) AS col
FROM test_agg_funcs
WHERE __time=timestamp '2020-01-01 01:01:01.000';
+-----+
| col |
+-----+
|     |
+-----+
(1 row)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test002 TEST_ID: A06
#-------------------------------------------------------------------------
SELECT array_ordinal(array_agg(DISTINCT __time), 100) AS col
FROM test_agg_funcs
WHERE __time=timestamp '2020-02-01 01:01:01.000';
+-----+
| col |
+-----+
|     |
+-----+
(1 row)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test002 TEST_ID: A07
#-------------------------------------------------------------------------
SELECT array_contains(array_agg(DISTINCT __time), array[timestamp '2020-01-01 01:01:01.000', timestamp '2020-02-01 01:01:01.000']) AS col
FROM test_agg_funcs;
+------+
| col  |
+------+
| true |
+------+
(1 row)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test002 TEST_ID: A08
#-------------------------------------------------------------------------
SELECT array_contains(array_agg(DISTINCT __time), array[timestamp '2020-01-01 01:01:01.000', timestamp '2020-03-01 01:01:01.000']) AS col
FROM test_agg_funcs;
+-------+
| col   |
+-------+
| false |
+-------+
(1 row)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test002 TEST_ID: A09
#-------------------------------------------------------------------------
SELECT array_overlap(array_agg(DISTINCT __time), array[timestamp '2020-01-01 01:01:01.000', timestamp '2020-03-01 01:01:01.000']) AS col
FROM test_agg_funcs;
+------+
| col  |
+------+
| true |
+------+
(1 row)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test002 TEST_ID: A10
#-------------------------------------------------------------------------
SELECT array_overlap(array_agg(DISTINCT __time), array[timestamp '2020-03-01 01:01:01.000', timestamp '2020-04-01 01:01:01.000']) AS col
FROM test_agg_funcs;
+-------+
| col   |
+-------+
| false |
+-------+
(1 row)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test002 TEST_ID: A11
#-------------------------------------------------------------------------
SELECT array_overlap(array_agg(DISTINCT __time), array_agg(DISTINCT __time)) AS col
FROM test_agg_funcs;
+------+
| col  |
+------+
| true |
+------+
(1 row)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test002 TEST_ID: A12
#-------------------------------------------------------------------------
SELECT array_offset_of(array_agg(DISTINCT __time), timestamp '2020-01-01 01:01:01.000') AS col
FROM test_agg_funcs
WHERE __time=timestamp '2020-01-01 01:01:01.000';
+-----+
| col |
+-----+
|   0 |
+-----+
(1 row)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test002 TEST_ID: A13
#-------------------------------------------------------------------------
SELECT array_offset_of(array_agg(DISTINCT __time), timestamp '2020-03-01 01:01:01.000') AS col
FROM test_agg_funcs
WHERE __time=timestamp '2020-01-01 01:01:01.000';
+-----+
| col |
+-----+
|     |
+-----+
(1 row)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test002 TEST_ID: A14
#-------------------------------------------------------------------------
SELECT array_ordinal_of(array_agg(DISTINCT __time), timestamp '2020-01-01 01:01:01.000') AS col
FROM test_agg_funcs
WHERE __time=timestamp '2020-01-01 01:01:01.000';
+-----+
| col |
+-----+
|   1 |
+-----+
(1 row)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test002 TEST_ID: A15
#-------------------------------------------------------------------------
SELECT array_ordinal_of(array_agg(DISTINCT __time), timestamp '2020-03-01 01:01:01.000') AS col
FROM test_agg_funcs
WHERE __time=timestamp '2020-01-01 01:01:01.000';
+-----+
| col |
+-----+
|     |
+-----+
(1 row)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test002 TEST_ID: A16
#-------------------------------------------------------------------------
SELECT strlen(array_to_string(array_agg(DISTINCT __time), '|')) AS col
FROM test_agg_funcs;
+-----+
| col |
+-----+
|  27 |
+-----+
(1 row)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test002 TEST_ID: A17
#-------------------------------------------------------------------------
SELECT contains_string(array_to_string(array_agg(DISTINCT __time), '|'), '1577840461000')
AND contains_string(array_to_string(array_agg(DISTINCT __time), '|'), '|') AS col
FROM test_agg_funcs;
+------+
| col  |
+------+
| true |
+------+
(1 row)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test002 TEST_ID: A18
#-------------------------------------------------------------------------
SELECT strlen(array_to_string(col, '|')) AS LEN
FROM
  (SELECT array_concat(array_agg(DISTINCT __time), array[timestamp '2020-03-01 01:01:01.000']) AS col
   FROM test_agg_funcs);
+-----+
| LEN |
+-----+
|  41 |
+-----+
(1 row)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test002 TEST_ID: A19
#-------------------------------------------------------------------------
SELECT array_length(array_concat(array_agg(DISTINCT __time), array[timestamp '2020-03-01 01:01:01.000'])) AS col
FROM test_agg_funcs;
+-----+
| col |
+-----+
|   3 |
+-----+
(1 row)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test002 TEST_ID: A20
#-------------------------------------------------------------------------
SELECT strlen(array_to_string(col, '|')) AS LEN
FROM
  (SELECT array_concat(array_agg(DISTINCT __time), array_agg(DISTINCT __time)) AS col
   FROM test_agg_funcs);
+-----+
| LEN |
+-----+
|  55 |
+-----+
(1 row)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test002 TEST_ID: A21
#-------------------------------------------------------------------------
SELECT array_length(array_concat(array_agg(DISTINCT __time), array_agg(DISTINCT __time))) AS col
FROM test_agg_funcs;
+-----+
| col |
+-----+
|   4 |
+-----+
(1 row)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test002 TEST_ID: A22
#-------------------------------------------------------------------------
SELECT array_slice(array_agg(DISTINCT __time), 0, 1) AS col
FROM test_agg_funcs
WHERE __time=timestamp '2020-01-01 01:01:01.000';
+-----------------------+
| col                   |
+-----------------------+
| [2020-01-01 01:01:01] |
+-----------------------+
(1 row)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test002 TEST_ID: A23
#-------------------------------------------------------------------------
SELECT array_slice(array_agg(DISTINCT __time), 100, 101) AS col
FROM test_agg_funcs
WHERE __time=timestamp '2020-01-01 01:01:01.000';
+-----+
| col |
+-----+
|     |
+-----+
(1 row)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test002 TEST_ID: A24
#-------------------------------------------------------------------------
SELECT strlen(array_to_string(col, '|')) AS LEN
FROM
  (SELECT array_agg(DISTINCT t0.__time) AS col
   FROM test_agg_funcs t0,
        test_agg_funcs t1,
        test_agg_funcs t2
   WHERE t0.__time IS NOT NULL);
+-----+
| LEN |
+-----+
|  27 |
+-----+
(1 row)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test002 TEST_ID: A25
#-------------------------------------------------------------------------
SELECT strlen(col) AS LEN
FROM
  (SELECT array_to_string(array_agg(DISTINCT t0.__time), '') AS col
   FROM test_agg_funcs t0,
        test_agg_funcs t1,
        test_agg_funcs t2
   WHERE t0.__time IS NOT NULL);
+-----+
| LEN |
+-----+
|  26 |
+-----+
(1 row)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test002 TEST_ID: A26
#-------------------------------------------------------------------------
SELECT length(array_to_string(array_agg(DISTINCT t0.__time), '')) AS col
FROM test_agg_funcs t0,
     test_agg_funcs t1,
     test_agg_funcs t2
WHERE t0.__time IS NOT NULL;
+-----+
| col |
+-----+
|  26 |
+-----+
(1 row)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test002 TEST_ID: A27
#-------------------------------------------------------------------------
SELECT strlen(array_to_string(col, '|')) AS LEN
FROM
  (SELECT array_agg(DISTINCT t0.__time) AS col
   FROM test_agg_funcs t0,
        test_agg_funcs t1,
        test_agg_funcs t2
   GROUP BY t0.__time);
+-----+
| LEN |
+-----+
|  13 |
|  13 |
+-----+
(2 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test002 TEST_ID: A28
#-------------------------------------------------------------------------
SELECT strlen(col) AS LEN
FROM
  (SELECT array_to_string(array_agg(DISTINCT t0.__time), '') AS col
   FROM test_agg_funcs t0,
        test_agg_funcs t1,
        test_agg_funcs t2
   GROUP BY t0.__time);
+-----+
| LEN |
+-----+
|  13 |
|  13 |
+-----+
(2 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test002 TEST_ID: A29
#-------------------------------------------------------------------------
SELECT length(array_to_string(array_agg(DISTINCT t0.__time), '')) AS col
FROM test_agg_funcs t0,
     test_agg_funcs t1,
     test_agg_funcs t2
GROUP BY t0.__time;
+-----+
| col |
+-----+
|  13 |
|  13 |
+-----+
(2 rows)

!ok

