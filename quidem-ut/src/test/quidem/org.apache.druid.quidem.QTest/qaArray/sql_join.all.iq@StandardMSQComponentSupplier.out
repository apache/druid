!set dartQueryId 00000000-0000-0000-0000-000000000000
!set useApproximateCountDistinct false
!use druidtest://?componentSupplier=AllDruidEnginesComponentSupplier&datasets=sql/src/test/quidem/qatests/qaArray/sql
!set outputformat mysql
SELECT count(*) cnt
FROM test_array;
+-----+
| cnt |
+-----+
|   4 |
+-----+
(1 row)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_join TEST_ID: A1_B1_C1 TYPE: NEGATIVE TEST
#-------------------------------------------------------------------------
SELECT t1.a_bool
FROM test_array t1
INNER JOIN test_array t2 ON t1.a_bool=t2.a_bool;
not support
!error

#-------------------------------------------------------------------------
# TESTCASE: test_join TEST_ID: A1_B1_C3 TYPE: NEGATIVE TEST
#-------------------------------------------------------------------------
SELECT a_bool
FROM
  (SELECT *
   FROM test_array t1
   INNER JOIN test_array t2 ON t1.a_bool=t2.a_bool);
not support
!error

#-------------------------------------------------------------------------
# TESTCASE: test_join TEST_ID: A1_B1_C5 TYPE: NEGATIVE TEST
#-------------------------------------------------------------------------
WITH t1 AS
  (SELECT *
   FROM test_array)
SELECT t1.a_bool
FROM t1
INNER JOIN test_array t2 ON t1.a_bool=t2.a_bool;
not support
!error

#-------------------------------------------------------------------------
# TESTCASE: test_join TEST_ID: A1_B2_C1 TYPE: NEGATIVE TEST
#-------------------------------------------------------------------------
SELECT t1.a_int
FROM test_array t1
INNER JOIN test_array t2 ON t1.a_int=t2.a_int;
not support
!error

#-------------------------------------------------------------------------
# TESTCASE: test_join TEST_ID: A1_B2_C3 TYPE: NEGATIVE TEST
#-------------------------------------------------------------------------
SELECT a_int
FROM
  (SELECT *
   FROM test_array t1
   INNER JOIN test_array t2 ON t1.a_int=t2.a_int);
not support
!error

#-------------------------------------------------------------------------
# TESTCASE: test_join TEST_ID: A1_B2_C5 TYPE: NEGATIVE TEST
#-------------------------------------------------------------------------
WITH t1 AS
  (SELECT *
   FROM test_array)
SELECT t1.a_int
FROM t1
INNER JOIN test_array t2 ON t1.a_int=t2.a_int;
not support
!error

#-------------------------------------------------------------------------
# TESTCASE: test_join TEST_ID: A1_B3_C1 TYPE: NEGATIVE TEST
#-------------------------------------------------------------------------
SELECT t1.a_float
FROM test_array t1
INNER JOIN test_array t2 ON t1.a_float=t2.a_float;
not support
!error

#-------------------------------------------------------------------------
# TESTCASE: test_join TEST_ID: A1_B3_C3 TYPE: NEGATIVE TEST
#-------------------------------------------------------------------------
SELECT a_float
FROM
  (SELECT *
   FROM test_array t1
   INNER JOIN test_array t2 ON t1.a_float=t2.a_float);
not support
!error

#-------------------------------------------------------------------------
# TESTCASE: test_join TEST_ID: A1_B3_C5 TYPE: NEGATIVE TEST
#-------------------------------------------------------------------------
WITH t1 AS
  (SELECT *
   FROM test_array)
SELECT t1.a_float
FROM t1
INNER JOIN test_array t2 ON t1.a_float=t2.a_float;
not support
!error

#-------------------------------------------------------------------------
# TESTCASE: test_join TEST_ID: A1_B4_C1 TYPE: NEGATIVE TEST
#-------------------------------------------------------------------------
SELECT t1.a_str
FROM test_array t1
INNER JOIN test_array t2 ON t1.a_str=t2.a_str;
not support
!error

#-------------------------------------------------------------------------
# TESTCASE: test_join TEST_ID: A1_B4_C3 TYPE: NEGATIVE TEST
#-------------------------------------------------------------------------
SELECT a_str
FROM
  (SELECT *
   FROM test_array t1
   INNER JOIN test_array t2 ON t1.a_str=t2.a_str);
not support
!error

#-------------------------------------------------------------------------
# TESTCASE: test_join TEST_ID: A1_B4_C5 TYPE: NEGATIVE TEST
#-------------------------------------------------------------------------
WITH t1 AS
  (SELECT *
   FROM test_array)
SELECT t1.a_str
FROM t1
INNER JOIN test_array t2 ON t1.a_str=t2.a_str;
not support
!error

#-------------------------------------------------------------------------
# TESTCASE: test_join TEST_ID: A1_B5_C1 TYPE: NEGATIVE TEST
#-------------------------------------------------------------------------
SELECT t1.a_null
FROM test_array t1
INNER JOIN test_array t2 ON t1.a_null=t2.a_null;
not support
!error

#-------------------------------------------------------------------------
# TESTCASE: test_join TEST_ID: A1_B5_C3 TYPE: NEGATIVE TEST
#-------------------------------------------------------------------------
SELECT a_null
FROM
  (SELECT *
   FROM test_array t1
   INNER JOIN test_array t2 ON t1.a_null=t2.a_null);
not support
!error

#-------------------------------------------------------------------------
# TESTCASE: test_join TEST_ID: A1_B5_C5 TYPE: NEGATIVE TEST
#-------------------------------------------------------------------------
WITH t1 AS
  (SELECT *
   FROM test_array)
SELECT t1.a_null
FROM t1
INNER JOIN test_array t2 ON t1.a_null=t2.a_null;
not support
!error

#-------------------------------------------------------------------------
# TESTCASE: test_join TEST_ID: A1_B6_C1 TYPE: NEGATIVE TEST
#-------------------------------------------------------------------------
SELECT t1.a_empty
FROM test_array t1
INNER JOIN test_array t2 ON t1.a_empty=t2.a_empty;
not support
!error

#-------------------------------------------------------------------------
# TESTCASE: test_join TEST_ID: A1_B6_C3 TYPE: NEGATIVE TEST
#-------------------------------------------------------------------------
SELECT a_empty
FROM
  (SELECT *
   FROM test_array t1
   INNER JOIN test_array t2 ON t1.a_empty=t2.a_empty);
not support
!error

#-------------------------------------------------------------------------
# TESTCASE: test_join TEST_ID: A1_B6_C5 TYPE: NEGATIVE TEST
#-------------------------------------------------------------------------
WITH t1 AS
  (SELECT *
   FROM test_array)
SELECT t1.a_empty
FROM t1
INNER JOIN test_array t2 ON t1.a_empty=t2.a_empty;
not support
!error

#-------------------------------------------------------------------------
# TESTCASE: test_join TEST_ID: A1_B7_C1 TYPE: NEGATIVE TEST
#-------------------------------------------------------------------------
SELECT t1.a_mixed
FROM test_array t1
INNER JOIN test_array t2 ON t1.a_mixed=t2.a_mixed;
not support
!error

#-------------------------------------------------------------------------
# TESTCASE: test_join TEST_ID: A1_B7_C3 TYPE: NEGATIVE TEST
#-------------------------------------------------------------------------
SELECT a_mixed
FROM
  (SELECT *
   FROM test_array t1
   INNER JOIN test_array t2 ON t1.a_mixed=t2.a_mixed);
not support
!error

#-------------------------------------------------------------------------
# TESTCASE: test_join TEST_ID: A1_B7_C5 TYPE: NEGATIVE TEST
#-------------------------------------------------------------------------
WITH t1 AS
  (SELECT *
   FROM test_array)
SELECT t1.a_mixed
FROM t1
INNER JOIN test_array t2 ON t1.a_mixed=t2.a_mixed;
not support
!error

#-------------------------------------------------------------------------
# TESTCASE: test_join TEST_ID: A1_B8_C1 TYPE: NEGATIVE TEST
#-------------------------------------------------------------------------
SELECT t1.a_nested
FROM test_array t1
INNER JOIN test_array t2 ON t1.a_nested=t2.a_nested;
Cannot join
!error

#-------------------------------------------------------------------------
# TESTCASE: test_join TEST_ID: A1_B8_C3 TYPE: NEGATIVE TEST
#-------------------------------------------------------------------------
SELECT a_nested
FROM
  (SELECT *
   FROM test_array t1
   INNER JOIN test_array t2 ON t1.a_nested=t2.a_nested);
Cannot join
!error

#-------------------------------------------------------------------------
# TESTCASE: test_join TEST_ID: A1_B8_C5 TYPE: NEGATIVE TEST
#-------------------------------------------------------------------------
WITH t1 AS
  (SELECT *
   FROM test_array)
SELECT t1.a_nested
FROM t1
INNER JOIN test_array t2 ON t1.a_nested=t2.a_nested;
Cannot join
!error

#-------------------------------------------------------------------------
# TESTCASE: test_join TEST_ID: A2_B1_C1 TYPE: NEGATIVE TEST
#-------------------------------------------------------------------------
SELECT t1.a_bool
FROM test_array t1
JOIN test_array t2 ON t1.a_bool=t2.a_bool;
not support
!error

#-------------------------------------------------------------------------
# TESTCASE: test_join TEST_ID: A2_B1_C3 TYPE: NEGATIVE TEST
#-------------------------------------------------------------------------
SELECT a_bool
FROM
  (SELECT *
   FROM test_array t1
   JOIN test_array t2 ON t1.a_bool=t2.a_bool);
not support
!error

#-------------------------------------------------------------------------
# TESTCASE: test_join TEST_ID: A2_B1_C5 TYPE: NEGATIVE TEST
#-------------------------------------------------------------------------
WITH t1 AS
  (SELECT *
   FROM test_array)
SELECT t1.a_bool
FROM t1
JOIN test_array t2 ON t1.a_bool=t2.a_bool;
not support
!error

#-------------------------------------------------------------------------
# TESTCASE: test_join TEST_ID: A2_B2_C1 TYPE: NEGATIVE TEST
#-------------------------------------------------------------------------
SELECT t1.a_int
FROM test_array t1
JOIN test_array t2 ON t1.a_int=t2.a_int;
not support
!error

#-------------------------------------------------------------------------
# TESTCASE: test_join TEST_ID: A2_B2_C3 TYPE: NEGATIVE TEST
#-------------------------------------------------------------------------
SELECT a_int
FROM
  (SELECT *
   FROM test_array t1
   JOIN test_array t2 ON t1.a_int=t2.a_int);
not support
!error

#-------------------------------------------------------------------------
# TESTCASE: test_join TEST_ID: A2_B2_C5 TYPE: NEGATIVE TEST
#-------------------------------------------------------------------------
WITH t1 AS
  (SELECT *
   FROM test_array)
SELECT t1.a_int
FROM t1
JOIN test_array t2 ON t1.a_int=t2.a_int;
not support
!error

#-------------------------------------------------------------------------
# TESTCASE: test_join TEST_ID: A2_B3_C1 TYPE: NEGATIVE TEST
#-------------------------------------------------------------------------
SELECT t1.a_float
FROM test_array t1
JOIN test_array t2 ON t1.a_float=t2.a_float;
not support
!error

#-------------------------------------------------------------------------
# TESTCASE: test_join TEST_ID: A2_B3_C3 TYPE: NEGATIVE TEST
#-------------------------------------------------------------------------
SELECT a_float
FROM
  (SELECT *
   FROM test_array t1
   JOIN test_array t2 ON t1.a_float=t2.a_float);
not support
!error

#-------------------------------------------------------------------------
# TESTCASE: test_join TEST_ID: A2_B3_C5 TYPE: NEGATIVE TEST
#-------------------------------------------------------------------------
WITH t1 AS
  (SELECT *
   FROM test_array)
SELECT t1.a_float
FROM t1
JOIN test_array t2 ON t1.a_float=t2.a_float;
not support
!error

#-------------------------------------------------------------------------
# TESTCASE: test_join TEST_ID: A2_B4_C1 TYPE: NEGATIVE TEST
#-------------------------------------------------------------------------
SELECT t1.a_str
FROM test_array t1
JOIN test_array t2 ON t1.a_str=t2.a_str;
not support
!error

#-------------------------------------------------------------------------
# TESTCASE: test_join TEST_ID: A2_B4_C3 TYPE: NEGATIVE TEST
#-------------------------------------------------------------------------
SELECT a_str
FROM
  (SELECT *
   FROM test_array t1
   JOIN test_array t2 ON t1.a_str=t2.a_str);
not support
!error

#-------------------------------------------------------------------------
# TESTCASE: test_join TEST_ID: A2_B4_C5 TYPE: NEGATIVE TEST
#-------------------------------------------------------------------------
WITH t1 AS
  (SELECT *
   FROM test_array)
SELECT t1.a_str
FROM t1
JOIN test_array t2 ON t1.a_str=t2.a_str;
not support
!error

#-------------------------------------------------------------------------
# TESTCASE: test_join TEST_ID: A2_B5_C1 TYPE: NEGATIVE TEST
#-------------------------------------------------------------------------
SELECT t1.a_null
FROM test_array t1
JOIN test_array t2 ON t1.a_null=t2.a_null;
not support
!error

#-------------------------------------------------------------------------
# TESTCASE: test_join TEST_ID: A2_B5_C3 TYPE: NEGATIVE TEST
#-------------------------------------------------------------------------
SELECT a_null
FROM
  (SELECT *
   FROM test_array t1
   JOIN test_array t2 ON t1.a_null=t2.a_null);
not support
!error

#-------------------------------------------------------------------------
# TESTCASE: test_join TEST_ID: A2_B5_C5 TYPE: NEGATIVE TEST
#-------------------------------------------------------------------------
WITH t1 AS
  (SELECT *
   FROM test_array)
SELECT t1.a_null
FROM t1
JOIN test_array t2 ON t1.a_null=t2.a_null;
not support
!error

#-------------------------------------------------------------------------
# TESTCASE: test_join TEST_ID: A2_B6_C1 TYPE: NEGATIVE TEST
#-------------------------------------------------------------------------
SELECT t1.a_empty
FROM test_array t1
JOIN test_array t2 ON t1.a_empty=t2.a_empty;
not support
!error

#-------------------------------------------------------------------------
# TESTCASE: test_join TEST_ID: A2_B6_C3 TYPE: NEGATIVE TEST
#-------------------------------------------------------------------------
SELECT a_empty
FROM
  (SELECT *
   FROM test_array t1
   JOIN test_array t2 ON t1.a_empty=t2.a_empty);
not support
!error

#-------------------------------------------------------------------------
# TESTCASE: test_join TEST_ID: A2_B6_C5 TYPE: NEGATIVE TEST
#-------------------------------------------------------------------------
WITH t1 AS
  (SELECT *
   FROM test_array)
SELECT t1.a_empty
FROM t1
JOIN test_array t2 ON t1.a_empty=t2.a_empty;
not support
!error

#-------------------------------------------------------------------------
# TESTCASE: test_join TEST_ID: A2_B7_C1 TYPE: NEGATIVE TEST
#-------------------------------------------------------------------------
SELECT t1.a_mixed
FROM test_array t1
JOIN test_array t2 ON t1.a_mixed=t2.a_mixed;
not support
!error

#-------------------------------------------------------------------------
# TESTCASE: test_join TEST_ID: A2_B7_C3 TYPE: NEGATIVE TEST
#-------------------------------------------------------------------------
SELECT a_mixed
FROM
  (SELECT *
   FROM test_array t1
   JOIN test_array t2 ON t1.a_mixed=t2.a_mixed);
not support
!error

#-------------------------------------------------------------------------
# TESTCASE: test_join TEST_ID: A2_B7_C5 TYPE: NEGATIVE TEST
#-------------------------------------------------------------------------
WITH t1 AS
  (SELECT *
   FROM test_array)
SELECT t1.a_mixed
FROM t1
JOIN test_array t2 ON t1.a_mixed=t2.a_mixed;
not support
!error

#-------------------------------------------------------------------------
# TESTCASE: test_join TEST_ID: A2_B8_C1 TYPE: NEGATIVE TEST
#-------------------------------------------------------------------------
SELECT t1.a_nested
FROM test_array t1
JOIN test_array t2 ON t1.a_nested=t2.a_nested;
Cannot join
!error

#-------------------------------------------------------------------------
# TESTCASE: test_join TEST_ID: A2_B8_C3 TYPE: NEGATIVE TEST
#-------------------------------------------------------------------------
SELECT a_nested
FROM
  (SELECT *
   FROM test_array t1
   JOIN test_array t2 ON t1.a_nested=t2.a_nested);
Cannot join
!error

#-------------------------------------------------------------------------
# TESTCASE: test_join TEST_ID: A2_B8_C5 TYPE: NEGATIVE TEST
#-------------------------------------------------------------------------
WITH t1 AS
  (SELECT *
   FROM test_array)
SELECT t1.a_nested
FROM t1
JOIN test_array t2 ON t1.a_nested=t2.a_nested;
Cannot join
!error

#-------------------------------------------------------------------------
# TESTCASE: test_join TEST_ID: A3_B1_C1 TYPE: NEGATIVE TEST
#-------------------------------------------------------------------------
SELECT t1.a_bool
FROM test_array t1
LEFT JOIN test_array t2 ON t1.a_bool=t2.a_bool;
not support
!error

#-------------------------------------------------------------------------
# TESTCASE: test_join TEST_ID: A3_B1_C3 TYPE: NEGATIVE TEST
#-------------------------------------------------------------------------
SELECT a_bool
FROM
  (SELECT *
   FROM test_array t1
   LEFT JOIN test_array t2 ON t1.a_bool=t2.a_bool);
not support
!error

#-------------------------------------------------------------------------
# TESTCASE: test_join TEST_ID: A3_B1_C5 TYPE: NEGATIVE TEST
#-------------------------------------------------------------------------
WITH t1 AS
  (SELECT *
   FROM test_array)
SELECT t1.a_bool
FROM t1
LEFT JOIN test_array t2 ON t1.a_bool=t2.a_bool;
not support
!error

#-------------------------------------------------------------------------
# TESTCASE: test_join TEST_ID: A3_B2_C1 TYPE: NEGATIVE TEST
#-------------------------------------------------------------------------
SELECT t1.a_int
FROM test_array t1
LEFT JOIN test_array t2 ON t1.a_int=t2.a_int;
not support
!error

#-------------------------------------------------------------------------
# TESTCASE: test_join TEST_ID: A3_B2_C3 TYPE: NEGATIVE TEST
#-------------------------------------------------------------------------
SELECT a_int
FROM
  (SELECT *
   FROM test_array t1
   LEFT JOIN test_array t2 ON t1.a_int=t2.a_int);
not support
!error

#-------------------------------------------------------------------------
# TESTCASE: test_join TEST_ID: A3_B2_C5 TYPE: NEGATIVE TEST
#-------------------------------------------------------------------------
WITH t1 AS
  (SELECT *
   FROM test_array)
SELECT t1.a_int
FROM t1
LEFT JOIN test_array t2 ON t1.a_int=t2.a_int;
not support
!error

#-------------------------------------------------------------------------
# TESTCASE: test_join TEST_ID: A3_B3_C1 TYPE: NEGATIVE TEST
#-------------------------------------------------------------------------
SELECT t1.a_float
FROM test_array t1
LEFT JOIN test_array t2 ON t1.a_float=t2.a_float;
not support
!error

#-------------------------------------------------------------------------
# TESTCASE: test_join TEST_ID: A3_B3_C3 TYPE: NEGATIVE TEST
#-------------------------------------------------------------------------
SELECT a_float
FROM
  (SELECT *
   FROM test_array t1
   LEFT JOIN test_array t2 ON t1.a_float=t2.a_float);
not support
!error

#-------------------------------------------------------------------------
# TESTCASE: test_join TEST_ID: A3_B3_C5 TYPE: NEGATIVE TEST
#-------------------------------------------------------------------------
WITH t1 AS
  (SELECT *
   FROM test_array)
SELECT t1.a_float
FROM t1
LEFT JOIN test_array t2 ON t1.a_float=t2.a_float;
not support
!error

#-------------------------------------------------------------------------
# TESTCASE: test_join TEST_ID: A3_B4_C1 TYPE: NEGATIVE TEST
#-------------------------------------------------------------------------
SELECT t1.a_str
FROM test_array t1
LEFT JOIN test_array t2 ON t1.a_str=t2.a_str;
not support
!error

#-------------------------------------------------------------------------
# TESTCASE: test_join TEST_ID: A3_B4_C3 TYPE: NEGATIVE TEST
#-------------------------------------------------------------------------
SELECT a_str
FROM
  (SELECT *
   FROM test_array t1
   LEFT JOIN test_array t2 ON t1.a_str=t2.a_str);
not support
!error

#-------------------------------------------------------------------------
# TESTCASE: test_join TEST_ID: A3_B4_C5 TYPE: NEGATIVE TEST
#-------------------------------------------------------------------------
WITH t1 AS
  (SELECT *
   FROM test_array)
SELECT t1.a_str
FROM t1
LEFT JOIN test_array t2 ON t1.a_str=t2.a_str;
not support
!error

#-------------------------------------------------------------------------
# TESTCASE: test_join TEST_ID: A3_B5_C1 TYPE: NEGATIVE TEST
#-------------------------------------------------------------------------
SELECT t1.a_null
FROM test_array t1
LEFT JOIN test_array t2 ON t1.a_null=t2.a_null;
not support
!error

#-------------------------------------------------------------------------
# TESTCASE: test_join TEST_ID: A3_B5_C3 TYPE: NEGATIVE TEST
#-------------------------------------------------------------------------
SELECT a_null
FROM
  (SELECT *
   FROM test_array t1
   LEFT JOIN test_array t2 ON t1.a_null=t2.a_null);
not support
!error

#-------------------------------------------------------------------------
# TESTCASE: test_join TEST_ID: A3_B5_C5 TYPE: NEGATIVE TEST
#-------------------------------------------------------------------------
WITH t1 AS
  (SELECT *
   FROM test_array)
SELECT t1.a_null
FROM t1
LEFT JOIN test_array t2 ON t1.a_null=t2.a_null;
not support
!error

#-------------------------------------------------------------------------
# TESTCASE: test_join TEST_ID: A3_B6_C1 TYPE: NEGATIVE TEST
#-------------------------------------------------------------------------
SELECT t1.a_empty
FROM test_array t1
LEFT JOIN test_array t2 ON t1.a_empty=t2.a_empty;
not support
!error

#-------------------------------------------------------------------------
# TESTCASE: test_join TEST_ID: A3_B6_C3 TYPE: NEGATIVE TEST
#-------------------------------------------------------------------------
SELECT a_empty
FROM
  (SELECT *
   FROM test_array t1
   LEFT JOIN test_array t2 ON t1.a_empty=t2.a_empty);
not support
!error

#-------------------------------------------------------------------------
# TESTCASE: test_join TEST_ID: A3_B6_C5 TYPE: NEGATIVE TEST
#-------------------------------------------------------------------------
WITH t1 AS
  (SELECT *
   FROM test_array)
SELECT t1.a_empty
FROM t1
LEFT JOIN test_array t2 ON t1.a_empty=t2.a_empty;
not support
!error

#-------------------------------------------------------------------------
# TESTCASE: test_join TEST_ID: A3_B7_C1 TYPE: NEGATIVE TEST
#-------------------------------------------------------------------------
SELECT t1.a_mixed
FROM test_array t1
LEFT JOIN test_array t2 ON t1.a_mixed=t2.a_mixed;
not support
!error

#-------------------------------------------------------------------------
# TESTCASE: test_join TEST_ID: A3_B7_C3 TYPE: NEGATIVE TEST
#-------------------------------------------------------------------------
SELECT a_mixed
FROM
  (SELECT *
   FROM test_array t1
   LEFT JOIN test_array t2 ON t1.a_mixed=t2.a_mixed);
not support
!error

#-------------------------------------------------------------------------
# TESTCASE: test_join TEST_ID: A3_B7_C5 TYPE: NEGATIVE TEST
#-------------------------------------------------------------------------
WITH t1 AS
  (SELECT *
   FROM test_array)
SELECT t1.a_mixed
FROM t1
LEFT JOIN test_array t2 ON t1.a_mixed=t2.a_mixed;
not support
!error

#-------------------------------------------------------------------------
# TESTCASE: test_join TEST_ID: A3_B8_C1 TYPE: NEGATIVE TEST
#-------------------------------------------------------------------------
SELECT t1.a_nested
FROM test_array t1
LEFT JOIN test_array t2 ON t1.a_nested=t2.a_nested;
Cannot join
!error

#-------------------------------------------------------------------------
# TESTCASE: test_join TEST_ID: A3_B8_C3 TYPE: NEGATIVE TEST
#-------------------------------------------------------------------------
SELECT a_nested
FROM
  (SELECT *
   FROM test_array t1
   LEFT JOIN test_array t2 ON t1.a_nested=t2.a_nested);
Cannot join
!error

#-------------------------------------------------------------------------
# TESTCASE: test_join TEST_ID: A3_B8_C5 TYPE: NEGATIVE TEST
#-------------------------------------------------------------------------
WITH t1 AS
  (SELECT *
   FROM test_array)
SELECT t1.a_nested
FROM t1
LEFT JOIN test_array t2 ON t1.a_nested=t2.a_nested;
Cannot join
!error

#-------------------------------------------------------------------------
# TESTCASE: test_join TEST_ID: A4_B1_C1 TYPE: NEGATIVE TEST
#-------------------------------------------------------------------------
SELECT t1.a_bool
FROM test_array t1
RIGHT JOIN test_array t2 ON t1.a_bool=t2.a_bool;
not support
!error

#-------------------------------------------------------------------------
# TESTCASE: test_join TEST_ID: A4_B1_C3 TYPE: NEGATIVE TEST
#-------------------------------------------------------------------------
SELECT a_bool
FROM
  (SELECT *
   FROM test_array t1
   RIGHT JOIN test_array t2 ON t1.a_bool=t2.a_bool);
not support
!error

#-------------------------------------------------------------------------
# TESTCASE: test_join TEST_ID: A4_B1_C5 TYPE: NEGATIVE TEST
#-------------------------------------------------------------------------
WITH t1 AS
  (SELECT *
   FROM test_array)
SELECT t1.a_bool
FROM t1
RIGHT JOIN test_array t2 ON t1.a_bool=t2.a_bool;
not support
!error

#-------------------------------------------------------------------------
# TESTCASE: test_join TEST_ID: A4_B2_C1 TYPE: NEGATIVE TEST
#-------------------------------------------------------------------------
SELECT t1.a_int
FROM test_array t1
RIGHT JOIN test_array t2 ON t1.a_int=t2.a_int;
not support
!error

#-------------------------------------------------------------------------
# TESTCASE: test_join TEST_ID: A4_B2_C3 TYPE: NEGATIVE TEST
#-------------------------------------------------------------------------
SELECT a_int
FROM
  (SELECT *
   FROM test_array t1
   RIGHT JOIN test_array t2 ON t1.a_int=t2.a_int);
not support
!error

#-------------------------------------------------------------------------
# TESTCASE: test_join TEST_ID: A4_B2_C5 TYPE: NEGATIVE TEST
#-------------------------------------------------------------------------
WITH t1 AS
  (SELECT *
   FROM test_array)
SELECT t1.a_int
FROM t1
RIGHT JOIN test_array t2 ON t1.a_int=t2.a_int;
not support
!error

#-------------------------------------------------------------------------
# TESTCASE: test_join TEST_ID: A4_B3_C1 TYPE: NEGATIVE TEST
#-------------------------------------------------------------------------
SELECT t1.a_float
FROM test_array t1
RIGHT JOIN test_array t2 ON t1.a_float=t2.a_float;
not support
!error

#-------------------------------------------------------------------------
# TESTCASE: test_join TEST_ID: A4_B3_C3 TYPE: NEGATIVE TEST
#-------------------------------------------------------------------------
SELECT a_float
FROM
  (SELECT *
   FROM test_array t1
   RIGHT JOIN test_array t2 ON t1.a_float=t2.a_float);
not support
!error

#-------------------------------------------------------------------------
# TESTCASE: test_join TEST_ID: A4_B3_C5 TYPE: NEGATIVE TEST
#-------------------------------------------------------------------------
WITH t1 AS
  (SELECT *
   FROM test_array)
SELECT t1.a_float
FROM t1
RIGHT JOIN test_array t2 ON t1.a_float=t2.a_float;
not support
!error

#-------------------------------------------------------------------------
# TESTCASE: test_join TEST_ID: A4_B4_C1 TYPE: NEGATIVE TEST
#-------------------------------------------------------------------------
SELECT t1.a_str
FROM test_array t1
RIGHT JOIN test_array t2 ON t1.a_str=t2.a_str;
not support
!error

#-------------------------------------------------------------------------
# TESTCASE: test_join TEST_ID: A4_B4_C3 TYPE: NEGATIVE TEST
#-------------------------------------------------------------------------
SELECT a_str
FROM
  (SELECT *
   FROM test_array t1
   RIGHT JOIN test_array t2 ON t1.a_str=t2.a_str);
not support
!error

#-------------------------------------------------------------------------
# TESTCASE: test_join TEST_ID: A4_B4_C5 TYPE: NEGATIVE TEST
#-------------------------------------------------------------------------
WITH t1 AS
  (SELECT *
   FROM test_array)
SELECT t1.a_str
FROM t1
RIGHT JOIN test_array t2 ON t1.a_str=t2.a_str;
not support
!error

#-------------------------------------------------------------------------
# TESTCASE: test_join TEST_ID: A4_B5_C1 TYPE: NEGATIVE TEST
#-------------------------------------------------------------------------
SELECT t1.a_null
FROM test_array t1
RIGHT JOIN test_array t2 ON t1.a_null=t2.a_null;
not support
!error

#-------------------------------------------------------------------------
# TESTCASE: test_join TEST_ID: A4_B5_C3 TYPE: NEGATIVE TEST
#-------------------------------------------------------------------------
SELECT a_null
FROM
  (SELECT *
   FROM test_array t1
   RIGHT JOIN test_array t2 ON t1.a_null=t2.a_null);
not support
!error

#-------------------------------------------------------------------------
# TESTCASE: test_join TEST_ID: A4_B5_C5 TYPE: NEGATIVE TEST
#-------------------------------------------------------------------------
WITH t1 AS
  (SELECT *
   FROM test_array)
SELECT t1.a_null
FROM t1
RIGHT JOIN test_array t2 ON t1.a_null=t2.a_null;
not support
!error

#-------------------------------------------------------------------------
# TESTCASE: test_join TEST_ID: A4_B6_C1 TYPE: NEGATIVE TEST
#-------------------------------------------------------------------------
SELECT t1.a_empty
FROM test_array t1
RIGHT JOIN test_array t2 ON t1.a_empty=t2.a_empty;
not support
!error

#-------------------------------------------------------------------------
# TESTCASE: test_join TEST_ID: A4_B6_C3 TYPE: NEGATIVE TEST
#-------------------------------------------------------------------------
SELECT a_empty
FROM
  (SELECT *
   FROM test_array t1
   RIGHT JOIN test_array t2 ON t1.a_empty=t2.a_empty);
not support
!error

#-------------------------------------------------------------------------
# TESTCASE: test_join TEST_ID: A4_B6_C5 TYPE: NEGATIVE TEST
#-------------------------------------------------------------------------
WITH t1 AS
  (SELECT *
   FROM test_array)
SELECT t1.a_empty
FROM t1
RIGHT JOIN test_array t2 ON t1.a_empty=t2.a_empty;
not support
!error

#-------------------------------------------------------------------------
# TESTCASE: test_join TEST_ID: A4_B7_C1 TYPE: NEGATIVE TEST
#-------------------------------------------------------------------------
SELECT t1.a_mixed
FROM test_array t1
RIGHT JOIN test_array t2 ON t1.a_mixed=t2.a_mixed;
not support
!error

#-------------------------------------------------------------------------
# TESTCASE: test_join TEST_ID: A4_B7_C3 TYPE: NEGATIVE TEST
#-------------------------------------------------------------------------
SELECT a_mixed
FROM
  (SELECT *
   FROM test_array t1
   RIGHT JOIN test_array t2 ON t1.a_mixed=t2.a_mixed);
not support
!error

#-------------------------------------------------------------------------
# TESTCASE: test_join TEST_ID: A4_B7_C5 TYPE: NEGATIVE TEST
#-------------------------------------------------------------------------
WITH t1 AS
  (SELECT *
   FROM test_array)
SELECT t1.a_mixed
FROM t1
RIGHT JOIN test_array t2 ON t1.a_mixed=t2.a_mixed;
not support
!error

#-------------------------------------------------------------------------
# TESTCASE: test_join TEST_ID: A4_B8_C1 TYPE: NEGATIVE TEST
#-------------------------------------------------------------------------
SELECT t1.a_nested
FROM test_array t1
RIGHT JOIN test_array t2 ON t1.a_nested=t2.a_nested;
org.apache.calcite.avatica.AvaticaSqlException: Error -1 (00000) : Error while executing SQL "SELECT t1.a_nested
FROM test_array t1
RIGHT JOIN test_array t2 ON t1.a_nested=t2.a_nested": Remote driver error: QueryInterruptedException: Uncategorized calcite error message: [RIGHT JOIN is not supported by engine[msq-task] with sqlJoinAlgorithm[broadcast]. Try sqlJoinAlgorithm[sortMerge].] -> DruidException: Uncategorized calcite error message: [RIGHT JOIN is not supported by engine[msq-task] with sqlJoinAlgorithm[broadcast]. Try sqlJoinAlgorithm[sortMerge].] -> ValidationException: RIGHT JOIN is not supported by engine[msq-task] with sqlJoinAlgorithm[broadcast]. Try sqlJoinAlgorithm[sortMerge].
	at org.apache.calcite.avatica.Helper.createException(Helper.java:54)
	at org.apache.calcite.avatica.Helper.createException(Helper.java:41)
	at org.apache.calcite.avatica.AvaticaStatement.executeInternal(AvaticaStatement.java:164)
	at org.apache.calcite.avatica.AvaticaStatement.executeQuery(AvaticaStatement.java:228)
	at net.hydromatic.quidem.Quidem.checkResult(Quidem.java:299)
	at net.hydromatic.quidem.Quidem.access$2600(Quidem.java:57)
	at net.hydromatic.quidem.Quidem$ContextImpl.checkResult(Quidem.java:1636)
	at net.hydromatic.quidem.Quidem$CheckResultCommand.execute(Quidem.java:941)
	at net.hydromatic.quidem.Quidem$CompositeCommand.execute(Quidem.java:1437)
	at net.hydromatic.quidem.Quidem.execute(Quidem.java:190)
	at org.apache.druid.quidem.DruidQuidemTestBase$DruidQuidemRunner.run(DruidQuidemTestBase.java:282)
	at org.apache.druid.quidem.DruidQuidemTestBase.test(DruidQuidemTestBase.java:223)
	at jdk.internal.reflect.GeneratedMethodAccessor188.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.junit.platform.commons.util.ReflectionUtils.invokeMethod(ReflectionUtils.java:728)
	at org.junit.jupiter.engine.execution.MethodInvocation.proceed(MethodInvocation.java:60)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain$ValidatingInvocation.proceed(InvocationInterceptorChain.java:131)
	at org.junit.jupiter.engine.extension.TimeoutExtension.intercept(TimeoutExtension.java:156)
	at org.junit.jupiter.engine.extension.TimeoutExtension.interceptTestableMethod(TimeoutExtension.java:147)
	at org.junit.jupiter.engine.extension.TimeoutExtension.interceptTestTemplateMethod(TimeoutExtension.java:94)
	at org.junit.jupiter.engine.execution.InterceptingExecutableInvoker$ReflectiveInterceptorCall.lambda$ofVoidMethod$0(InterceptingExecutableInvoker.java:103)
	at org.junit.jupiter.engine.execution.InterceptingExecutableInvoker.lambda$invoke$0(InterceptingExecutableInvoker.java:93)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain$InterceptedInvocation.proceed(InvocationInterceptorChain.java:106)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain.proceed(InvocationInterceptorChain.java:64)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain.chainAndInvoke(InvocationInterceptorChain.java:45)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain.invoke(InvocationInterceptorChain.java:37)
	at org.junit.jupiter.engine.execution.InterceptingExecutableInvoker.invoke(InterceptingExecutableInvoker.java:92)
	at org.junit.jupiter.engine.execution.InterceptingExecutableInvoker.invoke(InterceptingExecutableInvoker.java:86)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$invokeTestMethod$7(TestMethodTestDescriptor.java:218)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.invokeTestMethod(TestMethodTestDescriptor.java:214)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:139)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:69)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:151)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.submit(SameThreadHierarchicalTestExecutorService.java:35)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask$DefaultDynamicTestExecutor.execute(NodeTestTask.java:226)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask$DefaultDynamicTestExecutor.execute(NodeTestTask.java:204)
	at org.junit.jupiter.engine.descriptor.TestTemplateTestDescriptor.execute(TestTemplateTestDescriptor.java:142)
	at org.junit.jupiter.engine.descriptor.TestTemplateTestDescriptor.lambda$execute$2(TestTemplateTestDescriptor.java:110)
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:183)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)
	at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:179)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:183)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:183)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)
	at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1625)
	at java.base/java.util.stream.ReferencePipeline$Head.forEach(ReferencePipeline.java:762)
	at java.base/java.util.stream.ReferencePipeline$7$1.accept(ReferencePipeline.java:276)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)
	at java.base/java.util.Spliterators$ArraySpliterator.forEachRemaining(Spliterators.java:992)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:509)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:499)
	at java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:150)
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:173)
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)
	at java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:596)
	at java.base/java.util.stream.ReferencePipeline$7$1.accept(ReferencePipeline.java:276)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)
	at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1625)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:509)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:499)
	at java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:150)
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:173)
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)
	at java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:596)
	at java.base/java.util.stream.ReferencePipeline$7$1.accept(ReferencePipeline.java:276)
	at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1625)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:509)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:499)
	at java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:150)
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:173)
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)
	at java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:596)
	at org.junit.jupiter.engine.descriptor.TestTemplateTestDescriptor.execute(TestTemplateTestDescriptor.java:110)
	at org.junit.jupiter.engine.descriptor.TestTemplateTestDescriptor.execute(TestTemplateTestDescriptor.java:44)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:151)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.submit(SameThreadHierarchicalTestExecutorService.java:35)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:57)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:54)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:198)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:169)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:93)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.lambda$execute$0(EngineExecutionOrchestrator.java:58)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.withInterceptedStreams(EngineExecutionOrchestrator.java:141)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:57)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:103)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:85)
	at org.junit.platform.launcher.core.DelegatingLauncher.execute(DelegatingLauncher.java:47)
	at org.apache.maven.surefire.junitplatform.LazyLauncher.execute(LazyLauncher.java:56)
	at org.apache.maven.surefire.junitplatform.JUnitPlatformProvider.execute(JUnitPlatformProvider.java:184)
	at org.apache.maven.surefire.junitplatform.JUnitPlatformProvider.invokeAllTests(JUnitPlatformProvider.java:148)
	at org.apache.maven.surefire.junitplatform.JUnitPlatformProvider.invoke(JUnitPlatformProvider.java:122)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:385)
	at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:162)
	at org.apache.maven.surefire.booter.ForkedBooter.run(ForkedBooter.java:507)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:495)
QueryInterruptedException{msg=Uncategorized calcite error message: [RIGHT JOIN is not supported by engine[msq-task] with sqlJoinAlgorithm[broadcast]. Try sqlJoinAlgorithm[sortMerge].], code=Unknown exception, class=org.apache.druid.error.DruidException, host=null}
	at org.apache.druid.query.QueryInterruptedException.wrapIfNeeded(QueryInterruptedException.java:113)
	at org.apache.druid.sql.avatica.ErrorHandler.sanitize(ErrorHandler.java:82)
	at org.apache.druid.sql.avatica.DruidMeta.mapException(DruidMeta.java:395)
	at org.apache.druid.sql.avatica.DruidMeta.prepareAndExecute(DruidMeta.java:362)
	at org.apache.calcite.avatica.remote.LocalService.apply(LocalService.java:212)
	at org.apache.calcite.avatica.remote.Service$PrepareAndExecuteRequest.accept(Service.java:952)
	at org.apache.calcite.avatica.remote.Service$PrepareAndExecuteRequest.accept(Service.java:904)
	at org.apache.calcite.avatica.remote.AbstractHandler.apply(AbstractHandler.java:94)
	at org.apache.calcite.avatica.remote.JsonHandler.apply(JsonHandler.java:52)
	at org.apache.calcite.avatica.server.AvaticaJsonHandler.handle(AvaticaJsonHandler.java:133)
	at org.apache.druid.sql.avatica.DruidAvaticaJsonHandler.handle(DruidAvaticaJsonHandler.java:61)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:127)
	at org.eclipse.jetty.server.Server.handle(Server.java:516)
	at org.eclipse.jetty.server.HttpChannel.lambda$handle$1(HttpChannel.java:487)
	at org.eclipse.jetty.server.HttpChannel.dispatch(HttpChannel.java:732)
	at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:479)
	at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:277)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.succeeded(AbstractConnection.java:311)
	at org.eclipse.jetty.io.FillInterest.fillable(FillInterest.java:105)
	at org.eclipse.jetty.io.ChannelEndPoint$1.run(ChannelEndPoint.java:104)
	at org.eclipse.jetty.util.thread.strategy.EatWhatYouKill.runTask(EatWhatYouKill.java:338)
	at org.eclipse.jetty.util.thread.strategy.EatWhatYouKill.doProduce(EatWhatYouKill.java:315)
	at org.eclipse.jetty.util.thread.strategy.EatWhatYouKill.tryProduce(EatWhatYouKill.java:173)
	at org.eclipse.jetty.util.thread.strategy.EatWhatYouKill.run(EatWhatYouKill.java:131)
	at org.eclipse.jetty.util.thread.ReservedThreadExecutor$ReservedThread.run(ReservedThreadExecutor.java:409)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:883)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$Runner.run(QueuedThreadPool.java:1034)
	at java.base/java.lang.Thread.run(Thread.java:840)
Caused by: org.apache.druid.error.DruidException: Uncategorized calcite error message: [RIGHT JOIN is not supported by engine[msq-task] with sqlJoinAlgorithm[broadcast]. Try sqlJoinAlgorithm[sortMerge].]
	at org.apache.druid.sql.calcite.planner.DruidPlanner.parseValidationMessage(DruidPlanner.java:454)
	at org.apache.druid.sql.calcite.planner.DruidPlanner.translateException(DruidPlanner.java:352)
	at org.apache.druid.sql.calcite.planner.QueryHandler.plan(QueryHandler.java:246)
	at org.apache.druid.sql.calcite.planner.DruidPlanner.plan(DruidPlanner.java:267)
	at org.apache.druid.sql.DirectStatement.createPlan(DirectStatement.java:255)
	at org.apache.druid.sql.DirectStatement.plan(DirectStatement.java:223)
	at org.apache.druid.sql.DirectStatement.execute(DirectStatement.java:184)
	at org.apache.druid.sql.avatica.DruidJdbcResultSet.lambda$execute$0(DruidJdbcResultSet.java:239)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	... 1 more
Caused by: org.apache.calcite.tools.ValidationException: RIGHT JOIN is not supported by engine[msq-task] with sqlJoinAlgorithm[broadcast]. Try sqlJoinAlgorithm[sortMerge].
	at org.apache.druid.sql.calcite.planner.QueryValidations.validateNoIllegalRightyJoins(QueryValidations.java:78)
	at org.apache.druid.sql.calcite.planner.QueryValidations.validateLogicalQueryForDruid(QueryValidations.java:45)
	at org.apache.druid.sql.calcite.planner.QueryHandler.planWithDruidConvention(QueryHandler.java:540)
	at org.apache.druid.sql.calcite.planner.QueryHandler$SelectHandler.planForDruid(QueryHandler.java:735)
	at org.apache.druid.sql.calcite.planner.QueryHandler.plan(QueryHandler.java:209)
	... 9 more

!error

#-------------------------------------------------------------------------
# TESTCASE: test_join TEST_ID: A4_B8_C3 TYPE: NEGATIVE TEST
#-------------------------------------------------------------------------
SELECT a_nested
FROM
  (SELECT *
   FROM test_array t1
   RIGHT JOIN test_array t2 ON t1.a_nested=t2.a_nested);
org.apache.calcite.avatica.AvaticaSqlException: Error -1 (00000) : Error while executing SQL "SELECT a_nested
FROM
  (SELECT *
   FROM test_array t1
   RIGHT JOIN test_array t2 ON t1.a_nested=t2.a_nested)": Remote driver error: QueryInterruptedException: Uncategorized calcite error message: [RIGHT JOIN is not supported by engine[msq-task] with sqlJoinAlgorithm[broadcast]. Try sqlJoinAlgorithm[sortMerge].] -> DruidException: Uncategorized calcite error message: [RIGHT JOIN is not supported by engine[msq-task] with sqlJoinAlgorithm[broadcast]. Try sqlJoinAlgorithm[sortMerge].] -> ValidationException: RIGHT JOIN is not supported by engine[msq-task] with sqlJoinAlgorithm[broadcast]. Try sqlJoinAlgorithm[sortMerge].
	at org.apache.calcite.avatica.Helper.createException(Helper.java:54)
	at org.apache.calcite.avatica.Helper.createException(Helper.java:41)
	at org.apache.calcite.avatica.AvaticaStatement.executeInternal(AvaticaStatement.java:164)
	at org.apache.calcite.avatica.AvaticaStatement.executeQuery(AvaticaStatement.java:228)
	at net.hydromatic.quidem.Quidem.checkResult(Quidem.java:299)
	at net.hydromatic.quidem.Quidem.access$2600(Quidem.java:57)
	at net.hydromatic.quidem.Quidem$ContextImpl.checkResult(Quidem.java:1636)
	at net.hydromatic.quidem.Quidem$CheckResultCommand.execute(Quidem.java:941)
	at net.hydromatic.quidem.Quidem$CompositeCommand.execute(Quidem.java:1437)
	at net.hydromatic.quidem.Quidem.execute(Quidem.java:190)
	at org.apache.druid.quidem.DruidQuidemTestBase$DruidQuidemRunner.run(DruidQuidemTestBase.java:282)
	at org.apache.druid.quidem.DruidQuidemTestBase.test(DruidQuidemTestBase.java:223)
	at jdk.internal.reflect.GeneratedMethodAccessor188.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.junit.platform.commons.util.ReflectionUtils.invokeMethod(ReflectionUtils.java:728)
	at org.junit.jupiter.engine.execution.MethodInvocation.proceed(MethodInvocation.java:60)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain$ValidatingInvocation.proceed(InvocationInterceptorChain.java:131)
	at org.junit.jupiter.engine.extension.TimeoutExtension.intercept(TimeoutExtension.java:156)
	at org.junit.jupiter.engine.extension.TimeoutExtension.interceptTestableMethod(TimeoutExtension.java:147)
	at org.junit.jupiter.engine.extension.TimeoutExtension.interceptTestTemplateMethod(TimeoutExtension.java:94)
	at org.junit.jupiter.engine.execution.InterceptingExecutableInvoker$ReflectiveInterceptorCall.lambda$ofVoidMethod$0(InterceptingExecutableInvoker.java:103)
	at org.junit.jupiter.engine.execution.InterceptingExecutableInvoker.lambda$invoke$0(InterceptingExecutableInvoker.java:93)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain$InterceptedInvocation.proceed(InvocationInterceptorChain.java:106)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain.proceed(InvocationInterceptorChain.java:64)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain.chainAndInvoke(InvocationInterceptorChain.java:45)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain.invoke(InvocationInterceptorChain.java:37)
	at org.junit.jupiter.engine.execution.InterceptingExecutableInvoker.invoke(InterceptingExecutableInvoker.java:92)
	at org.junit.jupiter.engine.execution.InterceptingExecutableInvoker.invoke(InterceptingExecutableInvoker.java:86)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$invokeTestMethod$7(TestMethodTestDescriptor.java:218)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.invokeTestMethod(TestMethodTestDescriptor.java:214)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:139)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:69)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:151)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.submit(SameThreadHierarchicalTestExecutorService.java:35)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask$DefaultDynamicTestExecutor.execute(NodeTestTask.java:226)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask$DefaultDynamicTestExecutor.execute(NodeTestTask.java:204)
	at org.junit.jupiter.engine.descriptor.TestTemplateTestDescriptor.execute(TestTemplateTestDescriptor.java:142)
	at org.junit.jupiter.engine.descriptor.TestTemplateTestDescriptor.lambda$execute$2(TestTemplateTestDescriptor.java:110)
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:183)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)
	at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:179)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:183)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:183)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)
	at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1625)
	at java.base/java.util.stream.ReferencePipeline$Head.forEach(ReferencePipeline.java:762)
	at java.base/java.util.stream.ReferencePipeline$7$1.accept(ReferencePipeline.java:276)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)
	at java.base/java.util.Spliterators$ArraySpliterator.forEachRemaining(Spliterators.java:992)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:509)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:499)
	at java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:150)
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:173)
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)
	at java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:596)
	at java.base/java.util.stream.ReferencePipeline$7$1.accept(ReferencePipeline.java:276)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)
	at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1625)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:509)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:499)
	at java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:150)
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:173)
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)
	at java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:596)
	at java.base/java.util.stream.ReferencePipeline$7$1.accept(ReferencePipeline.java:276)
	at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1625)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:509)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:499)
	at java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:150)
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:173)
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)
	at java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:596)
	at org.junit.jupiter.engine.descriptor.TestTemplateTestDescriptor.execute(TestTemplateTestDescriptor.java:110)
	at org.junit.jupiter.engine.descriptor.TestTemplateTestDescriptor.execute(TestTemplateTestDescriptor.java:44)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:151)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.submit(SameThreadHierarchicalTestExecutorService.java:35)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:57)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:54)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:198)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:169)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:93)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.lambda$execute$0(EngineExecutionOrchestrator.java:58)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.withInterceptedStreams(EngineExecutionOrchestrator.java:141)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:57)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:103)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:85)
	at org.junit.platform.launcher.core.DelegatingLauncher.execute(DelegatingLauncher.java:47)
	at org.apache.maven.surefire.junitplatform.LazyLauncher.execute(LazyLauncher.java:56)
	at org.apache.maven.surefire.junitplatform.JUnitPlatformProvider.execute(JUnitPlatformProvider.java:184)
	at org.apache.maven.surefire.junitplatform.JUnitPlatformProvider.invokeAllTests(JUnitPlatformProvider.java:148)
	at org.apache.maven.surefire.junitplatform.JUnitPlatformProvider.invoke(JUnitPlatformProvider.java:122)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:385)
	at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:162)
	at org.apache.maven.surefire.booter.ForkedBooter.run(ForkedBooter.java:507)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:495)
QueryInterruptedException{msg=Uncategorized calcite error message: [RIGHT JOIN is not supported by engine[msq-task] with sqlJoinAlgorithm[broadcast]. Try sqlJoinAlgorithm[sortMerge].], code=Unknown exception, class=org.apache.druid.error.DruidException, host=null}
	at org.apache.druid.query.QueryInterruptedException.wrapIfNeeded(QueryInterruptedException.java:113)
	at org.apache.druid.sql.avatica.ErrorHandler.sanitize(ErrorHandler.java:82)
	at org.apache.druid.sql.avatica.DruidMeta.mapException(DruidMeta.java:395)
	at org.apache.druid.sql.avatica.DruidMeta.prepareAndExecute(DruidMeta.java:362)
	at org.apache.calcite.avatica.remote.LocalService.apply(LocalService.java:212)
	at org.apache.calcite.avatica.remote.Service$PrepareAndExecuteRequest.accept(Service.java:952)
	at org.apache.calcite.avatica.remote.Service$PrepareAndExecuteRequest.accept(Service.java:904)
	at org.apache.calcite.avatica.remote.AbstractHandler.apply(AbstractHandler.java:94)
	at org.apache.calcite.avatica.remote.JsonHandler.apply(JsonHandler.java:52)
	at org.apache.calcite.avatica.server.AvaticaJsonHandler.handle(AvaticaJsonHandler.java:133)
	at org.apache.druid.sql.avatica.DruidAvaticaJsonHandler.handle(DruidAvaticaJsonHandler.java:61)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:127)
	at org.eclipse.jetty.server.Server.handle(Server.java:516)
	at org.eclipse.jetty.server.HttpChannel.lambda$handle$1(HttpChannel.java:487)
	at org.eclipse.jetty.server.HttpChannel.dispatch(HttpChannel.java:732)
	at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:479)
	at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:277)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.succeeded(AbstractConnection.java:311)
	at org.eclipse.jetty.io.FillInterest.fillable(FillInterest.java:105)
	at org.eclipse.jetty.io.ChannelEndPoint$1.run(ChannelEndPoint.java:104)
	at org.eclipse.jetty.util.thread.strategy.EatWhatYouKill.runTask(EatWhatYouKill.java:338)
	at org.eclipse.jetty.util.thread.strategy.EatWhatYouKill.doProduce(EatWhatYouKill.java:315)
	at org.eclipse.jetty.util.thread.strategy.EatWhatYouKill.tryProduce(EatWhatYouKill.java:173)
	at org.eclipse.jetty.util.thread.strategy.EatWhatYouKill.run(EatWhatYouKill.java:131)
	at org.eclipse.jetty.util.thread.ReservedThreadExecutor$ReservedThread.run(ReservedThreadExecutor.java:409)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:883)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$Runner.run(QueuedThreadPool.java:1034)
	at java.base/java.lang.Thread.run(Thread.java:840)
Caused by: org.apache.druid.error.DruidException: Uncategorized calcite error message: [RIGHT JOIN is not supported by engine[msq-task] with sqlJoinAlgorithm[broadcast]. Try sqlJoinAlgorithm[sortMerge].]
	at org.apache.druid.sql.calcite.planner.DruidPlanner.parseValidationMessage(DruidPlanner.java:454)
	at org.apache.druid.sql.calcite.planner.DruidPlanner.translateException(DruidPlanner.java:352)
	at org.apache.druid.sql.calcite.planner.QueryHandler.plan(QueryHandler.java:246)
	at org.apache.druid.sql.calcite.planner.DruidPlanner.plan(DruidPlanner.java:267)
	at org.apache.druid.sql.DirectStatement.createPlan(DirectStatement.java:255)
	at org.apache.druid.sql.DirectStatement.plan(DirectStatement.java:223)
	at org.apache.druid.sql.DirectStatement.execute(DirectStatement.java:184)
	at org.apache.druid.sql.avatica.DruidJdbcResultSet.lambda$execute$0(DruidJdbcResultSet.java:239)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	... 1 more
Caused by: org.apache.calcite.tools.ValidationException: RIGHT JOIN is not supported by engine[msq-task] with sqlJoinAlgorithm[broadcast]. Try sqlJoinAlgorithm[sortMerge].
	at org.apache.druid.sql.calcite.planner.QueryValidations.validateNoIllegalRightyJoins(QueryValidations.java:78)
	at org.apache.druid.sql.calcite.planner.QueryValidations.validateLogicalQueryForDruid(QueryValidations.java:45)
	at org.apache.druid.sql.calcite.planner.QueryHandler.planWithDruidConvention(QueryHandler.java:540)
	at org.apache.druid.sql.calcite.planner.QueryHandler$SelectHandler.planForDruid(QueryHandler.java:735)
	at org.apache.druid.sql.calcite.planner.QueryHandler.plan(QueryHandler.java:209)
	... 9 more

!error

#-------------------------------------------------------------------------
# TESTCASE: test_join TEST_ID: A4_B8_C5 TYPE: NEGATIVE TEST
#-------------------------------------------------------------------------
WITH t1 AS
  (SELECT *
   FROM test_array)
SELECT t1.a_nested
FROM t1
RIGHT JOIN test_array t2 ON t1.a_nested=t2.a_nested;
org.apache.calcite.avatica.AvaticaSqlException: Error -1 (00000) : Error while executing SQL "WITH t1 AS
  (SELECT *
   FROM test_array)
SELECT t1.a_nested
FROM t1
RIGHT JOIN test_array t2 ON t1.a_nested=t2.a_nested": Remote driver error: QueryInterruptedException: Uncategorized calcite error message: [RIGHT JOIN is not supported by engine[msq-task] with sqlJoinAlgorithm[broadcast]. Try sqlJoinAlgorithm[sortMerge].] -> DruidException: Uncategorized calcite error message: [RIGHT JOIN is not supported by engine[msq-task] with sqlJoinAlgorithm[broadcast]. Try sqlJoinAlgorithm[sortMerge].] -> ValidationException: RIGHT JOIN is not supported by engine[msq-task] with sqlJoinAlgorithm[broadcast]. Try sqlJoinAlgorithm[sortMerge].
	at org.apache.calcite.avatica.Helper.createException(Helper.java:54)
	at org.apache.calcite.avatica.Helper.createException(Helper.java:41)
	at org.apache.calcite.avatica.AvaticaStatement.executeInternal(AvaticaStatement.java:164)
	at org.apache.calcite.avatica.AvaticaStatement.executeQuery(AvaticaStatement.java:228)
	at net.hydromatic.quidem.Quidem.checkResult(Quidem.java:299)
	at net.hydromatic.quidem.Quidem.access$2600(Quidem.java:57)
	at net.hydromatic.quidem.Quidem$ContextImpl.checkResult(Quidem.java:1636)
	at net.hydromatic.quidem.Quidem$CheckResultCommand.execute(Quidem.java:941)
	at net.hydromatic.quidem.Quidem$CompositeCommand.execute(Quidem.java:1437)
	at net.hydromatic.quidem.Quidem.execute(Quidem.java:190)
	at org.apache.druid.quidem.DruidQuidemTestBase$DruidQuidemRunner.run(DruidQuidemTestBase.java:282)
	at org.apache.druid.quidem.DruidQuidemTestBase.test(DruidQuidemTestBase.java:223)
	at jdk.internal.reflect.GeneratedMethodAccessor188.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.junit.platform.commons.util.ReflectionUtils.invokeMethod(ReflectionUtils.java:728)
	at org.junit.jupiter.engine.execution.MethodInvocation.proceed(MethodInvocation.java:60)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain$ValidatingInvocation.proceed(InvocationInterceptorChain.java:131)
	at org.junit.jupiter.engine.extension.TimeoutExtension.intercept(TimeoutExtension.java:156)
	at org.junit.jupiter.engine.extension.TimeoutExtension.interceptTestableMethod(TimeoutExtension.java:147)
	at org.junit.jupiter.engine.extension.TimeoutExtension.interceptTestTemplateMethod(TimeoutExtension.java:94)
	at org.junit.jupiter.engine.execution.InterceptingExecutableInvoker$ReflectiveInterceptorCall.lambda$ofVoidMethod$0(InterceptingExecutableInvoker.java:103)
	at org.junit.jupiter.engine.execution.InterceptingExecutableInvoker.lambda$invoke$0(InterceptingExecutableInvoker.java:93)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain$InterceptedInvocation.proceed(InvocationInterceptorChain.java:106)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain.proceed(InvocationInterceptorChain.java:64)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain.chainAndInvoke(InvocationInterceptorChain.java:45)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain.invoke(InvocationInterceptorChain.java:37)
	at org.junit.jupiter.engine.execution.InterceptingExecutableInvoker.invoke(InterceptingExecutableInvoker.java:92)
	at org.junit.jupiter.engine.execution.InterceptingExecutableInvoker.invoke(InterceptingExecutableInvoker.java:86)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$invokeTestMethod$7(TestMethodTestDescriptor.java:218)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.invokeTestMethod(TestMethodTestDescriptor.java:214)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:139)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:69)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:151)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.submit(SameThreadHierarchicalTestExecutorService.java:35)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask$DefaultDynamicTestExecutor.execute(NodeTestTask.java:226)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask$DefaultDynamicTestExecutor.execute(NodeTestTask.java:204)
	at org.junit.jupiter.engine.descriptor.TestTemplateTestDescriptor.execute(TestTemplateTestDescriptor.java:142)
	at org.junit.jupiter.engine.descriptor.TestTemplateTestDescriptor.lambda$execute$2(TestTemplateTestDescriptor.java:110)
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:183)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)
	at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:179)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:183)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:183)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)
	at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1625)
	at java.base/java.util.stream.ReferencePipeline$Head.forEach(ReferencePipeline.java:762)
	at java.base/java.util.stream.ReferencePipeline$7$1.accept(ReferencePipeline.java:276)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)
	at java.base/java.util.Spliterators$ArraySpliterator.forEachRemaining(Spliterators.java:992)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:509)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:499)
	at java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:150)
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:173)
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)
	at java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:596)
	at java.base/java.util.stream.ReferencePipeline$7$1.accept(ReferencePipeline.java:276)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)
	at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1625)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:509)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:499)
	at java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:150)
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:173)
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)
	at java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:596)
	at java.base/java.util.stream.ReferencePipeline$7$1.accept(ReferencePipeline.java:276)
	at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1625)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:509)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:499)
	at java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:150)
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:173)
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)
	at java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:596)
	at org.junit.jupiter.engine.descriptor.TestTemplateTestDescriptor.execute(TestTemplateTestDescriptor.java:110)
	at org.junit.jupiter.engine.descriptor.TestTemplateTestDescriptor.execute(TestTemplateTestDescriptor.java:44)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:151)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.submit(SameThreadHierarchicalTestExecutorService.java:35)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:57)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:54)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:198)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:169)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:93)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.lambda$execute$0(EngineExecutionOrchestrator.java:58)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.withInterceptedStreams(EngineExecutionOrchestrator.java:141)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:57)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:103)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:85)
	at org.junit.platform.launcher.core.DelegatingLauncher.execute(DelegatingLauncher.java:47)
	at org.apache.maven.surefire.junitplatform.LazyLauncher.execute(LazyLauncher.java:56)
	at org.apache.maven.surefire.junitplatform.JUnitPlatformProvider.execute(JUnitPlatformProvider.java:184)
	at org.apache.maven.surefire.junitplatform.JUnitPlatformProvider.invokeAllTests(JUnitPlatformProvider.java:148)
	at org.apache.maven.surefire.junitplatform.JUnitPlatformProvider.invoke(JUnitPlatformProvider.java:122)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:385)
	at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:162)
	at org.apache.maven.surefire.booter.ForkedBooter.run(ForkedBooter.java:507)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:495)
QueryInterruptedException{msg=Uncategorized calcite error message: [RIGHT JOIN is not supported by engine[msq-task] with sqlJoinAlgorithm[broadcast]. Try sqlJoinAlgorithm[sortMerge].], code=Unknown exception, class=org.apache.druid.error.DruidException, host=null}
	at org.apache.druid.query.QueryInterruptedException.wrapIfNeeded(QueryInterruptedException.java:113)
	at org.apache.druid.sql.avatica.ErrorHandler.sanitize(ErrorHandler.java:82)
	at org.apache.druid.sql.avatica.DruidMeta.mapException(DruidMeta.java:395)
	at org.apache.druid.sql.avatica.DruidMeta.prepareAndExecute(DruidMeta.java:362)
	at org.apache.calcite.avatica.remote.LocalService.apply(LocalService.java:212)
	at org.apache.calcite.avatica.remote.Service$PrepareAndExecuteRequest.accept(Service.java:952)
	at org.apache.calcite.avatica.remote.Service$PrepareAndExecuteRequest.accept(Service.java:904)
	at org.apache.calcite.avatica.remote.AbstractHandler.apply(AbstractHandler.java:94)
	at org.apache.calcite.avatica.remote.JsonHandler.apply(JsonHandler.java:52)
	at org.apache.calcite.avatica.server.AvaticaJsonHandler.handle(AvaticaJsonHandler.java:133)
	at org.apache.druid.sql.avatica.DruidAvaticaJsonHandler.handle(DruidAvaticaJsonHandler.java:61)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:127)
	at org.eclipse.jetty.server.Server.handle(Server.java:516)
	at org.eclipse.jetty.server.HttpChannel.lambda$handle$1(HttpChannel.java:487)
	at org.eclipse.jetty.server.HttpChannel.dispatch(HttpChannel.java:732)
	at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:479)
	at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:277)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.succeeded(AbstractConnection.java:311)
	at org.eclipse.jetty.io.FillInterest.fillable(FillInterest.java:105)
	at org.eclipse.jetty.io.ChannelEndPoint$1.run(ChannelEndPoint.java:104)
	at org.eclipse.jetty.util.thread.strategy.EatWhatYouKill.runTask(EatWhatYouKill.java:338)
	at org.eclipse.jetty.util.thread.strategy.EatWhatYouKill.doProduce(EatWhatYouKill.java:315)
	at org.eclipse.jetty.util.thread.strategy.EatWhatYouKill.tryProduce(EatWhatYouKill.java:173)
	at org.eclipse.jetty.util.thread.strategy.EatWhatYouKill.run(EatWhatYouKill.java:131)
	at org.eclipse.jetty.util.thread.ReservedThreadExecutor$ReservedThread.run(ReservedThreadExecutor.java:409)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:883)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$Runner.run(QueuedThreadPool.java:1034)
	at java.base/java.lang.Thread.run(Thread.java:840)
Caused by: org.apache.druid.error.DruidException: Uncategorized calcite error message: [RIGHT JOIN is not supported by engine[msq-task] with sqlJoinAlgorithm[broadcast]. Try sqlJoinAlgorithm[sortMerge].]
	at org.apache.druid.sql.calcite.planner.DruidPlanner.parseValidationMessage(DruidPlanner.java:454)
	at org.apache.druid.sql.calcite.planner.DruidPlanner.translateException(DruidPlanner.java:352)
	at org.apache.druid.sql.calcite.planner.QueryHandler.plan(QueryHandler.java:246)
	at org.apache.druid.sql.calcite.planner.DruidPlanner.plan(DruidPlanner.java:267)
	at org.apache.druid.sql.DirectStatement.createPlan(DirectStatement.java:255)
	at org.apache.druid.sql.DirectStatement.plan(DirectStatement.java:223)
	at org.apache.druid.sql.DirectStatement.execute(DirectStatement.java:184)
	at org.apache.druid.sql.avatica.DruidJdbcResultSet.lambda$execute$0(DruidJdbcResultSet.java:239)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	... 1 more
Caused by: org.apache.calcite.tools.ValidationException: RIGHT JOIN is not supported by engine[msq-task] with sqlJoinAlgorithm[broadcast]. Try sqlJoinAlgorithm[sortMerge].
	at org.apache.druid.sql.calcite.planner.QueryValidations.validateNoIllegalRightyJoins(QueryValidations.java:78)
	at org.apache.druid.sql.calcite.planner.QueryValidations.validateLogicalQueryForDruid(QueryValidations.java:45)
	at org.apache.druid.sql.calcite.planner.QueryHandler.planWithDruidConvention(QueryHandler.java:540)
	at org.apache.druid.sql.calcite.planner.QueryHandler$SelectHandler.planForDruid(QueryHandler.java:735)
	at org.apache.druid.sql.calcite.planner.QueryHandler.plan(QueryHandler.java:209)
	... 9 more

!error

#-------------------------------------------------------------------------
# TESTCASE: test_join TEST_ID: A5_B1_C1 TYPE: NEGATIVE TEST
#-------------------------------------------------------------------------
SELECT t1.a_bool
FROM test_array t1
FULL JOIN test_array t2 ON t1.a_bool=t2.a_bool;
not support
!error

#-------------------------------------------------------------------------
# TESTCASE: test_join TEST_ID: A5_B1_C3 TYPE: NEGATIVE TEST
#-------------------------------------------------------------------------
SELECT a_bool
FROM
  (SELECT *
   FROM test_array t1
   FULL JOIN test_array t2 ON t1.a_bool=t2.a_bool);
not support
!error

#-------------------------------------------------------------------------
# TESTCASE: test_join TEST_ID: A5_B1_C5 TYPE: NEGATIVE TEST
#-------------------------------------------------------------------------
WITH t1 AS
  (SELECT *
   FROM test_array)
SELECT t1.a_bool
FROM t1
FULL JOIN test_array t2 ON t1.a_bool=t2.a_bool;
not support
!error

#-------------------------------------------------------------------------
# TESTCASE: test_join TEST_ID: A5_B2_C1 TYPE: NEGATIVE TEST
#-------------------------------------------------------------------------
SELECT t1.a_int
FROM test_array t1
FULL JOIN test_array t2 ON t1.a_int=t2.a_int;
not support
!error

#-------------------------------------------------------------------------
# TESTCASE: test_join TEST_ID: A5_B2_C3 TYPE: NEGATIVE TEST
#-------------------------------------------------------------------------
SELECT a_int
FROM
  (SELECT *
   FROM test_array t1
   FULL JOIN test_array t2 ON t1.a_int=t2.a_int);
not support
!error

#-------------------------------------------------------------------------
# TESTCASE: test_join TEST_ID: A5_B2_C5 TYPE: NEGATIVE TEST
#-------------------------------------------------------------------------
WITH t1 AS
  (SELECT *
   FROM test_array)
SELECT t1.a_int
FROM t1
FULL JOIN test_array t2 ON t1.a_int=t2.a_int;
not support
!error

#-------------------------------------------------------------------------
# TESTCASE: test_join TEST_ID: A5_B3_C1 TYPE: NEGATIVE TEST
#-------------------------------------------------------------------------
SELECT t1.a_float
FROM test_array t1
FULL JOIN test_array t2 ON t1.a_float=t2.a_float;
not support
!error

#-------------------------------------------------------------------------
# TESTCASE: test_join TEST_ID: A5_B3_C3 TYPE: NEGATIVE TEST
#-------------------------------------------------------------------------
SELECT a_float
FROM
  (SELECT *
   FROM test_array t1
   FULL JOIN test_array t2 ON t1.a_float=t2.a_float);
not support
!error

#-------------------------------------------------------------------------
# TESTCASE: test_join TEST_ID: A5_B3_C5 TYPE: NEGATIVE TEST
#-------------------------------------------------------------------------
WITH t1 AS
  (SELECT *
   FROM test_array)
SELECT t1.a_float
FROM t1
FULL JOIN test_array t2 ON t1.a_float=t2.a_float;
not support
!error

#-------------------------------------------------------------------------
# TESTCASE: test_join TEST_ID: A5_B4_C1 TYPE: NEGATIVE TEST
#-------------------------------------------------------------------------
SELECT t1.a_str
FROM test_array t1
FULL JOIN test_array t2 ON t1.a_str=t2.a_str;
not support
!error

#-------------------------------------------------------------------------
# TESTCASE: test_join TEST_ID: A5_B4_C3 TYPE: NEGATIVE TEST
#-------------------------------------------------------------------------
SELECT a_str
FROM
  (SELECT *
   FROM test_array t1
   FULL JOIN test_array t2 ON t1.a_str=t2.a_str);
not support
!error

#-------------------------------------------------------------------------
# TESTCASE: test_join TEST_ID: A5_B4_C5 TYPE: NEGATIVE TEST
#-------------------------------------------------------------------------
WITH t1 AS
  (SELECT *
   FROM test_array)
SELECT t1.a_str
FROM t1
FULL JOIN test_array t2 ON t1.a_str=t2.a_str;
not support
!error

#-------------------------------------------------------------------------
# TESTCASE: test_join TEST_ID: A5_B5_C1 TYPE: NEGATIVE TEST
#-------------------------------------------------------------------------
SELECT t1.a_null
FROM test_array t1
FULL JOIN test_array t2 ON t1.a_null=t2.a_null;
not support
!error

#-------------------------------------------------------------------------
# TESTCASE: test_join TEST_ID: A5_B5_C3 TYPE: NEGATIVE TEST
#-------------------------------------------------------------------------
SELECT a_null
FROM
  (SELECT *
   FROM test_array t1
   FULL JOIN test_array t2 ON t1.a_null=t2.a_null);
not support
!error

#-------------------------------------------------------------------------
# TESTCASE: test_join TEST_ID: A5_B5_C5 TYPE: NEGATIVE TEST
#-------------------------------------------------------------------------
WITH t1 AS
  (SELECT *
   FROM test_array)
SELECT t1.a_null
FROM t1
FULL JOIN test_array t2 ON t1.a_null=t2.a_null;
not support
!error

#-------------------------------------------------------------------------
# TESTCASE: test_join TEST_ID: A5_B6_C1 TYPE: NEGATIVE TEST
#-------------------------------------------------------------------------
SELECT t1.a_empty
FROM test_array t1
FULL JOIN test_array t2 ON t1.a_empty=t2.a_empty;
not support
!error

#-------------------------------------------------------------------------
# TESTCASE: test_join TEST_ID: A5_B6_C3 TYPE: NEGATIVE TEST
#-------------------------------------------------------------------------
SELECT a_empty
FROM
  (SELECT *
   FROM test_array t1
   FULL JOIN test_array t2 ON t1.a_empty=t2.a_empty);
not support
!error

#-------------------------------------------------------------------------
# TESTCASE: test_join TEST_ID: A5_B6_C5 TYPE: NEGATIVE TEST
#-------------------------------------------------------------------------
WITH t1 AS
  (SELECT *
   FROM test_array)
SELECT t1.a_empty
FROM t1
FULL JOIN test_array t2 ON t1.a_empty=t2.a_empty;
not support
!error

#-------------------------------------------------------------------------
# TESTCASE: test_join TEST_ID: A5_B7_C1 TYPE: NEGATIVE TEST
#-------------------------------------------------------------------------
SELECT t1.a_mixed
FROM test_array t1
FULL JOIN test_array t2 ON t1.a_mixed=t2.a_mixed;
not support
!error

#-------------------------------------------------------------------------
# TESTCASE: test_join TEST_ID: A5_B7_C3 TYPE: NEGATIVE TEST
#-------------------------------------------------------------------------
SELECT a_mixed
FROM
  (SELECT *
   FROM test_array t1
   FULL JOIN test_array t2 ON t1.a_mixed=t2.a_mixed);
not support
!error

#-------------------------------------------------------------------------
# TESTCASE: test_join TEST_ID: A5_B7_C5 TYPE: NEGATIVE TEST
#-------------------------------------------------------------------------
WITH t1 AS
  (SELECT *
   FROM test_array)
SELECT t1.a_mixed
FROM t1
FULL JOIN test_array t2 ON t1.a_mixed=t2.a_mixed;
not support
!error

#-------------------------------------------------------------------------
# TESTCASE: test_join TEST_ID: A5_B8_C1 TYPE: NEGATIVE TEST
#-------------------------------------------------------------------------
SELECT t1.a_nested
FROM test_array t1
FULL JOIN test_array t2 ON t1.a_nested=t2.a_nested;
org.apache.calcite.avatica.AvaticaSqlException: Error -1 (00000) : Error while executing SQL "SELECT t1.a_nested
FROM test_array t1
FULL JOIN test_array t2 ON t1.a_nested=t2.a_nested": Remote driver error: QueryInterruptedException: Uncategorized calcite error message: [FULL JOIN is not supported by engine[msq-task] with sqlJoinAlgorithm[broadcast]. Try sqlJoinAlgorithm[sortMerge].] -> DruidException: Uncategorized calcite error message: [FULL JOIN is not supported by engine[msq-task] with sqlJoinAlgorithm[broadcast]. Try sqlJoinAlgorithm[sortMerge].] -> ValidationException: FULL JOIN is not supported by engine[msq-task] with sqlJoinAlgorithm[broadcast]. Try sqlJoinAlgorithm[sortMerge].
	at org.apache.calcite.avatica.Helper.createException(Helper.java:54)
	at org.apache.calcite.avatica.Helper.createException(Helper.java:41)
	at org.apache.calcite.avatica.AvaticaStatement.executeInternal(AvaticaStatement.java:164)
	at org.apache.calcite.avatica.AvaticaStatement.executeQuery(AvaticaStatement.java:228)
	at net.hydromatic.quidem.Quidem.checkResult(Quidem.java:299)
	at net.hydromatic.quidem.Quidem.access$2600(Quidem.java:57)
	at net.hydromatic.quidem.Quidem$ContextImpl.checkResult(Quidem.java:1636)
	at net.hydromatic.quidem.Quidem$CheckResultCommand.execute(Quidem.java:941)
	at net.hydromatic.quidem.Quidem$CompositeCommand.execute(Quidem.java:1437)
	at net.hydromatic.quidem.Quidem.execute(Quidem.java:190)
	at org.apache.druid.quidem.DruidQuidemTestBase$DruidQuidemRunner.run(DruidQuidemTestBase.java:282)
	at org.apache.druid.quidem.DruidQuidemTestBase.test(DruidQuidemTestBase.java:223)
	at jdk.internal.reflect.GeneratedMethodAccessor188.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.junit.platform.commons.util.ReflectionUtils.invokeMethod(ReflectionUtils.java:728)
	at org.junit.jupiter.engine.execution.MethodInvocation.proceed(MethodInvocation.java:60)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain$ValidatingInvocation.proceed(InvocationInterceptorChain.java:131)
	at org.junit.jupiter.engine.extension.TimeoutExtension.intercept(TimeoutExtension.java:156)
	at org.junit.jupiter.engine.extension.TimeoutExtension.interceptTestableMethod(TimeoutExtension.java:147)
	at org.junit.jupiter.engine.extension.TimeoutExtension.interceptTestTemplateMethod(TimeoutExtension.java:94)
	at org.junit.jupiter.engine.execution.InterceptingExecutableInvoker$ReflectiveInterceptorCall.lambda$ofVoidMethod$0(InterceptingExecutableInvoker.java:103)
	at org.junit.jupiter.engine.execution.InterceptingExecutableInvoker.lambda$invoke$0(InterceptingExecutableInvoker.java:93)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain$InterceptedInvocation.proceed(InvocationInterceptorChain.java:106)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain.proceed(InvocationInterceptorChain.java:64)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain.chainAndInvoke(InvocationInterceptorChain.java:45)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain.invoke(InvocationInterceptorChain.java:37)
	at org.junit.jupiter.engine.execution.InterceptingExecutableInvoker.invoke(InterceptingExecutableInvoker.java:92)
	at org.junit.jupiter.engine.execution.InterceptingExecutableInvoker.invoke(InterceptingExecutableInvoker.java:86)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$invokeTestMethod$7(TestMethodTestDescriptor.java:218)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.invokeTestMethod(TestMethodTestDescriptor.java:214)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:139)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:69)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:151)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.submit(SameThreadHierarchicalTestExecutorService.java:35)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask$DefaultDynamicTestExecutor.execute(NodeTestTask.java:226)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask$DefaultDynamicTestExecutor.execute(NodeTestTask.java:204)
	at org.junit.jupiter.engine.descriptor.TestTemplateTestDescriptor.execute(TestTemplateTestDescriptor.java:142)
	at org.junit.jupiter.engine.descriptor.TestTemplateTestDescriptor.lambda$execute$2(TestTemplateTestDescriptor.java:110)
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:183)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)
	at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:179)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:183)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:183)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)
	at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1625)
	at java.base/java.util.stream.ReferencePipeline$Head.forEach(ReferencePipeline.java:762)
	at java.base/java.util.stream.ReferencePipeline$7$1.accept(ReferencePipeline.java:276)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)
	at java.base/java.util.Spliterators$ArraySpliterator.forEachRemaining(Spliterators.java:992)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:509)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:499)
	at java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:150)
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:173)
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)
	at java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:596)
	at java.base/java.util.stream.ReferencePipeline$7$1.accept(ReferencePipeline.java:276)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)
	at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1625)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:509)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:499)
	at java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:150)
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:173)
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)
	at java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:596)
	at java.base/java.util.stream.ReferencePipeline$7$1.accept(ReferencePipeline.java:276)
	at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1625)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:509)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:499)
	at java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:150)
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:173)
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)
	at java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:596)
	at org.junit.jupiter.engine.descriptor.TestTemplateTestDescriptor.execute(TestTemplateTestDescriptor.java:110)
	at org.junit.jupiter.engine.descriptor.TestTemplateTestDescriptor.execute(TestTemplateTestDescriptor.java:44)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:151)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.submit(SameThreadHierarchicalTestExecutorService.java:35)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:57)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:54)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:198)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:169)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:93)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.lambda$execute$0(EngineExecutionOrchestrator.java:58)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.withInterceptedStreams(EngineExecutionOrchestrator.java:141)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:57)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:103)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:85)
	at org.junit.platform.launcher.core.DelegatingLauncher.execute(DelegatingLauncher.java:47)
	at org.apache.maven.surefire.junitplatform.LazyLauncher.execute(LazyLauncher.java:56)
	at org.apache.maven.surefire.junitplatform.JUnitPlatformProvider.execute(JUnitPlatformProvider.java:184)
	at org.apache.maven.surefire.junitplatform.JUnitPlatformProvider.invokeAllTests(JUnitPlatformProvider.java:148)
	at org.apache.maven.surefire.junitplatform.JUnitPlatformProvider.invoke(JUnitPlatformProvider.java:122)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:385)
	at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:162)
	at org.apache.maven.surefire.booter.ForkedBooter.run(ForkedBooter.java:507)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:495)
QueryInterruptedException{msg=Uncategorized calcite error message: [FULL JOIN is not supported by engine[msq-task] with sqlJoinAlgorithm[broadcast]. Try sqlJoinAlgorithm[sortMerge].], code=Unknown exception, class=org.apache.druid.error.DruidException, host=null}
	at org.apache.druid.query.QueryInterruptedException.wrapIfNeeded(QueryInterruptedException.java:113)
	at org.apache.druid.sql.avatica.ErrorHandler.sanitize(ErrorHandler.java:82)
	at org.apache.druid.sql.avatica.DruidMeta.mapException(DruidMeta.java:395)
	at org.apache.druid.sql.avatica.DruidMeta.prepareAndExecute(DruidMeta.java:362)
	at org.apache.calcite.avatica.remote.LocalService.apply(LocalService.java:212)
	at org.apache.calcite.avatica.remote.Service$PrepareAndExecuteRequest.accept(Service.java:952)
	at org.apache.calcite.avatica.remote.Service$PrepareAndExecuteRequest.accept(Service.java:904)
	at org.apache.calcite.avatica.remote.AbstractHandler.apply(AbstractHandler.java:94)
	at org.apache.calcite.avatica.remote.JsonHandler.apply(JsonHandler.java:52)
	at org.apache.calcite.avatica.server.AvaticaJsonHandler.handle(AvaticaJsonHandler.java:133)
	at org.apache.druid.sql.avatica.DruidAvaticaJsonHandler.handle(DruidAvaticaJsonHandler.java:61)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:127)
	at org.eclipse.jetty.server.Server.handle(Server.java:516)
	at org.eclipse.jetty.server.HttpChannel.lambda$handle$1(HttpChannel.java:487)
	at org.eclipse.jetty.server.HttpChannel.dispatch(HttpChannel.java:732)
	at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:479)
	at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:277)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.succeeded(AbstractConnection.java:311)
	at org.eclipse.jetty.io.FillInterest.fillable(FillInterest.java:105)
	at org.eclipse.jetty.io.ChannelEndPoint$1.run(ChannelEndPoint.java:104)
	at org.eclipse.jetty.util.thread.strategy.EatWhatYouKill.runTask(EatWhatYouKill.java:338)
	at org.eclipse.jetty.util.thread.strategy.EatWhatYouKill.doProduce(EatWhatYouKill.java:315)
	at org.eclipse.jetty.util.thread.strategy.EatWhatYouKill.tryProduce(EatWhatYouKill.java:173)
	at org.eclipse.jetty.util.thread.strategy.EatWhatYouKill.run(EatWhatYouKill.java:131)
	at org.eclipse.jetty.util.thread.ReservedThreadExecutor$ReservedThread.run(ReservedThreadExecutor.java:409)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:883)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$Runner.run(QueuedThreadPool.java:1034)
	at java.base/java.lang.Thread.run(Thread.java:840)
Caused by: org.apache.druid.error.DruidException: Uncategorized calcite error message: [FULL JOIN is not supported by engine[msq-task] with sqlJoinAlgorithm[broadcast]. Try sqlJoinAlgorithm[sortMerge].]
	at org.apache.druid.sql.calcite.planner.DruidPlanner.parseValidationMessage(DruidPlanner.java:454)
	at org.apache.druid.sql.calcite.planner.DruidPlanner.translateException(DruidPlanner.java:352)
	at org.apache.druid.sql.calcite.planner.QueryHandler.plan(QueryHandler.java:246)
	at org.apache.druid.sql.calcite.planner.DruidPlanner.plan(DruidPlanner.java:267)
	at org.apache.druid.sql.DirectStatement.createPlan(DirectStatement.java:255)
	at org.apache.druid.sql.DirectStatement.plan(DirectStatement.java:223)
	at org.apache.druid.sql.DirectStatement.execute(DirectStatement.java:184)
	at org.apache.druid.sql.avatica.DruidJdbcResultSet.lambda$execute$0(DruidJdbcResultSet.java:239)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	... 1 more
Caused by: org.apache.calcite.tools.ValidationException: FULL JOIN is not supported by engine[msq-task] with sqlJoinAlgorithm[broadcast]. Try sqlJoinAlgorithm[sortMerge].
	at org.apache.druid.sql.calcite.planner.QueryValidations.validateNoIllegalRightyJoins(QueryValidations.java:78)
	at org.apache.druid.sql.calcite.planner.QueryValidations.validateLogicalQueryForDruid(QueryValidations.java:45)
	at org.apache.druid.sql.calcite.planner.QueryHandler.planWithDruidConvention(QueryHandler.java:540)
	at org.apache.druid.sql.calcite.planner.QueryHandler$SelectHandler.planForDruid(QueryHandler.java:735)
	at org.apache.druid.sql.calcite.planner.QueryHandler.plan(QueryHandler.java:209)
	... 9 more

!error

#-------------------------------------------------------------------------
# TESTCASE: test_join TEST_ID: A5_B8_C3 TYPE: NEGATIVE TEST
#-------------------------------------------------------------------------
SELECT a_nested
FROM
  (SELECT *
   FROM test_array t1
   FULL JOIN test_array t2 ON t1.a_nested=t2.a_nested);
org.apache.calcite.avatica.AvaticaSqlException: Error -1 (00000) : Error while executing SQL "SELECT a_nested
FROM
  (SELECT *
   FROM test_array t1
   FULL JOIN test_array t2 ON t1.a_nested=t2.a_nested)": Remote driver error: QueryInterruptedException: Uncategorized calcite error message: [FULL JOIN is not supported by engine[msq-task] with sqlJoinAlgorithm[broadcast]. Try sqlJoinAlgorithm[sortMerge].] -> DruidException: Uncategorized calcite error message: [FULL JOIN is not supported by engine[msq-task] with sqlJoinAlgorithm[broadcast]. Try sqlJoinAlgorithm[sortMerge].] -> ValidationException: FULL JOIN is not supported by engine[msq-task] with sqlJoinAlgorithm[broadcast]. Try sqlJoinAlgorithm[sortMerge].
	at org.apache.calcite.avatica.Helper.createException(Helper.java:54)
	at org.apache.calcite.avatica.Helper.createException(Helper.java:41)
	at org.apache.calcite.avatica.AvaticaStatement.executeInternal(AvaticaStatement.java:164)
	at org.apache.calcite.avatica.AvaticaStatement.executeQuery(AvaticaStatement.java:228)
	at net.hydromatic.quidem.Quidem.checkResult(Quidem.java:299)
	at net.hydromatic.quidem.Quidem.access$2600(Quidem.java:57)
	at net.hydromatic.quidem.Quidem$ContextImpl.checkResult(Quidem.java:1636)
	at net.hydromatic.quidem.Quidem$CheckResultCommand.execute(Quidem.java:941)
	at net.hydromatic.quidem.Quidem$CompositeCommand.execute(Quidem.java:1437)
	at net.hydromatic.quidem.Quidem.execute(Quidem.java:190)
	at org.apache.druid.quidem.DruidQuidemTestBase$DruidQuidemRunner.run(DruidQuidemTestBase.java:282)
	at org.apache.druid.quidem.DruidQuidemTestBase.test(DruidQuidemTestBase.java:223)
	at jdk.internal.reflect.GeneratedMethodAccessor188.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.junit.platform.commons.util.ReflectionUtils.invokeMethod(ReflectionUtils.java:728)
	at org.junit.jupiter.engine.execution.MethodInvocation.proceed(MethodInvocation.java:60)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain$ValidatingInvocation.proceed(InvocationInterceptorChain.java:131)
	at org.junit.jupiter.engine.extension.TimeoutExtension.intercept(TimeoutExtension.java:156)
	at org.junit.jupiter.engine.extension.TimeoutExtension.interceptTestableMethod(TimeoutExtension.java:147)
	at org.junit.jupiter.engine.extension.TimeoutExtension.interceptTestTemplateMethod(TimeoutExtension.java:94)
	at org.junit.jupiter.engine.execution.InterceptingExecutableInvoker$ReflectiveInterceptorCall.lambda$ofVoidMethod$0(InterceptingExecutableInvoker.java:103)
	at org.junit.jupiter.engine.execution.InterceptingExecutableInvoker.lambda$invoke$0(InterceptingExecutableInvoker.java:93)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain$InterceptedInvocation.proceed(InvocationInterceptorChain.java:106)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain.proceed(InvocationInterceptorChain.java:64)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain.chainAndInvoke(InvocationInterceptorChain.java:45)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain.invoke(InvocationInterceptorChain.java:37)
	at org.junit.jupiter.engine.execution.InterceptingExecutableInvoker.invoke(InterceptingExecutableInvoker.java:92)
	at org.junit.jupiter.engine.execution.InterceptingExecutableInvoker.invoke(InterceptingExecutableInvoker.java:86)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$invokeTestMethod$7(TestMethodTestDescriptor.java:218)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.invokeTestMethod(TestMethodTestDescriptor.java:214)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:139)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:69)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:151)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.submit(SameThreadHierarchicalTestExecutorService.java:35)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask$DefaultDynamicTestExecutor.execute(NodeTestTask.java:226)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask$DefaultDynamicTestExecutor.execute(NodeTestTask.java:204)
	at org.junit.jupiter.engine.descriptor.TestTemplateTestDescriptor.execute(TestTemplateTestDescriptor.java:142)
	at org.junit.jupiter.engine.descriptor.TestTemplateTestDescriptor.lambda$execute$2(TestTemplateTestDescriptor.java:110)
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:183)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)
	at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:179)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:183)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:183)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)
	at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1625)
	at java.base/java.util.stream.ReferencePipeline$Head.forEach(ReferencePipeline.java:762)
	at java.base/java.util.stream.ReferencePipeline$7$1.accept(ReferencePipeline.java:276)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)
	at java.base/java.util.Spliterators$ArraySpliterator.forEachRemaining(Spliterators.java:992)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:509)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:499)
	at java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:150)
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:173)
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)
	at java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:596)
	at java.base/java.util.stream.ReferencePipeline$7$1.accept(ReferencePipeline.java:276)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)
	at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1625)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:509)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:499)
	at java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:150)
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:173)
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)
	at java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:596)
	at java.base/java.util.stream.ReferencePipeline$7$1.accept(ReferencePipeline.java:276)
	at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1625)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:509)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:499)
	at java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:150)
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:173)
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)
	at java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:596)
	at org.junit.jupiter.engine.descriptor.TestTemplateTestDescriptor.execute(TestTemplateTestDescriptor.java:110)
	at org.junit.jupiter.engine.descriptor.TestTemplateTestDescriptor.execute(TestTemplateTestDescriptor.java:44)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:151)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.submit(SameThreadHierarchicalTestExecutorService.java:35)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:57)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:54)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:198)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:169)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:93)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.lambda$execute$0(EngineExecutionOrchestrator.java:58)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.withInterceptedStreams(EngineExecutionOrchestrator.java:141)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:57)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:103)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:85)
	at org.junit.platform.launcher.core.DelegatingLauncher.execute(DelegatingLauncher.java:47)
	at org.apache.maven.surefire.junitplatform.LazyLauncher.execute(LazyLauncher.java:56)
	at org.apache.maven.surefire.junitplatform.JUnitPlatformProvider.execute(JUnitPlatformProvider.java:184)
	at org.apache.maven.surefire.junitplatform.JUnitPlatformProvider.invokeAllTests(JUnitPlatformProvider.java:148)
	at org.apache.maven.surefire.junitplatform.JUnitPlatformProvider.invoke(JUnitPlatformProvider.java:122)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:385)
	at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:162)
	at org.apache.maven.surefire.booter.ForkedBooter.run(ForkedBooter.java:507)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:495)
QueryInterruptedException{msg=Uncategorized calcite error message: [FULL JOIN is not supported by engine[msq-task] with sqlJoinAlgorithm[broadcast]. Try sqlJoinAlgorithm[sortMerge].], code=Unknown exception, class=org.apache.druid.error.DruidException, host=null}
	at org.apache.druid.query.QueryInterruptedException.wrapIfNeeded(QueryInterruptedException.java:113)
	at org.apache.druid.sql.avatica.ErrorHandler.sanitize(ErrorHandler.java:82)
	at org.apache.druid.sql.avatica.DruidMeta.mapException(DruidMeta.java:395)
	at org.apache.druid.sql.avatica.DruidMeta.prepareAndExecute(DruidMeta.java:362)
	at org.apache.calcite.avatica.remote.LocalService.apply(LocalService.java:212)
	at org.apache.calcite.avatica.remote.Service$PrepareAndExecuteRequest.accept(Service.java:952)
	at org.apache.calcite.avatica.remote.Service$PrepareAndExecuteRequest.accept(Service.java:904)
	at org.apache.calcite.avatica.remote.AbstractHandler.apply(AbstractHandler.java:94)
	at org.apache.calcite.avatica.remote.JsonHandler.apply(JsonHandler.java:52)
	at org.apache.calcite.avatica.server.AvaticaJsonHandler.handle(AvaticaJsonHandler.java:133)
	at org.apache.druid.sql.avatica.DruidAvaticaJsonHandler.handle(DruidAvaticaJsonHandler.java:61)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:127)
	at org.eclipse.jetty.server.Server.handle(Server.java:516)
	at org.eclipse.jetty.server.HttpChannel.lambda$handle$1(HttpChannel.java:487)
	at org.eclipse.jetty.server.HttpChannel.dispatch(HttpChannel.java:732)
	at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:479)
	at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:277)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.succeeded(AbstractConnection.java:311)
	at org.eclipse.jetty.io.FillInterest.fillable(FillInterest.java:105)
	at org.eclipse.jetty.io.ChannelEndPoint$1.run(ChannelEndPoint.java:104)
	at org.eclipse.jetty.util.thread.strategy.EatWhatYouKill.runTask(EatWhatYouKill.java:338)
	at org.eclipse.jetty.util.thread.strategy.EatWhatYouKill.doProduce(EatWhatYouKill.java:315)
	at org.eclipse.jetty.util.thread.strategy.EatWhatYouKill.tryProduce(EatWhatYouKill.java:173)
	at org.eclipse.jetty.util.thread.strategy.EatWhatYouKill.run(EatWhatYouKill.java:131)
	at org.eclipse.jetty.util.thread.ReservedThreadExecutor$ReservedThread.run(ReservedThreadExecutor.java:409)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:883)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$Runner.run(QueuedThreadPool.java:1034)
	at java.base/java.lang.Thread.run(Thread.java:840)
Caused by: org.apache.druid.error.DruidException: Uncategorized calcite error message: [FULL JOIN is not supported by engine[msq-task] with sqlJoinAlgorithm[broadcast]. Try sqlJoinAlgorithm[sortMerge].]
	at org.apache.druid.sql.calcite.planner.DruidPlanner.parseValidationMessage(DruidPlanner.java:454)
	at org.apache.druid.sql.calcite.planner.DruidPlanner.translateException(DruidPlanner.java:352)
	at org.apache.druid.sql.calcite.planner.QueryHandler.plan(QueryHandler.java:246)
	at org.apache.druid.sql.calcite.planner.DruidPlanner.plan(DruidPlanner.java:267)
	at org.apache.druid.sql.DirectStatement.createPlan(DirectStatement.java:255)
	at org.apache.druid.sql.DirectStatement.plan(DirectStatement.java:223)
	at org.apache.druid.sql.DirectStatement.execute(DirectStatement.java:184)
	at org.apache.druid.sql.avatica.DruidJdbcResultSet.lambda$execute$0(DruidJdbcResultSet.java:239)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	... 1 more
Caused by: org.apache.calcite.tools.ValidationException: FULL JOIN is not supported by engine[msq-task] with sqlJoinAlgorithm[broadcast]. Try sqlJoinAlgorithm[sortMerge].
	at org.apache.druid.sql.calcite.planner.QueryValidations.validateNoIllegalRightyJoins(QueryValidations.java:78)
	at org.apache.druid.sql.calcite.planner.QueryValidations.validateLogicalQueryForDruid(QueryValidations.java:45)
	at org.apache.druid.sql.calcite.planner.QueryHandler.planWithDruidConvention(QueryHandler.java:540)
	at org.apache.druid.sql.calcite.planner.QueryHandler$SelectHandler.planForDruid(QueryHandler.java:735)
	at org.apache.druid.sql.calcite.planner.QueryHandler.plan(QueryHandler.java:209)
	... 9 more

!error

#-------------------------------------------------------------------------
# TESTCASE: test_join TEST_ID: A5_B8_C5 TYPE: NEGATIVE TEST
#-------------------------------------------------------------------------
WITH t1 AS
  (SELECT *
   FROM test_array)
SELECT t1.a_nested
FROM t1
FULL JOIN test_array t2 ON t1.a_nested=t2.a_nested;
org.apache.calcite.avatica.AvaticaSqlException: Error -1 (00000) : Error while executing SQL "WITH t1 AS
  (SELECT *
   FROM test_array)
SELECT t1.a_nested
FROM t1
FULL JOIN test_array t2 ON t1.a_nested=t2.a_nested": Remote driver error: QueryInterruptedException: Uncategorized calcite error message: [FULL JOIN is not supported by engine[msq-task] with sqlJoinAlgorithm[broadcast]. Try sqlJoinAlgorithm[sortMerge].] -> DruidException: Uncategorized calcite error message: [FULL JOIN is not supported by engine[msq-task] with sqlJoinAlgorithm[broadcast]. Try sqlJoinAlgorithm[sortMerge].] -> ValidationException: FULL JOIN is not supported by engine[msq-task] with sqlJoinAlgorithm[broadcast]. Try sqlJoinAlgorithm[sortMerge].
	at org.apache.calcite.avatica.Helper.createException(Helper.java:54)
	at org.apache.calcite.avatica.Helper.createException(Helper.java:41)
	at org.apache.calcite.avatica.AvaticaStatement.executeInternal(AvaticaStatement.java:164)
	at org.apache.calcite.avatica.AvaticaStatement.executeQuery(AvaticaStatement.java:228)
	at net.hydromatic.quidem.Quidem.checkResult(Quidem.java:299)
	at net.hydromatic.quidem.Quidem.access$2600(Quidem.java:57)
	at net.hydromatic.quidem.Quidem$ContextImpl.checkResult(Quidem.java:1636)
	at net.hydromatic.quidem.Quidem$CheckResultCommand.execute(Quidem.java:941)
	at net.hydromatic.quidem.Quidem$CompositeCommand.execute(Quidem.java:1437)
	at net.hydromatic.quidem.Quidem.execute(Quidem.java:190)
	at org.apache.druid.quidem.DruidQuidemTestBase$DruidQuidemRunner.run(DruidQuidemTestBase.java:282)
	at org.apache.druid.quidem.DruidQuidemTestBase.test(DruidQuidemTestBase.java:223)
	at jdk.internal.reflect.GeneratedMethodAccessor188.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.junit.platform.commons.util.ReflectionUtils.invokeMethod(ReflectionUtils.java:728)
	at org.junit.jupiter.engine.execution.MethodInvocation.proceed(MethodInvocation.java:60)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain$ValidatingInvocation.proceed(InvocationInterceptorChain.java:131)
	at org.junit.jupiter.engine.extension.TimeoutExtension.intercept(TimeoutExtension.java:156)
	at org.junit.jupiter.engine.extension.TimeoutExtension.interceptTestableMethod(TimeoutExtension.java:147)
	at org.junit.jupiter.engine.extension.TimeoutExtension.interceptTestTemplateMethod(TimeoutExtension.java:94)
	at org.junit.jupiter.engine.execution.InterceptingExecutableInvoker$ReflectiveInterceptorCall.lambda$ofVoidMethod$0(InterceptingExecutableInvoker.java:103)
	at org.junit.jupiter.engine.execution.InterceptingExecutableInvoker.lambda$invoke$0(InterceptingExecutableInvoker.java:93)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain$InterceptedInvocation.proceed(InvocationInterceptorChain.java:106)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain.proceed(InvocationInterceptorChain.java:64)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain.chainAndInvoke(InvocationInterceptorChain.java:45)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain.invoke(InvocationInterceptorChain.java:37)
	at org.junit.jupiter.engine.execution.InterceptingExecutableInvoker.invoke(InterceptingExecutableInvoker.java:92)
	at org.junit.jupiter.engine.execution.InterceptingExecutableInvoker.invoke(InterceptingExecutableInvoker.java:86)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$invokeTestMethod$7(TestMethodTestDescriptor.java:218)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.invokeTestMethod(TestMethodTestDescriptor.java:214)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:139)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:69)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:151)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.submit(SameThreadHierarchicalTestExecutorService.java:35)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask$DefaultDynamicTestExecutor.execute(NodeTestTask.java:226)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask$DefaultDynamicTestExecutor.execute(NodeTestTask.java:204)
	at org.junit.jupiter.engine.descriptor.TestTemplateTestDescriptor.execute(TestTemplateTestDescriptor.java:142)
	at org.junit.jupiter.engine.descriptor.TestTemplateTestDescriptor.lambda$execute$2(TestTemplateTestDescriptor.java:110)
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:183)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)
	at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:179)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:183)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:183)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)
	at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1625)
	at java.base/java.util.stream.ReferencePipeline$Head.forEach(ReferencePipeline.java:762)
	at java.base/java.util.stream.ReferencePipeline$7$1.accept(ReferencePipeline.java:276)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)
	at java.base/java.util.Spliterators$ArraySpliterator.forEachRemaining(Spliterators.java:992)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:509)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:499)
	at java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:150)
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:173)
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)
	at java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:596)
	at java.base/java.util.stream.ReferencePipeline$7$1.accept(ReferencePipeline.java:276)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)
	at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1625)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:509)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:499)
	at java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:150)
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:173)
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)
	at java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:596)
	at java.base/java.util.stream.ReferencePipeline$7$1.accept(ReferencePipeline.java:276)
	at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1625)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:509)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:499)
	at java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:150)
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:173)
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)
	at java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:596)
	at org.junit.jupiter.engine.descriptor.TestTemplateTestDescriptor.execute(TestTemplateTestDescriptor.java:110)
	at org.junit.jupiter.engine.descriptor.TestTemplateTestDescriptor.execute(TestTemplateTestDescriptor.java:44)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:151)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.submit(SameThreadHierarchicalTestExecutorService.java:35)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:57)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:54)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:198)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:169)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:93)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.lambda$execute$0(EngineExecutionOrchestrator.java:58)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.withInterceptedStreams(EngineExecutionOrchestrator.java:141)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:57)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:103)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:85)
	at org.junit.platform.launcher.core.DelegatingLauncher.execute(DelegatingLauncher.java:47)
	at org.apache.maven.surefire.junitplatform.LazyLauncher.execute(LazyLauncher.java:56)
	at org.apache.maven.surefire.junitplatform.JUnitPlatformProvider.execute(JUnitPlatformProvider.java:184)
	at org.apache.maven.surefire.junitplatform.JUnitPlatformProvider.invokeAllTests(JUnitPlatformProvider.java:148)
	at org.apache.maven.surefire.junitplatform.JUnitPlatformProvider.invoke(JUnitPlatformProvider.java:122)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:385)
	at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:162)
	at org.apache.maven.surefire.booter.ForkedBooter.run(ForkedBooter.java:507)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:495)
QueryInterruptedException{msg=Uncategorized calcite error message: [FULL JOIN is not supported by engine[msq-task] with sqlJoinAlgorithm[broadcast]. Try sqlJoinAlgorithm[sortMerge].], code=Unknown exception, class=org.apache.druid.error.DruidException, host=null}
	at org.apache.druid.query.QueryInterruptedException.wrapIfNeeded(QueryInterruptedException.java:113)
	at org.apache.druid.sql.avatica.ErrorHandler.sanitize(ErrorHandler.java:82)
	at org.apache.druid.sql.avatica.DruidMeta.mapException(DruidMeta.java:395)
	at org.apache.druid.sql.avatica.DruidMeta.prepareAndExecute(DruidMeta.java:362)
	at org.apache.calcite.avatica.remote.LocalService.apply(LocalService.java:212)
	at org.apache.calcite.avatica.remote.Service$PrepareAndExecuteRequest.accept(Service.java:952)
	at org.apache.calcite.avatica.remote.Service$PrepareAndExecuteRequest.accept(Service.java:904)
	at org.apache.calcite.avatica.remote.AbstractHandler.apply(AbstractHandler.java:94)
	at org.apache.calcite.avatica.remote.JsonHandler.apply(JsonHandler.java:52)
	at org.apache.calcite.avatica.server.AvaticaJsonHandler.handle(AvaticaJsonHandler.java:133)
	at org.apache.druid.sql.avatica.DruidAvaticaJsonHandler.handle(DruidAvaticaJsonHandler.java:61)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:127)
	at org.eclipse.jetty.server.Server.handle(Server.java:516)
	at org.eclipse.jetty.server.HttpChannel.lambda$handle$1(HttpChannel.java:487)
	at org.eclipse.jetty.server.HttpChannel.dispatch(HttpChannel.java:732)
	at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:479)
	at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:277)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.succeeded(AbstractConnection.java:311)
	at org.eclipse.jetty.io.FillInterest.fillable(FillInterest.java:105)
	at org.eclipse.jetty.io.ChannelEndPoint$1.run(ChannelEndPoint.java:104)
	at org.eclipse.jetty.util.thread.strategy.EatWhatYouKill.runTask(EatWhatYouKill.java:338)
	at org.eclipse.jetty.util.thread.strategy.EatWhatYouKill.doProduce(EatWhatYouKill.java:315)
	at org.eclipse.jetty.util.thread.strategy.EatWhatYouKill.tryProduce(EatWhatYouKill.java:173)
	at org.eclipse.jetty.util.thread.strategy.EatWhatYouKill.run(EatWhatYouKill.java:131)
	at org.eclipse.jetty.util.thread.ReservedThreadExecutor$ReservedThread.run(ReservedThreadExecutor.java:409)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:883)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$Runner.run(QueuedThreadPool.java:1034)
	at java.base/java.lang.Thread.run(Thread.java:840)
Caused by: org.apache.druid.error.DruidException: Uncategorized calcite error message: [FULL JOIN is not supported by engine[msq-task] with sqlJoinAlgorithm[broadcast]. Try sqlJoinAlgorithm[sortMerge].]
	at org.apache.druid.sql.calcite.planner.DruidPlanner.parseValidationMessage(DruidPlanner.java:454)
	at org.apache.druid.sql.calcite.planner.DruidPlanner.translateException(DruidPlanner.java:352)
	at org.apache.druid.sql.calcite.planner.QueryHandler.plan(QueryHandler.java:246)
	at org.apache.druid.sql.calcite.planner.DruidPlanner.plan(DruidPlanner.java:267)
	at org.apache.druid.sql.DirectStatement.createPlan(DirectStatement.java:255)
	at org.apache.druid.sql.DirectStatement.plan(DirectStatement.java:223)
	at org.apache.druid.sql.DirectStatement.execute(DirectStatement.java:184)
	at org.apache.druid.sql.avatica.DruidJdbcResultSet.lambda$execute$0(DruidJdbcResultSet.java:239)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	... 1 more
Caused by: org.apache.calcite.tools.ValidationException: FULL JOIN is not supported by engine[msq-task] with sqlJoinAlgorithm[broadcast]. Try sqlJoinAlgorithm[sortMerge].
	at org.apache.druid.sql.calcite.planner.QueryValidations.validateNoIllegalRightyJoins(QueryValidations.java:78)
	at org.apache.druid.sql.calcite.planner.QueryValidations.validateLogicalQueryForDruid(QueryValidations.java:45)
	at org.apache.druid.sql.calcite.planner.QueryHandler.planWithDruidConvention(QueryHandler.java:540)
	at org.apache.druid.sql.calcite.planner.QueryHandler$SelectHandler.planForDruid(QueryHandler.java:735)
	at org.apache.druid.sql.calcite.planner.QueryHandler.plan(QueryHandler.java:209)
	... 9 more

!error

#-------------------------------------------------------------------------
# TESTCASE: test_join TEST_ID: A6_B1_C1 TYPE: NEGATIVE TEST
#-------------------------------------------------------------------------
SELECT t1.a_bool
FROM test_array t1,
     test_array t2
WHERE t1.a_bool=t2.a_bool;
not support
!error

#-------------------------------------------------------------------------
# TESTCASE: test_join TEST_ID: A6_B1_C3 TYPE: NEGATIVE TEST
#-------------------------------------------------------------------------
SELECT a_bool
FROM
  (SELECT *
   FROM test_array t1,
        test_array t2
   WHERE t1.a_bool=t2.a_bool);
not support
!error

#-------------------------------------------------------------------------
# TESTCASE: test_join TEST_ID: A6_B1_C5 TYPE: NEGATIVE TEST
#-------------------------------------------------------------------------
WITH t1 AS
  (SELECT *
   FROM test_array)
SELECT t1.a_bool
FROM t1,
     test_array t2
WHERE t1.a_bool=t2.a_bool;
not support
!error

#-------------------------------------------------------------------------
# TESTCASE: test_join TEST_ID: A6_B2_C1 TYPE: NEGATIVE TEST
#-------------------------------------------------------------------------
SELECT t1.a_int
FROM test_array t1,
     test_array t2
WHERE t1.a_int=t2.a_int;
not support
!error

#-------------------------------------------------------------------------
# TESTCASE: test_join TEST_ID: A6_B2_C3 TYPE: NEGATIVE TEST
#-------------------------------------------------------------------------
SELECT a_int
FROM
  (SELECT *
   FROM test_array t1,
        test_array t2
   WHERE t1.a_int=t2.a_int);
not support
!error

#-------------------------------------------------------------------------
# TESTCASE: test_join TEST_ID: A6_B2_C5 TYPE: NEGATIVE TEST
#-------------------------------------------------------------------------
WITH t1 AS
  (SELECT *
   FROM test_array)
SELECT t1.a_int
FROM t1,
     test_array t2
WHERE t1.a_int=t2.a_int;
not support
!error

#-------------------------------------------------------------------------
# TESTCASE: test_join TEST_ID: A6_B3_C1 TYPE: NEGATIVE TEST
#-------------------------------------------------------------------------
SELECT t1.a_float
FROM test_array t1,
     test_array t2
WHERE t1.a_float=t2.a_float;
not support
!error

#-------------------------------------------------------------------------
# TESTCASE: test_join TEST_ID: A6_B3_C3 TYPE: NEGATIVE TEST
#-------------------------------------------------------------------------
SELECT a_float
FROM
  (SELECT *
   FROM test_array t1,
        test_array t2
   WHERE t1.a_float=t2.a_float);
not support
!error

#-------------------------------------------------------------------------
# TESTCASE: test_join TEST_ID: A6_B3_C5 TYPE: NEGATIVE TEST
#-------------------------------------------------------------------------
WITH t1 AS
  (SELECT *
   FROM test_array)
SELECT t1.a_float
FROM t1,
     test_array t2
WHERE t1.a_float=t2.a_float;
not support
!error

#-------------------------------------------------------------------------
# TESTCASE: test_join TEST_ID: A6_B4_C1 TYPE: NEGATIVE TEST
#-------------------------------------------------------------------------
SELECT t1.a_str
FROM test_array t1,
     test_array t2
WHERE t1.a_str=t2.a_str;
not support
!error

#-------------------------------------------------------------------------
# TESTCASE: test_join TEST_ID: A6_B4_C3 TYPE: NEGATIVE TEST
#-------------------------------------------------------------------------
SELECT a_str
FROM
  (SELECT *
   FROM test_array t1,
        test_array t2
   WHERE t1.a_str=t2.a_str);
not support
!error

#-------------------------------------------------------------------------
# TESTCASE: test_join TEST_ID: A6_B4_C5 TYPE: NEGATIVE TEST
#-------------------------------------------------------------------------
WITH t1 AS
  (SELECT *
   FROM test_array)
SELECT t1.a_str
FROM t1,
     test_array t2
WHERE t1.a_str=t2.a_str;
not support
!error

#-------------------------------------------------------------------------
# TESTCASE: test_join TEST_ID: A6_B5_C1 TYPE: NEGATIVE TEST
#-------------------------------------------------------------------------
SELECT t1.a_null
FROM test_array t1,
     test_array t2
WHERE t1.a_null=t2.a_null;
not support
!error

#-------------------------------------------------------------------------
# TESTCASE: test_join TEST_ID: A6_B5_C3 TYPE: NEGATIVE TEST
#-------------------------------------------------------------------------
SELECT a_null
FROM
  (SELECT *
   FROM test_array t1,
        test_array t2
   WHERE t1.a_null=t2.a_null);
not support
!error

#-------------------------------------------------------------------------
# TESTCASE: test_join TEST_ID: A6_B5_C5 TYPE: NEGATIVE TEST
#-------------------------------------------------------------------------
WITH t1 AS
  (SELECT *
   FROM test_array)
SELECT t1.a_null
FROM t1,
     test_array t2
WHERE t1.a_null=t2.a_null;
not support
!error

#-------------------------------------------------------------------------
# TESTCASE: test_join TEST_ID: A6_B6_C1 TYPE: NEGATIVE TEST
#-------------------------------------------------------------------------
SELECT t1.a_empty
FROM test_array t1,
     test_array t2
WHERE t1.a_empty=t2.a_empty;
not support
!error

#-------------------------------------------------------------------------
# TESTCASE: test_join TEST_ID: A6_B6_C3 TYPE: NEGATIVE TEST
#-------------------------------------------------------------------------
SELECT a_empty
FROM
  (SELECT *
   FROM test_array t1,
        test_array t2
   WHERE t1.a_empty=t2.a_empty);
not support
!error

#-------------------------------------------------------------------------
# TESTCASE: test_join TEST_ID: A6_B6_C5 TYPE: NEGATIVE TEST
#-------------------------------------------------------------------------
WITH t1 AS
  (SELECT *
   FROM test_array)
SELECT t1.a_empty
FROM t1,
     test_array t2
WHERE t1.a_empty=t2.a_empty;
not support
!error

#-------------------------------------------------------------------------
# TESTCASE: test_join TEST_ID: A6_B7_C1 TYPE: NEGATIVE TEST
#-------------------------------------------------------------------------
SELECT t1.a_mixed
FROM test_array t1,
     test_array t2
WHERE t1.a_mixed=t2.a_mixed;
not support
!error

#-------------------------------------------------------------------------
# TESTCASE: test_join TEST_ID: A6_B7_C3 TYPE: NEGATIVE TEST
#-------------------------------------------------------------------------
SELECT a_mixed
FROM
  (SELECT *
   FROM test_array t1,
        test_array t2
   WHERE t1.a_mixed=t2.a_mixed);
not support
!error

#-------------------------------------------------------------------------
# TESTCASE: test_join TEST_ID: A6_B7_C5 TYPE: NEGATIVE TEST
#-------------------------------------------------------------------------
WITH t1 AS
  (SELECT *
   FROM test_array)
SELECT t1.a_mixed
FROM t1,
     test_array t2
WHERE t1.a_mixed=t2.a_mixed;
not support
!error

#-------------------------------------------------------------------------
# TESTCASE: test_join TEST_ID: A6_B8_C1 TYPE: NEGATIVE TEST
#-------------------------------------------------------------------------
SELECT t1.a_nested
FROM test_array t1,
     test_array t2
WHERE t1.a_nested=t2.a_nested;
Cannot join
!error

#-------------------------------------------------------------------------
# TESTCASE: test_join TEST_ID: A6_B8_C3 TYPE: NEGATIVE TEST
#-------------------------------------------------------------------------
SELECT a_nested
FROM
  (SELECT *
   FROM test_array t1,
        test_array t2
   WHERE t1.a_nested=t2.a_nested);
Cannot join
!error

#-------------------------------------------------------------------------
# TESTCASE: test_join TEST_ID: A6_B8_C5 TYPE: NEGATIVE TEST
#-------------------------------------------------------------------------
WITH t1 AS
  (SELECT *
   FROM test_array)
SELECT t1.a_nested
FROM t1,
     test_array t2
WHERE t1.a_nested=t2.a_nested;
Cannot join
!error

#-------------------------------------------------------------------------
# TESTCASE: test_join TEST_ID: A7_B1_C1 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT t1.a_bool
FROM test_array t1
CROSS JOIN test_array t2;
+--------------+
| a_bool       |
+--------------+
| [1, 0, null] |
| [1, 0, null] |
| [1, 0, null] |
| [1, 0, null] |
| [1, 0, null] |
| [1, 0, null] |
| [1, 0, null] |
| [1, 0, null] |
| [null, 0, 1] |
| [null, 0, 1] |
| [null, 0, 1] |
| [null, 0, 1] |
| [null, 0, 1] |
| [null, 0, 1] |
| [null, 0, 1] |
| [null, 0, 1] |
+--------------+
(16 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_join TEST_ID: A7_B1_C3 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT a_bool
FROM
  (SELECT *
   FROM test_array t1
   CROSS JOIN test_array t2);
+--------------+
| a_bool       |
+--------------+
| [1, 0, null] |
| [1, 0, null] |
| [1, 0, null] |
| [1, 0, null] |
| [1, 0, null] |
| [1, 0, null] |
| [1, 0, null] |
| [1, 0, null] |
| [null, 0, 1] |
| [null, 0, 1] |
| [null, 0, 1] |
| [null, 0, 1] |
| [null, 0, 1] |
| [null, 0, 1] |
| [null, 0, 1] |
| [null, 0, 1] |
+--------------+
(16 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_join TEST_ID: A7_B1_C5 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
WITH t1 AS
  (SELECT *
   FROM test_array)
SELECT t1.a_bool
FROM t1
CROSS JOIN test_array t2;
+--------------+
| a_bool       |
+--------------+
| [1, 0, null] |
| [1, 0, null] |
| [1, 0, null] |
| [1, 0, null] |
| [1, 0, null] |
| [1, 0, null] |
| [1, 0, null] |
| [1, 0, null] |
| [null, 0, 1] |
| [null, 0, 1] |
| [null, 0, 1] |
| [null, 0, 1] |
| [null, 0, 1] |
| [null, 0, 1] |
| [null, 0, 1] |
| [null, 0, 1] |
+--------------+
(16 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_join TEST_ID: A7_B2_C1 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT t1.a_int
FROM test_array t1
CROSS JOIN test_array t2;
+--------------+
| a_int        |
+--------------+
| [1, 2, null] |
| [1, 2, null] |
| [1, 2, null] |
| [1, 2, null] |
| [1, 2, null] |
| [1, 2, null] |
| [1, 2, null] |
| [1, 2, null] |
| [null, 2, 1] |
| [null, 2, 1] |
| [null, 2, 1] |
| [null, 2, 1] |
| [null, 2, 1] |
| [null, 2, 1] |
| [null, 2, 1] |
| [null, 2, 1] |
+--------------+
(16 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_join TEST_ID: A7_B2_C3 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT a_int
FROM
  (SELECT *
   FROM test_array t1
   CROSS JOIN test_array t2);
+--------------+
| a_int        |
+--------------+
| [1, 2, null] |
| [1, 2, null] |
| [1, 2, null] |
| [1, 2, null] |
| [1, 2, null] |
| [1, 2, null] |
| [1, 2, null] |
| [1, 2, null] |
| [null, 2, 1] |
| [null, 2, 1] |
| [null, 2, 1] |
| [null, 2, 1] |
| [null, 2, 1] |
| [null, 2, 1] |
| [null, 2, 1] |
| [null, 2, 1] |
+--------------+
(16 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_join TEST_ID: A7_B2_C5 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
WITH t1 AS
  (SELECT *
   FROM test_array)
SELECT t1.a_int
FROM t1
CROSS JOIN test_array t2;
+--------------+
| a_int        |
+--------------+
| [1, 2, null] |
| [1, 2, null] |
| [1, 2, null] |
| [1, 2, null] |
| [1, 2, null] |
| [1, 2, null] |
| [1, 2, null] |
| [1, 2, null] |
| [null, 2, 1] |
| [null, 2, 1] |
| [null, 2, 1] |
| [null, 2, 1] |
| [null, 2, 1] |
| [null, 2, 1] |
| [null, 2, 1] |
| [null, 2, 1] |
+--------------+
(16 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_join TEST_ID: A7_B3_C1 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT t1.a_float
FROM test_array t1
CROSS JOIN test_array t2;
+------------------+
| a_float          |
+------------------+
| [0.1, 0.2, null] |
| [0.1, 0.2, null] |
| [0.1, 0.2, null] |
| [0.1, 0.2, null] |
| [0.1, 0.2, null] |
| [0.1, 0.2, null] |
| [0.1, 0.2, null] |
| [0.1, 0.2, null] |
| [null, 0.2, 0.1] |
| [null, 0.2, 0.1] |
| [null, 0.2, 0.1] |
| [null, 0.2, 0.1] |
| [null, 0.2, 0.1] |
| [null, 0.2, 0.1] |
| [null, 0.2, 0.1] |
| [null, 0.2, 0.1] |
+------------------+
(16 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_join TEST_ID: A7_B3_C3 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT a_float
FROM
  (SELECT *
   FROM test_array t1
   CROSS JOIN test_array t2);
+------------------+
| a_float          |
+------------------+
| [0.1, 0.2, null] |
| [0.1, 0.2, null] |
| [0.1, 0.2, null] |
| [0.1, 0.2, null] |
| [0.1, 0.2, null] |
| [0.1, 0.2, null] |
| [0.1, 0.2, null] |
| [0.1, 0.2, null] |
| [null, 0.2, 0.1] |
| [null, 0.2, 0.1] |
| [null, 0.2, 0.1] |
| [null, 0.2, 0.1] |
| [null, 0.2, 0.1] |
| [null, 0.2, 0.1] |
| [null, 0.2, 0.1] |
| [null, 0.2, 0.1] |
+------------------+
(16 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_join TEST_ID: A7_B3_C5 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
WITH t1 AS
  (SELECT *
   FROM test_array)
SELECT t1.a_float
FROM t1
CROSS JOIN test_array t2;
+------------------+
| a_float          |
+------------------+
| [0.1, 0.2, null] |
| [0.1, 0.2, null] |
| [0.1, 0.2, null] |
| [0.1, 0.2, null] |
| [0.1, 0.2, null] |
| [0.1, 0.2, null] |
| [0.1, 0.2, null] |
| [0.1, 0.2, null] |
| [null, 0.2, 0.1] |
| [null, 0.2, 0.1] |
| [null, 0.2, 0.1] |
| [null, 0.2, 0.1] |
| [null, 0.2, 0.1] |
| [null, 0.2, 0.1] |
| [null, 0.2, 0.1] |
| [null, 0.2, 0.1] |
+------------------+
(16 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_join TEST_ID: A7_B4_C1 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT t1.a_str
FROM test_array t1
CROSS JOIN test_array t2;
+----------------+
| a_str          |
+----------------+
| [S1, S2, null] |
| [S1, S2, null] |
| [S1, S2, null] |
| [S1, S2, null] |
| [S1, S2, null] |
| [S1, S2, null] |
| [S1, S2, null] |
| [S1, S2, null] |
| [null, S2, S1] |
| [null, S2, S1] |
| [null, S2, S1] |
| [null, S2, S1] |
| [null, S2, S1] |
| [null, S2, S1] |
| [null, S2, S1] |
| [null, S2, S1] |
+----------------+
(16 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_join TEST_ID: A7_B4_C3 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT a_str
FROM
  (SELECT *
   FROM test_array t1
   CROSS JOIN test_array t2);
+----------------+
| a_str          |
+----------------+
| [S1, S2, null] |
| [S1, S2, null] |
| [S1, S2, null] |
| [S1, S2, null] |
| [S1, S2, null] |
| [S1, S2, null] |
| [S1, S2, null] |
| [S1, S2, null] |
| [null, S2, S1] |
| [null, S2, S1] |
| [null, S2, S1] |
| [null, S2, S1] |
| [null, S2, S1] |
| [null, S2, S1] |
| [null, S2, S1] |
| [null, S2, S1] |
+----------------+
(16 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_join TEST_ID: A7_B4_C5 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
WITH t1 AS
  (SELECT *
   FROM test_array)
SELECT t1.a_str
FROM t1
CROSS JOIN test_array t2;
+----------------+
| a_str          |
+----------------+
| [S1, S2, null] |
| [S1, S2, null] |
| [S1, S2, null] |
| [S1, S2, null] |
| [S1, S2, null] |
| [S1, S2, null] |
| [S1, S2, null] |
| [S1, S2, null] |
| [null, S2, S1] |
| [null, S2, S1] |
| [null, S2, S1] |
| [null, S2, S1] |
| [null, S2, S1] |
| [null, S2, S1] |
| [null, S2, S1] |
| [null, S2, S1] |
+----------------+
(16 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_join TEST_ID: A7_B5_C1 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT t1.a_null
FROM test_array t1
CROSS JOIN test_array t2;
+--------------------+
| a_null             |
+--------------------+
| [null, null, null] |
| [null, null, null] |
| [null, null, null] |
| [null, null, null] |
| [null, null, null] |
| [null, null, null] |
| [null, null, null] |
| [null, null, null] |
| [null, null, null] |
| [null, null, null] |
| [null, null, null] |
| [null, null, null] |
| [null, null, null] |
| [null, null, null] |
| [null, null, null] |
| [null, null, null] |
+--------------------+
(16 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_join TEST_ID: A7_B5_C3 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT a_null
FROM
  (SELECT *
   FROM test_array t1
   CROSS JOIN test_array t2);
+--------------------+
| a_null             |
+--------------------+
| [null, null, null] |
| [null, null, null] |
| [null, null, null] |
| [null, null, null] |
| [null, null, null] |
| [null, null, null] |
| [null, null, null] |
| [null, null, null] |
| [null, null, null] |
| [null, null, null] |
| [null, null, null] |
| [null, null, null] |
| [null, null, null] |
| [null, null, null] |
| [null, null, null] |
| [null, null, null] |
+--------------------+
(16 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_join TEST_ID: A7_B5_C5 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
WITH t1 AS
  (SELECT *
   FROM test_array)
SELECT t1.a_null
FROM t1
CROSS JOIN test_array t2;
+--------------------+
| a_null             |
+--------------------+
| [null, null, null] |
| [null, null, null] |
| [null, null, null] |
| [null, null, null] |
| [null, null, null] |
| [null, null, null] |
| [null, null, null] |
| [null, null, null] |
| [null, null, null] |
| [null, null, null] |
| [null, null, null] |
| [null, null, null] |
| [null, null, null] |
| [null, null, null] |
| [null, null, null] |
| [null, null, null] |
+--------------------+
(16 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_join TEST_ID: A7_B6_C1 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT t1.a_empty
FROM test_array t1
CROSS JOIN test_array t2;
+---------+
| a_empty |
+---------+
| []      |
| []      |
| []      |
| []      |
| []      |
| []      |
| []      |
| []      |
| []      |
| []      |
| []      |
| []      |
| []      |
| []      |
| []      |
| []      |
+---------+
(16 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_join TEST_ID: A7_B6_C3 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT a_empty
FROM
  (SELECT *
   FROM test_array t1
   CROSS JOIN test_array t2);
+---------+
| a_empty |
+---------+
| []      |
| []      |
| []      |
| []      |
| []      |
| []      |
| []      |
| []      |
| []      |
| []      |
| []      |
| []      |
| []      |
| []      |
| []      |
| []      |
+---------+
(16 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_join TEST_ID: A7_B6_C5 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
WITH t1 AS
  (SELECT *
   FROM test_array)
SELECT t1.a_empty
FROM t1
CROSS JOIN test_array t2;
+---------+
| a_empty |
+---------+
| []      |
| []      |
| []      |
| []      |
| []      |
| []      |
| []      |
| []      |
| []      |
| []      |
| []      |
| []      |
| []      |
| []      |
| []      |
| []      |
+---------+
(16 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_join TEST_ID: A7_B7_C1 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT t1.a_mixed
FROM test_array t1
CROSS JOIN test_array t2;
+--------------------------+
| a_mixed                  |
+--------------------------+
| [null, S1, 0.1, 1, true] |
| [null, S1, 0.1, 1, true] |
| [null, S1, 0.1, 1, true] |
| [null, S1, 0.1, 1, true] |
| [null, S1, 0.1, 1, true] |
| [null, S1, 0.1, 1, true] |
| [null, S1, 0.1, 1, true] |
| [null, S1, 0.1, 1, true] |
| [true, 1, 0.1, S1, null] |
| [true, 1, 0.1, S1, null] |
| [true, 1, 0.1, S1, null] |
| [true, 1, 0.1, S1, null] |
| [true, 1, 0.1, S1, null] |
| [true, 1, 0.1, S1, null] |
| [true, 1, 0.1, S1, null] |
| [true, 1, 0.1, S1, null] |
+--------------------------+
(16 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_join TEST_ID: A7_B7_C3 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT a_mixed
FROM
  (SELECT *
   FROM test_array t1
   CROSS JOIN test_array t2);
+--------------------------+
| a_mixed                  |
+--------------------------+
| [null, S1, 0.1, 1, true] |
| [null, S1, 0.1, 1, true] |
| [null, S1, 0.1, 1, true] |
| [null, S1, 0.1, 1, true] |
| [null, S1, 0.1, 1, true] |
| [null, S1, 0.1, 1, true] |
| [null, S1, 0.1, 1, true] |
| [null, S1, 0.1, 1, true] |
| [true, 1, 0.1, S1, null] |
| [true, 1, 0.1, S1, null] |
| [true, 1, 0.1, S1, null] |
| [true, 1, 0.1, S1, null] |
| [true, 1, 0.1, S1, null] |
| [true, 1, 0.1, S1, null] |
| [true, 1, 0.1, S1, null] |
| [true, 1, 0.1, S1, null] |
+--------------------------+
(16 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_join TEST_ID: A7_B7_C5 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
WITH t1 AS
  (SELECT *
   FROM test_array)
SELECT t1.a_mixed
FROM t1
CROSS JOIN test_array t2;
+--------------------------+
| a_mixed                  |
+--------------------------+
| [null, S1, 0.1, 1, true] |
| [null, S1, 0.1, 1, true] |
| [null, S1, 0.1, 1, true] |
| [null, S1, 0.1, 1, true] |
| [null, S1, 0.1, 1, true] |
| [null, S1, 0.1, 1, true] |
| [null, S1, 0.1, 1, true] |
| [null, S1, 0.1, 1, true] |
| [true, 1, 0.1, S1, null] |
| [true, 1, 0.1, S1, null] |
| [true, 1, 0.1, S1, null] |
| [true, 1, 0.1, S1, null] |
| [true, 1, 0.1, S1, null] |
| [true, 1, 0.1, S1, null] |
| [true, 1, 0.1, S1, null] |
| [true, 1, 0.1, S1, null] |
+--------------------------+
(16 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_join TEST_ID: A7_B8_C1 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT t1.a_nested
FROM test_array t1
CROSS JOIN test_array t2;
+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| a_nested                                                                                                                                                                                                                                                                                                                      |
+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| [[null,false,true],[null,2,1],[null,0.2,0.1],[null,"S2","S1"],[null,null,null],[],[null,"S1",0.1,1,true],[[null,false,true],[null,2,1],[null,0.2,0.1],[null,"S2","S1"],[null,null,null],[],[null,"S1",0.1,1,true],[[null,false,true],[null,2,1],[null,0.2,0.1],[null,"S2","S1"],[null,null,null],[],[null,"S1",0.1,1,true]]]] |
| [[null,false,true],[null,2,1],[null,0.2,0.1],[null,"S2","S1"],[null,null,null],[],[null,"S1",0.1,1,true],[[null,false,true],[null,2,1],[null,0.2,0.1],[null,"S2","S1"],[null,null,null],[],[null,"S1",0.1,1,true],[[null,false,true],[null,2,1],[null,0.2,0.1],[null,"S2","S1"],[null,null,null],[],[null,"S1",0.1,1,true]]]] |
| [[null,false,true],[null,2,1],[null,0.2,0.1],[null,"S2","S1"],[null,null,null],[],[null,"S1",0.1,1,true],[[null,false,true],[null,2,1],[null,0.2,0.1],[null,"S2","S1"],[null,null,null],[],[null,"S1",0.1,1,true],[[null,false,true],[null,2,1],[null,0.2,0.1],[null,"S2","S1"],[null,null,null],[],[null,"S1",0.1,1,true]]]] |
| [[null,false,true],[null,2,1],[null,0.2,0.1],[null,"S2","S1"],[null,null,null],[],[null,"S1",0.1,1,true],[[null,false,true],[null,2,1],[null,0.2,0.1],[null,"S2","S1"],[null,null,null],[],[null,"S1",0.1,1,true],[[null,false,true],[null,2,1],[null,0.2,0.1],[null,"S2","S1"],[null,null,null],[],[null,"S1",0.1,1,true]]]] |
| [[null,false,true],[null,2,1],[null,0.2,0.1],[null,"S2","S1"],[null,null,null],[],[null,"S1",0.1,1,true],[[null,false,true],[null,2,1],[null,0.2,0.1],[null,"S2","S1"],[null,null,null],[],[null,"S1",0.1,1,true],[[null,false,true],[null,2,1],[null,0.2,0.1],[null,"S2","S1"],[null,null,null],[],[null,"S1",0.1,1,true]]]] |
| [[null,false,true],[null,2,1],[null,0.2,0.1],[null,"S2","S1"],[null,null,null],[],[null,"S1",0.1,1,true],[[null,false,true],[null,2,1],[null,0.2,0.1],[null,"S2","S1"],[null,null,null],[],[null,"S1",0.1,1,true],[[null,false,true],[null,2,1],[null,0.2,0.1],[null,"S2","S1"],[null,null,null],[],[null,"S1",0.1,1,true]]]] |
| [[null,false,true],[null,2,1],[null,0.2,0.1],[null,"S2","S1"],[null,null,null],[],[null,"S1",0.1,1,true],[[null,false,true],[null,2,1],[null,0.2,0.1],[null,"S2","S1"],[null,null,null],[],[null,"S1",0.1,1,true],[[null,false,true],[null,2,1],[null,0.2,0.1],[null,"S2","S1"],[null,null,null],[],[null,"S1",0.1,1,true]]]] |
| [[null,false,true],[null,2,1],[null,0.2,0.1],[null,"S2","S1"],[null,null,null],[],[null,"S1",0.1,1,true],[[null,false,true],[null,2,1],[null,0.2,0.1],[null,"S2","S1"],[null,null,null],[],[null,"S1",0.1,1,true],[[null,false,true],[null,2,1],[null,0.2,0.1],[null,"S2","S1"],[null,null,null],[],[null,"S1",0.1,1,true]]]] |
| [[true,false,null],[1,2,null],[0.1,0.2,null],["S1","S2",null],[null,null,null],[],[true,1,0.1,"S1",null],[[true,false,null],[1,2,null],[0.1,0.2,null],["S1","S2",null],[null,null,null],[],[true,1,0.1,"S1",null],[[true,false,null],[1,2,null],[0.1,0.2,null],["S1","S2",null],[null,null,null],[],[true,1,0.1,"S1",null]]]] |
| [[true,false,null],[1,2,null],[0.1,0.2,null],["S1","S2",null],[null,null,null],[],[true,1,0.1,"S1",null],[[true,false,null],[1,2,null],[0.1,0.2,null],["S1","S2",null],[null,null,null],[],[true,1,0.1,"S1",null],[[true,false,null],[1,2,null],[0.1,0.2,null],["S1","S2",null],[null,null,null],[],[true,1,0.1,"S1",null]]]] |
| [[true,false,null],[1,2,null],[0.1,0.2,null],["S1","S2",null],[null,null,null],[],[true,1,0.1,"S1",null],[[true,false,null],[1,2,null],[0.1,0.2,null],["S1","S2",null],[null,null,null],[],[true,1,0.1,"S1",null],[[true,false,null],[1,2,null],[0.1,0.2,null],["S1","S2",null],[null,null,null],[],[true,1,0.1,"S1",null]]]] |
| [[true,false,null],[1,2,null],[0.1,0.2,null],["S1","S2",null],[null,null,null],[],[true,1,0.1,"S1",null],[[true,false,null],[1,2,null],[0.1,0.2,null],["S1","S2",null],[null,null,null],[],[true,1,0.1,"S1",null],[[true,false,null],[1,2,null],[0.1,0.2,null],["S1","S2",null],[null,null,null],[],[true,1,0.1,"S1",null]]]] |
| [[true,false,null],[1,2,null],[0.1,0.2,null],["S1","S2",null],[null,null,null],[],[true,1,0.1,"S1",null],[[true,false,null],[1,2,null],[0.1,0.2,null],["S1","S2",null],[null,null,null],[],[true,1,0.1,"S1",null],[[true,false,null],[1,2,null],[0.1,0.2,null],["S1","S2",null],[null,null,null],[],[true,1,0.1,"S1",null]]]] |
| [[true,false,null],[1,2,null],[0.1,0.2,null],["S1","S2",null],[null,null,null],[],[true,1,0.1,"S1",null],[[true,false,null],[1,2,null],[0.1,0.2,null],["S1","S2",null],[null,null,null],[],[true,1,0.1,"S1",null],[[true,false,null],[1,2,null],[0.1,0.2,null],["S1","S2",null],[null,null,null],[],[true,1,0.1,"S1",null]]]] |
| [[true,false,null],[1,2,null],[0.1,0.2,null],["S1","S2",null],[null,null,null],[],[true,1,0.1,"S1",null],[[true,false,null],[1,2,null],[0.1,0.2,null],["S1","S2",null],[null,null,null],[],[true,1,0.1,"S1",null],[[true,false,null],[1,2,null],[0.1,0.2,null],["S1","S2",null],[null,null,null],[],[true,1,0.1,"S1",null]]]] |
| [[true,false,null],[1,2,null],[0.1,0.2,null],["S1","S2",null],[null,null,null],[],[true,1,0.1,"S1",null],[[true,false,null],[1,2,null],[0.1,0.2,null],["S1","S2",null],[null,null,null],[],[true,1,0.1,"S1",null],[[true,false,null],[1,2,null],[0.1,0.2,null],["S1","S2",null],[null,null,null],[],[true,1,0.1,"S1",null]]]] |
+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
(16 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_join TEST_ID: A7_B8_C3 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
SELECT a_nested
FROM
  (SELECT *
   FROM test_array t1
   CROSS JOIN test_array t2);
+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| a_nested                                                                                                                                                                                                                                                                                                                      |
+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| [[null,false,true],[null,2,1],[null,0.2,0.1],[null,"S2","S1"],[null,null,null],[],[null,"S1",0.1,1,true],[[null,false,true],[null,2,1],[null,0.2,0.1],[null,"S2","S1"],[null,null,null],[],[null,"S1",0.1,1,true],[[null,false,true],[null,2,1],[null,0.2,0.1],[null,"S2","S1"],[null,null,null],[],[null,"S1",0.1,1,true]]]] |
| [[null,false,true],[null,2,1],[null,0.2,0.1],[null,"S2","S1"],[null,null,null],[],[null,"S1",0.1,1,true],[[null,false,true],[null,2,1],[null,0.2,0.1],[null,"S2","S1"],[null,null,null],[],[null,"S1",0.1,1,true],[[null,false,true],[null,2,1],[null,0.2,0.1],[null,"S2","S1"],[null,null,null],[],[null,"S1",0.1,1,true]]]] |
| [[null,false,true],[null,2,1],[null,0.2,0.1],[null,"S2","S1"],[null,null,null],[],[null,"S1",0.1,1,true],[[null,false,true],[null,2,1],[null,0.2,0.1],[null,"S2","S1"],[null,null,null],[],[null,"S1",0.1,1,true],[[null,false,true],[null,2,1],[null,0.2,0.1],[null,"S2","S1"],[null,null,null],[],[null,"S1",0.1,1,true]]]] |
| [[null,false,true],[null,2,1],[null,0.2,0.1],[null,"S2","S1"],[null,null,null],[],[null,"S1",0.1,1,true],[[null,false,true],[null,2,1],[null,0.2,0.1],[null,"S2","S1"],[null,null,null],[],[null,"S1",0.1,1,true],[[null,false,true],[null,2,1],[null,0.2,0.1],[null,"S2","S1"],[null,null,null],[],[null,"S1",0.1,1,true]]]] |
| [[null,false,true],[null,2,1],[null,0.2,0.1],[null,"S2","S1"],[null,null,null],[],[null,"S1",0.1,1,true],[[null,false,true],[null,2,1],[null,0.2,0.1],[null,"S2","S1"],[null,null,null],[],[null,"S1",0.1,1,true],[[null,false,true],[null,2,1],[null,0.2,0.1],[null,"S2","S1"],[null,null,null],[],[null,"S1",0.1,1,true]]]] |
| [[null,false,true],[null,2,1],[null,0.2,0.1],[null,"S2","S1"],[null,null,null],[],[null,"S1",0.1,1,true],[[null,false,true],[null,2,1],[null,0.2,0.1],[null,"S2","S1"],[null,null,null],[],[null,"S1",0.1,1,true],[[null,false,true],[null,2,1],[null,0.2,0.1],[null,"S2","S1"],[null,null,null],[],[null,"S1",0.1,1,true]]]] |
| [[null,false,true],[null,2,1],[null,0.2,0.1],[null,"S2","S1"],[null,null,null],[],[null,"S1",0.1,1,true],[[null,false,true],[null,2,1],[null,0.2,0.1],[null,"S2","S1"],[null,null,null],[],[null,"S1",0.1,1,true],[[null,false,true],[null,2,1],[null,0.2,0.1],[null,"S2","S1"],[null,null,null],[],[null,"S1",0.1,1,true]]]] |
| [[null,false,true],[null,2,1],[null,0.2,0.1],[null,"S2","S1"],[null,null,null],[],[null,"S1",0.1,1,true],[[null,false,true],[null,2,1],[null,0.2,0.1],[null,"S2","S1"],[null,null,null],[],[null,"S1",0.1,1,true],[[null,false,true],[null,2,1],[null,0.2,0.1],[null,"S2","S1"],[null,null,null],[],[null,"S1",0.1,1,true]]]] |
| [[true,false,null],[1,2,null],[0.1,0.2,null],["S1","S2",null],[null,null,null],[],[true,1,0.1,"S1",null],[[true,false,null],[1,2,null],[0.1,0.2,null],["S1","S2",null],[null,null,null],[],[true,1,0.1,"S1",null],[[true,false,null],[1,2,null],[0.1,0.2,null],["S1","S2",null],[null,null,null],[],[true,1,0.1,"S1",null]]]] |
| [[true,false,null],[1,2,null],[0.1,0.2,null],["S1","S2",null],[null,null,null],[],[true,1,0.1,"S1",null],[[true,false,null],[1,2,null],[0.1,0.2,null],["S1","S2",null],[null,null,null],[],[true,1,0.1,"S1",null],[[true,false,null],[1,2,null],[0.1,0.2,null],["S1","S2",null],[null,null,null],[],[true,1,0.1,"S1",null]]]] |
| [[true,false,null],[1,2,null],[0.1,0.2,null],["S1","S2",null],[null,null,null],[],[true,1,0.1,"S1",null],[[true,false,null],[1,2,null],[0.1,0.2,null],["S1","S2",null],[null,null,null],[],[true,1,0.1,"S1",null],[[true,false,null],[1,2,null],[0.1,0.2,null],["S1","S2",null],[null,null,null],[],[true,1,0.1,"S1",null]]]] |
| [[true,false,null],[1,2,null],[0.1,0.2,null],["S1","S2",null],[null,null,null],[],[true,1,0.1,"S1",null],[[true,false,null],[1,2,null],[0.1,0.2,null],["S1","S2",null],[null,null,null],[],[true,1,0.1,"S1",null],[[true,false,null],[1,2,null],[0.1,0.2,null],["S1","S2",null],[null,null,null],[],[true,1,0.1,"S1",null]]]] |
| [[true,false,null],[1,2,null],[0.1,0.2,null],["S1","S2",null],[null,null,null],[],[true,1,0.1,"S1",null],[[true,false,null],[1,2,null],[0.1,0.2,null],["S1","S2",null],[null,null,null],[],[true,1,0.1,"S1",null],[[true,false,null],[1,2,null],[0.1,0.2,null],["S1","S2",null],[null,null,null],[],[true,1,0.1,"S1",null]]]] |
| [[true,false,null],[1,2,null],[0.1,0.2,null],["S1","S2",null],[null,null,null],[],[true,1,0.1,"S1",null],[[true,false,null],[1,2,null],[0.1,0.2,null],["S1","S2",null],[null,null,null],[],[true,1,0.1,"S1",null],[[true,false,null],[1,2,null],[0.1,0.2,null],["S1","S2",null],[null,null,null],[],[true,1,0.1,"S1",null]]]] |
| [[true,false,null],[1,2,null],[0.1,0.2,null],["S1","S2",null],[null,null,null],[],[true,1,0.1,"S1",null],[[true,false,null],[1,2,null],[0.1,0.2,null],["S1","S2",null],[null,null,null],[],[true,1,0.1,"S1",null],[[true,false,null],[1,2,null],[0.1,0.2,null],["S1","S2",null],[null,null,null],[],[true,1,0.1,"S1",null]]]] |
| [[true,false,null],[1,2,null],[0.1,0.2,null],["S1","S2",null],[null,null,null],[],[true,1,0.1,"S1",null],[[true,false,null],[1,2,null],[0.1,0.2,null],["S1","S2",null],[null,null,null],[],[true,1,0.1,"S1",null],[[true,false,null],[1,2,null],[0.1,0.2,null],["S1","S2",null],[null,null,null],[],[true,1,0.1,"S1",null]]]] |
+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
(16 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_join TEST_ID: A7_B8_C5 TYPE: POSITIVE TEST
#-------------------------------------------------------------------------
WITH t1 AS
  (SELECT *
   FROM test_array)
SELECT t1.a_nested
FROM t1
CROSS JOIN test_array t2;
+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| a_nested                                                                                                                                                                                                                                                                                                                      |
+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| [[null,false,true],[null,2,1],[null,0.2,0.1],[null,"S2","S1"],[null,null,null],[],[null,"S1",0.1,1,true],[[null,false,true],[null,2,1],[null,0.2,0.1],[null,"S2","S1"],[null,null,null],[],[null,"S1",0.1,1,true],[[null,false,true],[null,2,1],[null,0.2,0.1],[null,"S2","S1"],[null,null,null],[],[null,"S1",0.1,1,true]]]] |
| [[null,false,true],[null,2,1],[null,0.2,0.1],[null,"S2","S1"],[null,null,null],[],[null,"S1",0.1,1,true],[[null,false,true],[null,2,1],[null,0.2,0.1],[null,"S2","S1"],[null,null,null],[],[null,"S1",0.1,1,true],[[null,false,true],[null,2,1],[null,0.2,0.1],[null,"S2","S1"],[null,null,null],[],[null,"S1",0.1,1,true]]]] |
| [[null,false,true],[null,2,1],[null,0.2,0.1],[null,"S2","S1"],[null,null,null],[],[null,"S1",0.1,1,true],[[null,false,true],[null,2,1],[null,0.2,0.1],[null,"S2","S1"],[null,null,null],[],[null,"S1",0.1,1,true],[[null,false,true],[null,2,1],[null,0.2,0.1],[null,"S2","S1"],[null,null,null],[],[null,"S1",0.1,1,true]]]] |
| [[null,false,true],[null,2,1],[null,0.2,0.1],[null,"S2","S1"],[null,null,null],[],[null,"S1",0.1,1,true],[[null,false,true],[null,2,1],[null,0.2,0.1],[null,"S2","S1"],[null,null,null],[],[null,"S1",0.1,1,true],[[null,false,true],[null,2,1],[null,0.2,0.1],[null,"S2","S1"],[null,null,null],[],[null,"S1",0.1,1,true]]]] |
| [[null,false,true],[null,2,1],[null,0.2,0.1],[null,"S2","S1"],[null,null,null],[],[null,"S1",0.1,1,true],[[null,false,true],[null,2,1],[null,0.2,0.1],[null,"S2","S1"],[null,null,null],[],[null,"S1",0.1,1,true],[[null,false,true],[null,2,1],[null,0.2,0.1],[null,"S2","S1"],[null,null,null],[],[null,"S1",0.1,1,true]]]] |
| [[null,false,true],[null,2,1],[null,0.2,0.1],[null,"S2","S1"],[null,null,null],[],[null,"S1",0.1,1,true],[[null,false,true],[null,2,1],[null,0.2,0.1],[null,"S2","S1"],[null,null,null],[],[null,"S1",0.1,1,true],[[null,false,true],[null,2,1],[null,0.2,0.1],[null,"S2","S1"],[null,null,null],[],[null,"S1",0.1,1,true]]]] |
| [[null,false,true],[null,2,1],[null,0.2,0.1],[null,"S2","S1"],[null,null,null],[],[null,"S1",0.1,1,true],[[null,false,true],[null,2,1],[null,0.2,0.1],[null,"S2","S1"],[null,null,null],[],[null,"S1",0.1,1,true],[[null,false,true],[null,2,1],[null,0.2,0.1],[null,"S2","S1"],[null,null,null],[],[null,"S1",0.1,1,true]]]] |
| [[null,false,true],[null,2,1],[null,0.2,0.1],[null,"S2","S1"],[null,null,null],[],[null,"S1",0.1,1,true],[[null,false,true],[null,2,1],[null,0.2,0.1],[null,"S2","S1"],[null,null,null],[],[null,"S1",0.1,1,true],[[null,false,true],[null,2,1],[null,0.2,0.1],[null,"S2","S1"],[null,null,null],[],[null,"S1",0.1,1,true]]]] |
| [[true,false,null],[1,2,null],[0.1,0.2,null],["S1","S2",null],[null,null,null],[],[true,1,0.1,"S1",null],[[true,false,null],[1,2,null],[0.1,0.2,null],["S1","S2",null],[null,null,null],[],[true,1,0.1,"S1",null],[[true,false,null],[1,2,null],[0.1,0.2,null],["S1","S2",null],[null,null,null],[],[true,1,0.1,"S1",null]]]] |
| [[true,false,null],[1,2,null],[0.1,0.2,null],["S1","S2",null],[null,null,null],[],[true,1,0.1,"S1",null],[[true,false,null],[1,2,null],[0.1,0.2,null],["S1","S2",null],[null,null,null],[],[true,1,0.1,"S1",null],[[true,false,null],[1,2,null],[0.1,0.2,null],["S1","S2",null],[null,null,null],[],[true,1,0.1,"S1",null]]]] |
| [[true,false,null],[1,2,null],[0.1,0.2,null],["S1","S2",null],[null,null,null],[],[true,1,0.1,"S1",null],[[true,false,null],[1,2,null],[0.1,0.2,null],["S1","S2",null],[null,null,null],[],[true,1,0.1,"S1",null],[[true,false,null],[1,2,null],[0.1,0.2,null],["S1","S2",null],[null,null,null],[],[true,1,0.1,"S1",null]]]] |
| [[true,false,null],[1,2,null],[0.1,0.2,null],["S1","S2",null],[null,null,null],[],[true,1,0.1,"S1",null],[[true,false,null],[1,2,null],[0.1,0.2,null],["S1","S2",null],[null,null,null],[],[true,1,0.1,"S1",null],[[true,false,null],[1,2,null],[0.1,0.2,null],["S1","S2",null],[null,null,null],[],[true,1,0.1,"S1",null]]]] |
| [[true,false,null],[1,2,null],[0.1,0.2,null],["S1","S2",null],[null,null,null],[],[true,1,0.1,"S1",null],[[true,false,null],[1,2,null],[0.1,0.2,null],["S1","S2",null],[null,null,null],[],[true,1,0.1,"S1",null],[[true,false,null],[1,2,null],[0.1,0.2,null],["S1","S2",null],[null,null,null],[],[true,1,0.1,"S1",null]]]] |
| [[true,false,null],[1,2,null],[0.1,0.2,null],["S1","S2",null],[null,null,null],[],[true,1,0.1,"S1",null],[[true,false,null],[1,2,null],[0.1,0.2,null],["S1","S2",null],[null,null,null],[],[true,1,0.1,"S1",null],[[true,false,null],[1,2,null],[0.1,0.2,null],["S1","S2",null],[null,null,null],[],[true,1,0.1,"S1",null]]]] |
| [[true,false,null],[1,2,null],[0.1,0.2,null],["S1","S2",null],[null,null,null],[],[true,1,0.1,"S1",null],[[true,false,null],[1,2,null],[0.1,0.2,null],["S1","S2",null],[null,null,null],[],[true,1,0.1,"S1",null],[[true,false,null],[1,2,null],[0.1,0.2,null],["S1","S2",null],[null,null,null],[],[true,1,0.1,"S1",null]]]] |
| [[true,false,null],[1,2,null],[0.1,0.2,null],["S1","S2",null],[null,null,null],[],[true,1,0.1,"S1",null],[[true,false,null],[1,2,null],[0.1,0.2,null],["S1","S2",null],[null,null,null],[],[true,1,0.1,"S1",null],[[true,false,null],[1,2,null],[0.1,0.2,null],["S1","S2",null],[null,null,null],[],[true,1,0.1,"S1",null]]]] |
+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
(16 rows)

!ok

#-------------------------------------------------------------------------
# Total query count 169 Positive tests: 25 Negative tests: 144
#-------------------------------------------------------------------------
