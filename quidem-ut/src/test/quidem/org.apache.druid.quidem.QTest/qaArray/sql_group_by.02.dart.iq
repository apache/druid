!set useApproximateCountDistinct false
!use druidtest://?componentSupplier=DartComponentSupplier&datasets=sql/src/test/quidem/qatests/qaArray/sql&numMergeBuffers=3
!set outputformat mysql
#-------------------------------------------------------------------------
# TESTCASE: test_group_by TEST_ID: A12_B9
#-------------------------------------------------------------------------
SELECT json_value(a_nested, '$[7][3]' RETURNING varchar array) c,
       count(*) cnt
FROM test_array
GROUP BY json_value(a_nested, '$[7][3]' RETURNING varchar array)
HAVING json_value(a_nested, '$[7][3]' RETURNING varchar array)=ARRAY['S1',
                                                                     'S2',
                                                                     NULL];
+----------------+-----+
| c              | cnt |
+----------------+-----+
| [S1, S2, null] |   2 |
+----------------+-----+
(1 row)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_group_by TEST_ID: A13_B1
#-------------------------------------------------------------------------
SELECT a_null c,
       count(*) cnt
FROM test_array
GROUP BY a_null;
+--------------------+-----+
| c                  | cnt |
+--------------------+-----+
| [null, null, null] |   4 |
+--------------------+-----+
(1 row)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_group_by TEST_ID: A13_B3
#-------------------------------------------------------------------------
SELECT a_null c,
       count(*) cnt
FROM test_array
GROUP BY GROUPING
SETS (a_null);
+--------------------+-----+
| c                  | cnt |
+--------------------+-----+
| [null, null, null] |   4 |
+--------------------+-----+
(1 row)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_group_by TEST_ID: A13_B5
#-------------------------------------------------------------------------
SELECT a_null c,
       count(*) cnt
FROM test_array
GROUP BY rollup(a_null);
QueryNotSupported
!error

#-------------------------------------------------------------------------
# TESTCASE: test_group_by TEST_ID: A13_B7
#-------------------------------------------------------------------------
SELECT a_null c,
       count(*) cnt
FROM test_array
GROUP BY cube(a_null);
QueryNotSupported
!error

#-------------------------------------------------------------------------
# TESTCASE: test_group_by TEST_ID: A13_B9
#-------------------------------------------------------------------------
SELECT a_null c,
       count(*) cnt
FROM test_array
GROUP BY a_null
HAVING a_null=ARRAY[NULL,
                    NULL,
                    NULL];
+--------------------+-----+
| c                  | cnt |
+--------------------+-----+
| [null, null, null] |   4 |
+--------------------+-----+
(1 row)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_group_by TEST_ID: A14_B1
#-------------------------------------------------------------------------
SELECT json_value(a_nested, '$[4]' RETURNING varchar array) c,
       count(*) cnt
FROM test_array
GROUP BY json_value(a_nested, '$[4]' RETURNING varchar array);
+--------------------+-----+
| c                  | cnt |
+--------------------+-----+
| [null, null, null] |   4 |
+--------------------+-----+
(1 row)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_group_by TEST_ID: A14_B3
#-------------------------------------------------------------------------
SELECT json_value(a_nested, '$[4]' RETURNING varchar array) c,
       count(*) cnt
FROM test_array
GROUP BY GROUPING
SETS (json_value(a_nested, '$[4]' RETURNING varchar array));
+--------------------+-----+
| c                  | cnt |
+--------------------+-----+
| [null, null, null] |   4 |
+--------------------+-----+
(1 row)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_group_by TEST_ID: A14_B5
#-------------------------------------------------------------------------
SELECT json_value(a_nested, '$[4]' RETURNING varchar array) c,
       count(*) cnt
FROM test_array
GROUP BY rollup(json_value(a_nested, '$[4]' RETURNING varchar array));
QueryNotSupported
!error

#-------------------------------------------------------------------------
# TESTCASE: test_group_by TEST_ID: A14_B7
#-------------------------------------------------------------------------
SELECT json_value(a_nested, '$[4]' RETURNING varchar array) c,
       count(*) cnt
FROM test_array
GROUP BY cube(json_value(a_nested, '$[4]' RETURNING varchar array));
QueryNotSupported
!error

#-------------------------------------------------------------------------
# TESTCASE: test_group_by TEST_ID: A14_B9
#-------------------------------------------------------------------------
SELECT json_value(a_nested, '$[4]' RETURNING varchar array) c,
       count(*) cnt
FROM test_array
GROUP BY json_value(a_nested, '$[4]' RETURNING varchar array)
HAVING json_value(a_nested, '$[4]' RETURNING varchar array)=ARRAY[NULL,
                                                                  NULL,
                                                                  NULL];
+--------------------+-----+
| c                  | cnt |
+--------------------+-----+
| [null, null, null] |   4 |
+--------------------+-----+
(1 row)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_group_by TEST_ID: A15_B1
#-------------------------------------------------------------------------
SELECT json_value(a_nested, '$[7][4]' RETURNING varchar array) c,
       count(*) cnt
FROM test_array
GROUP BY json_value(a_nested, '$[7][4]' RETURNING varchar array);
+--------------------+-----+
| c                  | cnt |
+--------------------+-----+
| [null, null, null] |   4 |
+--------------------+-----+
(1 row)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_group_by TEST_ID: A15_B3
#-------------------------------------------------------------------------
SELECT json_value(a_nested, '$[7][4]' RETURNING varchar array) c,
       count(*) cnt
FROM test_array
GROUP BY GROUPING
SETS (json_value(a_nested, '$[7][4]' RETURNING varchar array));
+--------------------+-----+
| c                  | cnt |
+--------------------+-----+
| [null, null, null] |   4 |
+--------------------+-----+
(1 row)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_group_by TEST_ID: A15_B5
#-------------------------------------------------------------------------
SELECT json_value(a_nested, '$[7][4]' RETURNING varchar array) c,
       count(*) cnt
FROM test_array
GROUP BY rollup(json_value(a_nested, '$[7][4]' RETURNING varchar array));
QueryNotSupported
!error

#-------------------------------------------------------------------------
# TESTCASE: test_group_by TEST_ID: A15_B7
#-------------------------------------------------------------------------
SELECT json_value(a_nested, '$[7][4]' RETURNING varchar array) c,
       count(*) cnt
FROM test_array
GROUP BY cube(json_value(a_nested, '$[7][4]' RETURNING varchar array));
QueryNotSupported
!error

#-------------------------------------------------------------------------
# TESTCASE: test_group_by TEST_ID: A15_B9
#-------------------------------------------------------------------------
SELECT json_value(a_nested, '$[7][4]' RETURNING varchar array) c,
       count(*) cnt
FROM test_array
GROUP BY json_value(a_nested, '$[7][4]' RETURNING varchar array)
HAVING json_value(a_nested, '$[7][4]' RETURNING varchar array)=ARRAY[NULL,
                                                                     NULL,
                                                                     NULL];
+--------------------+-----+
| c                  | cnt |
+--------------------+-----+
| [null, null, null] |   4 |
+--------------------+-----+
(1 row)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_group_by TEST_ID: A16_B1
#-------------------------------------------------------------------------
SELECT a_empty c,
       count(*) cnt
FROM test_array
GROUP BY a_empty;
+----+-----+
| c  | cnt |
+----+-----+
| [] |   4 |
+----+-----+
(1 row)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_group_by TEST_ID: A16_B3
#-------------------------------------------------------------------------
SELECT a_empty c,
       count(*) cnt
FROM test_array
GROUP BY GROUPING
SETS (a_empty);
+----+-----+
| c  | cnt |
+----+-----+
| [] |   4 |
+----+-----+
(1 row)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_group_by TEST_ID: A16_B5
#-------------------------------------------------------------------------
SELECT a_empty c,
       count(*) cnt
FROM test_array
GROUP BY rollup(a_empty);
QueryNotSupported
!error

#-------------------------------------------------------------------------
# TESTCASE: test_group_by TEST_ID: A16_B7
#-------------------------------------------------------------------------
SELECT a_empty c,
       count(*) cnt
FROM test_array
GROUP BY cube(a_empty);
QueryNotSupported
!error

#-------------------------------------------------------------------------
# TESTCASE: test_group_by TEST_ID: A16_B9
#-------------------------------------------------------------------------
SELECT a_empty c,
       count(*) cnt
FROM test_array
GROUP BY a_empty
HAVING a_empty=ARRAY['A'];
+---+-----+
| c | cnt |
+---+-----+
+---+-----+
(0 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_group_by TEST_ID: A17_B1
#-------------------------------------------------------------------------
SELECT json_value(a_nested, '$[5]' RETURNING varchar array) c,
       count(*) cnt
FROM test_array
GROUP BY json_value(a_nested, '$[5]' RETURNING varchar array);
+----+-----+
| c  | cnt |
+----+-----+
| [] |   4 |
+----+-----+
(1 row)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_group_by TEST_ID: A17_B3
#-------------------------------------------------------------------------
SELECT json_value(a_nested, '$[5]' RETURNING varchar array) c,
       count(*) cnt
FROM test_array
GROUP BY GROUPING
SETS (json_value(a_nested, '$[5]' RETURNING varchar array));
+----+-----+
| c  | cnt |
+----+-----+
| [] |   4 |
+----+-----+
(1 row)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_group_by TEST_ID: A17_B5
#-------------------------------------------------------------------------
SELECT json_value(a_nested, '$[5]' RETURNING varchar array) c,
       count(*) cnt
FROM test_array
GROUP BY rollup(json_value(a_nested, '$[5]' RETURNING varchar array));
QueryNotSupported
!error

#-------------------------------------------------------------------------
# TESTCASE: test_group_by TEST_ID: A17_B7
#-------------------------------------------------------------------------
SELECT json_value(a_nested, '$[5]' RETURNING varchar array) c,
       count(*) cnt
FROM test_array
GROUP BY cube(json_value(a_nested, '$[5]' RETURNING varchar array));
QueryNotSupported
!error

#-------------------------------------------------------------------------
# TESTCASE: test_group_by TEST_ID: A17_B9
#-------------------------------------------------------------------------
SELECT json_value(a_nested, '$[5]' RETURNING varchar array) c,
       count(*) cnt
FROM test_array
GROUP BY json_value(a_nested, '$[5]' RETURNING varchar array)
HAVING json_value(a_nested, '$[5]' RETURNING varchar array)=ARRAY['A'];
+---+-----+
| c | cnt |
+---+-----+
+---+-----+
(0 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_group_by TEST_ID: A18_B1
#-------------------------------------------------------------------------
SELECT json_value(a_nested, '$[7][5]' RETURNING varchar array) c,
       count(*) cnt
FROM test_array
GROUP BY json_value(a_nested, '$[7][5]' RETURNING varchar array);
+----+-----+
| c  | cnt |
+----+-----+
| [] |   4 |
+----+-----+
(1 row)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_group_by TEST_ID: A18_B3
#-------------------------------------------------------------------------
SELECT json_value(a_nested, '$[7][5]' RETURNING varchar array) c,
       count(*) cnt
FROM test_array
GROUP BY GROUPING
SETS (json_value(a_nested, '$[7][5]' RETURNING varchar array));
+----+-----+
| c  | cnt |
+----+-----+
| [] |   4 |
+----+-----+
(1 row)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_group_by TEST_ID: A18_B5
#-------------------------------------------------------------------------
SELECT json_value(a_nested, '$[7][5]' RETURNING varchar array) c,
       count(*) cnt
FROM test_array
GROUP BY rollup(json_value(a_nested, '$[7][5]' RETURNING varchar array));
QueryNotSupported
!error

#-------------------------------------------------------------------------
# TESTCASE: test_group_by TEST_ID: A18_B7
#-------------------------------------------------------------------------
SELECT json_value(a_nested, '$[7][5]' RETURNING varchar array) c,
       count(*) cnt
FROM test_array
GROUP BY cube(json_value(a_nested, '$[7][5]' RETURNING varchar array));
QueryNotSupported
!error

#-------------------------------------------------------------------------
# TESTCASE: test_group_by TEST_ID: A18_B9
#-------------------------------------------------------------------------
SELECT json_value(a_nested, '$[7][5]' RETURNING varchar array) c,
       count(*) cnt
FROM test_array
GROUP BY json_value(a_nested, '$[7][5]' RETURNING varchar array)
HAVING json_value(a_nested, '$[7][5]' RETURNING varchar array)=ARRAY['A'];
+---+-----+
| c | cnt |
+---+-----+
+---+-----+
(0 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_group_by TEST_ID: A19_B1
#-------------------------------------------------------------------------
SELECT a_mixed c,
       count(*) cnt
FROM test_array
GROUP BY a_mixed;
+--------------------------+-----+
| c                        | cnt |
+--------------------------+-----+
| [null, S1, 0.1, 1, true] |   2 |
| [true, 1, 0.1, S1, null] |   2 |
+--------------------------+-----+
(2 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_group_by TEST_ID: A19_B3
#-------------------------------------------------------------------------
SELECT a_mixed c,
       count(*) cnt
FROM test_array
GROUP BY GROUPING
SETS (a_mixed);
+--------------------------+-----+
| c                        | cnt |
+--------------------------+-----+
| [null, S1, 0.1, 1, true] |   2 |
| [true, 1, 0.1, S1, null] |   2 |
+--------------------------+-----+
(2 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_group_by TEST_ID: A19_B5
#-------------------------------------------------------------------------
SELECT a_mixed c,
       count(*) cnt
FROM test_array
GROUP BY rollup(a_mixed);
QueryNotSupported
!error

#-------------------------------------------------------------------------
# TESTCASE: test_group_by TEST_ID: A19_B7
#-------------------------------------------------------------------------
SELECT a_mixed c,
       count(*) cnt
FROM test_array
GROUP BY cube(a_mixed);
QueryNotSupported
!error

#-------------------------------------------------------------------------
# TESTCASE: test_group_by TEST_ID: A19_B9
#-------------------------------------------------------------------------
SELECT a_mixed c,
       count(*) cnt
FROM test_array
GROUP BY a_mixed
HAVING a_mixed=ARRAY['true',
                     '1',
                     '0.1',
                     'S1',
                     NULL];
+--------------------------+-----+
| c                        | cnt |
+--------------------------+-----+
| [true, 1, 0.1, S1, null] |   2 |
+--------------------------+-----+
(1 row)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_group_by TEST_ID: A20_B1
#-------------------------------------------------------------------------
SELECT json_value(a_nested, '$[6]' RETURNING varchar array) c,
       count(*) cnt
FROM test_array
GROUP BY json_value(a_nested, '$[6]' RETURNING varchar array);
+--------------------------+-----+
| c                        | cnt |
+--------------------------+-----+
| [null, S1, 0.1, 1, true] |   2 |
| [true, 1, 0.1, S1, null] |   2 |
+--------------------------+-----+
(2 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_group_by TEST_ID: A20_B3
#-------------------------------------------------------------------------
SELECT json_value(a_nested, '$[6]' RETURNING varchar array) c,
       count(*) cnt
FROM test_array
GROUP BY GROUPING
SETS (json_value(a_nested, '$[6]' RETURNING varchar array));
+--------------------------+-----+
| c                        | cnt |
+--------------------------+-----+
| [null, S1, 0.1, 1, true] |   2 |
| [true, 1, 0.1, S1, null] |   2 |
+--------------------------+-----+
(2 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_group_by TEST_ID: A20_B5
#-------------------------------------------------------------------------
SELECT json_value(a_nested, '$[6]' RETURNING varchar array) c,
       count(*) cnt
FROM test_array
GROUP BY rollup(json_value(a_nested, '$[6]' RETURNING varchar array));
QueryNotSupported
!error

#-------------------------------------------------------------------------
# TESTCASE: test_group_by TEST_ID: A20_B7
#-------------------------------------------------------------------------
SELECT json_value(a_nested, '$[6]' RETURNING varchar array) c,
       count(*) cnt
FROM test_array
GROUP BY cube(json_value(a_nested, '$[6]' RETURNING varchar array));
QueryNotSupported
!error

#-------------------------------------------------------------------------
# TESTCASE: test_group_by TEST_ID: A20_B9
#-------------------------------------------------------------------------
SELECT json_value(a_nested, '$[6]' RETURNING varchar array) c,
       count(*) cnt
FROM test_array
GROUP BY json_value(a_nested, '$[6]' RETURNING varchar array)
HAVING json_value(a_nested, '$[6]' RETURNING varchar array)=ARRAY['true',
                                                                  '1',
                                                                  '0.1',
                                                                  'S1',
                                                                  NULL];
+--------------------------+-----+
| c                        | cnt |
+--------------------------+-----+
| [true, 1, 0.1, S1, null] |   2 |
+--------------------------+-----+
(1 row)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_group_by TEST_ID: A21_B1
#-------------------------------------------------------------------------
SELECT json_value(a_nested, '$[7][6]' RETURNING varchar array) c,
       count(*) cnt
FROM test_array
GROUP BY json_value(a_nested, '$[7][6]' RETURNING varchar array);
+--------------------------+-----+
| c                        | cnt |
+--------------------------+-----+
| [null, S1, 0.1, 1, true] |   2 |
| [true, 1, 0.1, S1, null] |   2 |
+--------------------------+-----+
(2 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_group_by TEST_ID: A21_B3
#-------------------------------------------------------------------------
SELECT json_value(a_nested, '$[7][6]' RETURNING varchar array) c,
       count(*) cnt
FROM test_array
GROUP BY GROUPING
SETS (json_value(a_nested, '$[7][6]' RETURNING varchar array));
+--------------------------+-----+
| c                        | cnt |
+--------------------------+-----+
| [null, S1, 0.1, 1, true] |   2 |
| [true, 1, 0.1, S1, null] |   2 |
+--------------------------+-----+
(2 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_group_by TEST_ID: A21_B5
#-------------------------------------------------------------------------
SELECT json_value(a_nested, '$[7][6]' RETURNING varchar array) c,
       count(*) cnt
FROM test_array
GROUP BY rollup(json_value(a_nested, '$[7][6]' RETURNING varchar array));
QueryNotSupported
!error

#-------------------------------------------------------------------------
# TESTCASE: test_group_by TEST_ID: A21_B7
#-------------------------------------------------------------------------
SELECT json_value(a_nested, '$[7][6]' RETURNING varchar array) c,
       count(*) cnt
FROM test_array
GROUP BY cube(json_value(a_nested, '$[7][6]' RETURNING varchar array));
QueryNotSupported
!error

#-------------------------------------------------------------------------
# TESTCASE: test_group_by TEST_ID: A21_B9
#-------------------------------------------------------------------------
SELECT json_value(a_nested, '$[7][6]' RETURNING varchar array) c,
       count(*) cnt
FROM test_array
GROUP BY json_value(a_nested, '$[7][6]' RETURNING varchar array)
HAVING json_value(a_nested, '$[7][6]' RETURNING varchar array)=ARRAY['true',
                                                                     '1',
                                                                     '0.1',
                                                                     'S1',
                                                                     NULL];
+--------------------------+-----+
| c                        | cnt |
+--------------------------+-----+
| [true, 1, 0.1, S1, null] |   2 |
+--------------------------+-----+
(1 row)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_group_by TEST_ID: A22_B1
#-------------------------------------------------------------------------
SELECT a_nested c,
       count(*) cnt
FROM test_array
GROUP BY a_nested;
+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+-----+
| c                                                                                                                                                                                                                                                                                                                             | cnt |
+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+-----+
| [[null,false,true],[null,2,1],[null,0.2,0.1],[null,"S2","S1"],[null,null,null],[],[null,"S1",0.1,1,true],[[null,false,true],[null,2,1],[null,0.2,0.1],[null,"S2","S1"],[null,null,null],[],[null,"S1",0.1,1,true],[[null,false,true],[null,2,1],[null,0.2,0.1],[null,"S2","S1"],[null,null,null],[],[null,"S1",0.1,1,true]]]] |   2 |
| [[true,false,null],[1,2,null],[0.1,0.2,null],["S1","S2",null],[null,null,null],[],[true,1,0.1,"S1",null],[[true,false,null],[1,2,null],[0.1,0.2,null],["S1","S2",null],[null,null,null],[],[true,1,0.1,"S1",null],[[true,false,null],[1,2,null],[0.1,0.2,null],["S1","S2",null],[null,null,null],[],[true,1,0.1,"S1",null]]]] |   2 |
+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+-----+
(2 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_group_by TEST_ID: A22_B3
#-------------------------------------------------------------------------
SELECT a_nested c,
       count(*) cnt
FROM test_array
GROUP BY GROUPING
SETS (a_nested);
+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+-----+
| c                                                                                                                                                                                                                                                                                                                             | cnt |
+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+-----+
| [[null,false,true],[null,2,1],[null,0.2,0.1],[null,"S2","S1"],[null,null,null],[],[null,"S1",0.1,1,true],[[null,false,true],[null,2,1],[null,0.2,0.1],[null,"S2","S1"],[null,null,null],[],[null,"S1",0.1,1,true],[[null,false,true],[null,2,1],[null,0.2,0.1],[null,"S2","S1"],[null,null,null],[],[null,"S1",0.1,1,true]]]] |   2 |
| [[true,false,null],[1,2,null],[0.1,0.2,null],["S1","S2",null],[null,null,null],[],[true,1,0.1,"S1",null],[[true,false,null],[1,2,null],[0.1,0.2,null],["S1","S2",null],[null,null,null],[],[true,1,0.1,"S1",null],[[true,false,null],[1,2,null],[0.1,0.2,null],["S1","S2",null],[null,null,null],[],[true,1,0.1,"S1",null]]]] |   2 |
+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+-----+
(2 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_group_by TEST_ID: A22_B5
#-------------------------------------------------------------------------
SELECT a_nested c,
       count(*) cnt
FROM test_array
GROUP BY rollup(a_nested);
QueryNotSupported
!error

#-------------------------------------------------------------------------
# TESTCASE: test_group_by TEST_ID: A22_B7
#-------------------------------------------------------------------------
SELECT a_nested c,
       count(*) cnt
FROM test_array
GROUP BY cube(a_nested);
QueryNotSupported
!error

