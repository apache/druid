!set useApproximateCountDistinct false
!use druidtest://?componentSupplier=AllDruidEnginesComponentSupplier&datasets=sql/src/test/quidem/qatests/qaArray/ops_funcs
!set outputformat mysql
#-------------------------------------------------------------------------
# TESTCASE: test_scalar_funcs TEST_ID: A5_B1_C5_D1
#-------------------------------------------------------------------------
SELECT ipv4_match(json_value(a_nested, '$[1]' RETURNING bigint array), '255.0.0.0/1') AS col
FROM test_array;
Cannot apply 'IPV4_MATCH' to arguments of type 'IPV4_MATCH(
!error

#-------------------------------------------------------------------------
# TESTCASE: test_scalar_funcs TEST_ID: A5_B1_C6_D1
#-------------------------------------------------------------------------
SELECT ipv4_match(json_value(a_nested, '$[7][1]' RETURNING bigint array), '255.0.0.0/1') AS col
FROM test_array;
Cannot apply 'IPV4_MATCH' to arguments of type 'IPV4_MATCH(
!error

#-------------------------------------------------------------------------
# TESTCASE: test_scalar_funcs TEST_ID: A5_B1_C7_D1
#-------------------------------------------------------------------------
SELECT ipv4_match(a_float, '255.0.0.0/1') AS col
FROM test_array;
Cannot apply 'IPV4_MATCH' to arguments of type 'IPV4_MATCH(
!error

#-------------------------------------------------------------------------
# TESTCASE: test_scalar_funcs TEST_ID: A5_B1_C8_D1
#-------------------------------------------------------------------------
SELECT ipv4_match(json_value(a_nested, '$[2]' RETURNING decimal array), '255.0.0.0/1') AS col
FROM test_array;
Cannot apply 'IPV4_MATCH' to arguments of type 'IPV4_MATCH(
!error

#-------------------------------------------------------------------------
# TESTCASE: test_scalar_funcs TEST_ID: A5_B1_C9_D1
#-------------------------------------------------------------------------
SELECT ipv4_match(json_value(a_nested, '$[7][2]' RETURNING decimal array), '255.0.0.0/1') AS col
FROM test_array;
Cannot apply 'IPV4_MATCH' to arguments of type 'IPV4_MATCH(
!error

#-------------------------------------------------------------------------
# TESTCASE: test_scalar_funcs TEST_ID: A5_B1_C10_D1
#-------------------------------------------------------------------------
SELECT ipv4_match(a_str, '255.0.0.0/1') AS col
FROM test_array;
Cannot apply 'IPV4_MATCH' to arguments of type 'IPV4_MATCH(
!error

#-------------------------------------------------------------------------
# TESTCASE: test_scalar_funcs TEST_ID: A5_B1_C11_D1
#-------------------------------------------------------------------------
SELECT ipv4_match(json_value(a_nested, '$[3]' RETURNING varchar array), '255.0.0.0/1') AS col
FROM test_array;
Cannot apply 'IPV4_MATCH' to arguments of type 'IPV4_MATCH(
!error

#-------------------------------------------------------------------------
# TESTCASE: test_scalar_funcs TEST_ID: A5_B1_C12_D1
#-------------------------------------------------------------------------
SELECT ipv4_match(json_value(a_nested, '$[7][3]' RETURNING varchar array), '255.0.0.0/1') AS col
FROM test_array;
Cannot apply 'IPV4_MATCH' to arguments of type 'IPV4_MATCH(
!error

#-------------------------------------------------------------------------
# TESTCASE: test_scalar_funcs TEST_ID: A5_B1_C13_D1
#-------------------------------------------------------------------------
SELECT ipv4_match(a_null, '255.0.0.0/1') AS col
FROM test_array;
Cannot apply 'IPV4_MATCH' to arguments of type 'IPV4_MATCH(
!error

#-------------------------------------------------------------------------
# TESTCASE: test_scalar_funcs TEST_ID: A5_B1_C14_D1
#-------------------------------------------------------------------------
SELECT ipv4_match(json_value(a_nested, '$[4]' RETURNING varchar array), '255.0.0.0/1') AS col
FROM test_array;
Cannot apply 'IPV4_MATCH' to arguments of type 'IPV4_MATCH(
!error

#-------------------------------------------------------------------------
# TESTCASE: test_scalar_funcs TEST_ID: A5_B1_C15_D1
#-------------------------------------------------------------------------
SELECT ipv4_match(json_value(a_nested, '$[7][4]' RETURNING varchar array), '255.0.0.0/1') AS col
FROM test_array;
Cannot apply 'IPV4_MATCH' to arguments of type 'IPV4_MATCH(
!error

#-------------------------------------------------------------------------
# TESTCASE: test_scalar_funcs TEST_ID: A5_B1_C16_D1
#-------------------------------------------------------------------------
SELECT ipv4_match(a_empty, '255.0.0.0/1') AS col
FROM test_array;
Cannot apply 'IPV4_MATCH' to arguments of type 'IPV4_MATCH(
!error

#-------------------------------------------------------------------------
# TESTCASE: test_scalar_funcs TEST_ID: A5_B1_C17_D1
#-------------------------------------------------------------------------
SELECT ipv4_match(json_value(a_nested, '$[5]' RETURNING varchar array), '255.0.0.0/1') AS col
FROM test_array;
Cannot apply 'IPV4_MATCH' to arguments of type 'IPV4_MATCH(
!error

#-------------------------------------------------------------------------
# TESTCASE: test_scalar_funcs TEST_ID: A5_B1_C18_D1
#-------------------------------------------------------------------------
SELECT ipv4_match(json_value(a_nested, '$[7][5]' RETURNING varchar array), '255.0.0.0/1') AS col
FROM test_array;
Cannot apply 'IPV4_MATCH' to arguments of type 'IPV4_MATCH(
!error

#-------------------------------------------------------------------------
# TESTCASE: test_scalar_funcs TEST_ID: A5_B1_C19_D1
#-------------------------------------------------------------------------
SELECT ipv4_match(a_mixed, '255.0.0.0/1') AS col
FROM test_array;
Cannot apply 'IPV4_MATCH' to arguments of type 'IPV4_MATCH(
!error

#-------------------------------------------------------------------------
# TESTCASE: test_scalar_funcs TEST_ID: A5_B1_C20_D1
#-------------------------------------------------------------------------
SELECT ipv4_match(json_value(a_nested, '$[6]' RETURNING varchar array), '255.0.0.0/1') AS col
FROM test_array;
Cannot apply 'IPV4_MATCH' to arguments of type 'IPV4_MATCH(
!error

#-------------------------------------------------------------------------
# TESTCASE: test_scalar_funcs TEST_ID: A5_B1_C21_D1
#-------------------------------------------------------------------------
SELECT ipv4_match(json_value(a_nested, '$[7][6]' RETURNING varchar array), '255.0.0.0/1') AS col
FROM test_array;
Cannot apply 'IPV4_MATCH' to arguments of type 'IPV4_MATCH(
!error

#-------------------------------------------------------------------------
# TESTCASE: test_scalar_funcs TEST_ID: A5_B1_C22_D1
#-------------------------------------------------------------------------
SELECT ipv4_match(a_nested, '255.0.0.0/1') AS col
FROM test_array;
Cannot apply 'IPV4_MATCH' to arguments of type 'IPV4_MATCH(
!error

#-------------------------------------------------------------------------
# TESTCASE: test_scalar_funcs TEST_ID: A5_B1_C23_D1
#-------------------------------------------------------------------------
SELECT ipv4_match(json_value(a_nested, '$[7]' RETURNING varchar array), '255.0.0.0/1') AS col
FROM test_array;
Cannot apply 'IPV4_MATCH' to arguments of type 'IPV4_MATCH(
!error

#-------------------------------------------------------------------------
# TESTCASE: test_scalar_funcs TEST_ID: A5_B1_C24_D1
#-------------------------------------------------------------------------
SELECT ipv4_match(json_value(a_nested, '$[7][7]' RETURNING varchar array), '255.0.0.0/1') AS col
FROM test_array;
Cannot apply 'IPV4_MATCH' to arguments of type 'IPV4_MATCH(
!error

#-------------------------------------------------------------------------
# TESTCASE: test_scalar_funcs TEST_ID: A5_B2_C1_D1
#-------------------------------------------------------------------------
SELECT ipv4_parse(a_bool) AS col
FROM test_array;
Cannot apply 'IPV4_PARSE' to arguments of type 'IPV4_PARSE(
!error

#-------------------------------------------------------------------------
# TESTCASE: test_scalar_funcs TEST_ID: A5_B2_C2_D1
#-------------------------------------------------------------------------
SELECT ipv4_parse(json_value(a_nested, '$[0]' RETURNING boolean array)) AS col
FROM test_array;
Cannot apply 'IPV4_PARSE' to arguments of type 'IPV4_PARSE(
!error

#-------------------------------------------------------------------------
# TESTCASE: test_scalar_funcs TEST_ID: A5_B2_C3_D1
#-------------------------------------------------------------------------
SELECT ipv4_parse(json_value(a_nested, '$[7][0]' RETURNING boolean array)) AS col
FROM test_array;
Cannot apply 'IPV4_PARSE' to arguments of type 'IPV4_PARSE(
!error

#-------------------------------------------------------------------------
# TESTCASE: test_scalar_funcs TEST_ID: A5_B2_C4_D1
#-------------------------------------------------------------------------
SELECT ipv4_parse(a_int) AS col
FROM test_array;
Cannot apply 'IPV4_PARSE' to arguments of type 'IPV4_PARSE(
!error

#-------------------------------------------------------------------------
# TESTCASE: test_scalar_funcs TEST_ID: A5_B2_C5_D1
#-------------------------------------------------------------------------
SELECT ipv4_parse(json_value(a_nested, '$[1]' RETURNING bigint array)) AS col
FROM test_array;
Cannot apply 'IPV4_PARSE' to arguments of type 'IPV4_PARSE(
!error

#-------------------------------------------------------------------------
# TESTCASE: test_scalar_funcs TEST_ID: A5_B2_C6_D1
#-------------------------------------------------------------------------
SELECT ipv4_parse(json_value(a_nested, '$[7][1]' RETURNING bigint array)) AS col
FROM test_array;
Cannot apply 'IPV4_PARSE' to arguments of type 'IPV4_PARSE(
!error

#-------------------------------------------------------------------------
# TESTCASE: test_scalar_funcs TEST_ID: A5_B2_C7_D1
#-------------------------------------------------------------------------
SELECT ipv4_parse(a_float) AS col
FROM test_array;
Cannot apply 'IPV4_PARSE' to arguments of type 'IPV4_PARSE(
!error

#-------------------------------------------------------------------------
# TESTCASE: test_scalar_funcs TEST_ID: A5_B2_C8_D1
#-------------------------------------------------------------------------
SELECT ipv4_parse(json_value(a_nested, '$[2]' RETURNING decimal array)) AS col
FROM test_array;
Cannot apply 'IPV4_PARSE' to arguments of type 'IPV4_PARSE(
!error

#-------------------------------------------------------------------------
# TESTCASE: test_scalar_funcs TEST_ID: A5_B2_C9_D1
#-------------------------------------------------------------------------
SELECT ipv4_parse(json_value(a_nested, '$[7][2]' RETURNING decimal array)) AS col
FROM test_array;
Cannot apply 'IPV4_PARSE' to arguments of type 'IPV4_PARSE(
!error

#-------------------------------------------------------------------------
# TESTCASE: test_scalar_funcs TEST_ID: A5_B2_C10_D1
#-------------------------------------------------------------------------
SELECT ipv4_parse(a_str) AS col
FROM test_array;
Cannot apply 'IPV4_PARSE' to arguments of type 'IPV4_PARSE(
!error

#-------------------------------------------------------------------------
# TESTCASE: test_scalar_funcs TEST_ID: A5_B2_C11_D1
#-------------------------------------------------------------------------
SELECT ipv4_parse(json_value(a_nested, '$[3]' RETURNING varchar array)) AS col
FROM test_array;
Cannot apply 'IPV4_PARSE' to arguments of type 'IPV4_PARSE(
!error

#-------------------------------------------------------------------------
# TESTCASE: test_scalar_funcs TEST_ID: A5_B2_C12_D1
#-------------------------------------------------------------------------
SELECT ipv4_parse(json_value(a_nested, '$[7][3]' RETURNING varchar array)) AS col
FROM test_array;
Cannot apply 'IPV4_PARSE' to arguments of type 'IPV4_PARSE(
!error

#-------------------------------------------------------------------------
# TESTCASE: test_scalar_funcs TEST_ID: A5_B2_C13_D1
#-------------------------------------------------------------------------
SELECT ipv4_parse(a_null) AS col
FROM test_array;
Cannot apply 'IPV4_PARSE' to arguments of type 'IPV4_PARSE(
!error

#-------------------------------------------------------------------------
# TESTCASE: test_scalar_funcs TEST_ID: A5_B2_C14_D1
#-------------------------------------------------------------------------
SELECT ipv4_parse(json_value(a_nested, '$[4]' RETURNING varchar array)) AS col
FROM test_array;
Cannot apply 'IPV4_PARSE' to arguments of type 'IPV4_PARSE(
!error

#-------------------------------------------------------------------------
# TESTCASE: test_scalar_funcs TEST_ID: A5_B2_C15_D1
#-------------------------------------------------------------------------
SELECT ipv4_parse(json_value(a_nested, '$[7][4]' RETURNING varchar array)) AS col
FROM test_array;
Cannot apply 'IPV4_PARSE' to arguments of type 'IPV4_PARSE(
!error

#-------------------------------------------------------------------------
# TESTCASE: test_scalar_funcs TEST_ID: A5_B2_C16_D1
#-------------------------------------------------------------------------
SELECT ipv4_parse(a_empty) AS col
FROM test_array;
Cannot apply 'IPV4_PARSE' to arguments of type 'IPV4_PARSE(
!error

#-------------------------------------------------------------------------
# TESTCASE: test_scalar_funcs TEST_ID: A5_B2_C17_D1
#-------------------------------------------------------------------------
SELECT ipv4_parse(json_value(a_nested, '$[5]' RETURNING varchar array)) AS col
FROM test_array;
Cannot apply 'IPV4_PARSE' to arguments of type 'IPV4_PARSE(
!error

#-------------------------------------------------------------------------
# TESTCASE: test_scalar_funcs TEST_ID: A5_B2_C18_D1
#-------------------------------------------------------------------------
SELECT ipv4_parse(json_value(a_nested, '$[7][5]' RETURNING varchar array)) AS col
FROM test_array;
Cannot apply 'IPV4_PARSE' to arguments of type 'IPV4_PARSE(
!error

#-------------------------------------------------------------------------
# TESTCASE: test_scalar_funcs TEST_ID: A5_B2_C19_D1
#-------------------------------------------------------------------------
SELECT ipv4_parse(a_mixed) AS col
FROM test_array;
Cannot apply 'IPV4_PARSE' to arguments of type 'IPV4_PARSE(
!error

#-------------------------------------------------------------------------
# TESTCASE: test_scalar_funcs TEST_ID: A5_B2_C20_D1
#-------------------------------------------------------------------------
SELECT ipv4_parse(json_value(a_nested, '$[6]' RETURNING varchar array)) AS col
FROM test_array;
Cannot apply 'IPV4_PARSE' to arguments of type 'IPV4_PARSE(
!error

#-------------------------------------------------------------------------
# TESTCASE: test_scalar_funcs TEST_ID: A5_B2_C21_D1
#-------------------------------------------------------------------------
SELECT ipv4_parse(json_value(a_nested, '$[7][6]' RETURNING varchar array)) AS col
FROM test_array;
Cannot apply 'IPV4_PARSE' to arguments of type 'IPV4_PARSE(
!error

#-------------------------------------------------------------------------
# TESTCASE: test_scalar_funcs TEST_ID: A5_B2_C22_D1
#-------------------------------------------------------------------------
SELECT ipv4_parse(a_nested) AS col
FROM test_array;
Cannot apply 'IPV4_PARSE' to arguments of type 'IPV4_PARSE(
!error

#-------------------------------------------------------------------------
# TESTCASE: test_scalar_funcs TEST_ID: A5_B2_C23_D1
#-------------------------------------------------------------------------
SELECT ipv4_parse(json_value(a_nested, '$[7]' RETURNING varchar array)) AS col
FROM test_array;
Cannot apply 'IPV4_PARSE' to arguments of type 'IPV4_PARSE(
!error

#-------------------------------------------------------------------------
# TESTCASE: test_scalar_funcs TEST_ID: A5_B2_C24_D1
#-------------------------------------------------------------------------
SELECT ipv4_parse(json_value(a_nested, '$[7][7]' RETURNING varchar array)) AS col
FROM test_array;
Cannot apply 'IPV4_PARSE' to arguments of type 'IPV4_PARSE(
!error

#-------------------------------------------------------------------------
# TESTCASE: test_scalar_funcs TEST_ID: A5_B3_C1_D1
#-------------------------------------------------------------------------
SELECT ipv4_stringify(a_bool) AS col
FROM test_array;
Cannot apply 'IPV4_STRINGIFY' to arguments of type 'IPV4_STRINGIFY(
!error

#-------------------------------------------------------------------------
# TESTCASE: test_scalar_funcs TEST_ID: A5_B3_C2_D1
#-------------------------------------------------------------------------
SELECT ipv4_stringify(json_value(a_nested, '$[0]' RETURNING boolean array)) AS col
FROM test_array;
Cannot apply 'IPV4_STRINGIFY' to arguments of type 'IPV4_STRINGIFY(
!error

#-------------------------------------------------------------------------
# TESTCASE: test_scalar_funcs TEST_ID: A5_B3_C3_D1
#-------------------------------------------------------------------------
SELECT ipv4_stringify(json_value(a_nested, '$[7][0]' RETURNING boolean array)) AS col
FROM test_array;
Cannot apply 'IPV4_STRINGIFY' to arguments of type 'IPV4_STRINGIFY(
!error

#-------------------------------------------------------------------------
# TESTCASE: test_scalar_funcs TEST_ID: A5_B3_C4_D1
#-------------------------------------------------------------------------
SELECT ipv4_stringify(a_int) AS col
FROM test_array;
Cannot apply 'IPV4_STRINGIFY' to arguments of type 'IPV4_STRINGIFY(
!error

#-------------------------------------------------------------------------
# TESTCASE: test_scalar_funcs TEST_ID: A5_B3_C5_D1
#-------------------------------------------------------------------------
SELECT ipv4_stringify(json_value(a_nested, '$[1]' RETURNING bigint array)) AS col
FROM test_array;
Cannot apply 'IPV4_STRINGIFY' to arguments of type 'IPV4_STRINGIFY(
!error

#-------------------------------------------------------------------------
# TESTCASE: test_scalar_funcs TEST_ID: A5_B3_C6_D1
#-------------------------------------------------------------------------
SELECT ipv4_stringify(json_value(a_nested, '$[7][1]' RETURNING bigint array)) AS col
FROM test_array;
Cannot apply 'IPV4_STRINGIFY' to arguments of type 'IPV4_STRINGIFY(
!error

