!set useApproximateCountDistinct false
!use druidtest://?componentSupplier=StandardComponentSupplier&datasets=sql/src/test/quidem/qatests/qaArray/sql
!set outputformat mysql
#-------------------------------------------------------------------------
# TESTCASE: test_order_by TEST_ID: SEL_DATASOURCE
#-------------------------------------------------------------------------
SELECT count(*) cnt
FROM test_array;
+-----+
| cnt |
+-----+
|   4 |
+-----+
(1 row)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_order_by TEST_ID: A1_B1
#-------------------------------------------------------------------------
SELECT __time,
       count(*) cnt
FROM test_array
GROUP BY __time
ORDER BY __time ASC;
+-------------------------+-----+
| __time                  | cnt |
+-------------------------+-----+
| 2022-01-01 00:00:00.000 |   2 |
| 2022-02-01 00:00:00.000 |   2 |
+-------------------------+-----+
(2 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_order_by TEST_ID: A1_B3
#-------------------------------------------------------------------------
SELECT __time,
       count(*) cnt
FROM test_array
GROUP BY __time
ORDER BY __time DESC;
+-------------------------+-----+
| __time                  | cnt |
+-------------------------+-----+
| 2022-02-01 00:00:00.000 |   2 |
| 2022-01-01 00:00:00.000 |   2 |
+-------------------------+-----+
(2 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_order_by TEST_ID: A1_B5
#-------------------------------------------------------------------------
SELECT __time
FROM test_array
ORDER BY __time ASC;
+-------------------------+
| __time                  |
+-------------------------+
| 2022-01-01 00:00:00.000 |
| 2022-01-01 00:00:00.000 |
| 2022-02-01 00:00:00.000 |
| 2022-02-01 00:00:00.000 |
+-------------------------+
(4 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_order_by TEST_ID: A1_B7
#-------------------------------------------------------------------------
SELECT __time
FROM test_array
ORDER BY 1 DESC;
+-------------------------+
| __time                  |
+-------------------------+
| 2022-02-01 00:00:00.000 |
| 2022-02-01 00:00:00.000 |
| 2022-01-01 00:00:00.000 |
| 2022-01-01 00:00:00.000 |
+-------------------------+
(4 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_order_by TEST_ID: A1_B9
#-------------------------------------------------------------------------
SELECT __time
FROM
  (SELECT __time
   FROM test_array
   ORDER BY __time ASC);
+-------------------------+
| __time                  |
+-------------------------+
| 2022-01-01 00:00:00.000 |
| 2022-01-01 00:00:00.000 |
| 2022-02-01 00:00:00.000 |
| 2022-02-01 00:00:00.000 |
+-------------------------+
(4 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_order_by TEST_ID: A1_B11
#-------------------------------------------------------------------------
SELECT __time
FROM
  (SELECT __time
   FROM test_array
   ORDER BY 1 DESC);
+-------------------------+
| __time                  |
+-------------------------+
| 2022-01-01 00:00:00.000 |
| 2022-01-01 00:00:00.000 |
| 2022-02-01 00:00:00.000 |
| 2022-02-01 00:00:00.000 |
+-------------------------+
(4 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_order_by TEST_ID: A2_B1
#-------------------------------------------------------------------------
SELECT a_bool c,
       count(*) cnt
FROM test_array
GROUP BY a_bool
ORDER BY a_bool ASC;
+--------------+-----+
| c            | cnt |
+--------------+-----+
| [null, 0, 1] |   2 |
| [1, 0, null] |   2 |
+--------------+-----+
(2 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_order_by TEST_ID: A2_B3
#-------------------------------------------------------------------------
SELECT a_bool c,
       count(*) cnt
FROM test_array
GROUP BY 1
ORDER BY 1 DESC;
+--------------+-----+
| c            | cnt |
+--------------+-----+
| [1, 0, null] |   2 |
| [null, 0, 1] |   2 |
+--------------+-----+
(2 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_order_by TEST_ID: A2_B5
#-------------------------------------------------------------------------
SELECT a_bool c
FROM test_array
ORDER BY c ASC;
QueryInterruptedException
!error

#-------------------------------------------------------------------------
# TESTCASE: test_order_by TEST_ID: A2_B6
#-------------------------------------------------------------------------
SELECT a_bool c
FROM test_array
ORDER BY 1 DESC;
QueryInterruptedException
!error

#-------------------------------------------------------------------------
# TESTCASE: test_order_by TEST_ID: A2_B7
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT a_bool c
   FROM test_array
   ORDER BY c ASC);
+--------------+
| c            |
+--------------+
| [1, 0, null] |
| [1, 0, null] |
| [null, 0, 1] |
| [null, 0, 1] |
+--------------+
(4 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_order_by TEST_ID: A2_B9
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT a_bool c
   FROM test_array
   ORDER BY 1 DESC);
+--------------+
| c            |
+--------------+
| [1, 0, null] |
| [1, 0, null] |
| [null, 0, 1] |
| [null, 0, 1] |
+--------------+
(4 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_order_by TEST_ID: A5_B1
#-------------------------------------------------------------------------
SELECT a_int c,
       count(*) cnt
FROM test_array
GROUP BY a_int
ORDER BY a_int ASC;
+--------------+-----+
| c            | cnt |
+--------------+-----+
| [null, 2, 1] |   2 |
| [1, 2, null] |   2 |
+--------------+-----+
(2 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_order_by TEST_ID: A5_B3
#-------------------------------------------------------------------------
SELECT a_int c,
       count(*) cnt
FROM test_array
GROUP BY 1
ORDER BY 1 DESC;
+--------------+-----+
| c            | cnt |
+--------------+-----+
| [1, 2, null] |   2 |
| [null, 2, 1] |   2 |
+--------------+-----+
(2 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_order_by TEST_ID: A5_B5
#-------------------------------------------------------------------------
SELECT a_int c
FROM test_array
ORDER BY c ASC;
QueryInterruptedException
!error

#-------------------------------------------------------------------------
# TESTCASE: test_order_by TEST_ID: A5_B6
#-------------------------------------------------------------------------
SELECT a_int c
FROM test_array
ORDER BY 1 DESC;
QueryInterruptedException
!error

#-------------------------------------------------------------------------
# TESTCASE: test_order_by TEST_ID: A5_B7
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT a_int c
   FROM test_array
   ORDER BY c ASC);
+--------------+
| c            |
+--------------+
| [1, 2, null] |
| [1, 2, null] |
| [null, 2, 1] |
| [null, 2, 1] |
+--------------+
(4 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_order_by TEST_ID: A5_B9
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT a_int c
   FROM test_array
   ORDER BY 1 DESC);
+--------------+
| c            |
+--------------+
| [1, 2, null] |
| [1, 2, null] |
| [null, 2, 1] |
| [null, 2, 1] |
+--------------+
(4 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_order_by TEST_ID: A6_B1
#-------------------------------------------------------------------------
SELECT json_value(a_nested, '$[1]' RETURNING bigint array) c,
       count(*) cnt
FROM test_array
GROUP BY json_value(a_nested, '$[1]' RETURNING bigint array)
ORDER BY json_value(a_nested, '$[1]' RETURNING bigint array) ASC;
+--------------+-----+
| c            | cnt |
+--------------+-----+
| [null, 2, 1] |   2 |
| [1, 2, null] |   2 |
+--------------+-----+
(2 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_order_by TEST_ID: A6_B3
#-------------------------------------------------------------------------
SELECT json_value(a_nested, '$[1]' RETURNING bigint array) c,
       count(*) cnt
FROM test_array
GROUP BY 1
ORDER BY 1 DESC;
+--------------+-----+
| c            | cnt |
+--------------+-----+
| [1, 2, null] |   2 |
| [null, 2, 1] |   2 |
+--------------+-----+
(2 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_order_by TEST_ID: A6_B5
#-------------------------------------------------------------------------
SELECT json_value(a_nested, '$[1]' RETURNING bigint array) c
FROM test_array
ORDER BY c ASC;
QueryInterruptedException
!error

#-------------------------------------------------------------------------
# TESTCASE: test_order_by TEST_ID: A6_B6
#-------------------------------------------------------------------------
SELECT json_value(a_nested, '$[1]' RETURNING bigint array) c
FROM test_array
ORDER BY 1 DESC;
QueryInterruptedException
!error

#-------------------------------------------------------------------------
# TESTCASE: test_order_by TEST_ID: A6_B7
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT json_value(a_nested, '$[1]' RETURNING bigint array) c
   FROM test_array
   ORDER BY c ASC);
+--------------+
| c            |
+--------------+
| [1, 2, null] |
| [1, 2, null] |
| [null, 2, 1] |
| [null, 2, 1] |
+--------------+
(4 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_order_by TEST_ID: A6_B9
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT json_value(a_nested, '$[1]' RETURNING bigint array) c
   FROM test_array
   ORDER BY 1 DESC);
+--------------+
| c            |
+--------------+
| [1, 2, null] |
| [1, 2, null] |
| [null, 2, 1] |
| [null, 2, 1] |
+--------------+
(4 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_order_by TEST_ID: A7_B1
#-------------------------------------------------------------------------
SELECT json_value(a_nested, '$[7][1]' RETURNING bigint array) c,
       count(*) cnt
FROM test_array
GROUP BY json_value(a_nested, '$[7][1]' RETURNING bigint array)
ORDER BY json_value(a_nested, '$[7][1]' RETURNING bigint array) ASC;
+--------------+-----+
| c            | cnt |
+--------------+-----+
| [null, 2, 1] |   2 |
| [1, 2, null] |   2 |
+--------------+-----+
(2 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_order_by TEST_ID: A7_B3
#-------------------------------------------------------------------------
SELECT json_value(a_nested, '$[7][1]' RETURNING bigint array) c,
       count(*) cnt
FROM test_array
GROUP BY 1
ORDER BY 1 DESC;
+--------------+-----+
| c            | cnt |
+--------------+-----+
| [1, 2, null] |   2 |
| [null, 2, 1] |   2 |
+--------------+-----+
(2 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_order_by TEST_ID: A7_B5
#-------------------------------------------------------------------------
SELECT json_value(a_nested, '$[7][1]' RETURNING bigint array) c
FROM test_array
ORDER BY c ASC;
QueryInterruptedException
!error

#-------------------------------------------------------------------------
# TESTCASE: test_order_by TEST_ID: A7_B6
#-------------------------------------------------------------------------
SELECT json_value(a_nested, '$[7][1]' RETURNING bigint array) c
FROM test_array
ORDER BY 1 DESC;
QueryInterruptedException
!error

#-------------------------------------------------------------------------
# TESTCASE: test_order_by TEST_ID: A7_B7
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT json_value(a_nested, '$[7][1]' RETURNING bigint array) c
   FROM test_array
   ORDER BY c ASC);
+--------------+
| c            |
+--------------+
| [1, 2, null] |
| [1, 2, null] |
| [null, 2, 1] |
| [null, 2, 1] |
+--------------+
(4 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_order_by TEST_ID: A7_B9
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT json_value(a_nested, '$[7][1]' RETURNING bigint array) c
   FROM test_array
   ORDER BY 1 DESC);
+--------------+
| c            |
+--------------+
| [1, 2, null] |
| [1, 2, null] |
| [null, 2, 1] |
| [null, 2, 1] |
+--------------+
(4 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_order_by TEST_ID: A8_B1
#-------------------------------------------------------------------------
SELECT a_float c,
       count(*) cnt
FROM test_array
GROUP BY a_float
ORDER BY a_float ASC;
+------------------+-----+
| c                | cnt |
+------------------+-----+
| [null, 0.2, 0.1] |   2 |
| [0.1, 0.2, null] |   2 |
+------------------+-----+
(2 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_order_by TEST_ID: A8_B3
#-------------------------------------------------------------------------
SELECT a_float c,
       count(*) cnt
FROM test_array
GROUP BY 1
ORDER BY 1 DESC;
+------------------+-----+
| c                | cnt |
+------------------+-----+
| [0.1, 0.2, null] |   2 |
| [null, 0.2, 0.1] |   2 |
+------------------+-----+
(2 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_order_by TEST_ID: A8_B5
#-------------------------------------------------------------------------
SELECT a_float c
FROM test_array
ORDER BY c ASC;
QueryInterruptedException
!error

#-------------------------------------------------------------------------
# TESTCASE: test_order_by TEST_ID: A8_B6
#-------------------------------------------------------------------------
SELECT a_float c
FROM test_array
ORDER BY 1 DESC;
QueryInterruptedException
!error

#-------------------------------------------------------------------------
# TESTCASE: test_order_by TEST_ID: A8_B7
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT a_float c
   FROM test_array
   ORDER BY c ASC);
+------------------+
| c                |
+------------------+
| [0.1, 0.2, null] |
| [0.1, 0.2, null] |
| [null, 0.2, 0.1] |
| [null, 0.2, 0.1] |
+------------------+
(4 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_order_by TEST_ID: A8_B9
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT a_float c
   FROM test_array
   ORDER BY 1 DESC);
+------------------+
| c                |
+------------------+
| [0.1, 0.2, null] |
| [0.1, 0.2, null] |
| [null, 0.2, 0.1] |
| [null, 0.2, 0.1] |
+------------------+
(4 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_order_by TEST_ID: A9_B1
#-------------------------------------------------------------------------
SELECT json_value(a_nested, '$[2]' RETURNING decimal array) c,
       count(*) cnt
FROM test_array
GROUP BY json_value(a_nested, '$[2]' RETURNING decimal array)
ORDER BY json_value(a_nested, '$[2]' RETURNING decimal array) ASC;
+------------------+-----+
| c                | cnt |
+------------------+-----+
| [null, 0.2, 0.1] |   2 |
| [0.1, 0.2, null] |   2 |
+------------------+-----+
(2 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_order_by TEST_ID: A9_B3
#-------------------------------------------------------------------------
SELECT json_value(a_nested, '$[2]' RETURNING decimal array) c,
       count(*) cnt
FROM test_array
GROUP BY 1
ORDER BY 1 DESC;
+------------------+-----+
| c                | cnt |
+------------------+-----+
| [0.1, 0.2, null] |   2 |
| [null, 0.2, 0.1] |   2 |
+------------------+-----+
(2 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_order_by TEST_ID: A9_B5
#-------------------------------------------------------------------------
SELECT json_value(a_nested, '$[2]' RETURNING decimal array) c
FROM test_array
ORDER BY c ASC;
QueryInterruptedException
!error

#-------------------------------------------------------------------------
# TESTCASE: test_order_by TEST_ID: A9_B6
#-------------------------------------------------------------------------
SELECT json_value(a_nested, '$[2]' RETURNING decimal array) c
FROM test_array
ORDER BY 1 DESC;
QueryInterruptedException
!error

#-------------------------------------------------------------------------
# TESTCASE: test_order_by TEST_ID: A9_B7
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT json_value(a_nested, '$[2]' RETURNING decimal array) c
   FROM test_array
   ORDER BY c ASC);
+------------------+
| c                |
+------------------+
| [0.1, 0.2, null] |
| [0.1, 0.2, null] |
| [null, 0.2, 0.1] |
| [null, 0.2, 0.1] |
+------------------+
(4 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_order_by TEST_ID: A9_B9
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT json_value(a_nested, '$[2]' RETURNING decimal array) c
   FROM test_array
   ORDER BY 1 DESC);
+------------------+
| c                |
+------------------+
| [0.1, 0.2, null] |
| [0.1, 0.2, null] |
| [null, 0.2, 0.1] |
| [null, 0.2, 0.1] |
+------------------+
(4 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_order_by TEST_ID: A10_B1
#-------------------------------------------------------------------------
SELECT json_value(a_nested, '$[7][2]' RETURNING decimal array) c,
       count(*) cnt
FROM test_array
GROUP BY json_value(a_nested, '$[7][2]' RETURNING decimal array)
ORDER BY json_value(a_nested, '$[7][2]' RETURNING decimal array) ASC;
+------------------+-----+
| c                | cnt |
+------------------+-----+
| [null, 0.2, 0.1] |   2 |
| [0.1, 0.2, null] |   2 |
+------------------+-----+
(2 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_order_by TEST_ID: A10_B3
#-------------------------------------------------------------------------
SELECT json_value(a_nested, '$[7][2]' RETURNING decimal array) c,
       count(*) cnt
FROM test_array
GROUP BY 1
ORDER BY 1 DESC;
+------------------+-----+
| c                | cnt |
+------------------+-----+
| [0.1, 0.2, null] |   2 |
| [null, 0.2, 0.1] |   2 |
+------------------+-----+
(2 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_order_by TEST_ID: A10_B5
#-------------------------------------------------------------------------
SELECT json_value(a_nested, '$[7][2]' RETURNING decimal array) c
FROM test_array
ORDER BY c ASC;
QueryInterruptedException
!error

#-------------------------------------------------------------------------
# TESTCASE: test_order_by TEST_ID: A10_B6
#-------------------------------------------------------------------------
SELECT json_value(a_nested, '$[7][2]' RETURNING decimal array) c
FROM test_array
ORDER BY 1 DESC;
QueryInterruptedException
!error

#-------------------------------------------------------------------------
# TESTCASE: test_order_by TEST_ID: A10_B7
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT json_value(a_nested, '$[7][2]' RETURNING decimal array) c
   FROM test_array
   ORDER BY c ASC);
+------------------+
| c                |
+------------------+
| [0.1, 0.2, null] |
| [0.1, 0.2, null] |
| [null, 0.2, 0.1] |
| [null, 0.2, 0.1] |
+------------------+
(4 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_order_by TEST_ID: A10_B9
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT json_value(a_nested, '$[7][2]' RETURNING decimal array) c
   FROM test_array
   ORDER BY 1 DESC);
+------------------+
| c                |
+------------------+
| [0.1, 0.2, null] |
| [0.1, 0.2, null] |
| [null, 0.2, 0.1] |
| [null, 0.2, 0.1] |
+------------------+
(4 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_order_by TEST_ID: A11_B1
#-------------------------------------------------------------------------
SELECT a_str c,
       count(*) cnt
FROM test_array
GROUP BY a_str
ORDER BY a_str ASC;
+----------------+-----+
| c              | cnt |
+----------------+-----+
| [null, S2, S1] |   2 |
| [S1, S2, null] |   2 |
+----------------+-----+
(2 rows)

!ok

