!set dartQueryId 00000000-0000-0000-0000-000000000000
!set useApproximateCountDistinct false
!use druidtest://?componentSupplier=StandardAndMSQComponentSupplier&datasets=sql/src/test/quidem/qatests/qaArray/sql
!set outputformat mysql
#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A8_B12_C10
#-------------------------------------------------------------------------
WITH t1 AS
  (SELECT *
   FROM test_array)
SELECT a_nested,
       count(*) cnt
FROM t1
WHERE (a_nested=a_nested) IS NOT TRUE
GROUP BY a_nested;
+----------+-----+
| a_nested | cnt |
+----------+-----+
+----------+-----+
(0 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A8_B13_C1
#-------------------------------------------------------------------------
SELECT a_nested
FROM test_array
WHERE (a_nested=a_nested) IS FALSE;
+----------+
| a_nested |
+----------+
+----------+
(0 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A8_B13_C2
#-------------------------------------------------------------------------
SELECT a_nested,
       count(*) cnt
FROM test_array
WHERE (a_nested=a_nested) IS FALSE
GROUP BY a_nested;
+----------+-----+
| a_nested | cnt |
+----------+-----+
+----------+-----+
(0 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A8_B13_C3
#-------------------------------------------------------------------------
SELECT a_nested
FROM
  (SELECT *
   FROM test_array
   WHERE (a_nested=a_nested) IS FALSE);
+----------+
| a_nested |
+----------+
+----------+
(0 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A8_B13_C4
#-------------------------------------------------------------------------
SELECT a_nested,
       count(*) cnt
FROM
  (SELECT *
   FROM test_array
   WHERE (a_nested=a_nested) IS FALSE)
GROUP BY a_nested;
+----------+-----+
| a_nested | cnt |
+----------+-----+
+----------+-----+
(0 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A8_B13_C5
#-------------------------------------------------------------------------
SELECT a_nested
FROM
  (SELECT *
   FROM test_array)
WHERE (a_nested=a_nested) IS FALSE;
+----------+
| a_nested |
+----------+
+----------+
(0 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A8_B13_C6
#-------------------------------------------------------------------------
SELECT a_nested,
       count(*) cnt
FROM
  (SELECT *
   FROM test_array)
WHERE (a_nested=a_nested) IS FALSE
GROUP BY a_nested;
+----------+-----+
| a_nested | cnt |
+----------+-----+
+----------+-----+
(0 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A8_B13_C7
#-------------------------------------------------------------------------
WITH t1 AS
  (SELECT *
   FROM test_array
   WHERE (a_nested=a_nested) IS FALSE)
SELECT a_nested
FROM t1;
+----------+
| a_nested |
+----------+
+----------+
(0 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A8_B13_C8
#-------------------------------------------------------------------------
WITH t1 AS
  (SELECT *
   FROM test_array
   WHERE (a_nested=a_nested) IS FALSE)
SELECT a_nested,
       count(*) cnt
FROM t1
GROUP BY a_nested;
+----------+-----+
| a_nested | cnt |
+----------+-----+
+----------+-----+
(0 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A8_B13_C9
#-------------------------------------------------------------------------
WITH t1 AS
  (SELECT *
   FROM test_array)
SELECT a_nested
FROM t1
WHERE (a_nested=a_nested) IS FALSE;
+----------+
| a_nested |
+----------+
+----------+
(0 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A8_B13_C10
#-------------------------------------------------------------------------
WITH t1 AS
  (SELECT *
   FROM test_array)
SELECT a_nested,
       count(*) cnt
FROM t1
WHERE (a_nested=a_nested) IS FALSE
GROUP BY a_nested;
+----------+-----+
| a_nested | cnt |
+----------+-----+
+----------+-----+
(0 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A8_B14_C1
#-------------------------------------------------------------------------
SELECT a_nested
FROM test_array
WHERE (a_nested=a_nested) IS NOT FALSE;
+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| a_nested                                                                                                                                                                                                                                                                                                                      |
+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| [[null,false,true],[null,2,1],[null,0.2,0.1],[null,"S2","S1"],[null,null,null],[],[null,"S1",0.1,1,true],[[null,false,true],[null,2,1],[null,0.2,0.1],[null,"S2","S1"],[null,null,null],[],[null,"S1",0.1,1,true],[[null,false,true],[null,2,1],[null,0.2,0.1],[null,"S2","S1"],[null,null,null],[],[null,"S1",0.1,1,true]]]] |
| [[null,false,true],[null,2,1],[null,0.2,0.1],[null,"S2","S1"],[null,null,null],[],[null,"S1",0.1,1,true],[[null,false,true],[null,2,1],[null,0.2,0.1],[null,"S2","S1"],[null,null,null],[],[null,"S1",0.1,1,true],[[null,false,true],[null,2,1],[null,0.2,0.1],[null,"S2","S1"],[null,null,null],[],[null,"S1",0.1,1,true]]]] |
| [[true,false,null],[1,2,null],[0.1,0.2,null],["S1","S2",null],[null,null,null],[],[true,1,0.1,"S1",null],[[true,false,null],[1,2,null],[0.1,0.2,null],["S1","S2",null],[null,null,null],[],[true,1,0.1,"S1",null],[[true,false,null],[1,2,null],[0.1,0.2,null],["S1","S2",null],[null,null,null],[],[true,1,0.1,"S1",null]]]] |
| [[true,false,null],[1,2,null],[0.1,0.2,null],["S1","S2",null],[null,null,null],[],[true,1,0.1,"S1",null],[[true,false,null],[1,2,null],[0.1,0.2,null],["S1","S2",null],[null,null,null],[],[true,1,0.1,"S1",null],[[true,false,null],[1,2,null],[0.1,0.2,null],["S1","S2",null],[null,null,null],[],[true,1,0.1,"S1",null]]]] |
+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
(4 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A8_B14_C2
#-------------------------------------------------------------------------
SELECT a_nested,
       count(*) cnt
FROM test_array
WHERE (a_nested=a_nested) IS NOT FALSE
GROUP BY a_nested;
+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+-----+
| a_nested                                                                                                                                                                                                                                                                                                                      | cnt |
+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+-----+
| [[null,false,true],[null,2,1],[null,0.2,0.1],[null,"S2","S1"],[null,null,null],[],[null,"S1",0.1,1,true],[[null,false,true],[null,2,1],[null,0.2,0.1],[null,"S2","S1"],[null,null,null],[],[null,"S1",0.1,1,true],[[null,false,true],[null,2,1],[null,0.2,0.1],[null,"S2","S1"],[null,null,null],[],[null,"S1",0.1,1,true]]]] |   2 |
| [[true,false,null],[1,2,null],[0.1,0.2,null],["S1","S2",null],[null,null,null],[],[true,1,0.1,"S1",null],[[true,false,null],[1,2,null],[0.1,0.2,null],["S1","S2",null],[null,null,null],[],[true,1,0.1,"S1",null],[[true,false,null],[1,2,null],[0.1,0.2,null],["S1","S2",null],[null,null,null],[],[true,1,0.1,"S1",null]]]] |   2 |
+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+-----+
(2 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A8_B14_C3
#-------------------------------------------------------------------------
SELECT a_nested
FROM
  (SELECT *
   FROM test_array
   WHERE (a_nested=a_nested) IS NOT FALSE);
+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| a_nested                                                                                                                                                                                                                                                                                                                      |
+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| [[null,false,true],[null,2,1],[null,0.2,0.1],[null,"S2","S1"],[null,null,null],[],[null,"S1",0.1,1,true],[[null,false,true],[null,2,1],[null,0.2,0.1],[null,"S2","S1"],[null,null,null],[],[null,"S1",0.1,1,true],[[null,false,true],[null,2,1],[null,0.2,0.1],[null,"S2","S1"],[null,null,null],[],[null,"S1",0.1,1,true]]]] |
| [[null,false,true],[null,2,1],[null,0.2,0.1],[null,"S2","S1"],[null,null,null],[],[null,"S1",0.1,1,true],[[null,false,true],[null,2,1],[null,0.2,0.1],[null,"S2","S1"],[null,null,null],[],[null,"S1",0.1,1,true],[[null,false,true],[null,2,1],[null,0.2,0.1],[null,"S2","S1"],[null,null,null],[],[null,"S1",0.1,1,true]]]] |
| [[true,false,null],[1,2,null],[0.1,0.2,null],["S1","S2",null],[null,null,null],[],[true,1,0.1,"S1",null],[[true,false,null],[1,2,null],[0.1,0.2,null],["S1","S2",null],[null,null,null],[],[true,1,0.1,"S1",null],[[true,false,null],[1,2,null],[0.1,0.2,null],["S1","S2",null],[null,null,null],[],[true,1,0.1,"S1",null]]]] |
| [[true,false,null],[1,2,null],[0.1,0.2,null],["S1","S2",null],[null,null,null],[],[true,1,0.1,"S1",null],[[true,false,null],[1,2,null],[0.1,0.2,null],["S1","S2",null],[null,null,null],[],[true,1,0.1,"S1",null],[[true,false,null],[1,2,null],[0.1,0.2,null],["S1","S2",null],[null,null,null],[],[true,1,0.1,"S1",null]]]] |
+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
(4 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A8_B14_C4
#-------------------------------------------------------------------------
SELECT a_nested,
       count(*) cnt
FROM
  (SELECT *
   FROM test_array
   WHERE (a_nested=a_nested) IS NOT FALSE)
GROUP BY a_nested;
+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+-----+
| a_nested                                                                                                                                                                                                                                                                                                                      | cnt |
+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+-----+
| [[null,false,true],[null,2,1],[null,0.2,0.1],[null,"S2","S1"],[null,null,null],[],[null,"S1",0.1,1,true],[[null,false,true],[null,2,1],[null,0.2,0.1],[null,"S2","S1"],[null,null,null],[],[null,"S1",0.1,1,true],[[null,false,true],[null,2,1],[null,0.2,0.1],[null,"S2","S1"],[null,null,null],[],[null,"S1",0.1,1,true]]]] |   2 |
| [[true,false,null],[1,2,null],[0.1,0.2,null],["S1","S2",null],[null,null,null],[],[true,1,0.1,"S1",null],[[true,false,null],[1,2,null],[0.1,0.2,null],["S1","S2",null],[null,null,null],[],[true,1,0.1,"S1",null],[[true,false,null],[1,2,null],[0.1,0.2,null],["S1","S2",null],[null,null,null],[],[true,1,0.1,"S1",null]]]] |   2 |
+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+-----+
(2 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A8_B14_C5
#-------------------------------------------------------------------------
SELECT a_nested
FROM
  (SELECT *
   FROM test_array)
WHERE (a_nested=a_nested) IS NOT FALSE;
+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| a_nested                                                                                                                                                                                                                                                                                                                      |
+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| [[null,false,true],[null,2,1],[null,0.2,0.1],[null,"S2","S1"],[null,null,null],[],[null,"S1",0.1,1,true],[[null,false,true],[null,2,1],[null,0.2,0.1],[null,"S2","S1"],[null,null,null],[],[null,"S1",0.1,1,true],[[null,false,true],[null,2,1],[null,0.2,0.1],[null,"S2","S1"],[null,null,null],[],[null,"S1",0.1,1,true]]]] |
| [[null,false,true],[null,2,1],[null,0.2,0.1],[null,"S2","S1"],[null,null,null],[],[null,"S1",0.1,1,true],[[null,false,true],[null,2,1],[null,0.2,0.1],[null,"S2","S1"],[null,null,null],[],[null,"S1",0.1,1,true],[[null,false,true],[null,2,1],[null,0.2,0.1],[null,"S2","S1"],[null,null,null],[],[null,"S1",0.1,1,true]]]] |
| [[true,false,null],[1,2,null],[0.1,0.2,null],["S1","S2",null],[null,null,null],[],[true,1,0.1,"S1",null],[[true,false,null],[1,2,null],[0.1,0.2,null],["S1","S2",null],[null,null,null],[],[true,1,0.1,"S1",null],[[true,false,null],[1,2,null],[0.1,0.2,null],["S1","S2",null],[null,null,null],[],[true,1,0.1,"S1",null]]]] |
| [[true,false,null],[1,2,null],[0.1,0.2,null],["S1","S2",null],[null,null,null],[],[true,1,0.1,"S1",null],[[true,false,null],[1,2,null],[0.1,0.2,null],["S1","S2",null],[null,null,null],[],[true,1,0.1,"S1",null],[[true,false,null],[1,2,null],[0.1,0.2,null],["S1","S2",null],[null,null,null],[],[true,1,0.1,"S1",null]]]] |
+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
(4 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A8_B14_C6
#-------------------------------------------------------------------------
SELECT a_nested,
       count(*) cnt
FROM
  (SELECT *
   FROM test_array)
WHERE (a_nested=a_nested) IS NOT FALSE
GROUP BY a_nested;
+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+-----+
| a_nested                                                                                                                                                                                                                                                                                                                      | cnt |
+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+-----+
| [[null,false,true],[null,2,1],[null,0.2,0.1],[null,"S2","S1"],[null,null,null],[],[null,"S1",0.1,1,true],[[null,false,true],[null,2,1],[null,0.2,0.1],[null,"S2","S1"],[null,null,null],[],[null,"S1",0.1,1,true],[[null,false,true],[null,2,1],[null,0.2,0.1],[null,"S2","S1"],[null,null,null],[],[null,"S1",0.1,1,true]]]] |   2 |
| [[true,false,null],[1,2,null],[0.1,0.2,null],["S1","S2",null],[null,null,null],[],[true,1,0.1,"S1",null],[[true,false,null],[1,2,null],[0.1,0.2,null],["S1","S2",null],[null,null,null],[],[true,1,0.1,"S1",null],[[true,false,null],[1,2,null],[0.1,0.2,null],["S1","S2",null],[null,null,null],[],[true,1,0.1,"S1",null]]]] |   2 |
+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+-----+
(2 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A8_B14_C7
#-------------------------------------------------------------------------
WITH t1 AS
  (SELECT *
   FROM test_array
   WHERE (a_nested=a_nested) IS NOT FALSE)
SELECT a_nested
FROM t1;
+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| a_nested                                                                                                                                                                                                                                                                                                                      |
+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| [[null,false,true],[null,2,1],[null,0.2,0.1],[null,"S2","S1"],[null,null,null],[],[null,"S1",0.1,1,true],[[null,false,true],[null,2,1],[null,0.2,0.1],[null,"S2","S1"],[null,null,null],[],[null,"S1",0.1,1,true],[[null,false,true],[null,2,1],[null,0.2,0.1],[null,"S2","S1"],[null,null,null],[],[null,"S1",0.1,1,true]]]] |
| [[null,false,true],[null,2,1],[null,0.2,0.1],[null,"S2","S1"],[null,null,null],[],[null,"S1",0.1,1,true],[[null,false,true],[null,2,1],[null,0.2,0.1],[null,"S2","S1"],[null,null,null],[],[null,"S1",0.1,1,true],[[null,false,true],[null,2,1],[null,0.2,0.1],[null,"S2","S1"],[null,null,null],[],[null,"S1",0.1,1,true]]]] |
| [[true,false,null],[1,2,null],[0.1,0.2,null],["S1","S2",null],[null,null,null],[],[true,1,0.1,"S1",null],[[true,false,null],[1,2,null],[0.1,0.2,null],["S1","S2",null],[null,null,null],[],[true,1,0.1,"S1",null],[[true,false,null],[1,2,null],[0.1,0.2,null],["S1","S2",null],[null,null,null],[],[true,1,0.1,"S1",null]]]] |
| [[true,false,null],[1,2,null],[0.1,0.2,null],["S1","S2",null],[null,null,null],[],[true,1,0.1,"S1",null],[[true,false,null],[1,2,null],[0.1,0.2,null],["S1","S2",null],[null,null,null],[],[true,1,0.1,"S1",null],[[true,false,null],[1,2,null],[0.1,0.2,null],["S1","S2",null],[null,null,null],[],[true,1,0.1,"S1",null]]]] |
+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
(4 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A8_B14_C8
#-------------------------------------------------------------------------
WITH t1 AS
  (SELECT *
   FROM test_array
   WHERE (a_nested=a_nested) IS NOT FALSE)
SELECT a_nested,
       count(*) cnt
FROM t1
GROUP BY a_nested;
+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+-----+
| a_nested                                                                                                                                                                                                                                                                                                                      | cnt |
+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+-----+
| [[null,false,true],[null,2,1],[null,0.2,0.1],[null,"S2","S1"],[null,null,null],[],[null,"S1",0.1,1,true],[[null,false,true],[null,2,1],[null,0.2,0.1],[null,"S2","S1"],[null,null,null],[],[null,"S1",0.1,1,true],[[null,false,true],[null,2,1],[null,0.2,0.1],[null,"S2","S1"],[null,null,null],[],[null,"S1",0.1,1,true]]]] |   2 |
| [[true,false,null],[1,2,null],[0.1,0.2,null],["S1","S2",null],[null,null,null],[],[true,1,0.1,"S1",null],[[true,false,null],[1,2,null],[0.1,0.2,null],["S1","S2",null],[null,null,null],[],[true,1,0.1,"S1",null],[[true,false,null],[1,2,null],[0.1,0.2,null],["S1","S2",null],[null,null,null],[],[true,1,0.1,"S1",null]]]] |   2 |
+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+-----+
(2 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A8_B14_C9
#-------------------------------------------------------------------------
WITH t1 AS
  (SELECT *
   FROM test_array)
SELECT a_nested
FROM t1
WHERE (a_nested=a_nested) IS NOT FALSE;
+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| a_nested                                                                                                                                                                                                                                                                                                                      |
+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| [[null,false,true],[null,2,1],[null,0.2,0.1],[null,"S2","S1"],[null,null,null],[],[null,"S1",0.1,1,true],[[null,false,true],[null,2,1],[null,0.2,0.1],[null,"S2","S1"],[null,null,null],[],[null,"S1",0.1,1,true],[[null,false,true],[null,2,1],[null,0.2,0.1],[null,"S2","S1"],[null,null,null],[],[null,"S1",0.1,1,true]]]] |
| [[null,false,true],[null,2,1],[null,0.2,0.1],[null,"S2","S1"],[null,null,null],[],[null,"S1",0.1,1,true],[[null,false,true],[null,2,1],[null,0.2,0.1],[null,"S2","S1"],[null,null,null],[],[null,"S1",0.1,1,true],[[null,false,true],[null,2,1],[null,0.2,0.1],[null,"S2","S1"],[null,null,null],[],[null,"S1",0.1,1,true]]]] |
| [[true,false,null],[1,2,null],[0.1,0.2,null],["S1","S2",null],[null,null,null],[],[true,1,0.1,"S1",null],[[true,false,null],[1,2,null],[0.1,0.2,null],["S1","S2",null],[null,null,null],[],[true,1,0.1,"S1",null],[[true,false,null],[1,2,null],[0.1,0.2,null],["S1","S2",null],[null,null,null],[],[true,1,0.1,"S1",null]]]] |
| [[true,false,null],[1,2,null],[0.1,0.2,null],["S1","S2",null],[null,null,null],[],[true,1,0.1,"S1",null],[[true,false,null],[1,2,null],[0.1,0.2,null],["S1","S2",null],[null,null,null],[],[true,1,0.1,"S1",null],[[true,false,null],[1,2,null],[0.1,0.2,null],["S1","S2",null],[null,null,null],[],[true,1,0.1,"S1",null]]]] |
+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
(4 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A8_B14_C10
#-------------------------------------------------------------------------
WITH t1 AS
  (SELECT *
   FROM test_array)
SELECT a_nested,
       count(*) cnt
FROM t1
WHERE (a_nested=a_nested) IS NOT FALSE
GROUP BY a_nested;
+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+-----+
| a_nested                                                                                                                                                                                                                                                                                                                      | cnt |
+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+-----+
| [[null,false,true],[null,2,1],[null,0.2,0.1],[null,"S2","S1"],[null,null,null],[],[null,"S1",0.1,1,true],[[null,false,true],[null,2,1],[null,0.2,0.1],[null,"S2","S1"],[null,null,null],[],[null,"S1",0.1,1,true],[[null,false,true],[null,2,1],[null,0.2,0.1],[null,"S2","S1"],[null,null,null],[],[null,"S1",0.1,1,true]]]] |   2 |
| [[true,false,null],[1,2,null],[0.1,0.2,null],["S1","S2",null],[null,null,null],[],[true,1,0.1,"S1",null],[[true,false,null],[1,2,null],[0.1,0.2,null],["S1","S2",null],[null,null,null],[],[true,1,0.1,"S1",null],[[true,false,null],[1,2,null],[0.1,0.2,null],["S1","S2",null],[null,null,null],[],[true,1,0.1,"S1",null]]]] |   2 |
+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+-----+
(2 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A8_B15_C1
#-------------------------------------------------------------------------
SELECT a_nested
FROM test_array
WHERE a_nested BETWEEN a_nested AND a_nested;
Cannot apply 'BETWEEN ASYMMETRIC' to arguments of type '<COMPLEX<JSON>> BETWEEN ASYMMETRIC <COMPLEX<JSON>> AND <COMPLEX<JSON>>'
!error

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A8_B15_C2
#-------------------------------------------------------------------------
SELECT a_nested,
       count(*) cnt
FROM test_array
WHERE a_nested BETWEEN a_nested AND a_nested
GROUP BY a_nested;
Cannot apply 'BETWEEN ASYMMETRIC' to arguments of type '<COMPLEX<JSON>> BETWEEN ASYMMETRIC <COMPLEX<JSON>> AND <COMPLEX<JSON>>'
!error

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A8_B15_C3
#-------------------------------------------------------------------------
SELECT a_nested
FROM
  (SELECT *
   FROM test_array
   WHERE a_nested BETWEEN a_nested AND a_nested);
Cannot apply 'BETWEEN ASYMMETRIC' to arguments of type '<COMPLEX<JSON>> BETWEEN ASYMMETRIC <COMPLEX<JSON>> AND <COMPLEX<JSON>>'
!error

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A8_B15_C4
#-------------------------------------------------------------------------
SELECT a_nested,
       count(*) cnt
FROM
  (SELECT *
   FROM test_array
   WHERE a_nested BETWEEN a_nested AND a_nested)
GROUP BY a_nested;
Cannot apply 'BETWEEN ASYMMETRIC' to arguments of type '<COMPLEX<JSON>> BETWEEN ASYMMETRIC <COMPLEX<JSON>> AND <COMPLEX<JSON>>'
!error

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A8_B15_C5
#-------------------------------------------------------------------------
SELECT a_nested
FROM
  (SELECT *
   FROM test_array)
WHERE a_nested BETWEEN a_nested AND a_nested;
Cannot apply 'BETWEEN ASYMMETRIC' to arguments of type '<COMPLEX<JSON>> BETWEEN ASYMMETRIC <COMPLEX<JSON>> AND <COMPLEX<JSON>>'
!error

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A8_B15_C6
#-------------------------------------------------------------------------
SELECT a_nested,
       count(*) cnt
FROM
  (SELECT *
   FROM test_array)
WHERE a_nested BETWEEN a_nested AND a_nested
GROUP BY a_nested;
Cannot apply 'BETWEEN ASYMMETRIC' to arguments of type '<COMPLEX<JSON>> BETWEEN ASYMMETRIC <COMPLEX<JSON>> AND <COMPLEX<JSON>>'
!error

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A8_B15_C7
#-------------------------------------------------------------------------
WITH t1 AS
  (SELECT *
   FROM test_array
   WHERE a_nested BETWEEN a_nested AND a_nested)
SELECT a_nested
FROM t1;
Cannot apply 'BETWEEN ASYMMETRIC' to arguments of type '<COMPLEX<JSON>> BETWEEN ASYMMETRIC <COMPLEX<JSON>> AND <COMPLEX<JSON>>'
!error

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A8_B15_C8
#-------------------------------------------------------------------------
WITH t1 AS
  (SELECT *
   FROM test_array
   WHERE a_nested BETWEEN a_nested AND a_nested)
SELECT a_nested,
       count(*) cnt
FROM t1
GROUP BY a_nested;
Cannot apply 'BETWEEN ASYMMETRIC' to arguments of type '<COMPLEX<JSON>> BETWEEN ASYMMETRIC <COMPLEX<JSON>> AND <COMPLEX<JSON>>'
!error

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A8_B15_C9
#-------------------------------------------------------------------------
WITH t1 AS
  (SELECT *
   FROM test_array)
SELECT a_nested
FROM t1
WHERE a_nested BETWEEN a_nested AND a_nested;
Cannot apply 'BETWEEN ASYMMETRIC' to arguments of type '<COMPLEX<JSON>> BETWEEN ASYMMETRIC <COMPLEX<JSON>> AND <COMPLEX<JSON>>'
!error

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A8_B15_C10
#-------------------------------------------------------------------------
WITH t1 AS
  (SELECT *
   FROM test_array)
SELECT a_nested,
       count(*) cnt
FROM t1
WHERE a_nested BETWEEN a_nested AND a_nested
GROUP BY a_nested;
Cannot apply 'BETWEEN ASYMMETRIC' to arguments of type '<COMPLEX<JSON>> BETWEEN ASYMMETRIC <COMPLEX<JSON>> AND <COMPLEX<JSON>>'
!error

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A8_B16_C1
#-------------------------------------------------------------------------
SELECT a_nested
FROM test_array
WHERE a_nested NOT BETWEEN a_nested AND a_nested;
Cannot apply 'NOT BETWEEN ASYMMETRIC' to arguments of type '<COMPLEX<JSON>> NOT BETWEEN ASYMMETRIC <COMPLEX<JSON>> AND <COMPLEX<JSON>>'
!error

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A8_B16_C2
#-------------------------------------------------------------------------
SELECT a_nested,
       count(*) cnt
FROM test_array
WHERE a_nested NOT BETWEEN a_nested AND a_nested
GROUP BY a_nested;
Cannot apply 'NOT BETWEEN ASYMMETRIC' to arguments of type '<COMPLEX<JSON>> NOT BETWEEN ASYMMETRIC <COMPLEX<JSON>> AND <COMPLEX<JSON>>'
!error

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A8_B16_C3
#-------------------------------------------------------------------------
SELECT a_nested
FROM
  (SELECT *
   FROM test_array
   WHERE a_nested NOT BETWEEN a_nested AND a_nested);
Cannot apply 'NOT BETWEEN ASYMMETRIC' to arguments of type '<COMPLEX<JSON>> NOT BETWEEN ASYMMETRIC <COMPLEX<JSON>> AND <COMPLEX<JSON>>'
!error

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A8_B16_C4
#-------------------------------------------------------------------------
SELECT a_nested,
       count(*) cnt
FROM
  (SELECT *
   FROM test_array
   WHERE a_nested NOT BETWEEN a_nested AND a_nested)
GROUP BY a_nested;
Cannot apply 'NOT BETWEEN ASYMMETRIC' to arguments of type '<COMPLEX<JSON>> NOT BETWEEN ASYMMETRIC <COMPLEX<JSON>> AND <COMPLEX<JSON>>'
!error

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A8_B16_C5
#-------------------------------------------------------------------------
SELECT a_nested
FROM
  (SELECT *
   FROM test_array)
WHERE a_nested NOT BETWEEN a_nested AND a_nested;
Cannot apply 'NOT BETWEEN ASYMMETRIC' to arguments of type '<COMPLEX<JSON>> NOT BETWEEN ASYMMETRIC <COMPLEX<JSON>> AND <COMPLEX<JSON>>'
!error

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A8_B16_C6
#-------------------------------------------------------------------------
SELECT a_nested,
       count(*) cnt
FROM
  (SELECT *
   FROM test_array)
WHERE a_nested NOT BETWEEN a_nested AND a_nested
GROUP BY a_nested;
Cannot apply 'NOT BETWEEN ASYMMETRIC' to arguments of type '<COMPLEX<JSON>> NOT BETWEEN ASYMMETRIC <COMPLEX<JSON>> AND <COMPLEX<JSON>>'
!error

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A8_B16_C7
#-------------------------------------------------------------------------
WITH t1 AS
  (SELECT *
   FROM test_array
   WHERE a_nested NOT BETWEEN a_nested AND a_nested)
SELECT a_nested
FROM t1;
Cannot apply 'NOT BETWEEN ASYMMETRIC' to arguments of type '<COMPLEX<JSON>> NOT BETWEEN ASYMMETRIC <COMPLEX<JSON>> AND <COMPLEX<JSON>>'
!error

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A8_B16_C8
#-------------------------------------------------------------------------
WITH t1 AS
  (SELECT *
   FROM test_array
   WHERE a_nested NOT BETWEEN a_nested AND a_nested)
SELECT a_nested,
       count(*) cnt
FROM t1
GROUP BY a_nested;
Cannot apply 'NOT BETWEEN ASYMMETRIC' to arguments of type '<COMPLEX<JSON>> NOT BETWEEN ASYMMETRIC <COMPLEX<JSON>> AND <COMPLEX<JSON>>'
!error

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A8_B16_C9
#-------------------------------------------------------------------------
WITH t1 AS
  (SELECT *
   FROM test_array)
SELECT a_nested
FROM t1
WHERE a_nested NOT BETWEEN a_nested AND a_nested;
Cannot apply 'NOT BETWEEN ASYMMETRIC' to arguments of type '<COMPLEX<JSON>> NOT BETWEEN ASYMMETRIC <COMPLEX<JSON>> AND <COMPLEX<JSON>>'
!error

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A8_B16_C10
#-------------------------------------------------------------------------
WITH t1 AS
  (SELECT *
   FROM test_array)
SELECT a_nested,
       count(*) cnt
FROM t1
WHERE a_nested NOT BETWEEN a_nested AND a_nested
GROUP BY a_nested;
Cannot apply 'NOT BETWEEN ASYMMETRIC' to arguments of type '<COMPLEX<JSON>> NOT BETWEEN ASYMMETRIC <COMPLEX<JSON>> AND <COMPLEX<JSON>>'
!error

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A8_B17_C1
#-------------------------------------------------------------------------
SELECT a_nested
FROM test_array
WHERE a_nested like '%';
Cannot apply 'LIKE' to arguments of type 'LIKE(<COMPLEX<JSON>>, <CHAR(1)>)'
!error

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A8_B17_C2
#-------------------------------------------------------------------------
SELECT a_nested,
       count(*) cnt
FROM test_array
WHERE a_nested like '%'
GROUP BY a_nested;
Cannot apply 'LIKE' to arguments of type 'LIKE(<COMPLEX<JSON>>, <CHAR(1)>)'
!error

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A8_B17_C3
#-------------------------------------------------------------------------
SELECT a_nested
FROM
  (SELECT *
   FROM test_array
   WHERE a_nested like '%');
Cannot apply 'LIKE' to arguments of type 'LIKE(<COMPLEX<JSON>>, <CHAR(1)>)'
!error

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A8_B17_C4
#-------------------------------------------------------------------------
SELECT a_nested,
       count(*) cnt
FROM
  (SELECT *
   FROM test_array
   WHERE a_nested like '%')
GROUP BY a_nested;
Cannot apply 'LIKE' to arguments of type 'LIKE(<COMPLEX<JSON>>, <CHAR(1)>)'
!error

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A8_B17_C5
#-------------------------------------------------------------------------
SELECT a_nested
FROM
  (SELECT *
   FROM test_array)
WHERE a_nested like '%';
Cannot apply 'LIKE' to arguments of type 'LIKE(<COMPLEX<JSON>>, <CHAR(1)>)'
!error

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A8_B17_C6
#-------------------------------------------------------------------------
SELECT a_nested,
       count(*) cnt
FROM
  (SELECT *
   FROM test_array)
WHERE a_nested like '%'
GROUP BY a_nested;
Cannot apply 'LIKE' to arguments of type 'LIKE(<COMPLEX<JSON>>, <CHAR(1)>)'
!error

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A8_B17_C7
#-------------------------------------------------------------------------
WITH t1 AS
  (SELECT *
   FROM test_array
   WHERE a_nested like '%')
SELECT a_nested
FROM t1;
Cannot apply 'LIKE' to arguments of type 'LIKE(<COMPLEX<JSON>>, <CHAR(1)>)'
!error

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A8_B17_C8
#-------------------------------------------------------------------------
WITH t1 AS
  (SELECT *
   FROM test_array
   WHERE a_nested like '%')
SELECT a_nested,
       count(*) cnt
FROM t1
GROUP BY a_nested;
Cannot apply 'LIKE' to arguments of type 'LIKE(<COMPLEX<JSON>>, <CHAR(1)>)'
!error

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A8_B17_C9
#-------------------------------------------------------------------------
WITH t1 AS
  (SELECT *
   FROM test_array)
SELECT a_nested
FROM t1
WHERE a_nested like '%';
Cannot apply 'LIKE' to arguments of type 'LIKE(<COMPLEX<JSON>>, <CHAR(1)>)'
!error

