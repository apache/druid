!set useApproximateCountDistinct false
!use druidtest://?componentSupplier=AllDruidEnginesComponentSupplier&datasets=sql/src/test/quidem/qatests/qaArray/sql
!set outputformat mysql
#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A8_B2_C10
#-------------------------------------------------------------------------
WITH t1 AS
  (SELECT *
   FROM test_array)
SELECT a_nested,
       count(*) cnt
FROM t1
WHERE a_nested<>a_nested
GROUP BY a_nested;
+----------+-----+
| a_nested | cnt |
+----------+-----+
+----------+-----+
(0 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A8_B3_C1
#-------------------------------------------------------------------------
SELECT a_nested
FROM test_array
WHERE a_nested>a_nested;
Cannot apply '>' to arguments of type '<COMPLEX<JSON>> > <COMPLEX<JSON>>'
!error

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A8_B3_C2
#-------------------------------------------------------------------------
SELECT a_nested,
       count(*) cnt
FROM test_array
WHERE a_nested>a_nested
GROUP BY a_nested;
Cannot apply '>' to arguments of type '<COMPLEX<JSON>> > <COMPLEX<JSON>>'
!error

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A8_B3_C3
#-------------------------------------------------------------------------
SELECT a_nested
FROM
  (SELECT *
   FROM test_array
   WHERE a_nested>a_nested);
Cannot apply '>' to arguments of type '<COMPLEX<JSON>> > <COMPLEX<JSON>>'
!error

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A8_B3_C4
#-------------------------------------------------------------------------
SELECT a_nested,
       count(*) cnt
FROM
  (SELECT *
   FROM test_array
   WHERE a_nested>a_nested)
GROUP BY a_nested;
Cannot apply '>' to arguments of type '<COMPLEX<JSON>> > <COMPLEX<JSON>>'
!error

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A8_B3_C5
#-------------------------------------------------------------------------
SELECT a_nested
FROM
  (SELECT *
   FROM test_array)
WHERE a_nested>a_nested;
Cannot apply '>' to arguments of type '<COMPLEX<JSON>> > <COMPLEX<JSON>>'
!error

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A8_B3_C6
#-------------------------------------------------------------------------
SELECT a_nested,
       count(*) cnt
FROM
  (SELECT *
   FROM test_array)
WHERE a_nested>a_nested
GROUP BY a_nested;
Cannot apply '>' to arguments of type '<COMPLEX<JSON>> > <COMPLEX<JSON>>'
!error

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A8_B3_C7
#-------------------------------------------------------------------------
WITH t1 AS
  (SELECT *
   FROM test_array
   WHERE a_nested>a_nested)
SELECT a_nested
FROM t1;
Cannot apply '>' to arguments of type '<COMPLEX<JSON>> > <COMPLEX<JSON>>'
!error

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A8_B3_C8
#-------------------------------------------------------------------------
WITH t1 AS
  (SELECT *
   FROM test_array
   WHERE a_nested>a_nested)
SELECT a_nested,
       count(*) cnt
FROM t1
GROUP BY a_nested;
Cannot apply '>' to arguments of type '<COMPLEX<JSON>> > <COMPLEX<JSON>>'
!error

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A8_B3_C9
#-------------------------------------------------------------------------
WITH t1 AS
  (SELECT *
   FROM test_array)
SELECT a_nested
FROM t1
WHERE a_nested>a_nested;
Cannot apply '>' to arguments of type '<COMPLEX<JSON>> > <COMPLEX<JSON>>'
!error

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A8_B3_C10
#-------------------------------------------------------------------------
WITH t1 AS
  (SELECT *
   FROM test_array)
SELECT a_nested,
       count(*) cnt
FROM t1
WHERE a_nested>a_nested
GROUP BY a_nested;
Cannot apply '>' to arguments of type '<COMPLEX<JSON>> > <COMPLEX<JSON>>'
!error

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A8_B4_C1
#-------------------------------------------------------------------------
SELECT a_nested
FROM test_array
WHERE a_nested>=a_nested;
Cannot apply '>=' to arguments of type '<COMPLEX<JSON>> >= <COMPLEX<JSON>>'
!error

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A8_B4_C2
#-------------------------------------------------------------------------
SELECT a_nested,
       count(*) cnt
FROM test_array
WHERE a_nested>=a_nested
GROUP BY a_nested;
Cannot apply '>=' to arguments of type '<COMPLEX<JSON>> >= <COMPLEX<JSON>>'
!error

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A8_B4_C3
#-------------------------------------------------------------------------
SELECT a_nested
FROM
  (SELECT *
   FROM test_array
   WHERE a_nested>=a_nested);
Cannot apply '>=' to arguments of type '<COMPLEX<JSON>> >= <COMPLEX<JSON>>'
!error

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A8_B4_C4
#-------------------------------------------------------------------------
SELECT a_nested,
       count(*) cnt
FROM
  (SELECT *
   FROM test_array
   WHERE a_nested>=a_nested)
GROUP BY a_nested;
Cannot apply '>=' to arguments of type '<COMPLEX<JSON>> >= <COMPLEX<JSON>>'
!error

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A8_B4_C5
#-------------------------------------------------------------------------
SELECT a_nested
FROM
  (SELECT *
   FROM test_array)
WHERE a_nested>=a_nested;
Cannot apply '>=' to arguments of type '<COMPLEX<JSON>> >= <COMPLEX<JSON>>'
!error

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A8_B4_C6
#-------------------------------------------------------------------------
SELECT a_nested,
       count(*) cnt
FROM
  (SELECT *
   FROM test_array)
WHERE a_nested>=a_nested
GROUP BY a_nested;
Cannot apply '>=' to arguments of type '<COMPLEX<JSON>> >= <COMPLEX<JSON>>'
!error

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A8_B4_C7
#-------------------------------------------------------------------------
WITH t1 AS
  (SELECT *
   FROM test_array
   WHERE a_nested>=a_nested)
SELECT a_nested
FROM t1;
Cannot apply '>=' to arguments of type '<COMPLEX<JSON>> >= <COMPLEX<JSON>>'
!error

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A8_B4_C8
#-------------------------------------------------------------------------
WITH t1 AS
  (SELECT *
   FROM test_array
   WHERE a_nested>=a_nested)
SELECT a_nested,
       count(*) cnt
FROM t1
GROUP BY a_nested;
Cannot apply '>=' to arguments of type '<COMPLEX<JSON>> >= <COMPLEX<JSON>>'
!error

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A8_B4_C9
#-------------------------------------------------------------------------
WITH t1 AS
  (SELECT *
   FROM test_array)
SELECT a_nested
FROM t1
WHERE a_nested>=a_nested;
Cannot apply '>=' to arguments of type '<COMPLEX<JSON>> >= <COMPLEX<JSON>>'
!error

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A8_B4_C10
#-------------------------------------------------------------------------
WITH t1 AS
  (SELECT *
   FROM test_array)
SELECT a_nested,
       count(*) cnt
FROM t1
WHERE a_nested>=a_nested
GROUP BY a_nested;
Cannot apply '>=' to arguments of type '<COMPLEX<JSON>> >= <COMPLEX<JSON>>'
!error

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A8_B5_C1
#-------------------------------------------------------------------------
SELECT a_nested
FROM test_array
WHERE a_nested<a_nested;
Cannot apply '<' to arguments of type '<COMPLEX<JSON>> < <COMPLEX<JSON>>'
!error

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A8_B5_C2
#-------------------------------------------------------------------------
SELECT a_nested,
       count(*) cnt
FROM test_array
WHERE a_nested<a_nested
GROUP BY a_nested;
Cannot apply '<' to arguments of type '<COMPLEX<JSON>> < <COMPLEX<JSON>>'
!error

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A8_B5_C3
#-------------------------------------------------------------------------
SELECT a_nested
FROM
  (SELECT *
   FROM test_array
   WHERE a_nested<a_nested);
Cannot apply '<' to arguments of type '<COMPLEX<JSON>> < <COMPLEX<JSON>>'
!error

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A8_B5_C4
#-------------------------------------------------------------------------
SELECT a_nested,
       count(*) cnt
FROM
  (SELECT *
   FROM test_array
   WHERE a_nested<a_nested)
GROUP BY a_nested;
Cannot apply '<' to arguments of type '<COMPLEX<JSON>> < <COMPLEX<JSON>>'
!error

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A8_B5_C5
#-------------------------------------------------------------------------
SELECT a_nested
FROM
  (SELECT *
   FROM test_array)
WHERE a_nested<a_nested;
Cannot apply '<' to arguments of type '<COMPLEX<JSON>> < <COMPLEX<JSON>>'
!error

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A8_B5_C6
#-------------------------------------------------------------------------
SELECT a_nested,
       count(*) cnt
FROM
  (SELECT *
   FROM test_array)
WHERE a_nested<a_nested
GROUP BY a_nested;
Cannot apply '<' to arguments of type '<COMPLEX<JSON>> < <COMPLEX<JSON>>'
!error

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A8_B5_C7
#-------------------------------------------------------------------------
WITH t1 AS
  (SELECT *
   FROM test_array
   WHERE a_nested<a_nested)
SELECT a_nested
FROM t1;
Cannot apply '<' to arguments of type '<COMPLEX<JSON>> < <COMPLEX<JSON>>'
!error

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A8_B5_C8
#-------------------------------------------------------------------------
WITH t1 AS
  (SELECT *
   FROM test_array
   WHERE a_nested<a_nested)
SELECT a_nested,
       count(*) cnt
FROM t1
GROUP BY a_nested;
Cannot apply '<' to arguments of type '<COMPLEX<JSON>> < <COMPLEX<JSON>>'
!error

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A8_B5_C9
#-------------------------------------------------------------------------
WITH t1 AS
  (SELECT *
   FROM test_array)
SELECT a_nested
FROM t1
WHERE a_nested<a_nested;
Cannot apply '<' to arguments of type '<COMPLEX<JSON>> < <COMPLEX<JSON>>'
!error

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A8_B5_C10
#-------------------------------------------------------------------------
WITH t1 AS
  (SELECT *
   FROM test_array)
SELECT a_nested,
       count(*) cnt
FROM t1
WHERE a_nested<a_nested
GROUP BY a_nested;
Cannot apply '<' to arguments of type '<COMPLEX<JSON>> < <COMPLEX<JSON>>'
!error

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A8_B6_C1
#-------------------------------------------------------------------------
SELECT a_nested
FROM test_array
WHERE a_nested<=a_nested;
Cannot apply '<=' to arguments of type '<COMPLEX<JSON>> <= <COMPLEX<JSON>>'
!error

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A8_B6_C2
#-------------------------------------------------------------------------
SELECT a_nested,
       count(*) cnt
FROM test_array
WHERE a_nested<=a_nested
GROUP BY a_nested;
Cannot apply '<=' to arguments of type '<COMPLEX<JSON>> <= <COMPLEX<JSON>>'
!error

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A8_B6_C3
#-------------------------------------------------------------------------
SELECT a_nested
FROM
  (SELECT *
   FROM test_array
   WHERE a_nested<=a_nested);
Cannot apply '<=' to arguments of type '<COMPLEX<JSON>> <= <COMPLEX<JSON>>'
!error

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A8_B6_C4
#-------------------------------------------------------------------------
SELECT a_nested,
       count(*) cnt
FROM
  (SELECT *
   FROM test_array
   WHERE a_nested<=a_nested)
GROUP BY a_nested;
Cannot apply '<=' to arguments of type '<COMPLEX<JSON>> <= <COMPLEX<JSON>>'
!error

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A8_B6_C5
#-------------------------------------------------------------------------
SELECT a_nested
FROM
  (SELECT *
   FROM test_array)
WHERE a_nested<=a_nested;
Cannot apply '<=' to arguments of type '<COMPLEX<JSON>> <= <COMPLEX<JSON>>'
!error

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A8_B6_C6
#-------------------------------------------------------------------------
SELECT a_nested,
       count(*) cnt
FROM
  (SELECT *
   FROM test_array)
WHERE a_nested<=a_nested
GROUP BY a_nested;
Cannot apply '<=' to arguments of type '<COMPLEX<JSON>> <= <COMPLEX<JSON>>'
!error

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A8_B6_C7
#-------------------------------------------------------------------------
WITH t1 AS
  (SELECT *
   FROM test_array
   WHERE a_nested<=a_nested)
SELECT a_nested
FROM t1;
Cannot apply '<=' to arguments of type '<COMPLEX<JSON>> <= <COMPLEX<JSON>>'
!error

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A8_B6_C8
#-------------------------------------------------------------------------
WITH t1 AS
  (SELECT *
   FROM test_array
   WHERE a_nested<=a_nested)
SELECT a_nested,
       count(*) cnt
FROM t1
GROUP BY a_nested;
Cannot apply '<=' to arguments of type '<COMPLEX<JSON>> <= <COMPLEX<JSON>>'
!error

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A8_B6_C9
#-------------------------------------------------------------------------
WITH t1 AS
  (SELECT *
   FROM test_array)
SELECT a_nested
FROM t1
WHERE a_nested<=a_nested;
Cannot apply '<=' to arguments of type '<COMPLEX<JSON>> <= <COMPLEX<JSON>>'
!error

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A8_B6_C10
#-------------------------------------------------------------------------
WITH t1 AS
  (SELECT *
   FROM test_array)
SELECT a_nested,
       count(*) cnt
FROM t1
WHERE a_nested<=a_nested
GROUP BY a_nested;
Cannot apply '<=' to arguments of type '<COMPLEX<JSON>> <= <COMPLEX<JSON>>'
!error

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A8_B7_C1
#-------------------------------------------------------------------------
SELECT a_nested
FROM test_array
WHERE a_nested=a_nested
  OR a_nested<>a_nested
  AND NOT (a_nested=a_nested
           AND a_nested<>a_nested);
+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| a_nested                                                                                                                                                                                                                                                                                                                      |
+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| [[null,false,true],[null,2,1],[null,0.2,0.1],[null,"S2","S1"],[null,null,null],[],[null,"S1",0.1,1,true],[[null,false,true],[null,2,1],[null,0.2,0.1],[null,"S2","S1"],[null,null,null],[],[null,"S1",0.1,1,true],[[null,false,true],[null,2,1],[null,0.2,0.1],[null,"S2","S1"],[null,null,null],[],[null,"S1",0.1,1,true]]]] |
| [[null,false,true],[null,2,1],[null,0.2,0.1],[null,"S2","S1"],[null,null,null],[],[null,"S1",0.1,1,true],[[null,false,true],[null,2,1],[null,0.2,0.1],[null,"S2","S1"],[null,null,null],[],[null,"S1",0.1,1,true],[[null,false,true],[null,2,1],[null,0.2,0.1],[null,"S2","S1"],[null,null,null],[],[null,"S1",0.1,1,true]]]] |
| [[true,false,null],[1,2,null],[0.1,0.2,null],["S1","S2",null],[null,null,null],[],[true,1,0.1,"S1",null],[[true,false,null],[1,2,null],[0.1,0.2,null],["S1","S2",null],[null,null,null],[],[true,1,0.1,"S1",null],[[true,false,null],[1,2,null],[0.1,0.2,null],["S1","S2",null],[null,null,null],[],[true,1,0.1,"S1",null]]]] |
| [[true,false,null],[1,2,null],[0.1,0.2,null],["S1","S2",null],[null,null,null],[],[true,1,0.1,"S1",null],[[true,false,null],[1,2,null],[0.1,0.2,null],["S1","S2",null],[null,null,null],[],[true,1,0.1,"S1",null],[[true,false,null],[1,2,null],[0.1,0.2,null],["S1","S2",null],[null,null,null],[],[true,1,0.1,"S1",null]]]] |
+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
(4 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A8_B7_C2
#-------------------------------------------------------------------------
SELECT a_nested,
       count(*) cnt
FROM test_array
WHERE a_nested=a_nested
  OR a_nested<>a_nested
  AND NOT (a_nested=a_nested
           AND a_nested<>a_nested)
GROUP BY a_nested;
+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+-----+
| a_nested                                                                                                                                                                                                                                                                                                                      | cnt |
+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+-----+
| [[null,false,true],[null,2,1],[null,0.2,0.1],[null,"S2","S1"],[null,null,null],[],[null,"S1",0.1,1,true],[[null,false,true],[null,2,1],[null,0.2,0.1],[null,"S2","S1"],[null,null,null],[],[null,"S1",0.1,1,true],[[null,false,true],[null,2,1],[null,0.2,0.1],[null,"S2","S1"],[null,null,null],[],[null,"S1",0.1,1,true]]]] |   2 |
| [[true,false,null],[1,2,null],[0.1,0.2,null],["S1","S2",null],[null,null,null],[],[true,1,0.1,"S1",null],[[true,false,null],[1,2,null],[0.1,0.2,null],["S1","S2",null],[null,null,null],[],[true,1,0.1,"S1",null],[[true,false,null],[1,2,null],[0.1,0.2,null],["S1","S2",null],[null,null,null],[],[true,1,0.1,"S1",null]]]] |   2 |
+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+-----+
(2 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A8_B7_C3
#-------------------------------------------------------------------------
SELECT a_nested
FROM
  (SELECT *
   FROM test_array
   WHERE a_nested=a_nested
     OR a_nested<>a_nested
     AND NOT (a_nested=a_nested
              AND a_nested<>a_nested));
+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| a_nested                                                                                                                                                                                                                                                                                                                      |
+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| [[null,false,true],[null,2,1],[null,0.2,0.1],[null,"S2","S1"],[null,null,null],[],[null,"S1",0.1,1,true],[[null,false,true],[null,2,1],[null,0.2,0.1],[null,"S2","S1"],[null,null,null],[],[null,"S1",0.1,1,true],[[null,false,true],[null,2,1],[null,0.2,0.1],[null,"S2","S1"],[null,null,null],[],[null,"S1",0.1,1,true]]]] |
| [[null,false,true],[null,2,1],[null,0.2,0.1],[null,"S2","S1"],[null,null,null],[],[null,"S1",0.1,1,true],[[null,false,true],[null,2,1],[null,0.2,0.1],[null,"S2","S1"],[null,null,null],[],[null,"S1",0.1,1,true],[[null,false,true],[null,2,1],[null,0.2,0.1],[null,"S2","S1"],[null,null,null],[],[null,"S1",0.1,1,true]]]] |
| [[true,false,null],[1,2,null],[0.1,0.2,null],["S1","S2",null],[null,null,null],[],[true,1,0.1,"S1",null],[[true,false,null],[1,2,null],[0.1,0.2,null],["S1","S2",null],[null,null,null],[],[true,1,0.1,"S1",null],[[true,false,null],[1,2,null],[0.1,0.2,null],["S1","S2",null],[null,null,null],[],[true,1,0.1,"S1",null]]]] |
| [[true,false,null],[1,2,null],[0.1,0.2,null],["S1","S2",null],[null,null,null],[],[true,1,0.1,"S1",null],[[true,false,null],[1,2,null],[0.1,0.2,null],["S1","S2",null],[null,null,null],[],[true,1,0.1,"S1",null],[[true,false,null],[1,2,null],[0.1,0.2,null],["S1","S2",null],[null,null,null],[],[true,1,0.1,"S1",null]]]] |
+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
(4 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A8_B7_C4
#-------------------------------------------------------------------------
SELECT a_nested,
       count(*) cnt
FROM
  (SELECT *
   FROM test_array
   WHERE a_nested=a_nested
     OR a_nested<>a_nested
     AND NOT (a_nested=a_nested
              AND a_nested<>a_nested))
GROUP BY a_nested;
+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+-----+
| a_nested                                                                                                                                                                                                                                                                                                                      | cnt |
+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+-----+
| [[null,false,true],[null,2,1],[null,0.2,0.1],[null,"S2","S1"],[null,null,null],[],[null,"S1",0.1,1,true],[[null,false,true],[null,2,1],[null,0.2,0.1],[null,"S2","S1"],[null,null,null],[],[null,"S1",0.1,1,true],[[null,false,true],[null,2,1],[null,0.2,0.1],[null,"S2","S1"],[null,null,null],[],[null,"S1",0.1,1,true]]]] |   2 |
| [[true,false,null],[1,2,null],[0.1,0.2,null],["S1","S2",null],[null,null,null],[],[true,1,0.1,"S1",null],[[true,false,null],[1,2,null],[0.1,0.2,null],["S1","S2",null],[null,null,null],[],[true,1,0.1,"S1",null],[[true,false,null],[1,2,null],[0.1,0.2,null],["S1","S2",null],[null,null,null],[],[true,1,0.1,"S1",null]]]] |   2 |
+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+-----+
(2 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A8_B7_C5
#-------------------------------------------------------------------------
SELECT a_nested
FROM
  (SELECT *
   FROM test_array)
WHERE a_nested=a_nested
  OR a_nested<>a_nested
  AND NOT (a_nested=a_nested
           AND a_nested<>a_nested);
+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| a_nested                                                                                                                                                                                                                                                                                                                      |
+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| [[null,false,true],[null,2,1],[null,0.2,0.1],[null,"S2","S1"],[null,null,null],[],[null,"S1",0.1,1,true],[[null,false,true],[null,2,1],[null,0.2,0.1],[null,"S2","S1"],[null,null,null],[],[null,"S1",0.1,1,true],[[null,false,true],[null,2,1],[null,0.2,0.1],[null,"S2","S1"],[null,null,null],[],[null,"S1",0.1,1,true]]]] |
| [[null,false,true],[null,2,1],[null,0.2,0.1],[null,"S2","S1"],[null,null,null],[],[null,"S1",0.1,1,true],[[null,false,true],[null,2,1],[null,0.2,0.1],[null,"S2","S1"],[null,null,null],[],[null,"S1",0.1,1,true],[[null,false,true],[null,2,1],[null,0.2,0.1],[null,"S2","S1"],[null,null,null],[],[null,"S1",0.1,1,true]]]] |
| [[true,false,null],[1,2,null],[0.1,0.2,null],["S1","S2",null],[null,null,null],[],[true,1,0.1,"S1",null],[[true,false,null],[1,2,null],[0.1,0.2,null],["S1","S2",null],[null,null,null],[],[true,1,0.1,"S1",null],[[true,false,null],[1,2,null],[0.1,0.2,null],["S1","S2",null],[null,null,null],[],[true,1,0.1,"S1",null]]]] |
| [[true,false,null],[1,2,null],[0.1,0.2,null],["S1","S2",null],[null,null,null],[],[true,1,0.1,"S1",null],[[true,false,null],[1,2,null],[0.1,0.2,null],["S1","S2",null],[null,null,null],[],[true,1,0.1,"S1",null],[[true,false,null],[1,2,null],[0.1,0.2,null],["S1","S2",null],[null,null,null],[],[true,1,0.1,"S1",null]]]] |
+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
(4 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A8_B7_C6
#-------------------------------------------------------------------------
SELECT a_nested,
       count(*) cnt
FROM
  (SELECT *
   FROM test_array)
WHERE a_nested=a_nested
  OR a_nested<>a_nested
  AND NOT (a_nested=a_nested
           AND a_nested<>a_nested)
GROUP BY a_nested;
+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+-----+
| a_nested                                                                                                                                                                                                                                                                                                                      | cnt |
+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+-----+
| [[null,false,true],[null,2,1],[null,0.2,0.1],[null,"S2","S1"],[null,null,null],[],[null,"S1",0.1,1,true],[[null,false,true],[null,2,1],[null,0.2,0.1],[null,"S2","S1"],[null,null,null],[],[null,"S1",0.1,1,true],[[null,false,true],[null,2,1],[null,0.2,0.1],[null,"S2","S1"],[null,null,null],[],[null,"S1",0.1,1,true]]]] |   2 |
| [[true,false,null],[1,2,null],[0.1,0.2,null],["S1","S2",null],[null,null,null],[],[true,1,0.1,"S1",null],[[true,false,null],[1,2,null],[0.1,0.2,null],["S1","S2",null],[null,null,null],[],[true,1,0.1,"S1",null],[[true,false,null],[1,2,null],[0.1,0.2,null],["S1","S2",null],[null,null,null],[],[true,1,0.1,"S1",null]]]] |   2 |
+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+-----+
(2 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A8_B7_C7
#-------------------------------------------------------------------------
WITH t1 AS
  (SELECT *
   FROM test_array
   WHERE a_nested=a_nested
     OR a_nested<>a_nested
     AND NOT (a_nested=a_nested
              AND a_nested<>a_nested))
SELECT a_nested
FROM t1;
+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| a_nested                                                                                                                                                                                                                                                                                                                      |
+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| [[null,false,true],[null,2,1],[null,0.2,0.1],[null,"S2","S1"],[null,null,null],[],[null,"S1",0.1,1,true],[[null,false,true],[null,2,1],[null,0.2,0.1],[null,"S2","S1"],[null,null,null],[],[null,"S1",0.1,1,true],[[null,false,true],[null,2,1],[null,0.2,0.1],[null,"S2","S1"],[null,null,null],[],[null,"S1",0.1,1,true]]]] |
| [[null,false,true],[null,2,1],[null,0.2,0.1],[null,"S2","S1"],[null,null,null],[],[null,"S1",0.1,1,true],[[null,false,true],[null,2,1],[null,0.2,0.1],[null,"S2","S1"],[null,null,null],[],[null,"S1",0.1,1,true],[[null,false,true],[null,2,1],[null,0.2,0.1],[null,"S2","S1"],[null,null,null],[],[null,"S1",0.1,1,true]]]] |
| [[true,false,null],[1,2,null],[0.1,0.2,null],["S1","S2",null],[null,null,null],[],[true,1,0.1,"S1",null],[[true,false,null],[1,2,null],[0.1,0.2,null],["S1","S2",null],[null,null,null],[],[true,1,0.1,"S1",null],[[true,false,null],[1,2,null],[0.1,0.2,null],["S1","S2",null],[null,null,null],[],[true,1,0.1,"S1",null]]]] |
| [[true,false,null],[1,2,null],[0.1,0.2,null],["S1","S2",null],[null,null,null],[],[true,1,0.1,"S1",null],[[true,false,null],[1,2,null],[0.1,0.2,null],["S1","S2",null],[null,null,null],[],[true,1,0.1,"S1",null],[[true,false,null],[1,2,null],[0.1,0.2,null],["S1","S2",null],[null,null,null],[],[true,1,0.1,"S1",null]]]] |
+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
(4 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A8_B7_C8
#-------------------------------------------------------------------------
WITH t1 AS
  (SELECT *
   FROM test_array
   WHERE a_nested=a_nested
     OR a_nested<>a_nested
     AND NOT (a_nested=a_nested
              AND a_nested<>a_nested))
SELECT a_nested,
       count(*) cnt
FROM t1
GROUP BY a_nested;
+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+-----+
| a_nested                                                                                                                                                                                                                                                                                                                      | cnt |
+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+-----+
| [[null,false,true],[null,2,1],[null,0.2,0.1],[null,"S2","S1"],[null,null,null],[],[null,"S1",0.1,1,true],[[null,false,true],[null,2,1],[null,0.2,0.1],[null,"S2","S1"],[null,null,null],[],[null,"S1",0.1,1,true],[[null,false,true],[null,2,1],[null,0.2,0.1],[null,"S2","S1"],[null,null,null],[],[null,"S1",0.1,1,true]]]] |   2 |
| [[true,false,null],[1,2,null],[0.1,0.2,null],["S1","S2",null],[null,null,null],[],[true,1,0.1,"S1",null],[[true,false,null],[1,2,null],[0.1,0.2,null],["S1","S2",null],[null,null,null],[],[true,1,0.1,"S1",null],[[true,false,null],[1,2,null],[0.1,0.2,null],["S1","S2",null],[null,null,null],[],[true,1,0.1,"S1",null]]]] |   2 |
+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+-----+
(2 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A8_B7_C9
#-------------------------------------------------------------------------
WITH t1 AS
  (SELECT *
   FROM test_array)
SELECT a_nested
FROM t1
WHERE a_nested=a_nested
  OR a_nested<>a_nested
  AND NOT (a_nested=a_nested
           AND a_nested<>a_nested);
+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| a_nested                                                                                                                                                                                                                                                                                                                      |
+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| [[null,false,true],[null,2,1],[null,0.2,0.1],[null,"S2","S1"],[null,null,null],[],[null,"S1",0.1,1,true],[[null,false,true],[null,2,1],[null,0.2,0.1],[null,"S2","S1"],[null,null,null],[],[null,"S1",0.1,1,true],[[null,false,true],[null,2,1],[null,0.2,0.1],[null,"S2","S1"],[null,null,null],[],[null,"S1",0.1,1,true]]]] |
| [[null,false,true],[null,2,1],[null,0.2,0.1],[null,"S2","S1"],[null,null,null],[],[null,"S1",0.1,1,true],[[null,false,true],[null,2,1],[null,0.2,0.1],[null,"S2","S1"],[null,null,null],[],[null,"S1",0.1,1,true],[[null,false,true],[null,2,1],[null,0.2,0.1],[null,"S2","S1"],[null,null,null],[],[null,"S1",0.1,1,true]]]] |
| [[true,false,null],[1,2,null],[0.1,0.2,null],["S1","S2",null],[null,null,null],[],[true,1,0.1,"S1",null],[[true,false,null],[1,2,null],[0.1,0.2,null],["S1","S2",null],[null,null,null],[],[true,1,0.1,"S1",null],[[true,false,null],[1,2,null],[0.1,0.2,null],["S1","S2",null],[null,null,null],[],[true,1,0.1,"S1",null]]]] |
| [[true,false,null],[1,2,null],[0.1,0.2,null],["S1","S2",null],[null,null,null],[],[true,1,0.1,"S1",null],[[true,false,null],[1,2,null],[0.1,0.2,null],["S1","S2",null],[null,null,null],[],[true,1,0.1,"S1",null],[[true,false,null],[1,2,null],[0.1,0.2,null],["S1","S2",null],[null,null,null],[],[true,1,0.1,"S1",null]]]] |
+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
(4 rows)

!ok

