!set dartQueryId 00000000-0000-0000-0000-000000000000
!set useApproximateCountDistinct false
!use druidtest://?componentSupplier=StandardAndMSQComponentSupplier&datasets=sql/src/test/quidem/qatests/qaArray/ops_funcs
!set outputformat mysql
#-------------------------------------------------------------------------
# TESTCASE: test_scalar_funcs TEST_ID: A1_B8_C5_D1
#-------------------------------------------------------------------------
SELECT power(json_value(a_nested, '$[1]' RETURNING bigint array), 1) AS col
FROM test_array;
Cannot apply 'POWER' to arguments of type 'POWER(
!error

#-------------------------------------------------------------------------
# TESTCASE: test_scalar_funcs TEST_ID: A1_B8_C6_D1
#-------------------------------------------------------------------------
SELECT power(json_value(a_nested, '$[7][1]' RETURNING bigint array), 1) AS col
FROM test_array;
Cannot apply 'POWER' to arguments of type 'POWER(
!error

#-------------------------------------------------------------------------
# TESTCASE: test_scalar_funcs TEST_ID: A1_B8_C7_D1
#-------------------------------------------------------------------------
SELECT power(a_float, 1) AS col
FROM test_array;
Cannot apply 'POWER' to arguments of type 'POWER(
!error

#-------------------------------------------------------------------------
# TESTCASE: test_scalar_funcs TEST_ID: A1_B8_C8_D1
#-------------------------------------------------------------------------
SELECT power(json_value(a_nested, '$[2]' RETURNING decimal array), 1) AS col
FROM test_array;
Cannot apply 'POWER' to arguments of type 'POWER(
!error

#-------------------------------------------------------------------------
# TESTCASE: test_scalar_funcs TEST_ID: A1_B8_C9_D1
#-------------------------------------------------------------------------
SELECT power(json_value(a_nested, '$[7][2]' RETURNING decimal array), 1) AS col
FROM test_array;
Cannot apply 'POWER' to arguments of type 'POWER(
!error

#-------------------------------------------------------------------------
# TESTCASE: test_scalar_funcs TEST_ID: A1_B8_C10_D1
#-------------------------------------------------------------------------
SELECT power(a_str, 1) AS col
FROM test_array;
Cannot apply 'POWER' to arguments of type 'POWER(
!error

#-------------------------------------------------------------------------
# TESTCASE: test_scalar_funcs TEST_ID: A1_B8_C11_D1
#-------------------------------------------------------------------------
SELECT power(json_value(a_nested, '$[3]' RETURNING varchar array), 1) AS col
FROM test_array;
Cannot apply 'POWER' to arguments of type 'POWER(
!error

#-------------------------------------------------------------------------
# TESTCASE: test_scalar_funcs TEST_ID: A1_B8_C12_D1
#-------------------------------------------------------------------------
SELECT power(json_value(a_nested, '$[7][3]' RETURNING varchar array), 1) AS col
FROM test_array;
Cannot apply 'POWER' to arguments of type 'POWER(
!error

#-------------------------------------------------------------------------
# TESTCASE: test_scalar_funcs TEST_ID: A1_B8_C13_D1
#-------------------------------------------------------------------------
SELECT power(a_null, 1) AS col
FROM test_array;
Cannot apply 'POWER' to arguments of type 'POWER(
!error

#-------------------------------------------------------------------------
# TESTCASE: test_scalar_funcs TEST_ID: A1_B8_C14_D1
#-------------------------------------------------------------------------
SELECT power(json_value(a_nested, '$[4]' RETURNING varchar array), 1) AS col
FROM test_array;
Cannot apply 'POWER' to arguments of type 'POWER(
!error

#-------------------------------------------------------------------------
# TESTCASE: test_scalar_funcs TEST_ID: A1_B8_C15_D1
#-------------------------------------------------------------------------
SELECT power(json_value(a_nested, '$[7][4]' RETURNING varchar array), 1) AS col
FROM test_array;
Cannot apply 'POWER' to arguments of type 'POWER(
!error

#-------------------------------------------------------------------------
# TESTCASE: test_scalar_funcs TEST_ID: A1_B8_C16_D1
#-------------------------------------------------------------------------
SELECT power(a_empty, 1) AS col
FROM test_array;
Cannot apply 'POWER' to arguments of type 'POWER(
!error

#-------------------------------------------------------------------------
# TESTCASE: test_scalar_funcs TEST_ID: A1_B8_C17_D1
#-------------------------------------------------------------------------
SELECT power(json_value(a_nested, '$[5]' RETURNING varchar array), 1) AS col
FROM test_array;
Cannot apply 'POWER' to arguments of type 'POWER(
!error

#-------------------------------------------------------------------------
# TESTCASE: test_scalar_funcs TEST_ID: A1_B8_C18_D1
#-------------------------------------------------------------------------
SELECT power(json_value(a_nested, '$[7][5]' RETURNING varchar array), 1) AS col
FROM test_array;
Cannot apply 'POWER' to arguments of type 'POWER(
!error

#-------------------------------------------------------------------------
# TESTCASE: test_scalar_funcs TEST_ID: A1_B8_C19_D1
#-------------------------------------------------------------------------
SELECT power(a_mixed, 1) AS col
FROM test_array;
Cannot apply 'POWER' to arguments of type 'POWER(
!error

#-------------------------------------------------------------------------
# TESTCASE: test_scalar_funcs TEST_ID: A1_B8_C20_D1
#-------------------------------------------------------------------------
SELECT power(json_value(a_nested, '$[6]' RETURNING varchar array), 1) AS col
FROM test_array;
Cannot apply 'POWER' to arguments of type 'POWER(
!error

#-------------------------------------------------------------------------
# TESTCASE: test_scalar_funcs TEST_ID: A1_B8_C21_D1
#-------------------------------------------------------------------------
SELECT power(json_value(a_nested, '$[7][6]' RETURNING varchar array), 1) AS col
FROM test_array;
Cannot apply 'POWER' to arguments of type 'POWER(
!error

#-------------------------------------------------------------------------
# TESTCASE: test_scalar_funcs TEST_ID: A1_B8_C22_D1
#-------------------------------------------------------------------------
SELECT power(a_nested, 1) AS col
FROM test_array;
Cannot apply 'POWER' to arguments of type 'POWER(
!error

#-------------------------------------------------------------------------
# TESTCASE: test_scalar_funcs TEST_ID: A1_B8_C23_D1
#-------------------------------------------------------------------------
SELECT power(json_value(a_nested, '$[7]' RETURNING varchar array), 1) AS col
FROM test_array;
Cannot apply 'POWER' to arguments of type 'POWER(
!error

#-------------------------------------------------------------------------
# TESTCASE: test_scalar_funcs TEST_ID: A1_B8_C24_D1
#-------------------------------------------------------------------------
SELECT power(json_value(a_nested, '$[7][7]' RETURNING varchar array), 1) AS col
FROM test_array;
Cannot apply 'POWER' to arguments of type 'POWER(
!error

#-------------------------------------------------------------------------
# TESTCASE: test_scalar_funcs TEST_ID: A1_B9_C1_D1
#-------------------------------------------------------------------------
SELECT sqrt(a_bool) AS col
FROM test_array;
Cannot apply 'SQRT' to arguments of type 'SQRT(
!error

#-------------------------------------------------------------------------
# TESTCASE: test_scalar_funcs TEST_ID: A1_B9_C2_D1
#-------------------------------------------------------------------------
SELECT sqrt(json_value(a_nested, '$[0]' RETURNING boolean array)) AS col
FROM test_array;
Cannot apply 'SQRT' to arguments of type 'SQRT(
!error

#-------------------------------------------------------------------------
# TESTCASE: test_scalar_funcs TEST_ID: A1_B9_C3_D1
#-------------------------------------------------------------------------
SELECT sqrt(json_value(a_nested, '$[7][0]' RETURNING boolean array)) AS col
FROM test_array;
Cannot apply 'SQRT' to arguments of type 'SQRT(
!error

#-------------------------------------------------------------------------
# TESTCASE: test_scalar_funcs TEST_ID: A1_B9_C4_D1
#-------------------------------------------------------------------------
SELECT sqrt(a_int) AS col
FROM test_array;
Cannot apply 'SQRT' to arguments of type 'SQRT(
!error

#-------------------------------------------------------------------------
# TESTCASE: test_scalar_funcs TEST_ID: A1_B9_C5_D1
#-------------------------------------------------------------------------
SELECT sqrt(json_value(a_nested, '$[1]' RETURNING bigint array)) AS col
FROM test_array;
Cannot apply 'SQRT' to arguments of type 'SQRT(
!error

#-------------------------------------------------------------------------
# TESTCASE: test_scalar_funcs TEST_ID: A1_B9_C6_D1
#-------------------------------------------------------------------------
SELECT sqrt(json_value(a_nested, '$[7][1]' RETURNING bigint array)) AS col
FROM test_array;
Cannot apply 'SQRT' to arguments of type 'SQRT(
!error

#-------------------------------------------------------------------------
# TESTCASE: test_scalar_funcs TEST_ID: A1_B9_C7_D1
#-------------------------------------------------------------------------
SELECT sqrt(a_float) AS col
FROM test_array;
Cannot apply 'SQRT' to arguments of type 'SQRT(
!error

#-------------------------------------------------------------------------
# TESTCASE: test_scalar_funcs TEST_ID: A1_B9_C8_D1
#-------------------------------------------------------------------------
SELECT sqrt(json_value(a_nested, '$[2]' RETURNING decimal array)) AS col
FROM test_array;
Cannot apply 'SQRT' to arguments of type 'SQRT(
!error

#-------------------------------------------------------------------------
# TESTCASE: test_scalar_funcs TEST_ID: A1_B9_C9_D1
#-------------------------------------------------------------------------
SELECT sqrt(json_value(a_nested, '$[7][2]' RETURNING decimal array)) AS col
FROM test_array;
Cannot apply 'SQRT' to arguments of type 'SQRT(
!error

#-------------------------------------------------------------------------
# TESTCASE: test_scalar_funcs TEST_ID: A1_B9_C10_D1
#-------------------------------------------------------------------------
SELECT sqrt(a_str) AS col
FROM test_array;
Cannot apply 'SQRT' to arguments of type 'SQRT(
!error

#-------------------------------------------------------------------------
# TESTCASE: test_scalar_funcs TEST_ID: A1_B9_C11_D1
#-------------------------------------------------------------------------
SELECT sqrt(json_value(a_nested, '$[3]' RETURNING varchar array)) AS col
FROM test_array;
Cannot apply 'SQRT' to arguments of type 'SQRT(
!error

#-------------------------------------------------------------------------
# TESTCASE: test_scalar_funcs TEST_ID: A1_B9_C12_D1
#-------------------------------------------------------------------------
SELECT sqrt(json_value(a_nested, '$[7][3]' RETURNING varchar array)) AS col
FROM test_array;
Cannot apply 'SQRT' to arguments of type 'SQRT(
!error

#-------------------------------------------------------------------------
# TESTCASE: test_scalar_funcs TEST_ID: A1_B9_C13_D1
#-------------------------------------------------------------------------
SELECT sqrt(a_null) AS col
FROM test_array;
Cannot apply 'SQRT' to arguments of type 'SQRT(
!error

#-------------------------------------------------------------------------
# TESTCASE: test_scalar_funcs TEST_ID: A1_B9_C14_D1
#-------------------------------------------------------------------------
SELECT sqrt(json_value(a_nested, '$[4]' RETURNING varchar array)) AS col
FROM test_array;
Cannot apply 'SQRT' to arguments of type 'SQRT(
!error

#-------------------------------------------------------------------------
# TESTCASE: test_scalar_funcs TEST_ID: A1_B9_C15_D1
#-------------------------------------------------------------------------
SELECT sqrt(json_value(a_nested, '$[7][4]' RETURNING varchar array)) AS col
FROM test_array;
Cannot apply 'SQRT' to arguments of type 'SQRT(
!error

#-------------------------------------------------------------------------
# TESTCASE: test_scalar_funcs TEST_ID: A1_B9_C16_D1
#-------------------------------------------------------------------------
SELECT sqrt(a_empty) AS col
FROM test_array;
Cannot apply 'SQRT' to arguments of type 'SQRT(
!error

#-------------------------------------------------------------------------
# TESTCASE: test_scalar_funcs TEST_ID: A1_B9_C17_D1
#-------------------------------------------------------------------------
SELECT sqrt(json_value(a_nested, '$[5]' RETURNING varchar array)) AS col
FROM test_array;
Cannot apply 'SQRT' to arguments of type 'SQRT(
!error

#-------------------------------------------------------------------------
# TESTCASE: test_scalar_funcs TEST_ID: A1_B9_C18_D1
#-------------------------------------------------------------------------
SELECT sqrt(json_value(a_nested, '$[7][5]' RETURNING varchar array)) AS col
FROM test_array;
Cannot apply 'SQRT' to arguments of type 'SQRT(
!error

#-------------------------------------------------------------------------
# TESTCASE: test_scalar_funcs TEST_ID: A1_B9_C19_D1
#-------------------------------------------------------------------------
SELECT sqrt(a_mixed) AS col
FROM test_array;
Cannot apply 'SQRT' to arguments of type 'SQRT(
!error

#-------------------------------------------------------------------------
# TESTCASE: test_scalar_funcs TEST_ID: A1_B9_C20_D1
#-------------------------------------------------------------------------
SELECT sqrt(json_value(a_nested, '$[6]' RETURNING varchar array)) AS col
FROM test_array;
Cannot apply 'SQRT' to arguments of type 'SQRT(
!error

#-------------------------------------------------------------------------
# TESTCASE: test_scalar_funcs TEST_ID: A1_B9_C21_D1
#-------------------------------------------------------------------------
SELECT sqrt(json_value(a_nested, '$[7][6]' RETURNING varchar array)) AS col
FROM test_array;
Cannot apply 'SQRT' to arguments of type 'SQRT(
!error

#-------------------------------------------------------------------------
# TESTCASE: test_scalar_funcs TEST_ID: A1_B9_C22_D1
#-------------------------------------------------------------------------
SELECT sqrt(a_nested) AS col
FROM test_array;
Cannot apply 'SQRT' to arguments of type 'SQRT(
!error

#-------------------------------------------------------------------------
# TESTCASE: test_scalar_funcs TEST_ID: A1_B9_C23_D1
#-------------------------------------------------------------------------
SELECT sqrt(json_value(a_nested, '$[7]' RETURNING varchar array)) AS col
FROM test_array;
Cannot apply 'SQRT' to arguments of type 'SQRT(
!error

#-------------------------------------------------------------------------
# TESTCASE: test_scalar_funcs TEST_ID: A1_B9_C24_D1
#-------------------------------------------------------------------------
SELECT sqrt(json_value(a_nested, '$[7][7]' RETURNING varchar array)) AS col
FROM test_array;
Cannot apply 'SQRT' to arguments of type 'SQRT(
!error

#-------------------------------------------------------------------------
# TESTCASE: test_scalar_funcs TEST_ID: A1_B10_C1_D1
#-------------------------------------------------------------------------
SELECT truncate(a_bool) AS col
FROM test_array;
Cannot apply 'TRUNCATE' to arguments of type 'TRUNCATE(
!error

#-------------------------------------------------------------------------
# TESTCASE: test_scalar_funcs TEST_ID: A1_B10_C2_D1
#-------------------------------------------------------------------------
SELECT truncate(json_value(a_nested, '$[0]' RETURNING boolean array)) AS col
FROM test_array;
Cannot apply 'TRUNCATE' to arguments of type 'TRUNCATE(
!error

#-------------------------------------------------------------------------
# TESTCASE: test_scalar_funcs TEST_ID: A1_B10_C3_D1
#-------------------------------------------------------------------------
SELECT truncate(json_value(a_nested, '$[7][0]' RETURNING boolean array)) AS col
FROM test_array;
Cannot apply 'TRUNCATE' to arguments of type 'TRUNCATE(
!error

#-------------------------------------------------------------------------
# TESTCASE: test_scalar_funcs TEST_ID: A1_B10_C4_D1
#-------------------------------------------------------------------------
SELECT truncate(a_int) AS col
FROM test_array;
Cannot apply 'TRUNCATE' to arguments of type 'TRUNCATE(
!error

#-------------------------------------------------------------------------
# TESTCASE: test_scalar_funcs TEST_ID: A1_B10_C5_D1
#-------------------------------------------------------------------------
SELECT truncate(json_value(a_nested, '$[1]' RETURNING bigint array)) AS col
FROM test_array;
Cannot apply 'TRUNCATE' to arguments of type 'TRUNCATE(
!error

#-------------------------------------------------------------------------
# TESTCASE: test_scalar_funcs TEST_ID: A1_B10_C6_D1
#-------------------------------------------------------------------------
SELECT truncate(json_value(a_nested, '$[7][1]' RETURNING bigint array)) AS col
FROM test_array;
Cannot apply 'TRUNCATE' to arguments of type 'TRUNCATE(
!error

