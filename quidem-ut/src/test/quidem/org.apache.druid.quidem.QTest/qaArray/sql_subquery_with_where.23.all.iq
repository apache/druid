!set dartQueryId 00000000-0000-0000-0000-000000000000
!set useApproximateCountDistinct false
!use druidtest://?componentSupplier=StandardAndMSQComponentSupplier&datasets=sql/src/test/quidem/qatests/qaArray/sql
!set outputformat mysql
#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A2_B36_C10
#-------------------------------------------------------------------------
WITH t1 AS
  (SELECT *
   FROM test_array)
SELECT a_int,
       count(*) cnt
FROM t1
WHERE (a_int<json_value(a_nested, '$[1]' RETURNING bigint array)) IS NOT TRUE
GROUP BY a_int;
+--------------+-----+
| a_int        | cnt |
+--------------+-----+
| [1, 2, null] |   2 |
| [null, 2, 1] |   2 |
+--------------+-----+
(2 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A2_B37_C1
#-------------------------------------------------------------------------
SELECT a_int
FROM test_array
WHERE (a_int<json_value(a_nested, '$[1]' RETURNING bigint array)) IS FALSE;
+--------------+
| a_int        |
+--------------+
| [1, 2, null] |
| [1, 2, null] |
| [null, 2, 1] |
| [null, 2, 1] |
+--------------+
(4 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A2_B37_C2
#-------------------------------------------------------------------------
SELECT a_int,
       count(*) cnt
FROM test_array
WHERE (a_int<json_value(a_nested, '$[1]' RETURNING bigint array)) IS FALSE
GROUP BY a_int;
+--------------+-----+
| a_int        | cnt |
+--------------+-----+
| [1, 2, null] |   2 |
| [null, 2, 1] |   2 |
+--------------+-----+
(2 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A2_B37_C3
#-------------------------------------------------------------------------
SELECT a_int
FROM
  (SELECT *
   FROM test_array
   WHERE (a_int<json_value(a_nested, '$[1]' RETURNING bigint array)) IS FALSE);
+--------------+
| a_int        |
+--------------+
| [1, 2, null] |
| [1, 2, null] |
| [null, 2, 1] |
| [null, 2, 1] |
+--------------+
(4 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A2_B37_C4
#-------------------------------------------------------------------------
SELECT a_int,
       count(*) cnt
FROM
  (SELECT *
   FROM test_array
   WHERE (a_int<json_value(a_nested, '$[1]' RETURNING bigint array)) IS FALSE)
GROUP BY a_int;
+--------------+-----+
| a_int        | cnt |
+--------------+-----+
| [1, 2, null] |   2 |
| [null, 2, 1] |   2 |
+--------------+-----+
(2 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A2_B37_C5
#-------------------------------------------------------------------------
SELECT a_int
FROM
  (SELECT *
   FROM test_array)
WHERE (a_int<json_value(a_nested, '$[1]' RETURNING bigint array)) IS FALSE;
+--------------+
| a_int        |
+--------------+
| [1, 2, null] |
| [1, 2, null] |
| [null, 2, 1] |
| [null, 2, 1] |
+--------------+
(4 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A2_B37_C6
#-------------------------------------------------------------------------
SELECT a_int,
       count(*) cnt
FROM
  (SELECT *
   FROM test_array)
WHERE (a_int<json_value(a_nested, '$[1]' RETURNING bigint array)) IS FALSE
GROUP BY a_int;
+--------------+-----+
| a_int        | cnt |
+--------------+-----+
| [1, 2, null] |   2 |
| [null, 2, 1] |   2 |
+--------------+-----+
(2 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A2_B37_C7
#-------------------------------------------------------------------------
WITH t1 AS
  (SELECT *
   FROM test_array
   WHERE (a_int<json_value(a_nested, '$[1]' RETURNING bigint array)) IS FALSE)
SELECT a_int
FROM t1;
+--------------+
| a_int        |
+--------------+
| [1, 2, null] |
| [1, 2, null] |
| [null, 2, 1] |
| [null, 2, 1] |
+--------------+
(4 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A2_B37_C8
#-------------------------------------------------------------------------
WITH t1 AS
  (SELECT *
   FROM test_array
   WHERE (a_int<json_value(a_nested, '$[1]' RETURNING bigint array)) IS FALSE)
SELECT a_int,
       count(*) cnt
FROM t1
GROUP BY a_int;
+--------------+-----+
| a_int        | cnt |
+--------------+-----+
| [1, 2, null] |   2 |
| [null, 2, 1] |   2 |
+--------------+-----+
(2 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A2_B37_C9
#-------------------------------------------------------------------------
WITH t1 AS
  (SELECT *
   FROM test_array)
SELECT a_int
FROM t1
WHERE (a_int<json_value(a_nested, '$[1]' RETURNING bigint array)) IS FALSE;
+--------------+
| a_int        |
+--------------+
| [1, 2, null] |
| [1, 2, null] |
| [null, 2, 1] |
| [null, 2, 1] |
+--------------+
(4 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A2_B37_C10
#-------------------------------------------------------------------------
WITH t1 AS
  (SELECT *
   FROM test_array)
SELECT a_int,
       count(*) cnt
FROM t1
WHERE (a_int<json_value(a_nested, '$[1]' RETURNING bigint array)) IS FALSE
GROUP BY a_int;
+--------------+-----+
| a_int        | cnt |
+--------------+-----+
| [1, 2, null] |   2 |
| [null, 2, 1] |   2 |
+--------------+-----+
(2 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A2_B38_C1
#-------------------------------------------------------------------------
SELECT a_int
FROM test_array
WHERE (a_int<json_value(a_nested, '$[1]' RETURNING bigint array)) IS NOT FALSE;
+-------+
| a_int |
+-------+
+-------+
(0 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A2_B38_C2
#-------------------------------------------------------------------------
SELECT a_int,
       count(*) cnt
FROM test_array
WHERE (a_int<json_value(a_nested, '$[1]' RETURNING bigint array)) IS NOT FALSE
GROUP BY a_int;
+-------+-----+
| a_int | cnt |
+-------+-----+
+-------+-----+
(0 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A2_B38_C3
#-------------------------------------------------------------------------
SELECT a_int
FROM
  (SELECT *
   FROM test_array
   WHERE (a_int<json_value(a_nested, '$[1]' RETURNING bigint array)) IS NOT FALSE);
+-------+
| a_int |
+-------+
+-------+
(0 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A2_B38_C4
#-------------------------------------------------------------------------
SELECT a_int,
       count(*) cnt
FROM
  (SELECT *
   FROM test_array
   WHERE (a_int<json_value(a_nested, '$[1]' RETURNING bigint array)) IS NOT FALSE)
GROUP BY a_int;
+-------+-----+
| a_int | cnt |
+-------+-----+
+-------+-----+
(0 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A2_B38_C5
#-------------------------------------------------------------------------
SELECT a_int
FROM
  (SELECT *
   FROM test_array)
WHERE (a_int<json_value(a_nested, '$[1]' RETURNING bigint array)) IS NOT FALSE;
+-------+
| a_int |
+-------+
+-------+
(0 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A2_B38_C6
#-------------------------------------------------------------------------
SELECT a_int,
       count(*) cnt
FROM
  (SELECT *
   FROM test_array)
WHERE (a_int<json_value(a_nested, '$[1]' RETURNING bigint array)) IS NOT FALSE
GROUP BY a_int;
+-------+-----+
| a_int | cnt |
+-------+-----+
+-------+-----+
(0 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A2_B38_C7
#-------------------------------------------------------------------------
WITH t1 AS
  (SELECT *
   FROM test_array
   WHERE (a_int<json_value(a_nested, '$[1]' RETURNING bigint array)) IS NOT FALSE)
SELECT a_int
FROM t1;
+-------+
| a_int |
+-------+
+-------+
(0 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A2_B38_C8
#-------------------------------------------------------------------------
WITH t1 AS
  (SELECT *
   FROM test_array
   WHERE (a_int<json_value(a_nested, '$[1]' RETURNING bigint array)) IS NOT FALSE)
SELECT a_int,
       count(*) cnt
FROM t1
GROUP BY a_int;
+-------+-----+
| a_int | cnt |
+-------+-----+
+-------+-----+
(0 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A2_B38_C9
#-------------------------------------------------------------------------
WITH t1 AS
  (SELECT *
   FROM test_array)
SELECT a_int
FROM t1
WHERE (a_int<json_value(a_nested, '$[1]' RETURNING bigint array)) IS NOT FALSE;
+-------+
| a_int |
+-------+
+-------+
(0 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A2_B38_C10
#-------------------------------------------------------------------------
WITH t1 AS
  (SELECT *
   FROM test_array)
SELECT a_int,
       count(*) cnt
FROM t1
WHERE (a_int<json_value(a_nested, '$[1]' RETURNING bigint array)) IS NOT FALSE
GROUP BY a_int;
+-------+-----+
| a_int | cnt |
+-------+-----+
+-------+-----+
(0 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A2_B39_C1
#-------------------------------------------------------------------------
SELECT a_int
FROM test_array
WHERE a_int BETWEEN json_value(a_nested, '$[1]' RETURNING bigint array) AND json_value(a_nested, '$[7][1]' RETURNING bigint array);
+--------------+
| a_int        |
+--------------+
| [1, 2, null] |
| [1, 2, null] |
| [null, 2, 1] |
| [null, 2, 1] |
+--------------+
(4 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A2_B39_C2
#-------------------------------------------------------------------------
SELECT a_int,
       count(*) cnt
FROM test_array
WHERE a_int BETWEEN json_value(a_nested, '$[1]' RETURNING bigint array) AND json_value(a_nested, '$[7][1]' RETURNING bigint array)
GROUP BY a_int;
+--------------+-----+
| a_int        | cnt |
+--------------+-----+
| [1, 2, null] |   2 |
| [null, 2, 1] |   2 |
+--------------+-----+
(2 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A2_B39_C3
#-------------------------------------------------------------------------
SELECT a_int
FROM
  (SELECT *
   FROM test_array
   WHERE a_int BETWEEN json_value(a_nested, '$[1]' RETURNING bigint array) AND json_value(a_nested, '$[7][1]' RETURNING bigint array));
+--------------+
| a_int        |
+--------------+
| [1, 2, null] |
| [1, 2, null] |
| [null, 2, 1] |
| [null, 2, 1] |
+--------------+
(4 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A2_B39_C4
#-------------------------------------------------------------------------
SELECT a_int,
       count(*) cnt
FROM
  (SELECT *
   FROM test_array
   WHERE a_int BETWEEN json_value(a_nested, '$[1]' RETURNING bigint array) AND json_value(a_nested, '$[7][1]' RETURNING bigint array))
GROUP BY a_int;
+--------------+-----+
| a_int        | cnt |
+--------------+-----+
| [1, 2, null] |   2 |
| [null, 2, 1] |   2 |
+--------------+-----+
(2 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A2_B39_C5
#-------------------------------------------------------------------------
SELECT a_int
FROM
  (SELECT *
   FROM test_array)
WHERE a_int BETWEEN json_value(a_nested, '$[1]' RETURNING bigint array) AND json_value(a_nested, '$[7][1]' RETURNING bigint array);
+--------------+
| a_int        |
+--------------+
| [1, 2, null] |
| [1, 2, null] |
| [null, 2, 1] |
| [null, 2, 1] |
+--------------+
(4 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A2_B39_C6
#-------------------------------------------------------------------------
SELECT a_int,
       count(*) cnt
FROM
  (SELECT *
   FROM test_array)
WHERE a_int BETWEEN json_value(a_nested, '$[1]' RETURNING bigint array) AND json_value(a_nested, '$[7][1]' RETURNING bigint array)
GROUP BY a_int;
+--------------+-----+
| a_int        | cnt |
+--------------+-----+
| [1, 2, null] |   2 |
| [null, 2, 1] |   2 |
+--------------+-----+
(2 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A2_B39_C7
#-------------------------------------------------------------------------
WITH t1 AS
  (SELECT *
   FROM test_array
   WHERE a_int BETWEEN json_value(a_nested, '$[1]' RETURNING bigint array) AND json_value(a_nested, '$[7][1]' RETURNING bigint array))
SELECT a_int
FROM t1;
+--------------+
| a_int        |
+--------------+
| [1, 2, null] |
| [1, 2, null] |
| [null, 2, 1] |
| [null, 2, 1] |
+--------------+
(4 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A2_B39_C8
#-------------------------------------------------------------------------
WITH t1 AS
  (SELECT *
   FROM test_array
   WHERE a_int BETWEEN json_value(a_nested, '$[1]' RETURNING bigint array) AND json_value(a_nested, '$[7][1]' RETURNING bigint array))
SELECT a_int,
       count(*) cnt
FROM t1
GROUP BY a_int;
+--------------+-----+
| a_int        | cnt |
+--------------+-----+
| [1, 2, null] |   2 |
| [null, 2, 1] |   2 |
+--------------+-----+
(2 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A2_B39_C9
#-------------------------------------------------------------------------
WITH t1 AS
  (SELECT *
   FROM test_array)
SELECT a_int
FROM t1
WHERE a_int BETWEEN json_value(a_nested, '$[1]' RETURNING bigint array) AND json_value(a_nested, '$[7][1]' RETURNING bigint array);
+--------------+
| a_int        |
+--------------+
| [1, 2, null] |
| [1, 2, null] |
| [null, 2, 1] |
| [null, 2, 1] |
+--------------+
(4 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A2_B39_C10
#-------------------------------------------------------------------------
WITH t1 AS
  (SELECT *
   FROM test_array)
SELECT a_int,
       count(*) cnt
FROM t1
WHERE a_int BETWEEN json_value(a_nested, '$[1]' RETURNING bigint array) AND json_value(a_nested, '$[7][1]' RETURNING bigint array)
GROUP BY a_int;
+--------------+-----+
| a_int        | cnt |
+--------------+-----+
| [1, 2, null] |   2 |
| [null, 2, 1] |   2 |
+--------------+-----+
(2 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A2_B40_C1
#-------------------------------------------------------------------------
SELECT a_int
FROM test_array
WHERE a_int NOT BETWEEN json_value(a_nested, '$[1]' RETURNING bigint array) AND json_value(a_nested, '$[7][1]' RETURNING bigint array);
+-------+
| a_int |
+-------+
+-------+
(0 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A2_B40_C2
#-------------------------------------------------------------------------
SELECT a_int,
       count(*) cnt
FROM test_array
WHERE a_int NOT BETWEEN json_value(a_nested, '$[1]' RETURNING bigint array) AND json_value(a_nested, '$[7][1]' RETURNING bigint array)
GROUP BY a_int;
+-------+-----+
| a_int | cnt |
+-------+-----+
+-------+-----+
(0 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A2_B40_C3
#-------------------------------------------------------------------------
SELECT a_int
FROM
  (SELECT *
   FROM test_array
   WHERE a_int NOT BETWEEN json_value(a_nested, '$[1]' RETURNING bigint array) AND json_value(a_nested, '$[7][1]' RETURNING bigint array));
+-------+
| a_int |
+-------+
+-------+
(0 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A2_B40_C4
#-------------------------------------------------------------------------
SELECT a_int,
       count(*) cnt
FROM
  (SELECT *
   FROM test_array
   WHERE a_int NOT BETWEEN json_value(a_nested, '$[1]' RETURNING bigint array) AND json_value(a_nested, '$[7][1]' RETURNING bigint array))
GROUP BY a_int;
+-------+-----+
| a_int | cnt |
+-------+-----+
+-------+-----+
(0 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A2_B40_C5
#-------------------------------------------------------------------------
SELECT a_int
FROM
  (SELECT *
   FROM test_array)
WHERE a_int NOT BETWEEN json_value(a_nested, '$[1]' RETURNING bigint array) AND json_value(a_nested, '$[7][1]' RETURNING bigint array);
+-------+
| a_int |
+-------+
+-------+
(0 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A2_B40_C6
#-------------------------------------------------------------------------
SELECT a_int,
       count(*) cnt
FROM
  (SELECT *
   FROM test_array)
WHERE a_int NOT BETWEEN json_value(a_nested, '$[1]' RETURNING bigint array) AND json_value(a_nested, '$[7][1]' RETURNING bigint array)
GROUP BY a_int;
+-------+-----+
| a_int | cnt |
+-------+-----+
+-------+-----+
(0 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A2_B40_C7
#-------------------------------------------------------------------------
WITH t1 AS
  (SELECT *
   FROM test_array
   WHERE a_int NOT BETWEEN json_value(a_nested, '$[1]' RETURNING bigint array) AND json_value(a_nested, '$[7][1]' RETURNING bigint array))
SELECT a_int
FROM t1;
+-------+
| a_int |
+-------+
+-------+
(0 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A2_B40_C8
#-------------------------------------------------------------------------
WITH t1 AS
  (SELECT *
   FROM test_array
   WHERE a_int NOT BETWEEN json_value(a_nested, '$[1]' RETURNING bigint array) AND json_value(a_nested, '$[7][1]' RETURNING bigint array))
SELECT a_int,
       count(*) cnt
FROM t1
GROUP BY a_int;
+-------+-----+
| a_int | cnt |
+-------+-----+
+-------+-----+
(0 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A2_B40_C9
#-------------------------------------------------------------------------
WITH t1 AS
  (SELECT *
   FROM test_array)
SELECT a_int
FROM t1
WHERE a_int NOT BETWEEN json_value(a_nested, '$[1]' RETURNING bigint array) AND json_value(a_nested, '$[7][1]' RETURNING bigint array);
+-------+
| a_int |
+-------+
+-------+
(0 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A2_B40_C10
#-------------------------------------------------------------------------
WITH t1 AS
  (SELECT *
   FROM test_array)
SELECT a_int,
       count(*) cnt
FROM t1
WHERE a_int NOT BETWEEN json_value(a_nested, '$[1]' RETURNING bigint array) AND json_value(a_nested, '$[7][1]' RETURNING bigint array)
GROUP BY a_int;
+-------+-----+
| a_int | cnt |
+-------+-----+
+-------+-----+
(0 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A2_B41_C1
#-------------------------------------------------------------------------
SELECT a_int
FROM test_array
WHERE array_to_string(a_int, ',') like '%';
+--------------+
| a_int        |
+--------------+
| [1, 2, null] |
| [1, 2, null] |
| [null, 2, 1] |
| [null, 2, 1] |
+--------------+
(4 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A2_B41_C2
#-------------------------------------------------------------------------
SELECT a_int,
       count(*) cnt
FROM test_array
WHERE array_to_string(a_int, ',') like '%'
GROUP BY a_int;
+--------------+-----+
| a_int        | cnt |
+--------------+-----+
| [1, 2, null] |   2 |
| [null, 2, 1] |   2 |
+--------------+-----+
(2 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A2_B41_C3
#-------------------------------------------------------------------------
SELECT a_int
FROM
  (SELECT *
   FROM test_array
   WHERE array_to_string(a_int, ',') like '%');
+--------------+
| a_int        |
+--------------+
| [1, 2, null] |
| [1, 2, null] |
| [null, 2, 1] |
| [null, 2, 1] |
+--------------+
(4 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A2_B41_C4
#-------------------------------------------------------------------------
SELECT a_int,
       count(*) cnt
FROM
  (SELECT *
   FROM test_array
   WHERE array_to_string(a_int, ',') like '%')
GROUP BY a_int;
+--------------+-----+
| a_int        | cnt |
+--------------+-----+
| [1, 2, null] |   2 |
| [null, 2, 1] |   2 |
+--------------+-----+
(2 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A2_B41_C5
#-------------------------------------------------------------------------
SELECT a_int
FROM
  (SELECT *
   FROM test_array)
WHERE array_to_string(a_int, ',') like '%';
+--------------+
| a_int        |
+--------------+
| [1, 2, null] |
| [1, 2, null] |
| [null, 2, 1] |
| [null, 2, 1] |
+--------------+
(4 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A2_B41_C6
#-------------------------------------------------------------------------
SELECT a_int,
       count(*) cnt
FROM
  (SELECT *
   FROM test_array)
WHERE array_to_string(a_int, ',') like '%'
GROUP BY a_int;
+--------------+-----+
| a_int        | cnt |
+--------------+-----+
| [1, 2, null] |   2 |
| [null, 2, 1] |   2 |
+--------------+-----+
(2 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A2_B41_C7
#-------------------------------------------------------------------------
WITH t1 AS
  (SELECT *
   FROM test_array
   WHERE array_to_string(a_int, ',') like '%')
SELECT a_int
FROM t1;
+--------------+
| a_int        |
+--------------+
| [1, 2, null] |
| [1, 2, null] |
| [null, 2, 1] |
| [null, 2, 1] |
+--------------+
(4 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A2_B41_C8
#-------------------------------------------------------------------------
WITH t1 AS
  (SELECT *
   FROM test_array
   WHERE array_to_string(a_int, ',') like '%')
SELECT a_int,
       count(*) cnt
FROM t1
GROUP BY a_int;
+--------------+-----+
| a_int        | cnt |
+--------------+-----+
| [1, 2, null] |   2 |
| [null, 2, 1] |   2 |
+--------------+-----+
(2 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_subquery_with_where TEST_ID: A2_B41_C9
#-------------------------------------------------------------------------
WITH t1 AS
  (SELECT *
   FROM test_array)
SELECT a_int
FROM t1
WHERE array_to_string(a_int, ',') like '%';
+--------------+
| a_int        |
+--------------+
| [1, 2, null] |
| [1, 2, null] |
| [null, 2, 1] |
| [null, 2, 1] |
+--------------+
(4 rows)

!ok

