!set useApproximateCountDistinct false
!use druidtest://?componentSupplier=AllDruidEnginesComponentSupplier&datasets=sql/src/test/quidem/qatests/qaArray/ops_funcs
!set outputformat mysql
#-------------------------------------------------------------------------
# TESTCASE: test_array_funcs TEST_ID: A1_B10_C1_D1
#-------------------------------------------------------------------------
SELECT array_append(a_bool, 9) AS col
FROM test_array;
+-----------------+
| col             |
+-----------------+
| [1, 0, null, 9] |
| [1, 0, null, 9] |
| [null, 0, 1, 9] |
| [null, 0, 1, 9] |
+-----------------+
(4 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_array_funcs TEST_ID: A1_B10_C4_D1
#-------------------------------------------------------------------------
SELECT array_append(a_int, 9) AS col
FROM test_array;
+-----------------+
| col             |
+-----------------+
| [1, 2, null, 9] |
| [1, 2, null, 9] |
| [null, 2, 1, 9] |
| [null, 2, 1, 9] |
+-----------------+
(4 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_array_funcs TEST_ID: A1_B10_C5_D1
#-------------------------------------------------------------------------
SELECT array_append(json_value(a_nested, '$[1]' RETURNING bigint array), 9) AS col
FROM test_array;
+-----------------+
| col             |
+-----------------+
| [1, 2, null, 9] |
| [1, 2, null, 9] |
| [null, 2, 1, 9] |
| [null, 2, 1, 9] |
+-----------------+
(4 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_array_funcs TEST_ID: A1_B10_C6_D1
#-------------------------------------------------------------------------
SELECT array_append(json_value(a_nested, '$[7][1]' RETURNING bigint array), 9) AS col
FROM test_array;
+-----------------+
| col             |
+-----------------+
| [1, 2, null, 9] |
| [1, 2, null, 9] |
| [null, 2, 1, 9] |
| [null, 2, 1, 9] |
+-----------------+
(4 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_array_funcs TEST_ID: A1_B10_C7_D1
#-------------------------------------------------------------------------
SELECT array_append(a_float, 9) AS col
FROM test_array;
+-----------------------+
| col                   |
+-----------------------+
| [0.1, 0.2, null, 9.0] |
| [0.1, 0.2, null, 9.0] |
| [null, 0.2, 0.1, 9.0] |
| [null, 0.2, 0.1, 9.0] |
+-----------------------+
(4 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_array_funcs TEST_ID: A1_B10_C8_D1
#-------------------------------------------------------------------------
SELECT array_append(json_value(a_nested, '$[2]' RETURNING decimal array), 9) AS col
FROM test_array;
+-----------------------+
| col                   |
+-----------------------+
| [0.1, 0.2, null, 9.0] |
| [0.1, 0.2, null, 9.0] |
| [null, 0.2, 0.1, 9.0] |
| [null, 0.2, 0.1, 9.0] |
+-----------------------+
(4 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_array_funcs TEST_ID: A1_B10_C9_D1
#-------------------------------------------------------------------------
SELECT array_append(json_value(a_nested, '$[7][2]' RETURNING decimal array), 9) AS col
FROM test_array;
+-----------------------+
| col                   |
+-----------------------+
| [0.1, 0.2, null, 9.0] |
| [0.1, 0.2, null, 9.0] |
| [null, 0.2, 0.1, 9.0] |
| [null, 0.2, 0.1, 9.0] |
+-----------------------+
(4 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_array_funcs TEST_ID: A1_B10_C10_D1
#-------------------------------------------------------------------------
SELECT array_append(a_str, 9) AS col
FROM test_array;
+-------------------+
| col               |
+-------------------+
| [S1, S2, null, 9] |
| [S1, S2, null, 9] |
| [null, S2, S1, 9] |
| [null, S2, S1, 9] |
+-------------------+
(4 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_array_funcs TEST_ID: A1_B10_C11_D1
#-------------------------------------------------------------------------
SELECT array_append(json_value(a_nested, '$[3]' RETURNING varchar array), 9) AS col
FROM test_array;
+-------------------+
| col               |
+-------------------+
| [S1, S2, null, 9] |
| [S1, S2, null, 9] |
| [null, S2, S1, 9] |
| [null, S2, S1, 9] |
+-------------------+
(4 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_array_funcs TEST_ID: A1_B10_C12_D1
#-------------------------------------------------------------------------
SELECT array_append(json_value(a_nested, '$[7][3]' RETURNING varchar array), 9) AS col
FROM test_array;
+-------------------+
| col               |
+-------------------+
| [S1, S2, null, 9] |
| [S1, S2, null, 9] |
| [null, S2, S1, 9] |
| [null, S2, S1, 9] |
+-------------------+
(4 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_array_funcs TEST_ID: A1_B10_C13_D1
#-------------------------------------------------------------------------
SELECT array_append(a_null, 9) AS col
FROM test_array;
+-----------------------+
| col                   |
+-----------------------+
| [null, null, null, 9] |
| [null, null, null, 9] |
| [null, null, null, 9] |
| [null, null, null, 9] |
+-----------------------+
(4 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_array_funcs TEST_ID: A1_B10_C14_D1
#-------------------------------------------------------------------------
SELECT array_append(json_value(a_nested, '$[4]' RETURNING varchar array), 9) AS col
FROM test_array;
+-----------------------+
| col                   |
+-----------------------+
| [null, null, null, 9] |
| [null, null, null, 9] |
| [null, null, null, 9] |
| [null, null, null, 9] |
+-----------------------+
(4 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_array_funcs TEST_ID: A1_B10_C15_D1
#-------------------------------------------------------------------------
SELECT array_append(json_value(a_nested, '$[7][4]' RETURNING varchar array), 9) AS col
FROM test_array;
+-----------------------+
| col                   |
+-----------------------+
| [null, null, null, 9] |
| [null, null, null, 9] |
| [null, null, null, 9] |
| [null, null, null, 9] |
+-----------------------+
(4 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_array_funcs TEST_ID: A1_B10_C16_D1
#-------------------------------------------------------------------------
SELECT array_append(a_empty, 9) AS col
FROM test_array;
+-----+
| col |
+-----+
| [9] |
| [9] |
| [9] |
| [9] |
+-----+
(4 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_array_funcs TEST_ID: A1_B10_C17_D1
#-------------------------------------------------------------------------
SELECT array_append(json_value(a_nested, '$[5]' RETURNING varchar array), 9) AS col
FROM test_array;
+-----+
| col |
+-----+
| [9] |
| [9] |
| [9] |
| [9] |
+-----+
(4 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_array_funcs TEST_ID: A1_B10_C18_D1
#-------------------------------------------------------------------------
SELECT array_append(json_value(a_nested, '$[7][5]' RETURNING varchar array), 9) AS col
FROM test_array;
+-----+
| col |
+-----+
| [9] |
| [9] |
| [9] |
| [9] |
+-----+
(4 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_array_funcs TEST_ID: A1_B10_C19_D1
#-------------------------------------------------------------------------
SELECT array_append(a_mixed, 9) AS col
FROM test_array;
+-----------------------------+
| col                         |
+-----------------------------+
| [null, S1, 0.1, 1, true, 9] |
| [null, S1, 0.1, 1, true, 9] |
| [true, 1, 0.1, S1, null, 9] |
| [true, 1, 0.1, S1, null, 9] |
+-----------------------------+
(4 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_array_funcs TEST_ID: A1_B10_C20_D1
#-------------------------------------------------------------------------
SELECT array_append(json_value(a_nested, '$[6]' RETURNING varchar array), 9) AS col
FROM test_array;
+-----------------------------+
| col                         |
+-----------------------------+
| [null, S1, 0.1, 1, true, 9] |
| [null, S1, 0.1, 1, true, 9] |
| [true, 1, 0.1, S1, null, 9] |
| [true, 1, 0.1, S1, null, 9] |
+-----------------------------+
(4 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_array_funcs TEST_ID: A1_B10_C21_D1
#-------------------------------------------------------------------------
SELECT array_append(json_value(a_nested, '$[7][6]' RETURNING varchar array), 9) AS col
FROM test_array;
+-----------------------------+
| col                         |
+-----------------------------+
| [null, S1, 0.1, 1, true, 9] |
| [null, S1, 0.1, 1, true, 9] |
| [true, 1, 0.1, S1, null, 9] |
| [true, 1, 0.1, S1, null, 9] |
+-----------------------------+
(4 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_array_funcs TEST_ID: A1_B10_C22_D1
#-------------------------------------------------------------------------
SELECT array_append(a_nested, 9) AS col
FROM test_array;
QueryInterruptedException
!error

#-------------------------------------------------------------------------
# TESTCASE: test_array_funcs TEST_ID: A1_B10_C23_D1
#-------------------------------------------------------------------------
SELECT array_append(json_value(a_nested, '$[7]' RETURNING varchar array), 9) AS col
FROM test_array;
+-----+
| col |
+-----+
|     |
|     |
|     |
|     |
+-----+
(4 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_array_funcs TEST_ID: A1_B10_C24_D1
#-------------------------------------------------------------------------
SELECT array_append(json_value(a_nested, '$[7][7]' RETURNING varchar array), 9) AS col
FROM test_array;
+-----+
| col |
+-----+
|     |
|     |
|     |
|     |
+-----+
(4 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_array_funcs TEST_ID: A1_B11_C1_D1
#-------------------------------------------------------------------------
SELECT array_concat(a_bool, a_bool) AS col
FROM test_array;
+--------------------------+
| col                      |
+--------------------------+
| [1, 0, null, 1, 0, null] |
| [1, 0, null, 1, 0, null] |
| [null, 0, 1, null, 0, 1] |
| [null, 0, 1, null, 0, 1] |
+--------------------------+
(4 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_array_funcs TEST_ID: A1_B11_C4_D1
#-------------------------------------------------------------------------
SELECT array_concat(a_int, a_int) AS col
FROM test_array;
+--------------------------+
| col                      |
+--------------------------+
| [1, 2, null, 1, 2, null] |
| [1, 2, null, 1, 2, null] |
| [null, 2, 1, null, 2, 1] |
| [null, 2, 1, null, 2, 1] |
+--------------------------+
(4 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_array_funcs TEST_ID: A1_B11_C5_D1
#-------------------------------------------------------------------------
SELECT array_concat(json_value(a_nested, '$[1]' RETURNING bigint array), json_value(a_nested, '$[1]' RETURNING bigint array)) AS col
FROM test_array;
+--------------------------+
| col                      |
+--------------------------+
| [1, 2, null, 1, 2, null] |
| [1, 2, null, 1, 2, null] |
| [null, 2, 1, null, 2, 1] |
| [null, 2, 1, null, 2, 1] |
+--------------------------+
(4 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_array_funcs TEST_ID: A1_B11_C6_D1
#-------------------------------------------------------------------------
SELECT array_concat(json_value(a_nested, '$[7][1]' RETURNING bigint array), json_value(a_nested, '$[7][1]' RETURNING bigint array)) AS col
FROM test_array;
+--------------------------+
| col                      |
+--------------------------+
| [1, 2, null, 1, 2, null] |
| [1, 2, null, 1, 2, null] |
| [null, 2, 1, null, 2, 1] |
| [null, 2, 1, null, 2, 1] |
+--------------------------+
(4 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_array_funcs TEST_ID: A1_B11_C7_D1
#-------------------------------------------------------------------------
SELECT array_concat(a_float, a_float) AS col
FROM test_array;
+----------------------------------+
| col                              |
+----------------------------------+
| [0.1, 0.2, null, 0.1, 0.2, null] |
| [0.1, 0.2, null, 0.1, 0.2, null] |
| [null, 0.2, 0.1, null, 0.2, 0.1] |
| [null, 0.2, 0.1, null, 0.2, 0.1] |
+----------------------------------+
(4 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_array_funcs TEST_ID: A1_B11_C8_D1
#-------------------------------------------------------------------------
SELECT array_concat(json_value(a_nested, '$[2]' RETURNING decimal array), json_value(a_nested, '$[2]' RETURNING decimal array)) AS col
FROM test_array;
+----------------------------------+
| col                              |
+----------------------------------+
| [0.1, 0.2, null, 0.1, 0.2, null] |
| [0.1, 0.2, null, 0.1, 0.2, null] |
| [null, 0.2, 0.1, null, 0.2, 0.1] |
| [null, 0.2, 0.1, null, 0.2, 0.1] |
+----------------------------------+
(4 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_array_funcs TEST_ID: A1_B11_C9_D1
#-------------------------------------------------------------------------
SELECT array_concat(json_value(a_nested, '$[7][2]' RETURNING decimal array), json_value(a_nested, '$[7][2]' RETURNING decimal array)) AS col
FROM test_array;
+----------------------------------+
| col                              |
+----------------------------------+
| [0.1, 0.2, null, 0.1, 0.2, null] |
| [0.1, 0.2, null, 0.1, 0.2, null] |
| [null, 0.2, 0.1, null, 0.2, 0.1] |
| [null, 0.2, 0.1, null, 0.2, 0.1] |
+----------------------------------+
(4 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_array_funcs TEST_ID: A1_B11_C10_D1
#-------------------------------------------------------------------------
SELECT array_concat(a_str, a_str) AS col
FROM test_array;
+------------------------------+
| col                          |
+------------------------------+
| [S1, S2, null, S1, S2, null] |
| [S1, S2, null, S1, S2, null] |
| [null, S2, S1, null, S2, S1] |
| [null, S2, S1, null, S2, S1] |
+------------------------------+
(4 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_array_funcs TEST_ID: A1_B11_C11_D1
#-------------------------------------------------------------------------
SELECT array_concat(json_value(a_nested, '$[3]' RETURNING varchar array), json_value(a_nested, '$[3]' RETURNING varchar array)) AS col
FROM test_array;
+------------------------------+
| col                          |
+------------------------------+
| [S1, S2, null, S1, S2, null] |
| [S1, S2, null, S1, S2, null] |
| [null, S2, S1, null, S2, S1] |
| [null, S2, S1, null, S2, S1] |
+------------------------------+
(4 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_array_funcs TEST_ID: A1_B11_C12_D1
#-------------------------------------------------------------------------
SELECT array_concat(json_value(a_nested, '$[7][3]' RETURNING varchar array), json_value(a_nested, '$[7][3]' RETURNING varchar array)) AS col
FROM test_array;
+------------------------------+
| col                          |
+------------------------------+
| [S1, S2, null, S1, S2, null] |
| [S1, S2, null, S1, S2, null] |
| [null, S2, S1, null, S2, S1] |
| [null, S2, S1, null, S2, S1] |
+------------------------------+
(4 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_array_funcs TEST_ID: A1_B11_C13_D1
#-------------------------------------------------------------------------
SELECT array_concat(a_null, a_null) AS col
FROM test_array;
+--------------------------------------+
| col                                  |
+--------------------------------------+
| [null, null, null, null, null, null] |
| [null, null, null, null, null, null] |
| [null, null, null, null, null, null] |
| [null, null, null, null, null, null] |
+--------------------------------------+
(4 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_array_funcs TEST_ID: A1_B11_C14_D1
#-------------------------------------------------------------------------
SELECT array_concat(json_value(a_nested, '$[4]' RETURNING varchar array), json_value(a_nested, '$[4]' RETURNING varchar array)) AS col
FROM test_array;
+--------------------------------------+
| col                                  |
+--------------------------------------+
| [null, null, null, null, null, null] |
| [null, null, null, null, null, null] |
| [null, null, null, null, null, null] |
| [null, null, null, null, null, null] |
+--------------------------------------+
(4 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_array_funcs TEST_ID: A1_B11_C15_D1
#-------------------------------------------------------------------------
SELECT array_concat(json_value(a_nested, '$[7][4]' RETURNING varchar array), json_value(a_nested, '$[7][4]' RETURNING varchar array)) AS col
FROM test_array;
+--------------------------------------+
| col                                  |
+--------------------------------------+
| [null, null, null, null, null, null] |
| [null, null, null, null, null, null] |
| [null, null, null, null, null, null] |
| [null, null, null, null, null, null] |
+--------------------------------------+
(4 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_array_funcs TEST_ID: A1_B11_C16_D1
#-------------------------------------------------------------------------
SELECT array_concat(a_empty, a_empty) AS col
FROM test_array;
+-----+
| col |
+-----+
| []  |
| []  |
| []  |
| []  |
+-----+
(4 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_array_funcs TEST_ID: A1_B11_C17_D1
#-------------------------------------------------------------------------
SELECT array_concat(json_value(a_nested, '$[5]' RETURNING varchar array), json_value(a_nested, '$[5]' RETURNING varchar array)) AS col
FROM test_array;
+-----+
| col |
+-----+
| []  |
| []  |
| []  |
| []  |
+-----+
(4 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_array_funcs TEST_ID: A1_B11_C18_D1
#-------------------------------------------------------------------------
SELECT array_concat(json_value(a_nested, '$[7][5]' RETURNING varchar array), json_value(a_nested, '$[7][5]' RETURNING varchar array)) AS col
FROM test_array;
+-----+
| col |
+-----+
| []  |
| []  |
| []  |
| []  |
+-----+
(4 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_array_funcs TEST_ID: A1_B11_C19_D1
#-------------------------------------------------------------------------
SELECT array_concat(a_mixed, a_mixed) AS col
FROM test_array;
+--------------------------------------------------+
| col                                              |
+--------------------------------------------------+
| [null, S1, 0.1, 1, true, null, S1, 0.1, 1, true] |
| [null, S1, 0.1, 1, true, null, S1, 0.1, 1, true] |
| [true, 1, 0.1, S1, null, true, 1, 0.1, S1, null] |
| [true, 1, 0.1, S1, null, true, 1, 0.1, S1, null] |
+--------------------------------------------------+
(4 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_array_funcs TEST_ID: A1_B11_C20_D1
#-------------------------------------------------------------------------
SELECT array_concat(json_value(a_nested, '$[6]' RETURNING varchar array), json_value(a_nested, '$[6]' RETURNING varchar array)) AS col
FROM test_array;
+--------------------------------------------------+
| col                                              |
+--------------------------------------------------+
| [null, S1, 0.1, 1, true, null, S1, 0.1, 1, true] |
| [null, S1, 0.1, 1, true, null, S1, 0.1, 1, true] |
| [true, 1, 0.1, S1, null, true, 1, 0.1, S1, null] |
| [true, 1, 0.1, S1, null, true, 1, 0.1, S1, null] |
+--------------------------------------------------+
(4 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_array_funcs TEST_ID: A1_B11_C21_D1
#-------------------------------------------------------------------------
SELECT array_concat(json_value(a_nested, '$[7][6]' RETURNING varchar array), json_value(a_nested, '$[7][6]' RETURNING varchar array)) AS col
FROM test_array;
+--------------------------------------------------+
| col                                              |
+--------------------------------------------------+
| [null, S1, 0.1, 1, true, null, S1, 0.1, 1, true] |
| [null, S1, 0.1, 1, true, null, S1, 0.1, 1, true] |
| [true, 1, 0.1, S1, null, true, 1, 0.1, S1, null] |
| [true, 1, 0.1, S1, null, true, 1, 0.1, S1, null] |
+--------------------------------------------------+
(4 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_array_funcs TEST_ID: A1_B11_C22_D1
#-------------------------------------------------------------------------
SELECT array_concat(a_nested, a_nested) AS col
FROM test_array;
Cannot apply 'ARRAY_CONCAT' to arguments of type 'ARRAY_CONCAT(
!error

#-------------------------------------------------------------------------
# TESTCASE: test_array_funcs TEST_ID: A1_B11_C23_D1
#-------------------------------------------------------------------------
SELECT array_concat(json_value(a_nested, '$[7]' RETURNING varchar array), json_value(a_nested, '$[7]' RETURNING varchar array)) AS col
FROM test_array;
+-----+
| col |
+-----+
|     |
|     |
|     |
|     |
+-----+
(4 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_array_funcs TEST_ID: A1_B11_C24_D1
#-------------------------------------------------------------------------
SELECT array_concat(json_value(a_nested, '$[7][7]' RETURNING varchar array), json_value(a_nested, '$[7][7]' RETURNING varchar array)) AS col
FROM test_array;
+-----+
| col |
+-----+
|     |
|     |
|     |
|     |
+-----+
(4 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_array_funcs TEST_ID: A1_B12_C1_D1
#-------------------------------------------------------------------------
SELECT array_slice(a_bool, 0, 2) AS col
FROM test_array;
+-----------+
| col       |
+-----------+
| [1, 0]    |
| [1, 0]    |
| [null, 0] |
| [null, 0] |
+-----------+
(4 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_array_funcs TEST_ID: A1_B12_C4_D1
#-------------------------------------------------------------------------
SELECT array_slice(a_int, 0, 2) AS col
FROM test_array;
+-----------+
| col       |
+-----------+
| [1, 2]    |
| [1, 2]    |
| [null, 2] |
| [null, 2] |
+-----------+
(4 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_array_funcs TEST_ID: A1_B12_C5_D1
#-------------------------------------------------------------------------
SELECT array_slice(json_value(a_nested, '$[1]' RETURNING bigint array), 0, 2) AS col
FROM test_array;
+-----------+
| col       |
+-----------+
| [1, 2]    |
| [1, 2]    |
| [null, 2] |
| [null, 2] |
+-----------+
(4 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_array_funcs TEST_ID: A1_B12_C6_D1
#-------------------------------------------------------------------------
SELECT array_slice(json_value(a_nested, '$[7][1]' RETURNING bigint array), 0, 2) AS col
FROM test_array;
+-----------+
| col       |
+-----------+
| [1, 2]    |
| [1, 2]    |
| [null, 2] |
| [null, 2] |
+-----------+
(4 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_array_funcs TEST_ID: A1_B12_C7_D1
#-------------------------------------------------------------------------
SELECT array_slice(a_float, 0, 2) AS col
FROM test_array;
+-------------+
| col         |
+-------------+
| [0.1, 0.2]  |
| [0.1, 0.2]  |
| [null, 0.2] |
| [null, 0.2] |
+-------------+
(4 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_array_funcs TEST_ID: A1_B12_C8_D1
#-------------------------------------------------------------------------
SELECT array_slice(json_value(a_nested, '$[2]' RETURNING decimal array), 0, 2) AS col
FROM test_array;
+-------------+
| col         |
+-------------+
| [0.1, 0.2]  |
| [0.1, 0.2]  |
| [null, 0.2] |
| [null, 0.2] |
+-------------+
(4 rows)

!ok

