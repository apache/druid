!set useApproximateCountDistinct false
!use druidtest://?componentSupplier=AllDruidEnginesComponentSupplier&datasets=sql/src/test/quidem/qatests/qaArray/sql
!set outputformat mysql
#-------------------------------------------------------------------------
# TESTCASE: test_join TEST_ID: A5_B2_C1
#-------------------------------------------------------------------------
SELECT t1.a_int
FROM test_array t1
FULL JOIN test_array t2 ON t1.a_int=t2.a_int;
not support
!error

#-------------------------------------------------------------------------
# TESTCASE: test_join TEST_ID: A5_B2_C3
#-------------------------------------------------------------------------
SELECT a_int
FROM
  (SELECT *
   FROM test_array t1
   FULL JOIN test_array t2 ON t1.a_int=t2.a_int);
not support
!error

#-------------------------------------------------------------------------
# TESTCASE: test_join TEST_ID: A5_B2_C5
#-------------------------------------------------------------------------
WITH t1 AS
  (SELECT *
   FROM test_array)
SELECT t1.a_int
FROM t1
FULL JOIN test_array t2 ON t1.a_int=t2.a_int;
not support
!error

#-------------------------------------------------------------------------
# TESTCASE: test_join TEST_ID: A5_B3_C1
#-------------------------------------------------------------------------
SELECT t1.a_float
FROM test_array t1
FULL JOIN test_array t2 ON t1.a_float=t2.a_float;
not support
!error

#-------------------------------------------------------------------------
# TESTCASE: test_join TEST_ID: A5_B3_C3
#-------------------------------------------------------------------------
SELECT a_float
FROM
  (SELECT *
   FROM test_array t1
   FULL JOIN test_array t2 ON t1.a_float=t2.a_float);
not support
!error

#-------------------------------------------------------------------------
# TESTCASE: test_join TEST_ID: A5_B3_C5
#-------------------------------------------------------------------------
WITH t1 AS
  (SELECT *
   FROM test_array)
SELECT t1.a_float
FROM t1
FULL JOIN test_array t2 ON t1.a_float=t2.a_float;
not support
!error

#-------------------------------------------------------------------------
# TESTCASE: test_join TEST_ID: A5_B4_C1
#-------------------------------------------------------------------------
SELECT t1.a_str
FROM test_array t1
FULL JOIN test_array t2 ON t1.a_str=t2.a_str;
not support
!error

#-------------------------------------------------------------------------
# TESTCASE: test_join TEST_ID: A5_B4_C3
#-------------------------------------------------------------------------
SELECT a_str
FROM
  (SELECT *
   FROM test_array t1
   FULL JOIN test_array t2 ON t1.a_str=t2.a_str);
not support
!error

#-------------------------------------------------------------------------
# TESTCASE: test_join TEST_ID: A5_B4_C5
#-------------------------------------------------------------------------
WITH t1 AS
  (SELECT *
   FROM test_array)
SELECT t1.a_str
FROM t1
FULL JOIN test_array t2 ON t1.a_str=t2.a_str;
not support
!error

#-------------------------------------------------------------------------
# TESTCASE: test_join TEST_ID: A5_B5_C1
#-------------------------------------------------------------------------
SELECT t1.a_null
FROM test_array t1
FULL JOIN test_array t2 ON t1.a_null=t2.a_null;
not support
!error

#-------------------------------------------------------------------------
# TESTCASE: test_join TEST_ID: A5_B5_C3
#-------------------------------------------------------------------------
SELECT a_null
FROM
  (SELECT *
   FROM test_array t1
   FULL JOIN test_array t2 ON t1.a_null=t2.a_null);
not support
!error

#-------------------------------------------------------------------------
# TESTCASE: test_join TEST_ID: A5_B5_C5
#-------------------------------------------------------------------------
WITH t1 AS
  (SELECT *
   FROM test_array)
SELECT t1.a_null
FROM t1
FULL JOIN test_array t2 ON t1.a_null=t2.a_null;
not support
!error

#-------------------------------------------------------------------------
# TESTCASE: test_join TEST_ID: A5_B6_C1
#-------------------------------------------------------------------------
SELECT t1.a_empty
FROM test_array t1
FULL JOIN test_array t2 ON t1.a_empty=t2.a_empty;
not support
!error

#-------------------------------------------------------------------------
# TESTCASE: test_join TEST_ID: A5_B6_C3
#-------------------------------------------------------------------------
SELECT a_empty
FROM
  (SELECT *
   FROM test_array t1
   FULL JOIN test_array t2 ON t1.a_empty=t2.a_empty);
not support
!error

#-------------------------------------------------------------------------
# TESTCASE: test_join TEST_ID: A5_B6_C5
#-------------------------------------------------------------------------
WITH t1 AS
  (SELECT *
   FROM test_array)
SELECT t1.a_empty
FROM t1
FULL JOIN test_array t2 ON t1.a_empty=t2.a_empty;
not support
!error

#-------------------------------------------------------------------------
# TESTCASE: test_join TEST_ID: A5_B7_C1
#-------------------------------------------------------------------------
SELECT t1.a_mixed
FROM test_array t1
FULL JOIN test_array t2 ON t1.a_mixed=t2.a_mixed;
not support
!error

#-------------------------------------------------------------------------
# TESTCASE: test_join TEST_ID: A5_B7_C3
#-------------------------------------------------------------------------
SELECT a_mixed
FROM
  (SELECT *
   FROM test_array t1
   FULL JOIN test_array t2 ON t1.a_mixed=t2.a_mixed);
not support
!error

#-------------------------------------------------------------------------
# TESTCASE: test_join TEST_ID: A5_B7_C5
#-------------------------------------------------------------------------
WITH t1 AS
  (SELECT *
   FROM test_array)
SELECT t1.a_mixed
FROM t1
FULL JOIN test_array t2 ON t1.a_mixed=t2.a_mixed;
not support
!error

#-------------------------------------------------------------------------
# TESTCASE: test_join TEST_ID: A5_B8_C1
#-------------------------------------------------------------------------
SELECT t1.a_nested
FROM test_array t1
FULL JOIN test_array t2 ON t1.a_nested=t2.a_nested;
DruidException
!error

#-------------------------------------------------------------------------
# TESTCASE: test_join TEST_ID: A5_B8_C3
#-------------------------------------------------------------------------
SELECT a_nested
FROM
  (SELECT *
   FROM test_array t1
   FULL JOIN test_array t2 ON t1.a_nested=t2.a_nested);
DruidException
!error

#-------------------------------------------------------------------------
# TESTCASE: test_join TEST_ID: A5_B8_C5
#-------------------------------------------------------------------------
WITH t1 AS
  (SELECT *
   FROM test_array)
SELECT t1.a_nested
FROM t1
FULL JOIN test_array t2 ON t1.a_nested=t2.a_nested;
DruidException
!error

#-------------------------------------------------------------------------
# TESTCASE: test_join TEST_ID: A6_B1_C1
#-------------------------------------------------------------------------
SELECT t1.a_bool
FROM test_array t1,
     test_array t2
WHERE t1.a_bool=t2.a_bool;
not support
!error

#-------------------------------------------------------------------------
# TESTCASE: test_join TEST_ID: A6_B1_C3
#-------------------------------------------------------------------------
SELECT a_bool
FROM
  (SELECT *
   FROM test_array t1,
        test_array t2
   WHERE t1.a_bool=t2.a_bool);
not support
!error

#-------------------------------------------------------------------------
# TESTCASE: test_join TEST_ID: A6_B1_C5
#-------------------------------------------------------------------------
WITH t1 AS
  (SELECT *
   FROM test_array)
SELECT t1.a_bool
FROM t1,
     test_array t2
WHERE t1.a_bool=t2.a_bool;
not support
!error

#-------------------------------------------------------------------------
# TESTCASE: test_join TEST_ID: A6_B2_C1
#-------------------------------------------------------------------------
SELECT t1.a_int
FROM test_array t1,
     test_array t2
WHERE t1.a_int=t2.a_int;
not support
!error

#-------------------------------------------------------------------------
# TESTCASE: test_join TEST_ID: A6_B2_C3
#-------------------------------------------------------------------------
SELECT a_int
FROM
  (SELECT *
   FROM test_array t1,
        test_array t2
   WHERE t1.a_int=t2.a_int);
not support
!error

#-------------------------------------------------------------------------
# TESTCASE: test_join TEST_ID: A6_B2_C5
#-------------------------------------------------------------------------
WITH t1 AS
  (SELECT *
   FROM test_array)
SELECT t1.a_int
FROM t1,
     test_array t2
WHERE t1.a_int=t2.a_int;
not support
!error

#-------------------------------------------------------------------------
# TESTCASE: test_join TEST_ID: A6_B3_C1
#-------------------------------------------------------------------------
SELECT t1.a_float
FROM test_array t1,
     test_array t2
WHERE t1.a_float=t2.a_float;
not support
!error

#-------------------------------------------------------------------------
# TESTCASE: test_join TEST_ID: A6_B3_C3
#-------------------------------------------------------------------------
SELECT a_float
FROM
  (SELECT *
   FROM test_array t1,
        test_array t2
   WHERE t1.a_float=t2.a_float);
not support
!error

#-------------------------------------------------------------------------
# TESTCASE: test_join TEST_ID: A6_B3_C5
#-------------------------------------------------------------------------
WITH t1 AS
  (SELECT *
   FROM test_array)
SELECT t1.a_float
FROM t1,
     test_array t2
WHERE t1.a_float=t2.a_float;
not support
!error

#-------------------------------------------------------------------------
# TESTCASE: test_join TEST_ID: A6_B4_C1
#-------------------------------------------------------------------------
SELECT t1.a_str
FROM test_array t1,
     test_array t2
WHERE t1.a_str=t2.a_str;
not support
!error

#-------------------------------------------------------------------------
# TESTCASE: test_join TEST_ID: A6_B4_C3
#-------------------------------------------------------------------------
SELECT a_str
FROM
  (SELECT *
   FROM test_array t1,
        test_array t2
   WHERE t1.a_str=t2.a_str);
not support
!error

#-------------------------------------------------------------------------
# TESTCASE: test_join TEST_ID: A6_B4_C5
#-------------------------------------------------------------------------
WITH t1 AS
  (SELECT *
   FROM test_array)
SELECT t1.a_str
FROM t1,
     test_array t2
WHERE t1.a_str=t2.a_str;
not support
!error

#-------------------------------------------------------------------------
# TESTCASE: test_join TEST_ID: A6_B5_C1
#-------------------------------------------------------------------------
SELECT t1.a_null
FROM test_array t1,
     test_array t2
WHERE t1.a_null=t2.a_null;
not support
!error

#-------------------------------------------------------------------------
# TESTCASE: test_join TEST_ID: A6_B5_C3
#-------------------------------------------------------------------------
SELECT a_null
FROM
  (SELECT *
   FROM test_array t1,
        test_array t2
   WHERE t1.a_null=t2.a_null);
not support
!error

#-------------------------------------------------------------------------
# TESTCASE: test_join TEST_ID: A6_B5_C5
#-------------------------------------------------------------------------
WITH t1 AS
  (SELECT *
   FROM test_array)
SELECT t1.a_null
FROM t1,
     test_array t2
WHERE t1.a_null=t2.a_null;
not support
!error

#-------------------------------------------------------------------------
# TESTCASE: test_join TEST_ID: A6_B6_C1
#-------------------------------------------------------------------------
SELECT t1.a_empty
FROM test_array t1,
     test_array t2
WHERE t1.a_empty=t2.a_empty;
not support
!error

#-------------------------------------------------------------------------
# TESTCASE: test_join TEST_ID: A6_B6_C3
#-------------------------------------------------------------------------
SELECT a_empty
FROM
  (SELECT *
   FROM test_array t1,
        test_array t2
   WHERE t1.a_empty=t2.a_empty);
not support
!error

#-------------------------------------------------------------------------
# TESTCASE: test_join TEST_ID: A6_B6_C5
#-------------------------------------------------------------------------
WITH t1 AS
  (SELECT *
   FROM test_array)
SELECT t1.a_empty
FROM t1,
     test_array t2
WHERE t1.a_empty=t2.a_empty;
not support
!error

#-------------------------------------------------------------------------
# TESTCASE: test_join TEST_ID: A6_B7_C1
#-------------------------------------------------------------------------
SELECT t1.a_mixed
FROM test_array t1,
     test_array t2
WHERE t1.a_mixed=t2.a_mixed;
not support
!error

#-------------------------------------------------------------------------
# TESTCASE: test_join TEST_ID: A6_B7_C3
#-------------------------------------------------------------------------
SELECT a_mixed
FROM
  (SELECT *
   FROM test_array t1,
        test_array t2
   WHERE t1.a_mixed=t2.a_mixed);
not support
!error

#-------------------------------------------------------------------------
# TESTCASE: test_join TEST_ID: A6_B7_C5
#-------------------------------------------------------------------------
WITH t1 AS
  (SELECT *
   FROM test_array)
SELECT t1.a_mixed
FROM t1,
     test_array t2
WHERE t1.a_mixed=t2.a_mixed;
not support
!error

#-------------------------------------------------------------------------
# TESTCASE: test_join TEST_ID: A6_B8_C1
#-------------------------------------------------------------------------
SELECT t1.a_nested
FROM test_array t1,
     test_array t2
WHERE t1.a_nested=t2.a_nested;
DruidException
!error

#-------------------------------------------------------------------------
# TESTCASE: test_join TEST_ID: A6_B8_C3
#-------------------------------------------------------------------------
SELECT a_nested
FROM
  (SELECT *
   FROM test_array t1,
        test_array t2
   WHERE t1.a_nested=t2.a_nested);
DruidException
!error

#-------------------------------------------------------------------------
# TESTCASE: test_join TEST_ID: A6_B8_C5
#-------------------------------------------------------------------------
WITH t1 AS
  (SELECT *
   FROM test_array)
SELECT t1.a_nested
FROM t1,
     test_array t2
WHERE t1.a_nested=t2.a_nested;
DruidException
!error

#-------------------------------------------------------------------------
# TESTCASE: test_join TEST_ID: A7_B1_C1
#-------------------------------------------------------------------------
SELECT t1.a_bool
FROM test_array t1
CROSS JOIN test_array t2;
+--------------+
| a_bool       |
+--------------+
| [1, 0, null] |
| [1, 0, null] |
| [1, 0, null] |
| [1, 0, null] |
| [1, 0, null] |
| [1, 0, null] |
| [1, 0, null] |
| [1, 0, null] |
| [null, 0, 1] |
| [null, 0, 1] |
| [null, 0, 1] |
| [null, 0, 1] |
| [null, 0, 1] |
| [null, 0, 1] |
| [null, 0, 1] |
| [null, 0, 1] |
+--------------+
(16 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_join TEST_ID: A7_B1_C3
#-------------------------------------------------------------------------
SELECT a_bool
FROM
  (SELECT *
   FROM test_array t1
   CROSS JOIN test_array t2);
+--------------+
| a_bool       |
+--------------+
| [1, 0, null] |
| [1, 0, null] |
| [1, 0, null] |
| [1, 0, null] |
| [1, 0, null] |
| [1, 0, null] |
| [1, 0, null] |
| [1, 0, null] |
| [null, 0, 1] |
| [null, 0, 1] |
| [null, 0, 1] |
| [null, 0, 1] |
| [null, 0, 1] |
| [null, 0, 1] |
| [null, 0, 1] |
| [null, 0, 1] |
+--------------+
(16 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_join TEST_ID: A7_B1_C5
#-------------------------------------------------------------------------
WITH t1 AS
  (SELECT *
   FROM test_array)
SELECT t1.a_bool
FROM t1
CROSS JOIN test_array t2;
+--------------+
| a_bool       |
+--------------+
| [1, 0, null] |
| [1, 0, null] |
| [1, 0, null] |
| [1, 0, null] |
| [1, 0, null] |
| [1, 0, null] |
| [1, 0, null] |
| [1, 0, null] |
| [null, 0, 1] |
| [null, 0, 1] |
| [null, 0, 1] |
| [null, 0, 1] |
| [null, 0, 1] |
| [null, 0, 1] |
| [null, 0, 1] |
| [null, 0, 1] |
+--------------+
(16 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_join TEST_ID: A7_B2_C1
#-------------------------------------------------------------------------
SELECT t1.a_int
FROM test_array t1
CROSS JOIN test_array t2;
+--------------+
| a_int        |
+--------------+
| [1, 2, null] |
| [1, 2, null] |
| [1, 2, null] |
| [1, 2, null] |
| [1, 2, null] |
| [1, 2, null] |
| [1, 2, null] |
| [1, 2, null] |
| [null, 2, 1] |
| [null, 2, 1] |
| [null, 2, 1] |
| [null, 2, 1] |
| [null, 2, 1] |
| [null, 2, 1] |
| [null, 2, 1] |
| [null, 2, 1] |
+--------------+
(16 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_join TEST_ID: A7_B2_C3
#-------------------------------------------------------------------------
SELECT a_int
FROM
  (SELECT *
   FROM test_array t1
   CROSS JOIN test_array t2);
+--------------+
| a_int        |
+--------------+
| [1, 2, null] |
| [1, 2, null] |
| [1, 2, null] |
| [1, 2, null] |
| [1, 2, null] |
| [1, 2, null] |
| [1, 2, null] |
| [1, 2, null] |
| [null, 2, 1] |
| [null, 2, 1] |
| [null, 2, 1] |
| [null, 2, 1] |
| [null, 2, 1] |
| [null, 2, 1] |
| [null, 2, 1] |
| [null, 2, 1] |
+--------------+
(16 rows)

!ok

