!set useApproximateCountDistinct false
!use druidtest://?componentSupplier=DartComponentSupplier&datasets=sql/src/test/quidem/qatests/qaArray/ops_funcs
!set outputformat mysql
#-------------------------------------------------------------------------
# TESTCASE: test_mv_funcs TEST_ID: A1_B11_C10_D1
#-------------------------------------------------------------------------
SELECT mv_append(a_str, 'A') AS col
FROM test_array;
+----------------------+
| col                  |
+----------------------+
| ["S1","S2",null,"A"] |
| ["S1","S2",null,"A"] |
| [null,"S2","S1","A"] |
| [null,"S2","S1","A"] |
+----------------------+
(4 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_mv_funcs TEST_ID: A1_B11_C11_D1
#-------------------------------------------------------------------------
SELECT mv_append(json_value(a_nested, '$[3]' RETURNING varchar array), 'A') AS col
FROM test_array;
+----------------------+
| col                  |
+----------------------+
| ["S1","S2",null,"A"] |
| ["S1","S2",null,"A"] |
| [null,"S2","S1","A"] |
| [null,"S2","S1","A"] |
+----------------------+
(4 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_mv_funcs TEST_ID: A1_B11_C12_D1
#-------------------------------------------------------------------------
SELECT mv_append(json_value(a_nested, '$[7][3]' RETURNING varchar array), 'A') AS col
FROM test_array;
+----------------------+
| col                  |
+----------------------+
| ["S1","S2",null,"A"] |
| ["S1","S2",null,"A"] |
| [null,"S2","S1","A"] |
| [null,"S2","S1","A"] |
+----------------------+
(4 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_mv_funcs TEST_ID: A1_B11_C13_D1
#-------------------------------------------------------------------------
SELECT mv_append(a_null, 'A') AS col
FROM test_array;
+-----------------------+
| col                   |
+-----------------------+
| [null,null,null,null] |
| [null,null,null,null] |
| [null,null,null,null] |
| [null,null,null,null] |
+-----------------------+
(4 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_mv_funcs TEST_ID: A1_B11_C14_D1
#-------------------------------------------------------------------------
SELECT mv_append(json_value(a_nested, '$[4]' RETURNING varchar array), 'A') AS col
FROM test_array;
+----------------------+
| col                  |
+----------------------+
| [null,null,null,"A"] |
| [null,null,null,"A"] |
| [null,null,null,"A"] |
| [null,null,null,"A"] |
+----------------------+
(4 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_mv_funcs TEST_ID: A1_B11_C15_D1
#-------------------------------------------------------------------------
SELECT mv_append(json_value(a_nested, '$[7][4]' RETURNING varchar array), 'A') AS col
FROM test_array;
+----------------------+
| col                  |
+----------------------+
| [null,null,null,"A"] |
| [null,null,null,"A"] |
| [null,null,null,"A"] |
| [null,null,null,"A"] |
+----------------------+
(4 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_mv_funcs TEST_ID: A1_B11_C16_D1
#-------------------------------------------------------------------------
SELECT mv_append(a_empty, 'A') AS col
FROM test_array;
+-----+
| col |
+-----+
|     |
|     |
|     |
|     |
+-----+
(4 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_mv_funcs TEST_ID: A1_B11_C17_D1
#-------------------------------------------------------------------------
SELECT mv_append(json_value(a_nested, '$[5]' RETURNING varchar array), 'A') AS col
FROM test_array;
+-----+
| col |
+-----+
| A   |
| A   |
| A   |
| A   |
+-----+
(4 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_mv_funcs TEST_ID: A1_B11_C18_D1
#-------------------------------------------------------------------------
SELECT mv_append(json_value(a_nested, '$[7][5]' RETURNING varchar array), 'A') AS col
FROM test_array;
+-----+
| col |
+-----+
| A   |
| A   |
| A   |
| A   |
+-----+
(4 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_mv_funcs TEST_ID: A1_B11_C19_D1
#-------------------------------------------------------------------------
SELECT mv_append(a_mixed, 'A') AS col
FROM test_array;
+----------------------------------+
| col                              |
+----------------------------------+
| ["true","1","0.1","S1",null,"A"] |
| ["true","1","0.1","S1",null,"A"] |
| [null,"S1","0.1","1","true","A"] |
| [null,"S1","0.1","1","true","A"] |
+----------------------------------+
(4 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_mv_funcs TEST_ID: A1_B11_C20_D1
#-------------------------------------------------------------------------
SELECT mv_append(json_value(a_nested, '$[6]' RETURNING varchar array), 'A') AS col
FROM test_array;
+----------------------------------+
| col                              |
+----------------------------------+
| ["true","1","0.1","S1",null,"A"] |
| ["true","1","0.1","S1",null,"A"] |
| [null,"S1","0.1","1","true","A"] |
| [null,"S1","0.1","1","true","A"] |
+----------------------------------+
(4 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_mv_funcs TEST_ID: A1_B11_C21_D1
#-------------------------------------------------------------------------
SELECT mv_append(json_value(a_nested, '$[7][6]' RETURNING varchar array), 'A') AS col
FROM test_array;
+----------------------------------+
| col                              |
+----------------------------------+
| ["true","1","0.1","S1",null,"A"] |
| ["true","1","0.1","S1",null,"A"] |
| [null,"S1","0.1","1","true","A"] |
| [null,"S1","0.1","1","true","A"] |
+----------------------------------+
(4 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_mv_funcs TEST_ID: A1_B11_C22_D1
#-------------------------------------------------------------------------
SELECT mv_append(a_nested, 'A') AS col
FROM test_array;
Cannot apply 'MV_APPEND' to arguments of type 'MV_APPEND(
!error

#-------------------------------------------------------------------------
# TESTCASE: test_mv_funcs TEST_ID: A1_B11_C23_D1
#-------------------------------------------------------------------------
SELECT mv_append(json_value(a_nested, '$[7]' RETURNING varchar array), 'A') AS col
FROM test_array;
+-----+
| col |
+-----+
|     |
|     |
|     |
|     |
+-----+
(4 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_mv_funcs TEST_ID: A1_B11_C24_D1
#-------------------------------------------------------------------------
SELECT mv_append(json_value(a_nested, '$[7][7]' RETURNING varchar array), 'A') AS col
FROM test_array;
+-----+
| col |
+-----+
|     |
|     |
|     |
|     |
+-----+
(4 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_mv_funcs TEST_ID: A1_B12_C1_D1
#-------------------------------------------------------------------------
SELECT mv_concat(a_bool, a_bool) AS col
FROM test_array;
+-----------------------------+
| col                         |
+-----------------------------+
| ["1","0",null,"1","0",null] |
| ["1","0",null,"1","0",null] |
| [null,"0","1",null,"0","1"] |
| [null,"0","1",null,"0","1"] |
+-----------------------------+
(4 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_mv_funcs TEST_ID: A1_B12_C2_D1
#-------------------------------------------------------------------------
SELECT mv_concat(json_value(a_nested, '$[0]' RETURNING boolean array), json_value(a_nested, '$[0]' RETURNING boolean array)) AS col
FROM test_array;
+-----------------------------+
| col                         |
+-----------------------------+
| ["1","0",null,"1","0",null] |
| ["1","0",null,"1","0",null] |
| [null,"0","1",null,"0","1"] |
| [null,"0","1",null,"0","1"] |
+-----------------------------+
(4 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_mv_funcs TEST_ID: A1_B12_C3_D1
#-------------------------------------------------------------------------
SELECT mv_concat(json_value(a_nested, '$[7][0]' RETURNING boolean array), json_value(a_nested, '$[7][0]' RETURNING boolean array)) AS col
FROM test_array;
+-----------------------------+
| col                         |
+-----------------------------+
| ["1","0",null,"1","0",null] |
| ["1","0",null,"1","0",null] |
| [null,"0","1",null,"0","1"] |
| [null,"0","1",null,"0","1"] |
+-----------------------------+
(4 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_mv_funcs TEST_ID: A1_B12_C4_D1
#-------------------------------------------------------------------------
SELECT mv_concat(a_int, a_int) AS col
FROM test_array;
+-----------------------------+
| col                         |
+-----------------------------+
| ["1","2",null,"1","2",null] |
| ["1","2",null,"1","2",null] |
| [null,"2","1",null,"2","1"] |
| [null,"2","1",null,"2","1"] |
+-----------------------------+
(4 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_mv_funcs TEST_ID: A1_B12_C5_D1
#-------------------------------------------------------------------------
SELECT mv_concat(json_value(a_nested, '$[1]' RETURNING bigint array), json_value(a_nested, '$[1]' RETURNING bigint array)) AS col
FROM test_array;
+-----------------------------+
| col                         |
+-----------------------------+
| ["1","2",null,"1","2",null] |
| ["1","2",null,"1","2",null] |
| [null,"2","1",null,"2","1"] |
| [null,"2","1",null,"2","1"] |
+-----------------------------+
(4 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_mv_funcs TEST_ID: A1_B12_C6_D1
#-------------------------------------------------------------------------
SELECT mv_concat(json_value(a_nested, '$[7][1]' RETURNING bigint array), json_value(a_nested, '$[7][1]' RETURNING bigint array)) AS col
FROM test_array;
+-----------------------------+
| col                         |
+-----------------------------+
| ["1","2",null,"1","2",null] |
| ["1","2",null,"1","2",null] |
| [null,"2","1",null,"2","1"] |
| [null,"2","1",null,"2","1"] |
+-----------------------------+
(4 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_mv_funcs TEST_ID: A1_B12_C7_D1
#-------------------------------------------------------------------------
SELECT mv_concat(a_float, a_float) AS col
FROM test_array;
+-------------------------------------+
| col                                 |
+-------------------------------------+
| ["0.1","0.2",null,"0.1","0.2",null] |
| ["0.1","0.2",null,"0.1","0.2",null] |
| [null,"0.2","0.1",null,"0.2","0.1"] |
| [null,"0.2","0.1",null,"0.2","0.1"] |
+-------------------------------------+
(4 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_mv_funcs TEST_ID: A1_B12_C8_D1
#-------------------------------------------------------------------------
SELECT mv_concat(json_value(a_nested, '$[2]' RETURNING decimal array), json_value(a_nested, '$[2]' RETURNING decimal array)) AS col
FROM test_array;
+-------------------------------------+
| col                                 |
+-------------------------------------+
| ["0.1","0.2",null,"0.1","0.2",null] |
| ["0.1","0.2",null,"0.1","0.2",null] |
| [null,"0.2","0.1",null,"0.2","0.1"] |
| [null,"0.2","0.1",null,"0.2","0.1"] |
+-------------------------------------+
(4 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_mv_funcs TEST_ID: A1_B12_C9_D1
#-------------------------------------------------------------------------
SELECT mv_concat(json_value(a_nested, '$[7][2]' RETURNING decimal array), json_value(a_nested, '$[7][2]' RETURNING decimal array)) AS col
FROM test_array;
+-------------------------------------+
| col                                 |
+-------------------------------------+
| ["0.1","0.2",null,"0.1","0.2",null] |
| ["0.1","0.2",null,"0.1","0.2",null] |
| [null,"0.2","0.1",null,"0.2","0.1"] |
| [null,"0.2","0.1",null,"0.2","0.1"] |
+-------------------------------------+
(4 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_mv_funcs TEST_ID: A1_B12_C10_D1
#-------------------------------------------------------------------------
SELECT mv_concat(a_str, a_str) AS col
FROM test_array;
+---------------------------------+
| col                             |
+---------------------------------+
| ["S1","S2",null,"S1","S2",null] |
| ["S1","S2",null,"S1","S2",null] |
| [null,"S2","S1",null,"S2","S1"] |
| [null,"S2","S1",null,"S2","S1"] |
+---------------------------------+
(4 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_mv_funcs TEST_ID: A1_B12_C11_D1
#-------------------------------------------------------------------------
SELECT mv_concat(json_value(a_nested, '$[3]' RETURNING varchar array), json_value(a_nested, '$[3]' RETURNING varchar array)) AS col
FROM test_array;
+---------------------------------+
| col                             |
+---------------------------------+
| ["S1","S2",null,"S1","S2",null] |
| ["S1","S2",null,"S1","S2",null] |
| [null,"S2","S1",null,"S2","S1"] |
| [null,"S2","S1",null,"S2","S1"] |
+---------------------------------+
(4 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_mv_funcs TEST_ID: A1_B12_C12_D1
#-------------------------------------------------------------------------
SELECT mv_concat(json_value(a_nested, '$[7][3]' RETURNING varchar array), json_value(a_nested, '$[7][3]' RETURNING varchar array)) AS col
FROM test_array;
+---------------------------------+
| col                             |
+---------------------------------+
| ["S1","S2",null,"S1","S2",null] |
| ["S1","S2",null,"S1","S2",null] |
| [null,"S2","S1",null,"S2","S1"] |
| [null,"S2","S1",null,"S2","S1"] |
+---------------------------------+
(4 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_mv_funcs TEST_ID: A1_B12_C13_D1
#-------------------------------------------------------------------------
SELECT mv_concat(a_null, a_null) AS col
FROM test_array;
+---------------------------------+
| col                             |
+---------------------------------+
| [null,null,null,null,null,null] |
| [null,null,null,null,null,null] |
| [null,null,null,null,null,null] |
| [null,null,null,null,null,null] |
+---------------------------------+
(4 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_mv_funcs TEST_ID: A1_B12_C14_D1
#-------------------------------------------------------------------------
SELECT mv_concat(json_value(a_nested, '$[4]' RETURNING varchar array), json_value(a_nested, '$[4]' RETURNING varchar array)) AS col
FROM test_array;
+---------------------------------+
| col                             |
+---------------------------------+
| [null,null,null,null,null,null] |
| [null,null,null,null,null,null] |
| [null,null,null,null,null,null] |
| [null,null,null,null,null,null] |
+---------------------------------+
(4 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_mv_funcs TEST_ID: A1_B12_C15_D1
#-------------------------------------------------------------------------
SELECT mv_concat(json_value(a_nested, '$[7][4]' RETURNING varchar array), json_value(a_nested, '$[7][4]' RETURNING varchar array)) AS col
FROM test_array;
+---------------------------------+
| col                             |
+---------------------------------+
| [null,null,null,null,null,null] |
| [null,null,null,null,null,null] |
| [null,null,null,null,null,null] |
| [null,null,null,null,null,null] |
+---------------------------------+
(4 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_mv_funcs TEST_ID: A1_B12_C16_D1
#-------------------------------------------------------------------------
SELECT mv_concat(a_empty, a_empty) AS col
FROM test_array;
+-----+
| col |
+-----+
|     |
|     |
|     |
|     |
+-----+
(4 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_mv_funcs TEST_ID: A1_B12_C17_D1
#-------------------------------------------------------------------------
SELECT mv_concat(json_value(a_nested, '$[5]' RETURNING varchar array), json_value(a_nested, '$[5]' RETURNING varchar array)) AS col
FROM test_array;
+-----+
| col |
+-----+
|     |
|     |
|     |
|     |
+-----+
(4 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_mv_funcs TEST_ID: A1_B12_C18_D1
#-------------------------------------------------------------------------
SELECT mv_concat(json_value(a_nested, '$[7][5]' RETURNING varchar array), json_value(a_nested, '$[7][5]' RETURNING varchar array)) AS col
FROM test_array;
+-----+
| col |
+-----+
|     |
|     |
|     |
|     |
+-----+
(4 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_mv_funcs TEST_ID: A1_B12_C19_D1
#-------------------------------------------------------------------------
SELECT mv_concat(a_mixed, a_mixed) AS col
FROM test_array;
+---------------------------------------------------------+
| col                                                     |
+---------------------------------------------------------+
| ["true","1","0.1","S1",null,"true","1","0.1","S1",null] |
| ["true","1","0.1","S1",null,"true","1","0.1","S1",null] |
| [null,"S1","0.1","1","true",null,"S1","0.1","1","true"] |
| [null,"S1","0.1","1","true",null,"S1","0.1","1","true"] |
+---------------------------------------------------------+
(4 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_mv_funcs TEST_ID: A1_B12_C20_D1
#-------------------------------------------------------------------------
SELECT mv_concat(json_value(a_nested, '$[6]' RETURNING varchar array), json_value(a_nested, '$[6]' RETURNING varchar array)) AS col
FROM test_array;
+---------------------------------------------------------+
| col                                                     |
+---------------------------------------------------------+
| ["true","1","0.1","S1",null,"true","1","0.1","S1",null] |
| ["true","1","0.1","S1",null,"true","1","0.1","S1",null] |
| [null,"S1","0.1","1","true",null,"S1","0.1","1","true"] |
| [null,"S1","0.1","1","true",null,"S1","0.1","1","true"] |
+---------------------------------------------------------+
(4 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_mv_funcs TEST_ID: A1_B12_C21_D1
#-------------------------------------------------------------------------
SELECT mv_concat(json_value(a_nested, '$[7][6]' RETURNING varchar array), json_value(a_nested, '$[7][6]' RETURNING varchar array)) AS col
FROM test_array;
+---------------------------------------------------------+
| col                                                     |
+---------------------------------------------------------+
| ["true","1","0.1","S1",null,"true","1","0.1","S1",null] |
| ["true","1","0.1","S1",null,"true","1","0.1","S1",null] |
| [null,"S1","0.1","1","true",null,"S1","0.1","1","true"] |
| [null,"S1","0.1","1","true",null,"S1","0.1","1","true"] |
+---------------------------------------------------------+
(4 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_mv_funcs TEST_ID: A1_B12_C22_D1
#-------------------------------------------------------------------------
SELECT mv_concat(a_nested, a_nested) AS col
FROM test_array;
Cannot apply 'MV_CONCAT' to arguments of type 'MV_CONCAT(
!error

#-------------------------------------------------------------------------
# TESTCASE: test_mv_funcs TEST_ID: A1_B12_C23_D1
#-------------------------------------------------------------------------
SELECT mv_concat(json_value(a_nested, '$[7]' RETURNING varchar array), json_value(a_nested, '$[7]' RETURNING varchar array)) AS col
FROM test_array;
+-----+
| col |
+-----+
|     |
|     |
|     |
|     |
+-----+
(4 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_mv_funcs TEST_ID: A1_B12_C24_D1
#-------------------------------------------------------------------------
SELECT mv_concat(json_value(a_nested, '$[7][7]' RETURNING varchar array), json_value(a_nested, '$[7][7]' RETURNING varchar array)) AS col
FROM test_array;
+-----+
| col |
+-----+
|     |
|     |
|     |
|     |
+-----+
(4 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_mv_funcs TEST_ID: A1_B13_C1_D1
#-------------------------------------------------------------------------
SELECT mv_slice(a_bool, 0, 2) AS col
FROM test_array;
+------------+
| col        |
+------------+
| ["1","0"]  |
| ["1","0"]  |
| [null,"0"] |
| [null,"0"] |
+------------+
(4 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_mv_funcs TEST_ID: A1_B13_C2_D1
#-------------------------------------------------------------------------
SELECT mv_slice(json_value(a_nested, '$[0]' RETURNING boolean array), 0, 2) AS col
FROM test_array;
+------------+
| col        |
+------------+
| ["1","0"]  |
| ["1","0"]  |
| [null,"0"] |
| [null,"0"] |
+------------+
(4 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_mv_funcs TEST_ID: A1_B13_C3_D1
#-------------------------------------------------------------------------
SELECT mv_slice(json_value(a_nested, '$[7][0]' RETURNING boolean array), 0, 2) AS col
FROM test_array;
+------------+
| col        |
+------------+
| ["1","0"]  |
| ["1","0"]  |
| [null,"0"] |
| [null,"0"] |
+------------+
(4 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_mv_funcs TEST_ID: A1_B13_C4_D1
#-------------------------------------------------------------------------
SELECT mv_slice(a_int, 0, 2) AS col
FROM test_array;
+------------+
| col        |
+------------+
| ["1","2"]  |
| ["1","2"]  |
| [null,"2"] |
| [null,"2"] |
+------------+
(4 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_mv_funcs TEST_ID: A1_B13_C5_D1
#-------------------------------------------------------------------------
SELECT mv_slice(json_value(a_nested, '$[1]' RETURNING bigint array), 0, 2) AS col
FROM test_array;
+------------+
| col        |
+------------+
| ["1","2"]  |
| ["1","2"]  |
| [null,"2"] |
| [null,"2"] |
+------------+
(4 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_mv_funcs TEST_ID: A1_B13_C6_D1
#-------------------------------------------------------------------------
SELECT mv_slice(json_value(a_nested, '$[7][1]' RETURNING bigint array), 0, 2) AS col
FROM test_array;
+------------+
| col        |
+------------+
| ["1","2"]  |
| ["1","2"]  |
| [null,"2"] |
| [null,"2"] |
+------------+
(4 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_mv_funcs TEST_ID: A1_B13_C7_D1
#-------------------------------------------------------------------------
SELECT mv_slice(a_float, 0, 2) AS col
FROM test_array;
+---------------+
| col           |
+---------------+
| ["0.1","0.2"] |
| ["0.1","0.2"] |
| [null,"0.2"]  |
| [null,"0.2"]  |
+---------------+
(4 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_mv_funcs TEST_ID: A1_B13_C8_D1
#-------------------------------------------------------------------------
SELECT mv_slice(json_value(a_nested, '$[2]' RETURNING decimal array), 0, 2) AS col
FROM test_array;
+---------------+
| col           |
+---------------+
| ["0.1","0.2"] |
| ["0.1","0.2"] |
| [null,"0.2"]  |
| [null,"0.2"]  |
+---------------+
(4 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_mv_funcs TEST_ID: A1_B13_C9_D1
#-------------------------------------------------------------------------
SELECT mv_slice(json_value(a_nested, '$[7][2]' RETURNING decimal array), 0, 2) AS col
FROM test_array;
+---------------+
| col           |
+---------------+
| ["0.1","0.2"] |
| ["0.1","0.2"] |
| [null,"0.2"]  |
| [null,"0.2"]  |
+---------------+
(4 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_mv_funcs TEST_ID: A1_B13_C10_D1
#-------------------------------------------------------------------------
SELECT mv_slice(a_str, 0, 2) AS col
FROM test_array;
+-------------+
| col         |
+-------------+
| ["S1","S2"] |
| ["S1","S2"] |
| [null,"S2"] |
| [null,"S2"] |
+-------------+
(4 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_mv_funcs TEST_ID: A1_B13_C11_D1
#-------------------------------------------------------------------------
SELECT mv_slice(json_value(a_nested, '$[3]' RETURNING varchar array), 0, 2) AS col
FROM test_array;
+-------------+
| col         |
+-------------+
| ["S1","S2"] |
| ["S1","S2"] |
| [null,"S2"] |
| [null,"S2"] |
+-------------+
(4 rows)

!ok

