!set dartQueryId 00000000-0000-0000-0000-000000000000
!set useApproximateCountDistinct false
!use druidtest://?componentSupplier=StandardAndMSQComponentSupplier&datasets=sql/src/test/quidem/qatests/qaArray/ops_funcs
!set outputformat mysql
#-------------------------------------------------------------------------
# TESTCASE: test_json_funcs TEST_ID: SEL_DATASOURCE
#-------------------------------------------------------------------------
SELECT count(*) cnt
FROM test_array;
+-----+
| cnt |
+-----+
|   4 |
+-----+
(1 row)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_json_funcs TEST_ID: A1_B1_C1_D1
#-------------------------------------------------------------------------
SELECT json_keys(a_bool, '$.') AS col
FROM test_array;
+-----------+
| col       |
+-----------+
| [0, 1, 2] |
| [0, 1, 2] |
| [0, 1, 2] |
| [0, 1, 2] |
+-----------+
(4 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_json_funcs TEST_ID: A1_B1_C2_D1
#-------------------------------------------------------------------------
SELECT json_keys(json_value(a_nested, '$[0]' RETURNING boolean array), '$.') AS col
FROM test_array;
+-----------+
| col       |
+-----------+
| [0, 1, 2] |
| [0, 1, 2] |
| [0, 1, 2] |
| [0, 1, 2] |
+-----------+
(4 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_json_funcs TEST_ID: A1_B1_C3_D1
#-------------------------------------------------------------------------
SELECT json_keys(json_value(a_nested, '$[7][0]' RETURNING boolean array), '$.') AS col
FROM test_array;
+-----------+
| col       |
+-----------+
| [0, 1, 2] |
| [0, 1, 2] |
| [0, 1, 2] |
| [0, 1, 2] |
+-----------+
(4 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_json_funcs TEST_ID: A1_B1_C4_D1
#-------------------------------------------------------------------------
SELECT json_keys(a_int, '$.') AS col
FROM test_array;
+-----------+
| col       |
+-----------+
| [0, 1, 2] |
| [0, 1, 2] |
| [0, 1, 2] |
| [0, 1, 2] |
+-----------+
(4 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_json_funcs TEST_ID: A1_B1_C5_D1
#-------------------------------------------------------------------------
SELECT json_keys(json_value(a_nested, '$[1]' RETURNING bigint array), '$.') AS col
FROM test_array;
+-----------+
| col       |
+-----------+
| [0, 1, 2] |
| [0, 1, 2] |
| [0, 1, 2] |
| [0, 1, 2] |
+-----------+
(4 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_json_funcs TEST_ID: A1_B1_C6_D1
#-------------------------------------------------------------------------
SELECT json_keys(json_value(a_nested, '$[7][1]' RETURNING bigint array), '$.') AS col
FROM test_array;
+-----------+
| col       |
+-----------+
| [0, 1, 2] |
| [0, 1, 2] |
| [0, 1, 2] |
| [0, 1, 2] |
+-----------+
(4 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_json_funcs TEST_ID: A1_B1_C7_D1
#-------------------------------------------------------------------------
SELECT json_keys(a_float, '$.') AS col
FROM test_array;
+-----------+
| col       |
+-----------+
| [0, 1, 2] |
| [0, 1, 2] |
| [0, 1, 2] |
| [0, 1, 2] |
+-----------+
(4 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_json_funcs TEST_ID: A1_B1_C8_D1
#-------------------------------------------------------------------------
SELECT json_keys(json_value(a_nested, '$[2]' RETURNING decimal array), '$.') AS col
FROM test_array;
+-----------+
| col       |
+-----------+
| [0, 1, 2] |
| [0, 1, 2] |
| [0, 1, 2] |
| [0, 1, 2] |
+-----------+
(4 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_json_funcs TEST_ID: A1_B1_C9_D1
#-------------------------------------------------------------------------
SELECT json_keys(json_value(a_nested, '$[7][2]' RETURNING decimal array), '$.') AS col
FROM test_array;
+-----------+
| col       |
+-----------+
| [0, 1, 2] |
| [0, 1, 2] |
| [0, 1, 2] |
| [0, 1, 2] |
+-----------+
(4 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_json_funcs TEST_ID: A1_B1_C10_D1
#-------------------------------------------------------------------------
SELECT json_keys(a_str, '$.') AS col
FROM test_array;
+-----------+
| col       |
+-----------+
| [0, 1, 2] |
| [0, 1, 2] |
| [0, 1, 2] |
| [0, 1, 2] |
+-----------+
(4 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_json_funcs TEST_ID: A1_B1_C11_D1
#-------------------------------------------------------------------------
SELECT json_keys(json_value(a_nested, '$[3]' RETURNING varchar array), '$.') AS col
FROM test_array;
+-----------+
| col       |
+-----------+
| [0, 1, 2] |
| [0, 1, 2] |
| [0, 1, 2] |
| [0, 1, 2] |
+-----------+
(4 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_json_funcs TEST_ID: A1_B1_C12_D1
#-------------------------------------------------------------------------
SELECT json_keys(json_value(a_nested, '$[7][3]' RETURNING varchar array), '$.') AS col
FROM test_array;
+-----------+
| col       |
+-----------+
| [0, 1, 2] |
| [0, 1, 2] |
| [0, 1, 2] |
| [0, 1, 2] |
+-----------+
(4 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_json_funcs TEST_ID: A1_B1_C13_D1
#-------------------------------------------------------------------------
SELECT json_keys(a_null, '$.') AS col
FROM test_array;
+-----------+
| col       |
+-----------+
| [0, 1, 2] |
| [0, 1, 2] |
| [0, 1, 2] |
| [0, 1, 2] |
+-----------+
(4 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_json_funcs TEST_ID: A1_B1_C14_D1
#-------------------------------------------------------------------------
SELECT json_keys(json_value(a_nested, '$[4]' RETURNING varchar array), '$.') AS col
FROM test_array;
+-----------+
| col       |
+-----------+
| [0, 1, 2] |
| [0, 1, 2] |
| [0, 1, 2] |
| [0, 1, 2] |
+-----------+
(4 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_json_funcs TEST_ID: A1_B1_C15_D1
#-------------------------------------------------------------------------
SELECT json_keys(json_value(a_nested, '$[7][4]' RETURNING varchar array), '$.') AS col
FROM test_array;
+-----------+
| col       |
+-----------+
| [0, 1, 2] |
| [0, 1, 2] |
| [0, 1, 2] |
| [0, 1, 2] |
+-----------+
(4 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_json_funcs TEST_ID: A1_B1_C16_D1
#-------------------------------------------------------------------------
SELECT json_keys(a_empty, '$.') AS col
FROM test_array;
+-----+
| col |
+-----+
| []  |
| []  |
| []  |
| []  |
+-----+
(4 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_json_funcs TEST_ID: A1_B1_C17_D1
#-------------------------------------------------------------------------
SELECT json_keys(json_value(a_nested, '$[5]' RETURNING varchar array), '$.') AS col
FROM test_array;
+-----+
| col |
+-----+
| []  |
| []  |
| []  |
| []  |
+-----+
(4 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_json_funcs TEST_ID: A1_B1_C18_D1
#-------------------------------------------------------------------------
SELECT json_keys(json_value(a_nested, '$[7][5]' RETURNING varchar array), '$.') AS col
FROM test_array;
+-----+
| col |
+-----+
| []  |
| []  |
| []  |
| []  |
+-----+
(4 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_json_funcs TEST_ID: A1_B1_C19_D1
#-------------------------------------------------------------------------
SELECT json_keys(a_mixed, '$.') AS col
FROM test_array;
+-----------------+
| col             |
+-----------------+
| [0, 1, 2, 3, 4] |
| [0, 1, 2, 3, 4] |
| [0, 1, 2, 3, 4] |
| [0, 1, 2, 3, 4] |
+-----------------+
(4 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_json_funcs TEST_ID: A1_B1_C20_D1
#-------------------------------------------------------------------------
SELECT json_keys(json_value(a_nested, '$[6]' RETURNING varchar array), '$.') AS col
FROM test_array;
+-----------------+
| col             |
+-----------------+
| [0, 1, 2, 3, 4] |
| [0, 1, 2, 3, 4] |
| [0, 1, 2, 3, 4] |
| [0, 1, 2, 3, 4] |
+-----------------+
(4 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_json_funcs TEST_ID: A1_B1_C21_D1
#-------------------------------------------------------------------------
SELECT json_keys(json_value(a_nested, '$[7][6]' RETURNING varchar array), '$.') AS col
FROM test_array;
+-----------------+
| col             |
+-----------------+
| [0, 1, 2, 3, 4] |
| [0, 1, 2, 3, 4] |
| [0, 1, 2, 3, 4] |
| [0, 1, 2, 3, 4] |
+-----------------+
(4 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_json_funcs TEST_ID: A1_B1_C22_D1
#-------------------------------------------------------------------------
SELECT json_keys(a_nested, '$.') AS col
FROM test_array;
+--------------------------+
| col                      |
+--------------------------+
| [0, 1, 2, 3, 4, 5, 6, 7] |
| [0, 1, 2, 3, 4, 5, 6, 7] |
| [0, 1, 2, 3, 4, 5, 6, 7] |
| [0, 1, 2, 3, 4, 5, 6, 7] |
+--------------------------+
(4 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_json_funcs TEST_ID: A1_B1_C23_D1
#-------------------------------------------------------------------------
SELECT json_keys(json_value(a_nested, '$[7]' RETURNING varchar array), '$.') AS col
FROM test_array;
+-----+
| col |
+-----+
|     |
|     |
|     |
|     |
+-----+
(4 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_json_funcs TEST_ID: A1_B1_C24_D1
#-------------------------------------------------------------------------
SELECT json_keys(json_value(a_nested, '$[7][7]' RETURNING varchar array), '$.') AS col
FROM test_array;
+-----+
| col |
+-----+
|     |
|     |
|     |
|     |
+-----+
(4 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_json_funcs TEST_ID: A1_B2_C1_D1
#-------------------------------------------------------------------------
SELECT json_object(KEY 'k' value a_bool) AS col
FROM test_array;
+------------------+
| col              |
+------------------+
| {"k":[1,0,null]} |
| {"k":[1,0,null]} |
| {"k":[null,0,1]} |
| {"k":[null,0,1]} |
+------------------+
(4 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_json_funcs TEST_ID: A1_B2_C2_D1
#-------------------------------------------------------------------------
SELECT json_object(KEY 'k' value json_value(a_nested, '$[0]' RETURNING boolean array)) AS col
FROM test_array;
+------------------+
| col              |
+------------------+
| {"k":[1,0,null]} |
| {"k":[1,0,null]} |
| {"k":[null,0,1]} |
| {"k":[null,0,1]} |
+------------------+
(4 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_json_funcs TEST_ID: A1_B2_C3_D1
#-------------------------------------------------------------------------
SELECT json_object(KEY 'k' value json_value(a_nested, '$[7][0]' RETURNING boolean array)) AS col
FROM test_array;
+------------------+
| col              |
+------------------+
| {"k":[1,0,null]} |
| {"k":[1,0,null]} |
| {"k":[null,0,1]} |
| {"k":[null,0,1]} |
+------------------+
(4 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_json_funcs TEST_ID: A1_B2_C4_D1
#-------------------------------------------------------------------------
SELECT json_object(KEY 'k' value a_int) AS col
FROM test_array;
+------------------+
| col              |
+------------------+
| {"k":[1,2,null]} |
| {"k":[1,2,null]} |
| {"k":[null,2,1]} |
| {"k":[null,2,1]} |
+------------------+
(4 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_json_funcs TEST_ID: A1_B2_C5_D1
#-------------------------------------------------------------------------
SELECT json_object(KEY 'k' value json_value(a_nested, '$[1]' RETURNING bigint array)) AS col
FROM test_array;
+------------------+
| col              |
+------------------+
| {"k":[1,2,null]} |
| {"k":[1,2,null]} |
| {"k":[null,2,1]} |
| {"k":[null,2,1]} |
+------------------+
(4 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_json_funcs TEST_ID: A1_B2_C6_D1
#-------------------------------------------------------------------------
SELECT json_object(KEY 'k' value json_value(a_nested, '$[7][1]' RETURNING bigint array)) AS col
FROM test_array;
+------------------+
| col              |
+------------------+
| {"k":[1,2,null]} |
| {"k":[1,2,null]} |
| {"k":[null,2,1]} |
| {"k":[null,2,1]} |
+------------------+
(4 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_json_funcs TEST_ID: A1_B2_C7_D1
#-------------------------------------------------------------------------
SELECT json_object(KEY 'k' value a_float) AS col
FROM test_array;
+----------------------+
| col                  |
+----------------------+
| {"k":[0.1,0.2,null]} |
| {"k":[0.1,0.2,null]} |
| {"k":[null,0.2,0.1]} |
| {"k":[null,0.2,0.1]} |
+----------------------+
(4 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_json_funcs TEST_ID: A1_B2_C8_D1
#-------------------------------------------------------------------------
SELECT json_object(KEY 'k' value json_value(a_nested, '$[2]' RETURNING decimal array)) AS col
FROM test_array;
+----------------------+
| col                  |
+----------------------+
| {"k":[0.1,0.2,null]} |
| {"k":[0.1,0.2,null]} |
| {"k":[null,0.2,0.1]} |
| {"k":[null,0.2,0.1]} |
+----------------------+
(4 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_json_funcs TEST_ID: A1_B2_C9_D1
#-------------------------------------------------------------------------
SELECT json_object(KEY 'k' value json_value(a_nested, '$[7][2]' RETURNING decimal array)) AS col
FROM test_array;
+----------------------+
| col                  |
+----------------------+
| {"k":[0.1,0.2,null]} |
| {"k":[0.1,0.2,null]} |
| {"k":[null,0.2,0.1]} |
| {"k":[null,0.2,0.1]} |
+----------------------+
(4 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_json_funcs TEST_ID: A1_B2_C10_D1
#-------------------------------------------------------------------------
SELECT json_object(KEY 'k' value a_str) AS col
FROM test_array;
+------------------------+
| col                    |
+------------------------+
| {"k":["S1","S2",null]} |
| {"k":["S1","S2",null]} |
| {"k":[null,"S2","S1"]} |
| {"k":[null,"S2","S1"]} |
+------------------------+
(4 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_json_funcs TEST_ID: A1_B2_C11_D1
#-------------------------------------------------------------------------
SELECT json_object(KEY 'k' value json_value(a_nested, '$[3]' RETURNING varchar array)) AS col
FROM test_array;
+------------------------+
| col                    |
+------------------------+
| {"k":["S1","S2",null]} |
| {"k":["S1","S2",null]} |
| {"k":[null,"S2","S1"]} |
| {"k":[null,"S2","S1"]} |
+------------------------+
(4 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_json_funcs TEST_ID: A1_B2_C12_D1
#-------------------------------------------------------------------------
SELECT json_object(KEY 'k' value json_value(a_nested, '$[7][3]' RETURNING varchar array)) AS col
FROM test_array;
+------------------------+
| col                    |
+------------------------+
| {"k":["S1","S2",null]} |
| {"k":["S1","S2",null]} |
| {"k":[null,"S2","S1"]} |
| {"k":[null,"S2","S1"]} |
+------------------------+
(4 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_json_funcs TEST_ID: A1_B2_C13_D1
#-------------------------------------------------------------------------
SELECT json_object(KEY 'k' value a_null) AS col
FROM test_array;
+------------------------+
| col                    |
+------------------------+
| {"k":[null,null,null]} |
| {"k":[null,null,null]} |
| {"k":[null,null,null]} |
| {"k":[null,null,null]} |
+------------------------+
(4 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_json_funcs TEST_ID: A1_B2_C14_D1
#-------------------------------------------------------------------------
SELECT json_object(KEY 'k' value json_value(a_nested, '$[4]' RETURNING varchar array)) AS col
FROM test_array;
+------------------------+
| col                    |
+------------------------+
| {"k":[null,null,null]} |
| {"k":[null,null,null]} |
| {"k":[null,null,null]} |
| {"k":[null,null,null]} |
+------------------------+
(4 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_json_funcs TEST_ID: A1_B2_C15_D1
#-------------------------------------------------------------------------
SELECT json_object(KEY 'k' value json_value(a_nested, '$[7][4]' RETURNING varchar array)) AS col
FROM test_array;
+------------------------+
| col                    |
+------------------------+
| {"k":[null,null,null]} |
| {"k":[null,null,null]} |
| {"k":[null,null,null]} |
| {"k":[null,null,null]} |
+------------------------+
(4 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_json_funcs TEST_ID: A1_B2_C16_D1
#-------------------------------------------------------------------------
SELECT json_object(KEY 'k' value a_empty) AS col
FROM test_array;
+----------+
| col      |
+----------+
| {"k":[]} |
| {"k":[]} |
| {"k":[]} |
| {"k":[]} |
+----------+
(4 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_json_funcs TEST_ID: A1_B2_C17_D1
#-------------------------------------------------------------------------
SELECT json_object(KEY 'k' value json_value(a_nested, '$[5]' RETURNING varchar array)) AS col
FROM test_array;
+----------+
| col      |
+----------+
| {"k":[]} |
| {"k":[]} |
| {"k":[]} |
| {"k":[]} |
+----------+
(4 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_json_funcs TEST_ID: A1_B2_C18_D1
#-------------------------------------------------------------------------
SELECT json_object(KEY 'k' value json_value(a_nested, '$[7][5]' RETURNING varchar array)) AS col
FROM test_array;
+----------+
| col      |
+----------+
| {"k":[]} |
| {"k":[]} |
| {"k":[]} |
| {"k":[]} |
+----------+
(4 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_json_funcs TEST_ID: A1_B2_C19_D1
#-------------------------------------------------------------------------
SELECT json_object(KEY 'k' value a_mixed) AS col
FROM test_array;
+------------------------------------+
| col                                |
+------------------------------------+
| {"k":["true","1","0.1","S1",null]} |
| {"k":["true","1","0.1","S1",null]} |
| {"k":[null,"S1","0.1","1","true"]} |
| {"k":[null,"S1","0.1","1","true"]} |
+------------------------------------+
(4 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_json_funcs TEST_ID: A1_B2_C20_D1
#-------------------------------------------------------------------------
SELECT json_object(KEY 'k' value json_value(a_nested, '$[6]' RETURNING varchar array)) AS col
FROM test_array;
+------------------------------------+
| col                                |
+------------------------------------+
| {"k":["true","1","0.1","S1",null]} |
| {"k":["true","1","0.1","S1",null]} |
| {"k":[null,"S1","0.1","1","true"]} |
| {"k":[null,"S1","0.1","1","true"]} |
+------------------------------------+
(4 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_json_funcs TEST_ID: A1_B2_C21_D1
#-------------------------------------------------------------------------
SELECT json_object(KEY 'k' value json_value(a_nested, '$[7][6]' RETURNING varchar array)) AS col
FROM test_array;
+------------------------------------+
| col                                |
+------------------------------------+
| {"k":["true","1","0.1","S1",null]} |
| {"k":["true","1","0.1","S1",null]} |
| {"k":[null,"S1","0.1","1","true"]} |
| {"k":[null,"S1","0.1","1","true"]} |
+------------------------------------+
(4 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_json_funcs TEST_ID: A1_B2_C22_D1
#-------------------------------------------------------------------------
SELECT json_object(KEY 'k' value a_nested) AS col
FROM test_array;
+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| col                                                                                                                                                                                                                                                                                                                                 |
+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| {"k":[[null,false,true],[null,2,1],[null,0.2,0.1],[null,"S2","S1"],[null,null,null],[],[null,"S1",0.1,1,true],[[null,false,true],[null,2,1],[null,0.2,0.1],[null,"S2","S1"],[null,null,null],[],[null,"S1",0.1,1,true],[[null,false,true],[null,2,1],[null,0.2,0.1],[null,"S2","S1"],[null,null,null],[],[null,"S1",0.1,1,true]]]]} |
| {"k":[[null,false,true],[null,2,1],[null,0.2,0.1],[null,"S2","S1"],[null,null,null],[],[null,"S1",0.1,1,true],[[null,false,true],[null,2,1],[null,0.2,0.1],[null,"S2","S1"],[null,null,null],[],[null,"S1",0.1,1,true],[[null,false,true],[null,2,1],[null,0.2,0.1],[null,"S2","S1"],[null,null,null],[],[null,"S1",0.1,1,true]]]]} |
| {"k":[[true,false,null],[1,2,null],[0.1,0.2,null],["S1","S2",null],[null,null,null],[],[true,1,0.1,"S1",null],[[true,false,null],[1,2,null],[0.1,0.2,null],["S1","S2",null],[null,null,null],[],[true,1,0.1,"S1",null],[[true,false,null],[1,2,null],[0.1,0.2,null],["S1","S2",null],[null,null,null],[],[true,1,0.1,"S1",null]]]]} |
| {"k":[[true,false,null],[1,2,null],[0.1,0.2,null],["S1","S2",null],[null,null,null],[],[true,1,0.1,"S1",null],[[true,false,null],[1,2,null],[0.1,0.2,null],["S1","S2",null],[null,null,null],[],[true,1,0.1,"S1",null],[[true,false,null],[1,2,null],[0.1,0.2,null],["S1","S2",null],[null,null,null],[],[true,1,0.1,"S1",null]]]]} |
+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
(4 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_json_funcs TEST_ID: A1_B2_C23_D1
#-------------------------------------------------------------------------
SELECT json_object(KEY 'k' value json_value(a_nested, '$[7]' RETURNING varchar array)) AS col
FROM test_array;
+------------+
| col        |
+------------+
| {"k":null} |
| {"k":null} |
| {"k":null} |
| {"k":null} |
+------------+
(4 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_json_funcs TEST_ID: A1_B2_C24_D1
#-------------------------------------------------------------------------
SELECT json_object(KEY 'k' value json_value(a_nested, '$[7][7]' RETURNING varchar array)) AS col
FROM test_array;
+------------+
| col        |
+------------+
| {"k":null} |
| {"k":null} |
| {"k":null} |
| {"k":null} |
+------------+
(4 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_json_funcs TEST_ID: A1_B3_C1_D1
#-------------------------------------------------------------------------
SELECT json_paths(a_bool) AS col
FROM test_array;
+-----+
| col |
+-----+
| [$] |
| [$] |
| [$] |
| [$] |
+-----+
(4 rows)

!ok

