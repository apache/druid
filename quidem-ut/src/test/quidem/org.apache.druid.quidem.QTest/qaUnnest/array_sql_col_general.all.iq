!set dartQueryId 00000000-0000-0000-0000-000000000000
!set useApproximateCountDistinct false
!use druidtest://?componentSupplier=StandardAndMSQComponentSupplier&datasets=sql/src/test/quidem/qatests/qaUnnest/array
!set outputformat mysql
#-------------------------------------------------------------------------
# TESTCASE: test_col_general TEST_ID: SEL_DATASOURCE
#-------------------------------------------------------------------------
SELECT *
FROM test_unnest;
+-------------------------+-------+--------+--------------+--------------+------------------+----------------+--------------------+---------+--------------------------+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| __time                  | s_int | s_null | a_bool       | a_int        | a_float          | a_str          | a_null             | a_empty | a_mixed                  | a_nested                                                                                                                                                                                                                                                                                                                      |
+-------------------------+-------+--------+--------------+--------------+------------------+----------------+--------------------+---------+--------------------------+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| 2022-01-01 00:00:00.000 |     1 |        | [1, 0, null] | [1, 2, null] | [0.1, 0.2, null] | [S1, S2, null] | [null, null, null] | []      | [true, 1, 0.1, S1, null] | [[true,false,null],[1,2,null],[0.1,0.2,null],["S1","S2",null],[null,null,null],[],[true,1,0.1,"S1",null],[[true,false,null],[1,2,null],[0.1,0.2,null],["S1","S2",null],[null,null,null],[],[true,1,0.1,"S1",null],[[true,false,null],[1,2,null],[0.1,0.2,null],["S1","S2",null],[null,null,null],[],[true,1,0.1,"S1",null]]]] |
| 2022-02-01 00:00:00.000 |     2 |        | [null, 1, 0] | [null, 1, 2] | [null, 0.1, 0.2] | [null, S1, S2] | [null, null, null] | []      | [null, true, 1, 0.1, S1] | [[null,true,false],[null,1,2],[null,0.1,0.2],[null,"S1","S2"],[null,null,null],[],[null,true,1,0.1,"S1"],[[null,true,false],[null,1,2],[null,0.1,0.2],[null,"S1","S2"],[null,null,null],[],[null,true,1,0.1,"S1"],[[null,true,false],[null,1,2],[null,0.1,0.2],[null,"S1","S2"],[null,null,null],[],[null,true,1,0.1,"S1"]]]] |
| 2022-03-01 00:00:00.000 |       |        | [0, null, 1] | [2, null, 1] | [0.2, null, 0.1] | [S2, null, S1] | [null, null, null] | []      | [S1, null, true, 1, 0.1] | [[false,null,true],[2,null,1],[0.2,null,0.1],["S2",null,"S1"],[null,null,null],[],["S1",null,true,1,0.1],[[false,null,true],[2,null,1],[0.2,null,0.1],["S2",null,"S1"],[null,null,null],[],["S1",null,true,1,0.1],[[false,null,true],[2,null,1],[0.2,null,0.1],["S2",null,"S1"],[null,null,null],[],["S1",null,true,1,0.1]]]] |
+-------------------------+-------+--------+--------------+--------------+------------------+----------------+--------------------+---------+--------------------------+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
(3 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_col_general TEST_ID: A1_B1
#-------------------------------------------------------------------------
SELECT c
FROM test_unnest,
     unnest(doesnt_exist) AS u(c);
not found
!error

#-------------------------------------------------------------------------
# TESTCASE: test_col_general TEST_ID: A1_B2
#-------------------------------------------------------------------------
SELECT c
FROM test_unnest,
     unnest(doesnt_exist) AS u(c)
GROUP BY c;
not found
!error

#-------------------------------------------------------------------------
# TESTCASE: test_col_general TEST_ID: A1_B3
#-------------------------------------------------------------------------
SELECT *
FROM test_unnest,
     unnest(a_int) AS u(a_int);
is ambiguous
!error

#-------------------------------------------------------------------------
# TESTCASE: test_col_general TEST_ID: A1_B4
#-------------------------------------------------------------------------
SELECT *
FROM test_unnest,
     unnest(a_int) AS u(a_int)
GROUP BY c;
is ambiguous
!error

#-------------------------------------------------------------------------
# TESTCASE: test_col_general TEST_ID: A1_B5
#-------------------------------------------------------------------------
SELECT s_int0
FROM test_unnest,
     unnest(a_int) AS u(s_int);
not found in any table
!error

#-------------------------------------------------------------------------
# TESTCASE: test_col_general TEST_ID: A1_B6
#-------------------------------------------------------------------------
SELECT u.s_int
FROM test_unnest,
     unnest(a_int) AS u(s_int);
+-------+
| s_int |
+-------+
|     1 |
|     1 |
|     1 |
|     2 |
|     2 |
|     2 |
|       |
|       |
|       |
+-------+
(9 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_col_general TEST_ID: A1_B7
#-------------------------------------------------------------------------
SELECT count(*)
FROM
  (SELECT u.s_int
   FROM test_unnest,
        unnest(a_int) AS u(s_int));
+--------+
| EXPR$0 |
+--------+
|      9 |
+--------+
(1 row)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_col_general TEST_ID: A1_B8
#-------------------------------------------------------------------------
SELECT count(*)
FROM test_unnest,
     unnest(a_int) AS u(s_int);
+--------+
| EXPR$0 |
+--------+
|      9 |
+--------+
(1 row)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_col_general TEST_ID: A1_B9
#-------------------------------------------------------------------------
SELECT s_int0
FROM
  (SELECT *
   FROM test_unnest,
        unnest(a_int) AS u(s_int));
+--------+
| s_int0 |
+--------+
|      1 |
|      1 |
|      1 |
|      2 |
|      2 |
|      2 |
|        |
|        |
|        |
+--------+
(9 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_col_general TEST_ID: A1_B10
#-------------------------------------------------------------------------
SELECT count(*) cnt
FROM
  (SELECT *
   FROM test_unnest,
        unnest(a_int) AS u(s_int));
+-----+
| cnt |
+-----+
|   9 |
+-----+
(1 row)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_col_general TEST_ID: A1_B11
#-------------------------------------------------------------------------
SELECT u.s_int
FROM
  (SELECT *
   FROM test_unnest,
        unnest(a_int) AS u(s_int));
not found
!error

#-------------------------------------------------------------------------
# TESTCASE: test_col_general TEST_ID: A1_B12
#-------------------------------------------------------------------------
SELECT s_int0,
       count(*) cnt
FROM test_unnest,
     unnest(a_int) AS u(s_int)
GROUP BY s_int0;
not found in any table
!error

#-------------------------------------------------------------------------
# TESTCASE: test_col_general TEST_ID: A1_B13
#-------------------------------------------------------------------------
SELECT u.s_int,
       count(*) cnt
FROM test_unnest,
     unnest(a_int) AS u(s_int)
GROUP BY u.s_int;
+-------+-----+
| s_int | cnt |
+-------+-----+
|     1 |   3 |
|     2 |   3 |
|       |   3 |
+-------+-----+
(3 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_col_general TEST_ID: A1_B14
#-------------------------------------------------------------------------
SELECT c
FROM test_unnest,
     strlen(unnest(a_int)) AS u(c);
unexpected token
!error

#-------------------------------------------------------------------------
# TESTCASE: test_col_general TEST_ID: A1_B15
#-------------------------------------------------------------------------
SELECT c
FROM test_unnest,
     strlen(unnest(a_int)) AS u(c)
GROUP BY c;
unexpected token
!error

#-------------------------------------------------------------------------
# TESTCASE: test_col_general TEST_ID: A1_B16
#-------------------------------------------------------------------------
SELECT c
FROM test_unnest,
     unnest(array_slice(a_int, 0, 2)) AS u(c);
+---+
| c |
+---+
| 1 |
| 1 |
| 2 |
| 2 |
|   |
|   |
+---+
(6 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_col_general TEST_ID: A1_B17
#-------------------------------------------------------------------------
SELECT c
FROM test_unnest,
     unnest(array_slice(a_int, 0, 2)) AS u(c)
GROUP BY c;
+---+
| c |
+---+
| 1 |
| 2 |
|   |
+---+
(3 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_col_general TEST_ID: A1_B18
#-------------------------------------------------------------------------
SELECT c
FROM test_unnest,
     unnest(array_append(a_int, 9)) AS u(c);
+---+
| c |
+---+
| 1 |
| 1 |
| 1 |
| 2 |
| 2 |
| 2 |
| 9 |
| 9 |
| 9 |
|   |
|   |
|   |
+---+
(12 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_col_general TEST_ID: A1_B19
#-------------------------------------------------------------------------
SELECT c
FROM test_unnest,
     unnest(array_append(a_int, 9)) AS u(c)
GROUP BY c;
+---+
| c |
+---+
| 1 |
| 2 |
| 9 |
|   |
+---+
(4 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_col_general TEST_ID: A1_B20
#-------------------------------------------------------------------------
SELECT (c || 'Z') col
FROM test_unnest,
     unnest(a_int) AS u(c);
+-----+
| col |
+-----+
| 1Z  |
| 1Z  |
| 1Z  |
| 2Z  |
| 2Z  |
| 2Z  |
|     |
|     |
|     |
+-----+
(9 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_col_general TEST_ID: A1_B21
#-------------------------------------------------------------------------
SELECT (c || 'Z') col
FROM test_unnest,
     unnest(a_int) AS u(c)
GROUP BY c;
+-----+
| col |
+-----+
| 1Z  |
| 2Z  |
|     |
+-----+
(3 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_col_general TEST_ID: A1_B22
#-------------------------------------------------------------------------
SELECT length(c) col
FROM test_unnest,
     unnest(a_int) AS u(c);
+-----+
| col |
+-----+
|   1 |
|   1 |
|   1 |
|   1 |
|   1 |
|   1 |
|     |
|     |
|     |
+-----+
(9 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_col_general TEST_ID: A1_B23
#-------------------------------------------------------------------------
SELECT length(c) col
FROM test_unnest,
     unnest(a_int) AS u(c)
GROUP BY c;
+-----+
| col |
+-----+
|   1 |
|   1 |
|     |
+-----+
(3 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_col_general TEST_ID: A1_B24
#-------------------------------------------------------------------------
SELECT length(c || 'Z') col
FROM test_unnest,
     unnest(a_int) AS u(c);
+-----+
| col |
+-----+
|   2 |
|   2 |
|   2 |
|   2 |
|   2 |
|   2 |
|     |
|     |
|     |
+-----+
(9 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_col_general TEST_ID: A1_B25
#-------------------------------------------------------------------------
SELECT length(c || 'Z') col
FROM test_unnest,
     unnest(a_int) AS u(c)
GROUP BY c;
+-----+
| col |
+-----+
|   2 |
|   2 |
|     |
+-----+
(3 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_col_general TEST_ID: A1_B26
#-------------------------------------------------------------------------
SELECT length(c || c) col
FROM test_unnest,
     unnest(a_int) AS u(c);
+-----+
| col |
+-----+
|   2 |
|   2 |
|   2 |
|   2 |
|   2 |
|   2 |
|     |
|     |
|     |
+-----+
(9 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_col_general TEST_ID: A1_B27
#-------------------------------------------------------------------------
SELECT length(c || c) col
FROM test_unnest,
     unnest(a_int) AS u(c)
GROUP BY c;
+-----+
| col |
+-----+
|   2 |
|   2 |
|     |
+-----+
(3 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_col_general TEST_ID: A1_B28
#-------------------------------------------------------------------------
SELECT c,
       a_int AS new_col
FROM test_unnest,
     unnest(new_col) AS u(c);
not found in any table
!error

#-------------------------------------------------------------------------
# TESTCASE: test_col_general TEST_ID: A1_B29
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT a_int AS new_col
   FROM test_unnest) t1,
     unnest(new_col) AS u(c);
+---+
| c |
+---+
| 1 |
| 1 |
| 1 |
| 2 |
| 2 |
| 2 |
|   |
|   |
|   |
+---+
(9 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_col_general TEST_ID: A1_B30
#-------------------------------------------------------------------------
SELECT c AS new_col
FROM test_unnest,
     unnest(a_int) AS u(c);
+---------+
| new_col |
+---------+
|       1 |
|       1 |
|       1 |
|       2 |
|       2 |
|       2 |
|         |
|         |
|         |
+---------+
(9 rows)

!ok

