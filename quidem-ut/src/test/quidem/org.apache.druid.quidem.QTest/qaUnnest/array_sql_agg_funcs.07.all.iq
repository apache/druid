!set dartQueryId 00000000-0000-0000-0000-000000000000
!set useApproximateCountDistinct false
!use druidtest://?componentSupplier=StandardAndMSQComponentSupplier&datasets=sql/src/test/quidem/qatests/qaUnnest/array
!set outputformat mysql
#-------------------------------------------------------------------------
# TESTCASE: test_agg_funcs TEST_ID: A1_B24_C5_D2
#-------------------------------------------------------------------------
SELECT count(*) cnt
FROM
  (SELECT latest_by(s_int, time_floor(__time, 'P1D'), 100) AS col
   FROM test_unnest,
        unnest(json_value(a_nested, '$[1]' RETURNING bigint array)) AS u(c)
   WHERE s_int IN (0,
                   1,
                   2)
     OR s_int IS NULL
   GROUP BY c);
+-----+
| cnt |
+-----+
|   3 |
+-----+
(1 row)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_agg_funcs TEST_ID: A1_B24_C6_D1
#-------------------------------------------------------------------------
SELECT count(*) cnt
FROM
  (SELECT latest_by(s_int, time_floor(__time, 'P1D'), 100) AS col
   FROM test_unnest,
        unnest(a_int) AS u(c)
   WHERE s_int IN (0,
                   1,
                   2)
     OR s_int IS NULL
   GROUP BY s_int);
+-----+
| cnt |
+-----+
|   3 |
+-----+
(1 row)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_agg_funcs TEST_ID: A1_B24_C6_D2
#-------------------------------------------------------------------------
SELECT count(*) cnt
FROM
  (SELECT latest_by(s_int, time_floor(__time, 'P1D'), 100) AS col
   FROM test_unnest,
        unnest(json_value(a_nested, '$[1]' RETURNING bigint array)) AS u(c)
   WHERE s_int IN (0,
                   1,
                   2)
     OR s_int IS NULL
   GROUP BY s_int);
+-----+
| cnt |
+-----+
|   3 |
+-----+
(1 row)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_agg_funcs TEST_ID: A1_B24_C7_D1
#-------------------------------------------------------------------------
SELECT count(*) cnt
FROM
  (SELECT latest_by(c, time_floor(__time, 'P1D'), 100) AS col
   FROM test_unnest,
        unnest(a_int) AS u(c)
   WHERE s_int IN (0,
                   1,
                   2)
     OR s_int IS NULL
   GROUP BY c
   HAVING latest_by(c, time_floor(__time, 'P1D'), 100) IS NOT NULL);
+-----+
| cnt |
+-----+
|   2 |
+-----+
(1 row)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_agg_funcs TEST_ID: A1_B24_C7_D2
#-------------------------------------------------------------------------
SELECT count(*) cnt
FROM
  (SELECT latest_by(c, time_floor(__time, 'P1D'), 100) AS col
   FROM test_unnest,
        unnest(json_value(a_nested, '$[1]' RETURNING bigint array)) AS u(c)
   WHERE s_int IN (0,
                   1,
                   2)
     OR s_int IS NULL
   GROUP BY c
   HAVING latest_by(c, time_floor(__time, 'P1D'), 100) IS NOT NULL);
+-----+
| cnt |
+-----+
|   2 |
+-----+
(1 row)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_agg_funcs TEST_ID: A1_B24_C8_D1
#-------------------------------------------------------------------------
SELECT count(*) cnt
FROM
  (SELECT latest_by(c, time_floor(__time, 'P1D'), 100) AS col
   FROM test_unnest,
        unnest(a_int) AS u(c)
   WHERE s_int IN (0,
                   1,
                   2)
     OR s_int IS NULL
   GROUP BY s_int
   HAVING latest_by(c, time_floor(__time, 'P1D'), 100) IS NOT NULL);
+-----+
| cnt |
+-----+
|   2 |
+-----+
(1 row)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_agg_funcs TEST_ID: A1_B24_C8_D2
#-------------------------------------------------------------------------
SELECT count(*) cnt
FROM
  (SELECT latest_by(c, time_floor(__time, 'P1D'), 100) AS col
   FROM test_unnest,
        unnest(json_value(a_nested, '$[1]' RETURNING bigint array)) AS u(c)
   WHERE s_int IN (0,
                   1,
                   2)
     OR s_int IS NULL
   GROUP BY s_int
   HAVING latest_by(c, time_floor(__time, 'P1D'), 100) IS NOT NULL);
+-----+
| cnt |
+-----+
|   2 |
+-----+
(1 row)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_agg_funcs TEST_ID: A1_B24_C9_D1
#-------------------------------------------------------------------------
SELECT count(*) cnt
FROM
  (SELECT latest_by(s_int, time_floor(__time, 'P1D'), 100) AS col
   FROM test_unnest,
        unnest(a_int) AS u(c)
   WHERE s_int IN (0,
                   1,
                   2)
     OR s_int IS NULL
   GROUP BY c
   HAVING latest_by(s_int, time_floor(__time, 'P1D'), 100) IS NOT NULL);
+-----+
| cnt |
+-----+
|   0 |
+-----+
(1 row)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_agg_funcs TEST_ID: A1_B24_C9_D2
#-------------------------------------------------------------------------
SELECT count(*) cnt
FROM
  (SELECT latest_by(s_int, time_floor(__time, 'P1D'), 100) AS col
   FROM test_unnest,
        unnest(json_value(a_nested, '$[1]' RETURNING bigint array)) AS u(c)
   WHERE s_int IN (0,
                   1,
                   2)
     OR s_int IS NULL
   GROUP BY c
   HAVING latest_by(s_int, time_floor(__time, 'P1D'), 100) IS NOT NULL);
+-----+
| cnt |
+-----+
|   0 |
+-----+
(1 row)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_agg_funcs TEST_ID: A1_B24_C10_D1
#-------------------------------------------------------------------------
SELECT count(*) cnt
FROM
  (SELECT latest_by(s_int, time_floor(__time, 'P1D'), 100) AS col
   FROM test_unnest,
        unnest(a_int) AS u(c)
   WHERE s_int IN (0,
                   1,
                   2)
     OR s_int IS NULL
   GROUP BY s_int
   HAVING latest_by(s_int, time_floor(__time, 'P1D'), 100) IS NOT NULL);
+-----+
| cnt |
+-----+
|   2 |
+-----+
(1 row)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_agg_funcs TEST_ID: A1_B24_C10_D2
#-------------------------------------------------------------------------
SELECT count(*) cnt
FROM
  (SELECT latest_by(s_int, time_floor(__time, 'P1D'), 100) AS col
   FROM test_unnest,
        unnest(json_value(a_nested, '$[1]' RETURNING bigint array)) AS u(c)
   WHERE s_int IN (0,
                   1,
                   2)
     OR s_int IS NULL
   GROUP BY s_int
   HAVING latest_by(s_int, time_floor(__time, 'P1D'), 100) IS NOT NULL);
+-----+
| cnt |
+-----+
|   2 |
+-----+
(1 row)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_agg_funcs TEST_ID: A1_B25_C1_D1
#-------------------------------------------------------------------------
SELECT count(*) cnt
FROM
  (SELECT any_value(c) AS col
   FROM test_unnest,
        unnest(a_int) AS u(c)
   WHERE s_int IN (0,
                   1,
                   2)
     OR s_int IS NULL);
+-----+
| cnt |
+-----+
|   1 |
+-----+
(1 row)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_agg_funcs TEST_ID: A1_B25_C1_D2
#-------------------------------------------------------------------------
SELECT count(*) cnt
FROM
  (SELECT any_value(c) AS col
   FROM test_unnest,
        unnest(json_value(a_nested, '$[1]' RETURNING bigint array)) AS u(c)
   WHERE s_int IN (0,
                   1,
                   2)
     OR s_int IS NULL);
+-----+
| cnt |
+-----+
|   1 |
+-----+
(1 row)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_agg_funcs TEST_ID: A1_B25_C2_D1
#-------------------------------------------------------------------------
SELECT count(*) cnt
FROM
  (SELECT any_value(s_int) AS col
   FROM test_unnest,
        unnest(a_int) AS u(c)
   WHERE s_int IN (0,
                   1,
                   2)
     OR s_int IS NULL);
+-----+
| cnt |
+-----+
|   1 |
+-----+
(1 row)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_agg_funcs TEST_ID: A1_B25_C2_D2
#-------------------------------------------------------------------------
SELECT count(*) cnt
FROM
  (SELECT any_value(s_int) AS col
   FROM test_unnest,
        unnest(json_value(a_nested, '$[1]' RETURNING bigint array)) AS u(c)
   WHERE s_int IN (0,
                   1,
                   2)
     OR s_int IS NULL);
+-----+
| cnt |
+-----+
|   1 |
+-----+
(1 row)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_agg_funcs TEST_ID: A1_B25_C3_D1
#-------------------------------------------------------------------------
SELECT count(*) cnt
FROM
  (SELECT any_value(c) AS col
   FROM test_unnest,
        unnest(a_int) AS u(c)
   WHERE s_int IN (0,
                   1,
                   2)
     OR s_int IS NULL
   GROUP BY c);
+-----+
| cnt |
+-----+
|   3 |
+-----+
(1 row)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_agg_funcs TEST_ID: A1_B25_C3_D2
#-------------------------------------------------------------------------
SELECT count(*) cnt
FROM
  (SELECT any_value(c) AS col
   FROM test_unnest,
        unnest(json_value(a_nested, '$[1]' RETURNING bigint array)) AS u(c)
   WHERE s_int IN (0,
                   1,
                   2)
     OR s_int IS NULL
   GROUP BY c);
+-----+
| cnt |
+-----+
|   3 |
+-----+
(1 row)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_agg_funcs TEST_ID: A1_B25_C4_D1
#-------------------------------------------------------------------------
SELECT count(*) cnt
FROM
  (SELECT any_value(c) AS col
   FROM test_unnest,
        unnest(a_int) AS u(c)
   WHERE s_int IN (0,
                   1,
                   2)
     OR s_int IS NULL
   GROUP BY s_int);
+-----+
| cnt |
+-----+
|   3 |
+-----+
(1 row)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_agg_funcs TEST_ID: A1_B25_C4_D2
#-------------------------------------------------------------------------
SELECT count(*) cnt
FROM
  (SELECT any_value(c) AS col
   FROM test_unnest,
        unnest(json_value(a_nested, '$[1]' RETURNING bigint array)) AS u(c)
   WHERE s_int IN (0,
                   1,
                   2)
     OR s_int IS NULL
   GROUP BY s_int);
+-----+
| cnt |
+-----+
|   3 |
+-----+
(1 row)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_agg_funcs TEST_ID: A1_B25_C5_D1
#-------------------------------------------------------------------------
SELECT count(*) cnt
FROM
  (SELECT any_value(s_int) AS col
   FROM test_unnest,
        unnest(a_int) AS u(c)
   WHERE s_int IN (0,
                   1,
                   2)
     OR s_int IS NULL
   GROUP BY c);
+-----+
| cnt |
+-----+
|   3 |
+-----+
(1 row)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_agg_funcs TEST_ID: A1_B25_C5_D2
#-------------------------------------------------------------------------
SELECT count(*) cnt
FROM
  (SELECT any_value(s_int) AS col
   FROM test_unnest,
        unnest(json_value(a_nested, '$[1]' RETURNING bigint array)) AS u(c)
   WHERE s_int IN (0,
                   1,
                   2)
     OR s_int IS NULL
   GROUP BY c);
+-----+
| cnt |
+-----+
|   3 |
+-----+
(1 row)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_agg_funcs TEST_ID: A1_B25_C6_D1
#-------------------------------------------------------------------------
SELECT count(*) cnt
FROM
  (SELECT any_value(s_int) AS col
   FROM test_unnest,
        unnest(a_int) AS u(c)
   WHERE s_int IN (0,
                   1,
                   2)
     OR s_int IS NULL
   GROUP BY s_int);
+-----+
| cnt |
+-----+
|   3 |
+-----+
(1 row)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_agg_funcs TEST_ID: A1_B25_C6_D2
#-------------------------------------------------------------------------
SELECT count(*) cnt
FROM
  (SELECT any_value(s_int) AS col
   FROM test_unnest,
        unnest(json_value(a_nested, '$[1]' RETURNING bigint array)) AS u(c)
   WHERE s_int IN (0,
                   1,
                   2)
     OR s_int IS NULL
   GROUP BY s_int);
+-----+
| cnt |
+-----+
|   3 |
+-----+
(1 row)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_agg_funcs TEST_ID: A1_B25_C7_D1
#-------------------------------------------------------------------------
SELECT count(*) cnt
FROM
  (SELECT any_value(c) AS col
   FROM test_unnest,
        unnest(a_int) AS u(c)
   WHERE s_int IN (0,
                   1,
                   2)
     OR s_int IS NULL
   GROUP BY c
   HAVING any_value(c) IS NOT NULL);
+-----+
| cnt |
+-----+
|   2 |
+-----+
(1 row)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_agg_funcs TEST_ID: A1_B25_C7_D2
#-------------------------------------------------------------------------
SELECT count(*) cnt
FROM
  (SELECT any_value(c) AS col
   FROM test_unnest,
        unnest(json_value(a_nested, '$[1]' RETURNING bigint array)) AS u(c)
   WHERE s_int IN (0,
                   1,
                   2)
     OR s_int IS NULL
   GROUP BY c
   HAVING any_value(c) IS NOT NULL);
+-----+
| cnt |
+-----+
|   2 |
+-----+
(1 row)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_agg_funcs TEST_ID: A1_B25_C8_D1
#-------------------------------------------------------------------------
SELECT count(*) cnt
FROM
  (SELECT any_value(c) AS col
   FROM test_unnest,
        unnest(a_int) AS u(c)
   WHERE s_int IN (0,
                   1,
                   2)
     OR s_int IS NULL
   GROUP BY s_int
   HAVING any_value(c) IS NOT NULL);
+-----+
| cnt |
+-----+
|   2 |
+-----+
(1 row)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_agg_funcs TEST_ID: A1_B25_C8_D2
#-------------------------------------------------------------------------
SELECT count(*) cnt
FROM
  (SELECT any_value(c) AS col
   FROM test_unnest,
        unnest(json_value(a_nested, '$[1]' RETURNING bigint array)) AS u(c)
   WHERE s_int IN (0,
                   1,
                   2)
     OR s_int IS NULL
   GROUP BY s_int
   HAVING any_value(c) IS NOT NULL);
+-----+
| cnt |
+-----+
|   2 |
+-----+
(1 row)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_agg_funcs TEST_ID: A1_B25_C9_D1
#-------------------------------------------------------------------------
SELECT count(*) cnt
FROM
  (SELECT any_value(s_int) AS col
   FROM test_unnest,
        unnest(a_int) AS u(c)
   WHERE s_int IN (0,
                   1,
                   2)
     OR s_int IS NULL
   GROUP BY c
   HAVING any_value(s_int) IS NOT NULL);
+-----+
| cnt |
+-----+
|   3 |
+-----+
(1 row)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_agg_funcs TEST_ID: A1_B25_C9_D2
#-------------------------------------------------------------------------
SELECT count(*) cnt
FROM
  (SELECT any_value(s_int) AS col
   FROM test_unnest,
        unnest(json_value(a_nested, '$[1]' RETURNING bigint array)) AS u(c)
   WHERE s_int IN (0,
                   1,
                   2)
     OR s_int IS NULL
   GROUP BY c
   HAVING any_value(s_int) IS NOT NULL);
+-----+
| cnt |
+-----+
|   3 |
+-----+
(1 row)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_agg_funcs TEST_ID: A1_B25_C10_D1
#-------------------------------------------------------------------------
SELECT count(*) cnt
FROM
  (SELECT any_value(s_int) AS col
   FROM test_unnest,
        unnest(a_int) AS u(c)
   WHERE s_int IN (0,
                   1,
                   2)
     OR s_int IS NULL
   GROUP BY s_int
   HAVING any_value(s_int) IS NOT NULL);
+-----+
| cnt |
+-----+
|   2 |
+-----+
(1 row)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_agg_funcs TEST_ID: A1_B25_C10_D2
#-------------------------------------------------------------------------
SELECT count(*) cnt
FROM
  (SELECT any_value(s_int) AS col
   FROM test_unnest,
        unnest(json_value(a_nested, '$[1]' RETURNING bigint array)) AS u(c)
   WHERE s_int IN (0,
                   1,
                   2)
     OR s_int IS NULL
   GROUP BY s_int
   HAVING any_value(s_int) IS NOT NULL);
+-----+
| cnt |
+-----+
|   2 |
+-----+
(1 row)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_agg_funcs TEST_ID: A1_B26_C1_D1
#-------------------------------------------------------------------------
SELECT c col,
       count(*) cnt,
       grouping(c) gp
FROM test_unnest,
     unnest(a_int) AS u(c)
WHERE s_int IN (0,
                1,
                2)
  OR s_int IS NULL;
QueryInterruptedException
!error

#-------------------------------------------------------------------------
# TESTCASE: test_agg_funcs TEST_ID: A1_B26_C1_D2
#-------------------------------------------------------------------------
SELECT c col,
       count(*) cnt,
       grouping(c) gp
FROM test_unnest,
     unnest(json_value(a_nested, '$[1]' RETURNING bigint array)) AS u(c)
WHERE s_int IN (0,
                1,
                2)
  OR s_int IS NULL;
QueryInterruptedException
!error

#-------------------------------------------------------------------------
# TESTCASE: test_agg_funcs TEST_ID: A1_B26_C2_D1
#-------------------------------------------------------------------------
SELECT s_int col,
       count(*) cnt,
       grouping(s_int) gp
FROM test_unnest,
     unnest(a_int) AS u(c)
WHERE s_int IN (0,
                1,
                2)
  OR s_int IS NULL;
QueryInterruptedException
!error

#-------------------------------------------------------------------------
# TESTCASE: test_agg_funcs TEST_ID: A1_B26_C2_D2
#-------------------------------------------------------------------------
SELECT s_int col,
       count(*) cnt,
       grouping(s_int) gp
FROM test_unnest,
     unnest(json_value(a_nested, '$[1]' RETURNING bigint array)) AS u(c)
WHERE s_int IN (0,
                1,
                2)
  OR s_int IS NULL;
QueryInterruptedException
!error

#-------------------------------------------------------------------------
# TESTCASE: test_agg_funcs TEST_ID: A1_B26_C3_D1
#-------------------------------------------------------------------------
SELECT c col,
       count(*) cnt,
       grouping(c) gp
FROM test_unnest,
     unnest(a_int) AS u(c)
WHERE s_int IN (0,
                1,
                2)
  OR s_int IS NULL
GROUP BY c;
+-----+-----+----+
| col | cnt | gp |
+-----+-----+----+
|   1 |   3 |  0 |
|   2 |   3 |  0 |
|     |   3 |  0 |
+-----+-----+----+
(3 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_agg_funcs TEST_ID: A1_B26_C3_D2
#-------------------------------------------------------------------------
SELECT c col,
       count(*) cnt,
       grouping(c) gp
FROM test_unnest,
     unnest(json_value(a_nested, '$[1]' RETURNING bigint array)) AS u(c)
WHERE s_int IN (0,
                1,
                2)
  OR s_int IS NULL
GROUP BY c;
+-----+-----+----+
| col | cnt | gp |
+-----+-----+----+
|   1 |   3 |  0 |
|   2 |   3 |  0 |
|     |   3 |  0 |
+-----+-----+----+
(3 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_agg_funcs TEST_ID: A1_B26_C4_D1
#-------------------------------------------------------------------------
SELECT c col,
       count(*) cnt,
       grouping(c) gp
FROM test_unnest,
     unnest(a_int) AS u(c)
WHERE s_int IN (0,
                1,
                2)
  OR s_int IS NULL
GROUP BY s_int;
QueryInterruptedException
!error

#-------------------------------------------------------------------------
# TESTCASE: test_agg_funcs TEST_ID: A1_B26_C4_D2
#-------------------------------------------------------------------------
SELECT c col,
       count(*) cnt,
       grouping(c) gp
FROM test_unnest,
     unnest(json_value(a_nested, '$[1]' RETURNING bigint array)) AS u(c)
WHERE s_int IN (0,
                1,
                2)
  OR s_int IS NULL
GROUP BY s_int;
QueryInterruptedException
!error

#-------------------------------------------------------------------------
# TESTCASE: test_agg_funcs TEST_ID: A1_B26_C5_D1
#-------------------------------------------------------------------------
SELECT s_int col,
       count(*) cnt,
       grouping(s_int) gp
FROM test_unnest,
     unnest(a_int) AS u(c)
WHERE s_int IN (0,
                1,
                2)
  OR s_int IS NULL
GROUP BY c;
QueryInterruptedException
!error

#-------------------------------------------------------------------------
# TESTCASE: test_agg_funcs TEST_ID: A1_B26_C5_D2
#-------------------------------------------------------------------------
SELECT s_int col,
       count(*) cnt,
       grouping(s_int) gp
FROM test_unnest,
     unnest(json_value(a_nested, '$[1]' RETURNING bigint array)) AS u(c)
WHERE s_int IN (0,
                1,
                2)
  OR s_int IS NULL
GROUP BY c;
QueryInterruptedException
!error

#-------------------------------------------------------------------------
# TESTCASE: test_agg_funcs TEST_ID: A1_B26_C6_D1
#-------------------------------------------------------------------------
SELECT s_int col,
       count(*) cnt,
       grouping(s_int) gp
FROM test_unnest,
     unnest(a_int) AS u(c)
WHERE s_int IN (0,
                1,
                2)
  OR s_int IS NULL
GROUP BY s_int;
+-----+-----+----+
| col | cnt | gp |
+-----+-----+----+
|   1 |   3 |  0 |
|   2 |   3 |  0 |
|     |   3 |  0 |
+-----+-----+----+
(3 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_agg_funcs TEST_ID: A1_B26_C6_D2
#-------------------------------------------------------------------------
SELECT s_int col,
       count(*) cnt,
       grouping(s_int) gp
FROM test_unnest,
     unnest(json_value(a_nested, '$[1]' RETURNING bigint array)) AS u(c)
WHERE s_int IN (0,
                1,
                2)
  OR s_int IS NULL
GROUP BY s_int;
+-----+-----+----+
| col | cnt | gp |
+-----+-----+----+
|   1 |   3 |  0 |
|   2 |   3 |  0 |
|     |   3 |  0 |
+-----+-----+----+
(3 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_agg_funcs TEST_ID: A1_B26_C7_D1
#-------------------------------------------------------------------------
SELECT c col,
       count(*) cnt,
       grouping(c) gp
FROM test_unnest,
     unnest(a_int) AS u(c)
WHERE s_int IN (0,
                1,
                2)
  OR s_int IS NULL
GROUP BY c
HAVING grouping(c) IS NOT NULL;
+-----+-----+----+
| col | cnt | gp |
+-----+-----+----+
|   1 |   3 |  0 |
|   2 |   3 |  0 |
|     |   3 |  0 |
+-----+-----+----+
(3 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_agg_funcs TEST_ID: A1_B26_C7_D2
#-------------------------------------------------------------------------
SELECT c col,
       count(*) cnt,
       grouping(c) gp
FROM test_unnest,
     unnest(json_value(a_nested, '$[1]' RETURNING bigint array)) AS u(c)
WHERE s_int IN (0,
                1,
                2)
  OR s_int IS NULL
GROUP BY c
HAVING grouping(c) IS NOT NULL;
+-----+-----+----+
| col | cnt | gp |
+-----+-----+----+
|   1 |   3 |  0 |
|   2 |   3 |  0 |
|     |   3 |  0 |
+-----+-----+----+
(3 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_agg_funcs TEST_ID: A1_B26_C8_D1
#-------------------------------------------------------------------------
SELECT c col,
       count(*) cnt,
       grouping(c) gp
FROM test_unnest,
     unnest(a_int) AS u(c)
WHERE s_int IN (0,
                1,
                2)
  OR s_int IS NULL
GROUP BY s_int
HAVING grouping(c) IS NOT NULL;
QueryInterruptedException
!error

#-------------------------------------------------------------------------
# TESTCASE: test_agg_funcs TEST_ID: A1_B26_C8_D2
#-------------------------------------------------------------------------
SELECT c col,
       count(*) cnt,
       grouping(c) gp
FROM test_unnest,
     unnest(json_value(a_nested, '$[1]' RETURNING bigint array)) AS u(c)
WHERE s_int IN (0,
                1,
                2)
  OR s_int IS NULL
GROUP BY s_int
HAVING grouping(c) IS NOT NULL;
QueryInterruptedException
!error

#-------------------------------------------------------------------------
# TESTCASE: test_agg_funcs TEST_ID: A1_B26_C9_D1
#-------------------------------------------------------------------------
SELECT s_int col,
       count(*) cnt,
       grouping(s_int) gp
FROM test_unnest,
     unnest(a_int) AS u(c)
WHERE s_int IN (0,
                1,
                2)
  OR s_int IS NULL
GROUP BY c
HAVING grouping(s_int) IS NOT NULL;
QueryInterruptedException
!error

#-------------------------------------------------------------------------
# TESTCASE: test_agg_funcs TEST_ID: A1_B26_C9_D2
#-------------------------------------------------------------------------
SELECT s_int col,
       count(*) cnt,
       grouping(s_int) gp
FROM test_unnest,
     unnest(json_value(a_nested, '$[1]' RETURNING bigint array)) AS u(c)
WHERE s_int IN (0,
                1,
                2)
  OR s_int IS NULL
GROUP BY c
HAVING grouping(s_int) IS NOT NULL;
QueryInterruptedException
!error

#-------------------------------------------------------------------------
# TESTCASE: test_agg_funcs TEST_ID: A1_B26_C10_D1
#-------------------------------------------------------------------------
SELECT s_int col,
       count(*) cnt,
       grouping(s_int) gp
FROM test_unnest,
     unnest(a_int) AS u(c)
WHERE s_int IN (0,
                1,
                2)
  OR s_int IS NULL
GROUP BY s_int
HAVING grouping(s_int) IS NOT NULL;
+-----+-----+----+
| col | cnt | gp |
+-----+-----+----+
|   1 |   3 |  0 |
|   2 |   3 |  0 |
|     |   3 |  0 |
+-----+-----+----+
(3 rows)

!ok

