!set useApproximateCountDistinct false
!use druidtest://?componentSupplier=StandardComponentSupplier&datasets=sql/src/test/quidem/qatests/qaUnnest/array
!set outputformat mysql
#-------------------------------------------------------------------------
# TESTCASE: test_array_funcs TEST_ID: A1_B10_C7_D2
#-------------------------------------------------------------------------
SELECT array_append(c,array[c, c, 3]) AS col
FROM test_unnest,
     unnest(json_value(a_nested, '$[1]' RETURNING bigint array)) AS u(c)
WHERE (s_int IN (0,
                 1,
                 2)
       OR s_int IS NULL)
  AND (array_append(c,array[c, c, 3])<ARRAY[99999]);
Cannot apply 'ARRAY_APPEND' to arguments of type 'ARRAY_APPEND(<BIGINT>, <BIGINT ARRAY>)'
!error

#-------------------------------------------------------------------------
# TESTCASE: test_array_funcs TEST_ID: A1_B10_C8_D1
#-------------------------------------------------------------------------
SELECT array_append(s_int,array[s_int, c, 3]) AS col
FROM test_unnest,
     unnest(a_int) AS u(c)
WHERE (s_int IN (0,
                 1,
                 2)
       OR s_int IS NULL)
  AND (array_append(s_int,array[s_int, c, 3])<ARRAY[99999]);
Cannot apply 'ARRAY_APPEND' to arguments of type 'ARRAY_APPEND(<BIGINT>, <BIGINT ARRAY>)'
!error

#-------------------------------------------------------------------------
# TESTCASE: test_array_funcs TEST_ID: A1_B10_C8_D2
#-------------------------------------------------------------------------
SELECT array_append(s_int,array[s_int, c, 3]) AS col
FROM test_unnest,
     unnest(json_value(a_nested, '$[1]' RETURNING bigint array)) AS u(c)
WHERE (s_int IN (0,
                 1,
                 2)
       OR s_int IS NULL)
  AND (array_append(s_int,array[s_int, c, 3])<ARRAY[99999]);
Cannot apply 'ARRAY_APPEND' to arguments of type 'ARRAY_APPEND(<BIGINT>, <BIGINT ARRAY>)'
!error

#-------------------------------------------------------------------------
# TESTCASE: test_array_funcs TEST_ID: A1_B10_C9_D1
#-------------------------------------------------------------------------
SELECT array_append(c,array[c, s_int, 3]) AS col
FROM test_unnest,
     unnest(a_int) AS u(c)
WHERE (s_int IN (0,
                 1,
                 2)
       OR s_int IS NULL)
  AND (array_append(c,array[c, s_int, 3])<ARRAY[99999]);
Cannot apply 'ARRAY_APPEND' to arguments of type 'ARRAY_APPEND(<BIGINT>, <BIGINT ARRAY>)'
!error

#-------------------------------------------------------------------------
# TESTCASE: test_array_funcs TEST_ID: A1_B10_C9_D2
#-------------------------------------------------------------------------
SELECT array_append(c,array[c, s_int, 3]) AS col
FROM test_unnest,
     unnest(json_value(a_nested, '$[1]' RETURNING bigint array)) AS u(c)
WHERE (s_int IN (0,
                 1,
                 2)
       OR s_int IS NULL)
  AND (array_append(c,array[c, s_int, 3])<ARRAY[99999]);
Cannot apply 'ARRAY_APPEND' to arguments of type 'ARRAY_APPEND(<BIGINT>, <BIGINT ARRAY>)'
!error

#-------------------------------------------------------------------------
# TESTCASE: test_array_funcs TEST_ID: A1_B10_C10_D1
#-------------------------------------------------------------------------
SELECT array_append(s_int,array[s_int, s_int, 3]) AS col
FROM test_unnest,
     unnest(a_int) AS u(c)
WHERE (s_int IN (0,
                 1,
                 2)
       OR s_int IS NULL)
  AND (array_append(s_int,array[s_int, s_int, 3])<ARRAY[99999]);
Cannot apply 'ARRAY_APPEND' to arguments of type 'ARRAY_APPEND(<BIGINT>, <BIGINT ARRAY>)'
!error

#-------------------------------------------------------------------------
# TESTCASE: test_array_funcs TEST_ID: A1_B10_C10_D2
#-------------------------------------------------------------------------
SELECT array_append(s_int,array[s_int, s_int, 3]) AS col
FROM test_unnest,
     unnest(json_value(a_nested, '$[1]' RETURNING bigint array)) AS u(c)
WHERE (s_int IN (0,
                 1,
                 2)
       OR s_int IS NULL)
  AND (array_append(s_int,array[s_int, s_int, 3])<ARRAY[99999]);
Cannot apply 'ARRAY_APPEND' to arguments of type 'ARRAY_APPEND(<BIGINT>, <BIGINT ARRAY>)'
!error

#-------------------------------------------------------------------------
# TESTCASE: test_array_funcs TEST_ID: A1_B10_C11_D1
#-------------------------------------------------------------------------
SELECT array_append(array[c, c, 3],array[c, c, 3]) AS col
FROM test_unnest,
     unnest(a_int) AS u(c)
WHERE (s_int IN (0,
                 1,
                 2)
       OR s_int IS NULL)
  AND (array_append(array[c, c, 3],array[c, c, 3])<ARRAY[99999]);
Cannot apply 'ARRAY_APPEND' to arguments of type 'ARRAY_APPEND(<BIGINT ARRAY>, <BIGINT ARRAY>)'
!error

#-------------------------------------------------------------------------
# TESTCASE: test_array_funcs TEST_ID: A1_B10_C11_D2
#-------------------------------------------------------------------------
SELECT array_append(array[c, c, 3],array[c, c, 3]) AS col
FROM test_unnest,
     unnest(json_value(a_nested, '$[1]' RETURNING bigint array)) AS u(c)
WHERE (s_int IN (0,
                 1,
                 2)
       OR s_int IS NULL)
  AND (array_append(array[c, c, 3],array[c, c, 3])<ARRAY[99999]);
Cannot apply 'ARRAY_APPEND' to arguments of type 'ARRAY_APPEND(<BIGINT ARRAY>, <BIGINT ARRAY>)'
!error

#-------------------------------------------------------------------------
# TESTCASE: test_array_funcs TEST_ID: A1_B10_C12_D1
#-------------------------------------------------------------------------
SELECT array_append(array[s_int, c, 3],array[s_int, c, 3]) AS col
FROM test_unnest,
     unnest(a_int) AS u(c)
WHERE (s_int IN (0,
                 1,
                 2)
       OR s_int IS NULL)
  AND (array_append(array[s_int, c, 3],array[s_int, c, 3])<ARRAY[99999]);
Cannot apply 'ARRAY_APPEND' to arguments of type 'ARRAY_APPEND(<BIGINT ARRAY>, <BIGINT ARRAY>)'
!error

#-------------------------------------------------------------------------
# TESTCASE: test_array_funcs TEST_ID: A1_B10_C12_D2
#-------------------------------------------------------------------------
SELECT array_append(array[s_int, c, 3],array[s_int, c, 3]) AS col
FROM test_unnest,
     unnest(json_value(a_nested, '$[1]' RETURNING bigint array)) AS u(c)
WHERE (s_int IN (0,
                 1,
                 2)
       OR s_int IS NULL)
  AND (array_append(array[s_int, c, 3],array[s_int, c, 3])<ARRAY[99999]);
Cannot apply 'ARRAY_APPEND' to arguments of type 'ARRAY_APPEND(<BIGINT ARRAY>, <BIGINT ARRAY>)'
!error

#-------------------------------------------------------------------------
# TESTCASE: test_array_funcs TEST_ID: A1_B10_C13_D1
#-------------------------------------------------------------------------
SELECT array_append(array[c, s_int, 3],array[c, s_int, 3]) AS col
FROM test_unnest,
     unnest(a_int) AS u(c)
WHERE (s_int IN (0,
                 1,
                 2)
       OR s_int IS NULL)
  AND (array_append(array[c, s_int, 3],array[c, s_int, 3])<ARRAY[99999]);
Cannot apply 'ARRAY_APPEND' to arguments of type 'ARRAY_APPEND(<BIGINT ARRAY>, <BIGINT ARRAY>)'
!error

#-------------------------------------------------------------------------
# TESTCASE: test_array_funcs TEST_ID: A1_B10_C13_D2
#-------------------------------------------------------------------------
SELECT array_append(array[c, s_int, 3],array[c, s_int, 3]) AS col
FROM test_unnest,
     unnest(json_value(a_nested, '$[1]' RETURNING bigint array)) AS u(c)
WHERE (s_int IN (0,
                 1,
                 2)
       OR s_int IS NULL)
  AND (array_append(array[c, s_int, 3],array[c, s_int, 3])<ARRAY[99999]);
Cannot apply 'ARRAY_APPEND' to arguments of type 'ARRAY_APPEND(<BIGINT ARRAY>, <BIGINT ARRAY>)'
!error

#-------------------------------------------------------------------------
# TESTCASE: test_array_funcs TEST_ID: A1_B10_C14_D1
#-------------------------------------------------------------------------
SELECT array_append(array[s_int, s_int, 3],array[s_int, s_int, 3]) AS col
FROM test_unnest,
     unnest(a_int) AS u(c)
WHERE (s_int IN (0,
                 1,
                 2)
       OR s_int IS NULL)
  AND (array_append(array[s_int, s_int, 3],array[s_int, s_int, 3])<ARRAY[99999]);
Cannot apply 'ARRAY_APPEND' to arguments of type 'ARRAY_APPEND(<BIGINT ARRAY>, <BIGINT ARRAY>)'
!error

#-------------------------------------------------------------------------
# TESTCASE: test_array_funcs TEST_ID: A1_B10_C14_D2
#-------------------------------------------------------------------------
SELECT array_append(array[s_int, s_int, 3],array[s_int, s_int, 3]) AS col
FROM test_unnest,
     unnest(json_value(a_nested, '$[1]' RETURNING bigint array)) AS u(c)
WHERE (s_int IN (0,
                 1,
                 2)
       OR s_int IS NULL)
  AND (array_append(array[s_int, s_int, 3],array[s_int, s_int, 3])<ARRAY[99999]);
Cannot apply 'ARRAY_APPEND' to arguments of type 'ARRAY_APPEND(<BIGINT ARRAY>, <BIGINT ARRAY>)'
!error

#-------------------------------------------------------------------------
# TESTCASE: test_array_funcs TEST_ID: A1_B11_C1_D1
#-------------------------------------------------------------------------
SELECT array_concat(c, s_int) AS col
FROM test_unnest,
     unnest(a_int) AS u(c)
WHERE (s_int IN (0,
                 1,
                 2)
       OR s_int IS NULL)
  AND (array_concat(c, s_int)<ARRAY[99999]);
Cannot apply 'ARRAY_CONCAT' to arguments of type 'ARRAY_CONCAT(<BIGINT>, <BIGINT>)'
!error

#-------------------------------------------------------------------------
# TESTCASE: test_array_funcs TEST_ID: A1_B11_C1_D2
#-------------------------------------------------------------------------
SELECT array_concat(c, s_int) AS col
FROM test_unnest,
     unnest(json_value(a_nested, '$[1]' RETURNING bigint array)) AS u(c)
WHERE (s_int IN (0,
                 1,
                 2)
       OR s_int IS NULL)
  AND (array_concat(c, s_int)<ARRAY[99999]);
Cannot apply 'ARRAY_CONCAT' to arguments of type 'ARRAY_CONCAT(<BIGINT>, <BIGINT>)'
!error

#-------------------------------------------------------------------------
# TESTCASE: test_array_funcs TEST_ID: A1_B11_C2_D1
#-------------------------------------------------------------------------
SELECT array_concat(s_int, c) AS col
FROM test_unnest,
     unnest(a_int) AS u(c)
WHERE (s_int IN (0,
                 1,
                 2)
       OR s_int IS NULL)
  AND (array_concat(s_int, c)<ARRAY[99999]);
Cannot apply 'ARRAY_CONCAT' to arguments of type 'ARRAY_CONCAT(<BIGINT>, <BIGINT>)'
!error

#-------------------------------------------------------------------------
# TESTCASE: test_array_funcs TEST_ID: A1_B11_C2_D2
#-------------------------------------------------------------------------
SELECT array_concat(s_int, c) AS col
FROM test_unnest,
     unnest(json_value(a_nested, '$[1]' RETURNING bigint array)) AS u(c)
WHERE (s_int IN (0,
                 1,
                 2)
       OR s_int IS NULL)
  AND (array_concat(s_int, c)<ARRAY[99999]);
Cannot apply 'ARRAY_CONCAT' to arguments of type 'ARRAY_CONCAT(<BIGINT>, <BIGINT>)'
!error

#-------------------------------------------------------------------------
# TESTCASE: test_array_funcs TEST_ID: A1_B11_C3_D1
#-------------------------------------------------------------------------
SELECT array_concat(array[c, c, 3],c) AS col
FROM test_unnest,
     unnest(a_int) AS u(c)
WHERE (s_int IN (0,
                 1,
                 2)
       OR s_int IS NULL)
  AND (array_concat(array[c, c, 3],c)<ARRAY[99999]);
Cannot apply 'ARRAY_CONCAT' to arguments of type 'ARRAY_CONCAT(<BIGINT ARRAY>, <BIGINT>)'
!error

#-------------------------------------------------------------------------
# TESTCASE: test_array_funcs TEST_ID: A1_B11_C3_D2
#-------------------------------------------------------------------------
SELECT array_concat(array[c, c, 3],c) AS col
FROM test_unnest,
     unnest(json_value(a_nested, '$[1]' RETURNING bigint array)) AS u(c)
WHERE (s_int IN (0,
                 1,
                 2)
       OR s_int IS NULL)
  AND (array_concat(array[c, c, 3],c)<ARRAY[99999]);
Cannot apply 'ARRAY_CONCAT' to arguments of type 'ARRAY_CONCAT(<BIGINT ARRAY>, <BIGINT>)'
!error

#-------------------------------------------------------------------------
# TESTCASE: test_array_funcs TEST_ID: A1_B11_C4_D1
#-------------------------------------------------------------------------
SELECT array_concat(array[s_int, c, 3],s_int) AS col
FROM test_unnest,
     unnest(a_int) AS u(c)
WHERE (s_int IN (0,
                 1,
                 2)
       OR s_int IS NULL)
  AND (array_concat(array[s_int, c, 3],s_int)<ARRAY[99999]);
Cannot apply 'ARRAY_CONCAT' to arguments of type 'ARRAY_CONCAT(<BIGINT ARRAY>, <BIGINT>)'
!error

#-------------------------------------------------------------------------
# TESTCASE: test_array_funcs TEST_ID: A1_B11_C4_D2
#-------------------------------------------------------------------------
SELECT array_concat(array[s_int, c, 3],s_int) AS col
FROM test_unnest,
     unnest(json_value(a_nested, '$[1]' RETURNING bigint array)) AS u(c)
WHERE (s_int IN (0,
                 1,
                 2)
       OR s_int IS NULL)
  AND (array_concat(array[s_int, c, 3],s_int)<ARRAY[99999]);
Cannot apply 'ARRAY_CONCAT' to arguments of type 'ARRAY_CONCAT(<BIGINT ARRAY>, <BIGINT>)'
!error

#-------------------------------------------------------------------------
# TESTCASE: test_array_funcs TEST_ID: A1_B11_C5_D1
#-------------------------------------------------------------------------
SELECT array_concat(array[c, s_int, 3],c) AS col
FROM test_unnest,
     unnest(a_int) AS u(c)
WHERE (s_int IN (0,
                 1,
                 2)
       OR s_int IS NULL)
  AND (array_concat(array[c, s_int, 3],c)<ARRAY[99999]);
Cannot apply 'ARRAY_CONCAT' to arguments of type 'ARRAY_CONCAT(<BIGINT ARRAY>, <BIGINT>)'
!error

#-------------------------------------------------------------------------
# TESTCASE: test_array_funcs TEST_ID: A1_B11_C5_D2
#-------------------------------------------------------------------------
SELECT array_concat(array[c, s_int, 3],c) AS col
FROM test_unnest,
     unnest(json_value(a_nested, '$[1]' RETURNING bigint array)) AS u(c)
WHERE (s_int IN (0,
                 1,
                 2)
       OR s_int IS NULL)
  AND (array_concat(array[c, s_int, 3],c)<ARRAY[99999]);
Cannot apply 'ARRAY_CONCAT' to arguments of type 'ARRAY_CONCAT(<BIGINT ARRAY>, <BIGINT>)'
!error

#-------------------------------------------------------------------------
# TESTCASE: test_array_funcs TEST_ID: A1_B11_C6_D1
#-------------------------------------------------------------------------
SELECT array_concat(array[s_int, s_int, 3],s_int) AS col
FROM test_unnest,
     unnest(a_int) AS u(c)
WHERE (s_int IN (0,
                 1,
                 2)
       OR s_int IS NULL)
  AND (array_concat(array[s_int, s_int, 3],s_int)<ARRAY[99999]);
Cannot apply 'ARRAY_CONCAT' to arguments of type 'ARRAY_CONCAT(<BIGINT ARRAY>, <BIGINT>)'
!error

#-------------------------------------------------------------------------
# TESTCASE: test_array_funcs TEST_ID: A1_B11_C6_D2
#-------------------------------------------------------------------------
SELECT array_concat(array[s_int, s_int, 3],s_int) AS col
FROM test_unnest,
     unnest(json_value(a_nested, '$[1]' RETURNING bigint array)) AS u(c)
WHERE (s_int IN (0,
                 1,
                 2)
       OR s_int IS NULL)
  AND (array_concat(array[s_int, s_int, 3],s_int)<ARRAY[99999]);
Cannot apply 'ARRAY_CONCAT' to arguments of type 'ARRAY_CONCAT(<BIGINT ARRAY>, <BIGINT>)'
!error

#-------------------------------------------------------------------------
# TESTCASE: test_array_funcs TEST_ID: A1_B11_C7_D1
#-------------------------------------------------------------------------
SELECT array_concat(c,array[c, c, 3]) AS col
FROM test_unnest,
     unnest(a_int) AS u(c)
WHERE (s_int IN (0,
                 1,
                 2)
       OR s_int IS NULL)
  AND (array_concat(c,array[c, c, 3])<ARRAY[99999]);
Cannot apply 'ARRAY_CONCAT' to arguments of type 'ARRAY_CONCAT(<BIGINT>, <BIGINT ARRAY>)'
!error

#-------------------------------------------------------------------------
# TESTCASE: test_array_funcs TEST_ID: A1_B11_C7_D2
#-------------------------------------------------------------------------
SELECT array_concat(c,array[c, c, 3]) AS col
FROM test_unnest,
     unnest(json_value(a_nested, '$[1]' RETURNING bigint array)) AS u(c)
WHERE (s_int IN (0,
                 1,
                 2)
       OR s_int IS NULL)
  AND (array_concat(c,array[c, c, 3])<ARRAY[99999]);
Cannot apply 'ARRAY_CONCAT' to arguments of type 'ARRAY_CONCAT(<BIGINT>, <BIGINT ARRAY>)'
!error

#-------------------------------------------------------------------------
# TESTCASE: test_array_funcs TEST_ID: A1_B11_C8_D1
#-------------------------------------------------------------------------
SELECT array_concat(s_int,array[s_int, c, 3]) AS col
FROM test_unnest,
     unnest(a_int) AS u(c)
WHERE (s_int IN (0,
                 1,
                 2)
       OR s_int IS NULL)
  AND (array_concat(s_int,array[s_int, c, 3])<ARRAY[99999]);
Cannot apply 'ARRAY_CONCAT' to arguments of type 'ARRAY_CONCAT(<BIGINT>, <BIGINT ARRAY>)'
!error

#-------------------------------------------------------------------------
# TESTCASE: test_array_funcs TEST_ID: A1_B11_C8_D2
#-------------------------------------------------------------------------
SELECT array_concat(s_int,array[s_int, c, 3]) AS col
FROM test_unnest,
     unnest(json_value(a_nested, '$[1]' RETURNING bigint array)) AS u(c)
WHERE (s_int IN (0,
                 1,
                 2)
       OR s_int IS NULL)
  AND (array_concat(s_int,array[s_int, c, 3])<ARRAY[99999]);
Cannot apply 'ARRAY_CONCAT' to arguments of type 'ARRAY_CONCAT(<BIGINT>, <BIGINT ARRAY>)'
!error

#-------------------------------------------------------------------------
# TESTCASE: test_array_funcs TEST_ID: A1_B11_C9_D1
#-------------------------------------------------------------------------
SELECT array_concat(c,array[c, s_int, 3]) AS col
FROM test_unnest,
     unnest(a_int) AS u(c)
WHERE (s_int IN (0,
                 1,
                 2)
       OR s_int IS NULL)
  AND (array_concat(c,array[c, s_int, 3])<ARRAY[99999]);
Cannot apply 'ARRAY_CONCAT' to arguments of type 'ARRAY_CONCAT(<BIGINT>, <BIGINT ARRAY>)'
!error

#-------------------------------------------------------------------------
# TESTCASE: test_array_funcs TEST_ID: A1_B11_C9_D2
#-------------------------------------------------------------------------
SELECT array_concat(c,array[c, s_int, 3]) AS col
FROM test_unnest,
     unnest(json_value(a_nested, '$[1]' RETURNING bigint array)) AS u(c)
WHERE (s_int IN (0,
                 1,
                 2)
       OR s_int IS NULL)
  AND (array_concat(c,array[c, s_int, 3])<ARRAY[99999]);
Cannot apply 'ARRAY_CONCAT' to arguments of type 'ARRAY_CONCAT(<BIGINT>, <BIGINT ARRAY>)'
!error

#-------------------------------------------------------------------------
# TESTCASE: test_array_funcs TEST_ID: A1_B11_C10_D1
#-------------------------------------------------------------------------
SELECT array_concat(s_int,array[s_int, s_int, 3]) AS col
FROM test_unnest,
     unnest(a_int) AS u(c)
WHERE (s_int IN (0,
                 1,
                 2)
       OR s_int IS NULL)
  AND (array_concat(s_int,array[s_int, s_int, 3])<ARRAY[99999]);
Cannot apply 'ARRAY_CONCAT' to arguments of type 'ARRAY_CONCAT(<BIGINT>, <BIGINT ARRAY>)'
!error

#-------------------------------------------------------------------------
# TESTCASE: test_array_funcs TEST_ID: A1_B11_C10_D2
#-------------------------------------------------------------------------
SELECT array_concat(s_int,array[s_int, s_int, 3]) AS col
FROM test_unnest,
     unnest(json_value(a_nested, '$[1]' RETURNING bigint array)) AS u(c)
WHERE (s_int IN (0,
                 1,
                 2)
       OR s_int IS NULL)
  AND (array_concat(s_int,array[s_int, s_int, 3])<ARRAY[99999]);
Cannot apply 'ARRAY_CONCAT' to arguments of type 'ARRAY_CONCAT(<BIGINT>, <BIGINT ARRAY>)'
!error

#-------------------------------------------------------------------------
# TESTCASE: test_array_funcs TEST_ID: A1_B11_C11_D1
#-------------------------------------------------------------------------
SELECT array_concat(array[c, c, 3],array[c, c, 3]) AS col
FROM test_unnest,
     unnest(a_int) AS u(c)
WHERE (s_int IN (0,
                 1,
                 2)
       OR s_int IS NULL)
  AND (array_concat(array[c, c, 3],array[c, c, 3])<ARRAY[99999]);
+--------------------------------+
| col                            |
+--------------------------------+
| [1, 1, 3, 1, 1, 3]             |
| [1, 1, 3, 1, 1, 3]             |
| [1, 1, 3, 1, 1, 3]             |
| [2, 2, 3, 2, 2, 3]             |
| [2, 2, 3, 2, 2, 3]             |
| [2, 2, 3, 2, 2, 3]             |
| [null, null, 3, null, null, 3] |
| [null, null, 3, null, null, 3] |
| [null, null, 3, null, null, 3] |
+--------------------------------+
(9 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_array_funcs TEST_ID: A1_B11_C11_D2
#-------------------------------------------------------------------------
SELECT array_concat(array[c, c, 3],array[c, c, 3]) AS col
FROM test_unnest,
     unnest(json_value(a_nested, '$[1]' RETURNING bigint array)) AS u(c)
WHERE (s_int IN (0,
                 1,
                 2)
       OR s_int IS NULL)
  AND (array_concat(array[c, c, 3],array[c, c, 3])<ARRAY[99999]);
+--------------------------------+
| col                            |
+--------------------------------+
| [1, 1, 3, 1, 1, 3]             |
| [1, 1, 3, 1, 1, 3]             |
| [1, 1, 3, 1, 1, 3]             |
| [2, 2, 3, 2, 2, 3]             |
| [2, 2, 3, 2, 2, 3]             |
| [2, 2, 3, 2, 2, 3]             |
| [null, null, 3, null, null, 3] |
| [null, null, 3, null, null, 3] |
| [null, null, 3, null, null, 3] |
+--------------------------------+
(9 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_array_funcs TEST_ID: A1_B11_C12_D1
#-------------------------------------------------------------------------
SELECT array_concat(array[s_int, c, 3],array[s_int, c, 3]) AS col
FROM test_unnest,
     unnest(a_int) AS u(c)
WHERE (s_int IN (0,
                 1,
                 2)
       OR s_int IS NULL)
  AND (array_concat(array[s_int, c, 3],array[s_int, c, 3])<ARRAY[99999]);
+--------------------------------+
| col                            |
+--------------------------------+
| [1, 1, 3, 1, 1, 3]             |
| [1, 2, 3, 1, 2, 3]             |
| [1, null, 3, 1, null, 3]       |
| [2, 1, 3, 2, 1, 3]             |
| [2, 2, 3, 2, 2, 3]             |
| [2, null, 3, 2, null, 3]       |
| [null, 1, 3, null, 1, 3]       |
| [null, 2, 3, null, 2, 3]       |
| [null, null, 3, null, null, 3] |
+--------------------------------+
(9 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_array_funcs TEST_ID: A1_B11_C12_D2
#-------------------------------------------------------------------------
SELECT array_concat(array[s_int, c, 3],array[s_int, c, 3]) AS col
FROM test_unnest,
     unnest(json_value(a_nested, '$[1]' RETURNING bigint array)) AS u(c)
WHERE (s_int IN (0,
                 1,
                 2)
       OR s_int IS NULL)
  AND (array_concat(array[s_int, c, 3],array[s_int, c, 3])<ARRAY[99999]);
+--------------------------------+
| col                            |
+--------------------------------+
| [1, 1, 3, 1, 1, 3]             |
| [1, 2, 3, 1, 2, 3]             |
| [1, null, 3, 1, null, 3]       |
| [2, 1, 3, 2, 1, 3]             |
| [2, 2, 3, 2, 2, 3]             |
| [2, null, 3, 2, null, 3]       |
| [null, 1, 3, null, 1, 3]       |
| [null, 2, 3, null, 2, 3]       |
| [null, null, 3, null, null, 3] |
+--------------------------------+
(9 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_array_funcs TEST_ID: A1_B11_C13_D1
#-------------------------------------------------------------------------
SELECT array_concat(array[c, s_int, 3],array[c, s_int, 3]) AS col
FROM test_unnest,
     unnest(a_int) AS u(c)
WHERE (s_int IN (0,
                 1,
                 2)
       OR s_int IS NULL)
  AND (array_concat(array[c, s_int, 3],array[c, s_int, 3])<ARRAY[99999]);
+--------------------------------+
| col                            |
+--------------------------------+
| [1, 1, 3, 1, 1, 3]             |
| [1, 2, 3, 1, 2, 3]             |
| [1, null, 3, 1, null, 3]       |
| [2, 1, 3, 2, 1, 3]             |
| [2, 2, 3, 2, 2, 3]             |
| [2, null, 3, 2, null, 3]       |
| [null, 1, 3, null, 1, 3]       |
| [null, 2, 3, null, 2, 3]       |
| [null, null, 3, null, null, 3] |
+--------------------------------+
(9 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_array_funcs TEST_ID: A1_B11_C13_D2
#-------------------------------------------------------------------------
SELECT array_concat(array[c, s_int, 3],array[c, s_int, 3]) AS col
FROM test_unnest,
     unnest(json_value(a_nested, '$[1]' RETURNING bigint array)) AS u(c)
WHERE (s_int IN (0,
                 1,
                 2)
       OR s_int IS NULL)
  AND (array_concat(array[c, s_int, 3],array[c, s_int, 3])<ARRAY[99999]);
+--------------------------------+
| col                            |
+--------------------------------+
| [1, 1, 3, 1, 1, 3]             |
| [1, 2, 3, 1, 2, 3]             |
| [1, null, 3, 1, null, 3]       |
| [2, 1, 3, 2, 1, 3]             |
| [2, 2, 3, 2, 2, 3]             |
| [2, null, 3, 2, null, 3]       |
| [null, 1, 3, null, 1, 3]       |
| [null, 2, 3, null, 2, 3]       |
| [null, null, 3, null, null, 3] |
+--------------------------------+
(9 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_array_funcs TEST_ID: A1_B11_C14_D1
#-------------------------------------------------------------------------
SELECT array_concat(array[s_int, s_int, 3],array[s_int, s_int, 3]) AS col
FROM test_unnest,
     unnest(a_int) AS u(c)
WHERE (s_int IN (0,
                 1,
                 2)
       OR s_int IS NULL)
  AND (array_concat(array[s_int, s_int, 3],array[s_int, s_int, 3])<ARRAY[99999]);
+--------------------------------+
| col                            |
+--------------------------------+
| [1, 1, 3, 1, 1, 3]             |
| [1, 1, 3, 1, 1, 3]             |
| [1, 1, 3, 1, 1, 3]             |
| [2, 2, 3, 2, 2, 3]             |
| [2, 2, 3, 2, 2, 3]             |
| [2, 2, 3, 2, 2, 3]             |
| [null, null, 3, null, null, 3] |
| [null, null, 3, null, null, 3] |
| [null, null, 3, null, null, 3] |
+--------------------------------+
(9 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_array_funcs TEST_ID: A1_B11_C14_D2
#-------------------------------------------------------------------------
SELECT array_concat(array[s_int, s_int, 3],array[s_int, s_int, 3]) AS col
FROM test_unnest,
     unnest(json_value(a_nested, '$[1]' RETURNING bigint array)) AS u(c)
WHERE (s_int IN (0,
                 1,
                 2)
       OR s_int IS NULL)
  AND (array_concat(array[s_int, s_int, 3],array[s_int, s_int, 3])<ARRAY[99999]);
+--------------------------------+
| col                            |
+--------------------------------+
| [1, 1, 3, 1, 1, 3]             |
| [1, 1, 3, 1, 1, 3]             |
| [1, 1, 3, 1, 1, 3]             |
| [2, 2, 3, 2, 2, 3]             |
| [2, 2, 3, 2, 2, 3]             |
| [2, 2, 3, 2, 2, 3]             |
| [null, null, 3, null, null, 3] |
| [null, null, 3, null, null, 3] |
| [null, null, 3, null, null, 3] |
+--------------------------------+
(9 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_array_funcs TEST_ID: A1_B12_C1_D1
#-------------------------------------------------------------------------
SELECT array_slice(c, 1, 2) AS col
FROM test_unnest,
     unnest(a_int) AS u(c)
WHERE (s_int IN (0,
                 1,
                 2)
       OR s_int IS NULL)
  AND (array_slice(c, 1, 2)<ARRAY[99999]);
Cannot apply 'ARRAY_SLICE' to arguments of type 'ARRAY_SLICE(<BIGINT>, <INTEGER>, <INTEGER>)'.
!error

#-------------------------------------------------------------------------
# TESTCASE: test_array_funcs TEST_ID: A1_B12_C1_D2
#-------------------------------------------------------------------------
SELECT array_slice(c, 1, 2) AS col
FROM test_unnest,
     unnest(json_value(a_nested, '$[1]' RETURNING bigint array)) AS u(c)
WHERE (s_int IN (0,
                 1,
                 2)
       OR s_int IS NULL)
  AND (array_slice(c, 1, 2)<ARRAY[99999]);
Cannot apply 'ARRAY_SLICE' to arguments of type 'ARRAY_SLICE(<BIGINT>, <INTEGER>, <INTEGER>)'.
!error

#-------------------------------------------------------------------------
# TESTCASE: test_array_funcs TEST_ID: A1_B12_C2_D1
#-------------------------------------------------------------------------
SELECT array_slice(s_int, 1, 2) AS col
FROM test_unnest,
     unnest(a_int) AS u(c)
WHERE (s_int IN (0,
                 1,
                 2)
       OR s_int IS NULL)
  AND (array_slice(s_int, 1, 2)<ARRAY[99999]);
Cannot apply 'ARRAY_SLICE' to arguments of type 'ARRAY_SLICE(<BIGINT>, <INTEGER>, <INTEGER>)'
!error

#-------------------------------------------------------------------------
# TESTCASE: test_array_funcs TEST_ID: A1_B12_C2_D2
#-------------------------------------------------------------------------
SELECT array_slice(s_int, 1, 2) AS col
FROM test_unnest,
     unnest(json_value(a_nested, '$[1]' RETURNING bigint array)) AS u(c)
WHERE (s_int IN (0,
                 1,
                 2)
       OR s_int IS NULL)
  AND (array_slice(s_int, 1, 2)<ARRAY[99999]);
Cannot apply 'ARRAY_SLICE' to arguments of type 'ARRAY_SLICE(<BIGINT>, <INTEGER>, <INTEGER>)'
!error

#-------------------------------------------------------------------------
# TESTCASE: test_array_funcs TEST_ID: A1_B12_C3_D1
#-------------------------------------------------------------------------
SELECT array_slice(array[c, c, 3],1, 2) AS col
FROM test_unnest,
     unnest(a_int) AS u(c)
WHERE (s_int IN (0,
                 1,
                 2)
       OR s_int IS NULL)
  AND (array_slice(array[c, c, 3],1, 2)<ARRAY[99999]);
+--------+
| col    |
+--------+
| [1]    |
| [1]    |
| [1]    |
| [2]    |
| [2]    |
| [2]    |
| [null] |
| [null] |
| [null] |
+--------+
(9 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_array_funcs TEST_ID: A1_B12_C3_D2
#-------------------------------------------------------------------------
SELECT array_slice(array[c, c, 3],1, 2) AS col
FROM test_unnest,
     unnest(json_value(a_nested, '$[1]' RETURNING bigint array)) AS u(c)
WHERE (s_int IN (0,
                 1,
                 2)
       OR s_int IS NULL)
  AND (array_slice(array[c, c, 3],1, 2)<ARRAY[99999]);
+--------+
| col    |
+--------+
| [1]    |
| [1]    |
| [1]    |
| [2]    |
| [2]    |
| [2]    |
| [null] |
| [null] |
| [null] |
+--------+
(9 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_array_funcs TEST_ID: A1_B12_C4_D1
#-------------------------------------------------------------------------
SELECT array_slice(array[s_int, c, 3],1, 2) AS col
FROM test_unnest,
     unnest(a_int) AS u(c)
WHERE (s_int IN (0,
                 1,
                 2)
       OR s_int IS NULL)
  AND (array_slice(array[s_int, c, 3],1, 2)<ARRAY[99999]);
+--------+
| col    |
+--------+
| [1]    |
| [1]    |
| [1]    |
| [2]    |
| [2]    |
| [2]    |
| [null] |
| [null] |
| [null] |
+--------+
(9 rows)

!ok

