!set useApproximateCountDistinct false
!use druidtest://?componentSupplier=DartComponentSupplier&datasets=sql/src/test/quidem/qatests/qaUnnest/mv&numMergeBuffers=3
!set outputformat mysql
#-------------------------------------------------------------------------
# TESTCASE: test_group_by TEST_ID: SEL_DATASOURCE
#-------------------------------------------------------------------------
SELECT *
FROM test_unnest;
+-------------------------+-------+--------+---------+----------+------------------------------------------------+------------------------+--------------------------------------+----------------------------------+--------------------------------------+----------------------------------+-----------------------------+
| __time                  | c_str | c_long | c_float | c_double | c_mv_complex                                   | c_mv_num               | c_mv_complex_with_null_and_empty_val | c_mv_num_with_null_and_empty_val | c_mv_complex_with_null_and_empty_row | c_mv_num_with_null_and_empty_row | c_mv_all_null_and_empty_val |
+-------------------------+-------+--------+---------+----------+------------------------------------------------+------------------------+--------------------------------------+----------------------------------+--------------------------------------+----------------------------------+-----------------------------+
| 2022-01-01 00:00:00.000 |       |      1 |     0.1 |      0.1 | ["my_null","my_empty","1","[2]","[3, [4, 5]]"] | ["-1","0","1","2","3"] | [null,"","1","[2]","[3, [4, 5]]"]    | [null,"","1","2","3"]            |                                      |                                  | [null,"",null,"",null]      |
| 2022-01-01 00:00:00.000 | str2  |      2 |     0.2 |      0.2 | ["my_null","my_empty","1","[2]","[3, [4, 5]]"] | ["-1","0","1","2","3"] | [null,"","1","[2]","[3, [4, 5]]"]    | [null,"","1","2","3"]            | [null,"","1","[2]","[3, [4, 5]]"]    | [null,"","1","2","3"]            | [null,"",null,"",null]      |
| 2022-01-01 00:00:00.000 | str3  |      3 |     0.3 |      0.3 | ["my_null","my_empty","1","[2]","[3, [4, 5]]"] | ["-1","0","1","2","3"] | [null,"","1","[2]","[3, [4, 5]]"]    | [null,"","1","2","3"]            | [null,"","1","[2]","[3, [4, 5]]"]    | [null,"","1","2","3"]            | [null,"",null,"",null]      |
| 2022-01-01 00:00:00.000 | str4  |      4 |     0.4 |      0.4 | ["my_null","my_empty","1","[2]","[3, [4, 5]]"] | ["-1","0","1","2","3"] | [null,"","1","[2]","[3, [4, 5]]"]    | [null,"","1","2","3"]            | [null,"","1","[2]","[3, [4, 5]]"]    | [null,"","1","2","3"]            | [null,"",null,"",null]      |
| 2022-01-01 00:00:00.000 |       |      0 |     0.0 |      0.0 | ["my_null","my_empty","1","[2]","[3, [4, 5]]"] | ["-1","0","1","2","3"] | [null,"","1","[2]","[3, [4, 5]]"]    | [null,"","1","2","3"]            |                                      |                                  | [null,"",null,"",null]      |
+-------------------------+-------+--------+---------+----------+------------------------------------------------+------------------------+--------------------------------------+----------------------------------+--------------------------------------+----------------------------------+-----------------------------+
(5 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_group_by TEST_ID: A1_B1
#-------------------------------------------------------------------------
SELECT c_mv_complex,
       count(*) cnt
FROM test_unnest
GROUP BY c_mv_complex;
+--------------+-----+
| c_mv_complex | cnt |
+--------------+-----+
| 1            |   5 |
| [2]          |   5 |
| [3, [4, 5]]  |   5 |
| my_empty     |   5 |
| my_null      |   5 |
+--------------+-----+
(5 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_group_by TEST_ID: A1_B2
#-------------------------------------------------------------------------
SELECT c,
       count(*) cnt
FROM test_unnest,
     unnest(mv_to_array(c_mv_complex)) AS u(c)
GROUP BY c;
+-------------+-----+
| c           | cnt |
+-------------+-----+
| 1           |   5 |
| [2]         |   5 |
| [3, [4, 5]] |   5 |
| my_empty    |   5 |
| my_null     |   5 |
+-------------+-----+
(5 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_group_by TEST_ID: A1_B3
#-------------------------------------------------------------------------
SELECT c_str,
       c,
       count(*) cnt
FROM test_unnest,
     unnest(mv_to_array(c_mv_complex)) AS u(c)
GROUP BY c_str,
         c;
+-------+-------------+-----+
| c_str | c           | cnt |
+-------+-------------+-----+
|       | 1           |   1 |
|       | [2]         |   1 |
|       | [3, [4, 5]] |   1 |
|       | my_empty    |   1 |
|       | my_null     |   1 |
| str2  | 1           |   1 |
| str2  | [2]         |   1 |
| str2  | [3, [4, 5]] |   1 |
| str2  | my_empty    |   1 |
| str2  | my_null     |   1 |
| str3  | 1           |   1 |
| str3  | [2]         |   1 |
| str3  | [3, [4, 5]] |   1 |
| str3  | my_empty    |   1 |
| str3  | my_null     |   1 |
| str4  | 1           |   1 |
| str4  | [2]         |   1 |
| str4  | [3, [4, 5]] |   1 |
| str4  | my_empty    |   1 |
| str4  | my_null     |   1 |
|       | 1           |   1 |
|       | [2]         |   1 |
|       | [3, [4, 5]] |   1 |
|       | my_empty    |   1 |
|       | my_null     |   1 |
+-------+-------------+-----+
(25 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_group_by TEST_ID: A1_B4
#-------------------------------------------------------------------------
SELECT c_str,
       count(*) cnt
FROM test_unnest,
     unnest(mv_to_array(c_mv_complex)) AS u(c)
GROUP BY c_str;
+-------+-----+
| c_str | cnt |
+-------+-----+
|       |   5 |
| str2  |   5 |
| str3  |   5 |
| str4  |   5 |
|       |   5 |
+-------+-----+
(5 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_group_by TEST_ID: A1_B5
#-------------------------------------------------------------------------
SELECT c,
       count(*) cnt
FROM test_unnest,
     unnest(mv_to_array(c_mv_complex)) AS u(c)
GROUP BY GROUPING
SETS (c);
+-------------+-----+
| c           | cnt |
+-------------+-----+
| 1           |   5 |
| [2]         |   5 |
| [3, [4, 5]] |   5 |
| my_empty    |   5 |
| my_null     |   5 |
+-------------+-----+
(5 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_group_by TEST_ID: A1_B6
#-------------------------------------------------------------------------
SELECT c_str,
       c,
       count(*) cnt
FROM test_unnest,
     unnest(mv_to_array(c_mv_complex)) AS u(c)
GROUP BY GROUPING
SETS (c_str,
      c);
QueryNotSupported
!error

#-------------------------------------------------------------------------
# TESTCASE: test_group_by TEST_ID: A1_B7
#-------------------------------------------------------------------------
SELECT c_str,
       count(*) cnt
FROM test_unnest,
     unnest(mv_to_array(c_mv_complex)) AS u(c)
GROUP BY GROUPING
SETS (c_str);
+-------+-----+
| c_str | cnt |
+-------+-----+
|       |   5 |
| str2  |   5 |
| str3  |   5 |
| str4  |   5 |
|       |   5 |
+-------+-----+
(5 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_group_by TEST_ID: A1_B8
#-------------------------------------------------------------------------
SELECT c,
       count(*) cnt
FROM test_unnest,
     unnest(mv_to_array(c_mv_complex)) AS u(c)
GROUP BY rollup(c);
QueryNotSupported
!error

#-------------------------------------------------------------------------
# TESTCASE: test_group_by TEST_ID: A1_B9
#-------------------------------------------------------------------------
SELECT c_str,
       c,
       count(*) cnt
FROM test_unnest,
     unnest(mv_to_array(c_mv_complex)) AS u(c)
GROUP BY rollup(c_str, c);
QueryNotSupported
!error

#-------------------------------------------------------------------------
# TESTCASE: test_group_by TEST_ID: A1_B10
#-------------------------------------------------------------------------
SELECT c_str,
       count(*) cnt
FROM test_unnest,
     unnest(mv_to_array(c_mv_complex)) AS u(c)
GROUP BY rollup(c_str);
QueryNotSupported
!error

#-------------------------------------------------------------------------
# TESTCASE: test_group_by TEST_ID: A1_B11
#-------------------------------------------------------------------------
SELECT c,
       count(*) cnt
FROM test_unnest,
     unnest(mv_to_array(c_mv_complex)) AS u(c)
GROUP BY cube(c);
QueryNotSupported
!error

#-------------------------------------------------------------------------
# TESTCASE: test_group_by TEST_ID: A1_B12
#-------------------------------------------------------------------------
SELECT c_str,
       c,
       count(*) cnt
FROM test_unnest,
     unnest(mv_to_array(c_mv_complex)) AS u(c)
GROUP BY cube(c_str, c);
QueryNotSupported
!error

#-------------------------------------------------------------------------
# TESTCASE: test_group_by TEST_ID: A1_B13
#-------------------------------------------------------------------------
SELECT c_str,
       count(*) cnt
FROM test_unnest,
     unnest(mv_to_array(c_mv_complex)) AS u(c)
GROUP BY cube(c_str);
QueryNotSupported
!error

#-------------------------------------------------------------------------
# TESTCASE: test_group_by TEST_ID: A1_B14
#-------------------------------------------------------------------------
SELECT c,
       count(*) cnt
FROM test_unnest,
     unnest(mv_to_array(c_mv_complex)) AS u(c)
GROUP BY c
HAVING c='1';
+---+-----+
| c | cnt |
+---+-----+
| 1 |   5 |
+---+-----+
(1 row)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_group_by TEST_ID: A1_B15
#-------------------------------------------------------------------------
SELECT c_str,
       count(*) cnt
FROM test_unnest,
     unnest(mv_to_array(c_mv_complex)) AS u(c)
GROUP BY c_str
HAVING c_str='str2';
+-------+-----+
| c_str | cnt |
+-------+-----+
| str2  |   5 |
+-------+-----+
(1 row)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_group_by TEST_ID: A2_B1
#-------------------------------------------------------------------------
SELECT c_mv_num,
       count(*) cnt
FROM test_unnest
GROUP BY c_mv_num;
+----------+-----+
| c_mv_num | cnt |
+----------+-----+
| -1       |   5 |
| 0        |   5 |
| 1        |   5 |
| 2        |   5 |
| 3        |   5 |
+----------+-----+
(5 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_group_by TEST_ID: A2_B2
#-------------------------------------------------------------------------
SELECT c,
       count(*) cnt
FROM test_unnest,
     unnest(mv_to_array(c_mv_num)) AS u(c)
GROUP BY c;
+----+-----+
| c  | cnt |
+----+-----+
| -1 |   5 |
| 0  |   5 |
| 1  |   5 |
| 2  |   5 |
| 3  |   5 |
+----+-----+
(5 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_group_by TEST_ID: A2_B3
#-------------------------------------------------------------------------
SELECT c_str,
       c,
       count(*) cnt
FROM test_unnest,
     unnest(mv_to_array(c_mv_num)) AS u(c)
GROUP BY c_str,
         c;
+-------+----+-----+
| c_str | c  | cnt |
+-------+----+-----+
|       | -1 |   1 |
|       | 0  |   1 |
|       | 1  |   1 |
|       | 2  |   1 |
|       | 3  |   1 |
| str2  | -1 |   1 |
| str2  | 0  |   1 |
| str2  | 1  |   1 |
| str2  | 2  |   1 |
| str2  | 3  |   1 |
| str3  | -1 |   1 |
| str3  | 0  |   1 |
| str3  | 1  |   1 |
| str3  | 2  |   1 |
| str3  | 3  |   1 |
| str4  | -1 |   1 |
| str4  | 0  |   1 |
| str4  | 1  |   1 |
| str4  | 2  |   1 |
| str4  | 3  |   1 |
|       | -1 |   1 |
|       | 0  |   1 |
|       | 1  |   1 |
|       | 2  |   1 |
|       | 3  |   1 |
+-------+----+-----+
(25 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_group_by TEST_ID: A2_B4
#-------------------------------------------------------------------------
SELECT c_str,
       count(*) cnt
FROM test_unnest,
     unnest(mv_to_array(c_mv_num)) AS u(c)
GROUP BY c_str;
+-------+-----+
| c_str | cnt |
+-------+-----+
|       |   5 |
| str2  |   5 |
| str3  |   5 |
| str4  |   5 |
|       |   5 |
+-------+-----+
(5 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_group_by TEST_ID: A2_B5
#-------------------------------------------------------------------------
SELECT c,
       count(*) cnt
FROM test_unnest,
     unnest(mv_to_array(c_mv_num)) AS u(c)
GROUP BY GROUPING
SETS (c);
+----+-----+
| c  | cnt |
+----+-----+
| -1 |   5 |
| 0  |   5 |
| 1  |   5 |
| 2  |   5 |
| 3  |   5 |
+----+-----+
(5 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_group_by TEST_ID: A2_B6
#-------------------------------------------------------------------------
SELECT c_str,
       c,
       count(*) cnt
FROM test_unnest,
     unnest(mv_to_array(c_mv_num)) AS u(c)
GROUP BY GROUPING
SETS (c_str,
      c);
QueryNotSupported
!error

#-------------------------------------------------------------------------
# TESTCASE: test_group_by TEST_ID: A2_B7
#-------------------------------------------------------------------------
SELECT c_str,
       count(*) cnt
FROM test_unnest,
     unnest(mv_to_array(c_mv_num)) AS u(c)
GROUP BY GROUPING
SETS (c_str);
+-------+-----+
| c_str | cnt |
+-------+-----+
|       |   5 |
| str2  |   5 |
| str3  |   5 |
| str4  |   5 |
|       |   5 |
+-------+-----+
(5 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_group_by TEST_ID: A2_B8
#-------------------------------------------------------------------------
SELECT c,
       count(*) cnt
FROM test_unnest,
     unnest(mv_to_array(c_mv_num)) AS u(c)
GROUP BY rollup(c);
QueryNotSupported
!error

#-------------------------------------------------------------------------
# TESTCASE: test_group_by TEST_ID: A2_B9
#-------------------------------------------------------------------------
SELECT c_str,
       c,
       count(*) cnt
FROM test_unnest,
     unnest(mv_to_array(c_mv_num)) AS u(c)
GROUP BY rollup(c_str, c);
QueryNotSupported
!error

#-------------------------------------------------------------------------
# TESTCASE: test_group_by TEST_ID: A2_B10
#-------------------------------------------------------------------------
SELECT c_str,
       count(*) cnt
FROM test_unnest,
     unnest(mv_to_array(c_mv_num)) AS u(c)
GROUP BY rollup(c_str);
QueryNotSupported
!error

#-------------------------------------------------------------------------
# TESTCASE: test_group_by TEST_ID: A2_B11
#-------------------------------------------------------------------------
SELECT c,
       count(*) cnt
FROM test_unnest,
     unnest(mv_to_array(c_mv_num)) AS u(c)
GROUP BY cube(c);
QueryNotSupported
!error

#-------------------------------------------------------------------------
# TESTCASE: test_group_by TEST_ID: A2_B12
#-------------------------------------------------------------------------
SELECT c_str,
       c,
       count(*) cnt
FROM test_unnest,
     unnest(mv_to_array(c_mv_num)) AS u(c)
GROUP BY cube(c_str, c);
QueryNotSupported
!error

#-------------------------------------------------------------------------
# TESTCASE: test_group_by TEST_ID: A2_B13
#-------------------------------------------------------------------------
SELECT c_str,
       count(*) cnt
FROM test_unnest,
     unnest(mv_to_array(c_mv_num)) AS u(c)
GROUP BY cube(c_str);
QueryNotSupported
!error

#-------------------------------------------------------------------------
# TESTCASE: test_group_by TEST_ID: A2_B14
#-------------------------------------------------------------------------
SELECT c,
       count(*) cnt
FROM test_unnest,
     unnest(mv_to_array(c_mv_num)) AS u(c)
GROUP BY c
HAVING c='1';
+---+-----+
| c | cnt |
+---+-----+
| 1 |   5 |
+---+-----+
(1 row)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_group_by TEST_ID: A2_B15
#-------------------------------------------------------------------------
SELECT c_str,
       count(*) cnt
FROM test_unnest,
     unnest(mv_to_array(c_mv_num)) AS u(c)
GROUP BY c_str
HAVING c_str='str2';
+-------+-----+
| c_str | cnt |
+-------+-----+
| str2  |   5 |
+-------+-----+
(1 row)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_group_by TEST_ID: A3_B1
#-------------------------------------------------------------------------
SELECT c_mv_complex_with_null_and_empty_val,
       count(*) cnt
FROM test_unnest
GROUP BY c_mv_complex_with_null_and_empty_val;
+--------------------------------------+-----+
| c_mv_complex_with_null_and_empty_val | cnt |
+--------------------------------------+-----+
|                                      |   5 |
| 1                                    |   5 |
| [2]                                  |   5 |
| [3, [4, 5]]                          |   5 |
|                                      |   5 |
+--------------------------------------+-----+
(5 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_group_by TEST_ID: A3_B2
#-------------------------------------------------------------------------
SELECT c,
       count(*) cnt
FROM test_unnest,
     unnest(mv_to_array(c_mv_complex_with_null_and_empty_val)) AS u(c)
GROUP BY c;
+-------------+-----+
| c           | cnt |
+-------------+-----+
|             |   5 |
| 1           |   5 |
| [2]         |   5 |
| [3, [4, 5]] |   5 |
|             |   5 |
+-------------+-----+
(5 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_group_by TEST_ID: A3_B3
#-------------------------------------------------------------------------
SELECT c_str,
       c,
       count(*) cnt
FROM test_unnest,
     unnest(mv_to_array(c_mv_complex_with_null_and_empty_val)) AS u(c)
GROUP BY c_str,
         c;
+-------+-------------+-----+
| c_str | c           | cnt |
+-------+-------------+-----+
|       |             |   1 |
|       | 1           |   1 |
|       | [2]         |   1 |
|       | [3, [4, 5]] |   1 |
|       |             |   1 |
| str2  |             |   1 |
| str2  | 1           |   1 |
| str2  | [2]         |   1 |
| str2  | [3, [4, 5]] |   1 |
| str2  |             |   1 |
| str3  |             |   1 |
| str3  | 1           |   1 |
| str3  | [2]         |   1 |
| str3  | [3, [4, 5]] |   1 |
| str3  |             |   1 |
| str4  |             |   1 |
| str4  | 1           |   1 |
| str4  | [2]         |   1 |
| str4  | [3, [4, 5]] |   1 |
| str4  |             |   1 |
|       |             |   1 |
|       | 1           |   1 |
|       | [2]         |   1 |
|       | [3, [4, 5]] |   1 |
|       |             |   1 |
+-------+-------------+-----+
(25 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_group_by TEST_ID: A3_B4
#-------------------------------------------------------------------------
SELECT c_str,
       count(*) cnt
FROM test_unnest,
     unnest(mv_to_array(c_mv_complex_with_null_and_empty_val)) AS u(c)
GROUP BY c_str;
+-------+-----+
| c_str | cnt |
+-------+-----+
|       |   5 |
| str2  |   5 |
| str3  |   5 |
| str4  |   5 |
|       |   5 |
+-------+-----+
(5 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_group_by TEST_ID: A3_B5
#-------------------------------------------------------------------------
SELECT c,
       count(*) cnt
FROM test_unnest,
     unnest(mv_to_array(c_mv_complex_with_null_and_empty_val)) AS u(c)
GROUP BY GROUPING
SETS (c);
+-------------+-----+
| c           | cnt |
+-------------+-----+
|             |   5 |
| 1           |   5 |
| [2]         |   5 |
| [3, [4, 5]] |   5 |
|             |   5 |
+-------------+-----+
(5 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_group_by TEST_ID: A3_B6
#-------------------------------------------------------------------------
SELECT c_str,
       c,
       count(*) cnt
FROM test_unnest,
     unnest(mv_to_array(c_mv_complex_with_null_and_empty_val)) AS u(c)
GROUP BY GROUPING
SETS (c_str,
      c);
QueryNotSupported
!error

#-------------------------------------------------------------------------
# TESTCASE: test_group_by TEST_ID: A3_B7
#-------------------------------------------------------------------------
SELECT c_str,
       count(*) cnt
FROM test_unnest,
     unnest(mv_to_array(c_mv_complex_with_null_and_empty_val)) AS u(c)
GROUP BY GROUPING
SETS (c_str);
+-------+-----+
| c_str | cnt |
+-------+-----+
|       |   5 |
| str2  |   5 |
| str3  |   5 |
| str4  |   5 |
|       |   5 |
+-------+-----+
(5 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_group_by TEST_ID: A3_B8
#-------------------------------------------------------------------------
SELECT c,
       count(*) cnt
FROM test_unnest,
     unnest(mv_to_array(c_mv_complex_with_null_and_empty_val)) AS u(c)
GROUP BY rollup(c);
QueryNotSupported
!error

#-------------------------------------------------------------------------
# TESTCASE: test_group_by TEST_ID: A3_B9
#-------------------------------------------------------------------------
SELECT c_str,
       c,
       count(*) cnt
FROM test_unnest,
     unnest(mv_to_array(c_mv_complex_with_null_and_empty_val)) AS u(c)
GROUP BY rollup(c_str, c);
QueryNotSupported
!error

#-------------------------------------------------------------------------
# TESTCASE: test_group_by TEST_ID: A3_B10
#-------------------------------------------------------------------------
SELECT c_str,
       count(*) cnt
FROM test_unnest,
     unnest(mv_to_array(c_mv_complex_with_null_and_empty_val)) AS u(c)
GROUP BY rollup(c_str);
QueryNotSupported
!error

#-------------------------------------------------------------------------
# TESTCASE: test_group_by TEST_ID: A3_B11
#-------------------------------------------------------------------------
SELECT c,
       count(*) cnt
FROM test_unnest,
     unnest(mv_to_array(c_mv_complex_with_null_and_empty_val)) AS u(c)
GROUP BY cube(c);
QueryNotSupported
!error

#-------------------------------------------------------------------------
# TESTCASE: test_group_by TEST_ID: A3_B12
#-------------------------------------------------------------------------
SELECT c_str,
       c,
       count(*) cnt
FROM test_unnest,
     unnest(mv_to_array(c_mv_complex_with_null_and_empty_val)) AS u(c)
GROUP BY cube(c_str, c);
QueryNotSupported
!error

#-------------------------------------------------------------------------
# TESTCASE: test_group_by TEST_ID: A3_B13
#-------------------------------------------------------------------------
SELECT c_str,
       count(*) cnt
FROM test_unnest,
     unnest(mv_to_array(c_mv_complex_with_null_and_empty_val)) AS u(c)
GROUP BY cube(c_str);
QueryNotSupported
!error

#-------------------------------------------------------------------------
# TESTCASE: test_group_by TEST_ID: A3_B14
#-------------------------------------------------------------------------
SELECT c,
       count(*) cnt
FROM test_unnest,
     unnest(mv_to_array(c_mv_complex_with_null_and_empty_val)) AS u(c)
GROUP BY c
HAVING c='1';
+---+-----+
| c | cnt |
+---+-----+
| 1 |   5 |
+---+-----+
(1 row)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_group_by TEST_ID: A3_B15
#-------------------------------------------------------------------------
SELECT c_str,
       count(*) cnt
FROM test_unnest,
     unnest(mv_to_array(c_mv_complex_with_null_and_empty_val)) AS u(c)
GROUP BY c_str
HAVING c_str='str2';
+-------+-----+
| c_str | cnt |
+-------+-----+
| str2  |   5 |
+-------+-----+
(1 row)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_group_by TEST_ID: A4_B1
#-------------------------------------------------------------------------
SELECT c_mv_num_with_null_and_empty_val,
       count(*) cnt
FROM test_unnest
GROUP BY c_mv_num_with_null_and_empty_val;
+----------------------------------+-----+
| c_mv_num_with_null_and_empty_val | cnt |
+----------------------------------+-----+
|                                  |   5 |
| 1                                |   5 |
| 2                                |   5 |
| 3                                |   5 |
|                                  |   5 |
+----------------------------------+-----+
(5 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_group_by TEST_ID: A4_B2
#-------------------------------------------------------------------------
SELECT c,
       count(*) cnt
FROM test_unnest,
     unnest(mv_to_array(c_mv_num_with_null_and_empty_val)) AS u(c)
GROUP BY c;
+---+-----+
| c | cnt |
+---+-----+
|   |   5 |
| 1 |   5 |
| 2 |   5 |
| 3 |   5 |
|   |   5 |
+---+-----+
(5 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_group_by TEST_ID: A4_B3
#-------------------------------------------------------------------------
SELECT c_str,
       c,
       count(*) cnt
FROM test_unnest,
     unnest(mv_to_array(c_mv_num_with_null_and_empty_val)) AS u(c)
GROUP BY c_str,
         c;
+-------+---+-----+
| c_str | c | cnt |
+-------+---+-----+
|       |   |   1 |
|       | 1 |   1 |
|       | 2 |   1 |
|       | 3 |   1 |
|       |   |   1 |
| str2  |   |   1 |
| str2  | 1 |   1 |
| str2  | 2 |   1 |
| str2  | 3 |   1 |
| str2  |   |   1 |
| str3  |   |   1 |
| str3  | 1 |   1 |
| str3  | 2 |   1 |
| str3  | 3 |   1 |
| str3  |   |   1 |
| str4  |   |   1 |
| str4  | 1 |   1 |
| str4  | 2 |   1 |
| str4  | 3 |   1 |
| str4  |   |   1 |
|       |   |   1 |
|       | 1 |   1 |
|       | 2 |   1 |
|       | 3 |   1 |
|       |   |   1 |
+-------+---+-----+
(25 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_group_by TEST_ID: A4_B4
#-------------------------------------------------------------------------
SELECT c_str,
       count(*) cnt
FROM test_unnest,
     unnest(mv_to_array(c_mv_num_with_null_and_empty_val)) AS u(c)
GROUP BY c_str;
+-------+-----+
| c_str | cnt |
+-------+-----+
|       |   5 |
| str2  |   5 |
| str3  |   5 |
| str4  |   5 |
|       |   5 |
+-------+-----+
(5 rows)

!ok

