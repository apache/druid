!set dartQueryId 00000000-0000-0000-0000-000000000000
!set useApproximateCountDistinct false
!use druidtest://?componentSupplier=StandardAndMSQComponentSupplier&datasets=sql/src/test/quidem/qatests/qaUnnest/array
!set outputformat mysql
#-------------------------------------------------------------------------
# TESTCASE: test_scalar_numeric_funcs TEST_ID: SEL_DATASOURCE
#-------------------------------------------------------------------------
SELECT *
FROM test_unnest;
+-------------------------+-------+--------+--------------+--------------+------------------+----------------+--------------------+---------+--------------------------+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| __time                  | s_int | s_null | a_bool       | a_int        | a_float          | a_str          | a_null             | a_empty | a_mixed                  | a_nested                                                                                                                                                                                                                                                                                                                      |
+-------------------------+-------+--------+--------------+--------------+------------------+----------------+--------------------+---------+--------------------------+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| 2022-01-01 00:00:00.000 |     1 |        | [1, 0, null] | [1, 2, null] | [0.1, 0.2, null] | [S1, S2, null] | [null, null, null] | []      | [true, 1, 0.1, S1, null] | [[true,false,null],[1,2,null],[0.1,0.2,null],["S1","S2",null],[null,null,null],[],[true,1,0.1,"S1",null],[[true,false,null],[1,2,null],[0.1,0.2,null],["S1","S2",null],[null,null,null],[],[true,1,0.1,"S1",null],[[true,false,null],[1,2,null],[0.1,0.2,null],["S1","S2",null],[null,null,null],[],[true,1,0.1,"S1",null]]]] |
| 2022-02-01 00:00:00.000 |     2 |        | [null, 1, 0] | [null, 1, 2] | [null, 0.1, 0.2] | [null, S1, S2] | [null, null, null] | []      | [null, true, 1, 0.1, S1] | [[null,true,false],[null,1,2],[null,0.1,0.2],[null,"S1","S2"],[null,null,null],[],[null,true,1,0.1,"S1"],[[null,true,false],[null,1,2],[null,0.1,0.2],[null,"S1","S2"],[null,null,null],[],[null,true,1,0.1,"S1"],[[null,true,false],[null,1,2],[null,0.1,0.2],[null,"S1","S2"],[null,null,null],[],[null,true,1,0.1,"S1"]]]] |
| 2022-03-01 00:00:00.000 |       |        | [0, null, 1] | [2, null, 1] | [0.2, null, 0.1] | [S2, null, S1] | [null, null, null] | []      | [S1, null, true, 1, 0.1] | [[false,null,true],[2,null,1],[0.2,null,0.1],["S2",null,"S1"],[null,null,null],[],["S1",null,true,1,0.1],[[false,null,true],[2,null,1],[0.2,null,0.1],["S2",null,"S1"],[null,null,null],[],["S1",null,true,1,0.1],[[false,null,true],[2,null,1],[0.2,null,0.1],["S2",null,"S1"],[null,null,null],[],["S1",null,true,1,0.1]]]] |
+-------------------------+-------+--------+--------------+--------------+------------------+----------------+--------------------+---------+--------------------------+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
(3 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_scalar_numeric_funcs TEST_ID: A1_B1_C1_D2
#-------------------------------------------------------------------------
SELECT pi+pi AS col
FROM test_unnest,
     unnest(json_value(a_nested, '$[1]' RETURNING bigint array)) AS u(c)
WHERE (s_int IN (0,
                 1,
                 2)
       OR s_int IS NULL)
  AND ((pi+pi)<99999
       OR (pi+pi) IS NULL);
+-------------------+
| col               |
+-------------------+
| 6.283185307179586 |
| 6.283185307179586 |
| 6.283185307179586 |
| 6.283185307179586 |
| 6.283185307179586 |
| 6.283185307179586 |
| 6.283185307179586 |
| 6.283185307179586 |
| 6.283185307179586 |
+-------------------+
(9 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_scalar_numeric_funcs TEST_ID: A1_B1_C2_D2
#-------------------------------------------------------------------------
SELECT pi AS col
FROM test_unnest,
     unnest(json_value(a_nested, '$[1]' RETURNING bigint array)) AS u(c)
WHERE (s_int IN (0,
                 1,
                 2)
       OR s_int IS NULL)
  AND (pi<99999
       OR pi IS NULL);
+-------------------+
| col               |
+-------------------+
| 3.141592653589793 |
| 3.141592653589793 |
| 3.141592653589793 |
| 3.141592653589793 |
| 3.141592653589793 |
| 3.141592653589793 |
| 3.141592653589793 |
| 3.141592653589793 |
| 3.141592653589793 |
+-------------------+
(9 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_scalar_numeric_funcs TEST_ID: A1_B2_C1_D2
#-------------------------------------------------------------------------
SELECT abs(c)+abs(c) AS col
FROM test_unnest,
     unnest(json_value(a_nested, '$[1]' RETURNING bigint array)) AS u(c)
WHERE (s_int IN (0,
                 1,
                 2)
       OR s_int IS NULL)
  AND ((abs(c)+abs(c))<99999
       OR (abs(c)+abs(c)) IS NULL);
+-----+
| col |
+-----+
|   2 |
|   2 |
|   2 |
|   4 |
|   4 |
|   4 |
|     |
|     |
|     |
+-----+
(9 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_scalar_numeric_funcs TEST_ID: A1_B2_C2_D2
#-------------------------------------------------------------------------
SELECT abs(c+c) AS col
FROM test_unnest,
     unnest(json_value(a_nested, '$[1]' RETURNING bigint array)) AS u(c)
WHERE (s_int IN (0,
                 1,
                 2)
       OR s_int IS NULL)
  AND (abs(c+c)<99999
       OR abs(c+c) IS NULL);
+-----+
| col |
+-----+
|   2 |
|   2 |
|   2 |
|   4 |
|   4 |
|   4 |
|     |
|     |
|     |
+-----+
(9 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_scalar_numeric_funcs TEST_ID: A1_B2_C3_D2
#-------------------------------------------------------------------------
SELECT abs(c)+abs(s_int) AS col
FROM test_unnest,
     unnest(json_value(a_nested, '$[1]' RETURNING bigint array)) AS u(c)
WHERE (s_int IN (0,
                 1,
                 2)
       OR s_int IS NULL)
  AND ((abs(c)+abs(s_int))<99999
       OR (abs(c)+abs(s_int)) IS NULL);
+-----+
| col |
+-----+
|   2 |
|   3 |
|   3 |
|   4 |
|     |
|     |
|     |
|     |
|     |
+-----+
(9 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_scalar_numeric_funcs TEST_ID: A1_B2_C4_D2
#-------------------------------------------------------------------------
SELECT abs(c+s_int) AS col
FROM test_unnest,
     unnest(json_value(a_nested, '$[1]' RETURNING bigint array)) AS u(c)
WHERE (s_int IN (0,
                 1,
                 2)
       OR s_int IS NULL)
  AND ((abs(c)+abs(s_int))<99999
       OR (abs(c)+abs(s_int)) IS NULL);
+-----+
| col |
+-----+
|   2 |
|   3 |
|   3 |
|   4 |
|     |
|     |
|     |
|     |
|     |
+-----+
(9 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_scalar_numeric_funcs TEST_ID: A1_B3_C1_D2
#-------------------------------------------------------------------------
SELECT ceil(c)+ceil(c) AS col
FROM test_unnest,
     unnest(json_value(a_nested, '$[1]' RETURNING bigint array)) AS u(c)
WHERE (s_int IN (0,
                 1,
                 2)
       OR s_int IS NULL)
  AND ((ceil(c)+ceil(c))<99999
       OR (ceil(c)+ceil(c)) IS NULL);
+-----+
| col |
+-----+
|   2 |
|   2 |
|   2 |
|   4 |
|   4 |
|   4 |
|     |
|     |
|     |
+-----+
(9 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_scalar_numeric_funcs TEST_ID: A1_B3_C2_D2
#-------------------------------------------------------------------------
SELECT ceil(c+c) AS col
FROM test_unnest,
     unnest(json_value(a_nested, '$[1]' RETURNING bigint array)) AS u(c)
WHERE (s_int IN (0,
                 1,
                 2)
       OR s_int IS NULL)
  AND (ceil(c+c)<99999
       OR ceil(c+c) IS NULL);
+-----+
| col |
+-----+
|   2 |
|   2 |
|   2 |
|   4 |
|   4 |
|   4 |
|     |
|     |
|     |
+-----+
(9 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_scalar_numeric_funcs TEST_ID: A1_B3_C3_D2
#-------------------------------------------------------------------------
SELECT ceil(c)+ceil(s_int) AS col
FROM test_unnest,
     unnest(json_value(a_nested, '$[1]' RETURNING bigint array)) AS u(c)
WHERE (s_int IN (0,
                 1,
                 2)
       OR s_int IS NULL)
  AND ((ceil(c)+ceil(s_int))<99999
       OR (ceil(c)+ceil(s_int)) IS NULL);
+-----+
| col |
+-----+
|   2 |
|   3 |
|   3 |
|   4 |
|     |
|     |
|     |
|     |
|     |
+-----+
(9 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_scalar_numeric_funcs TEST_ID: A1_B3_C4_D2
#-------------------------------------------------------------------------
SELECT ceil(c+s_int) AS col
FROM test_unnest,
     unnest(json_value(a_nested, '$[1]' RETURNING bigint array)) AS u(c)
WHERE (s_int IN (0,
                 1,
                 2)
       OR s_int IS NULL)
  AND (ceil(c+s_int)<99999
       OR ceil(c+s_int) IS NULL);
+-----+
| col |
+-----+
|   2 |
|   3 |
|   3 |
|   4 |
|     |
|     |
|     |
|     |
|     |
+-----+
(9 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_scalar_numeric_funcs TEST_ID: A1_B4_C1_D2
#-------------------------------------------------------------------------
SELECT exp(c)+exp(c) AS col
FROM test_unnest,
     unnest(json_value(a_nested, '$[1]' RETURNING bigint array)) AS u(c)
WHERE (s_int IN (0,
                 1,
                 2)
       OR s_int IS NULL)
  AND ((exp(c)+exp(c))<99999
       OR (exp(c)+exp(c)) IS NULL);
+------------------+
| col              |
+------------------+
| 14.7781121978613 |
| 14.7781121978613 |
| 14.7781121978613 |
| 5.43656365691809 |
| 5.43656365691809 |
| 5.43656365691809 |
|                  |
|                  |
|                  |
+------------------+
(9 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_scalar_numeric_funcs TEST_ID: A1_B4_C2_D2
#-------------------------------------------------------------------------
SELECT exp(c+c) AS col
FROM test_unnest,
     unnest(json_value(a_nested, '$[1]' RETURNING bigint array)) AS u(c)
WHERE (s_int IN (0,
                 1,
                 2)
       OR s_int IS NULL)
  AND (exp(c+c)<99999
       OR exp(c+c) IS NULL);
+--------------------+
| col                |
+--------------------+
| 54.598150033144236 |
| 54.598150033144236 |
| 54.598150033144236 |
|   7.38905609893065 |
|   7.38905609893065 |
|   7.38905609893065 |
|                    |
|                    |
|                    |
+--------------------+
(9 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_scalar_numeric_funcs TEST_ID: A1_B4_C3_D2
#-------------------------------------------------------------------------
SELECT exp(c)+exp(s_int) AS col
FROM test_unnest,
     unnest(json_value(a_nested, '$[1]' RETURNING bigint array)) AS u(c)
WHERE (s_int IN (0,
                 1,
                 2)
       OR s_int IS NULL)
  AND ((exp(c)+exp(s_int))<99999
       OR (exp(c)+exp(s_int)) IS NULL);
+--------------------+
| col                |
+--------------------+
| 10.107337927389695 |
| 10.107337927389695 |
|   14.7781121978613 |
|   5.43656365691809 |
|                    |
|                    |
|                    |
|                    |
|                    |
+--------------------+
(9 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_scalar_numeric_funcs TEST_ID: A1_B4_C4_D2
#-------------------------------------------------------------------------
SELECT exp(c+s_int) AS col
FROM test_unnest,
     unnest(json_value(a_nested, '$[1]' RETURNING bigint array)) AS u(c)
WHERE (s_int IN (0,
                 1,
                 2)
       OR s_int IS NULL)
  AND (exp(c+s_int)<99999
       OR exp(c+s_int) IS NULL);
+--------------------+
| col                |
+--------------------+
| 20.085536923187668 |
| 20.085536923187668 |
| 54.598150033144236 |
|   7.38905609893065 |
|                    |
|                    |
|                    |
|                    |
|                    |
+--------------------+
(9 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_scalar_numeric_funcs TEST_ID: A1_B5_C1_D2
#-------------------------------------------------------------------------
SELECT floor(c)+floor(c) AS col
FROM test_unnest,
     unnest(json_value(a_nested, '$[1]' RETURNING bigint array)) AS u(c)
WHERE (s_int IN (0,
                 1,
                 2)
       OR s_int IS NULL)
  AND ((floor(c)+floor(c))<99999
       OR (floor(c)+floor(c)) IS NULL);
+-----+
| col |
+-----+
|   2 |
|   2 |
|   2 |
|   4 |
|   4 |
|   4 |
|     |
|     |
|     |
+-----+
(9 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_scalar_numeric_funcs TEST_ID: A1_B5_C2_D2
#-------------------------------------------------------------------------
SELECT floor(c+c) AS col
FROM test_unnest,
     unnest(json_value(a_nested, '$[1]' RETURNING bigint array)) AS u(c)
WHERE (s_int IN (0,
                 1,
                 2)
       OR s_int IS NULL)
  AND (floor(c+c)<99999
       OR floor(c+c) IS NULL);
+-----+
| col |
+-----+
|   2 |
|   2 |
|   2 |
|   4 |
|   4 |
|   4 |
|     |
|     |
|     |
+-----+
(9 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_scalar_numeric_funcs TEST_ID: A1_B5_C3_D2
#-------------------------------------------------------------------------
SELECT floor(c)+floor(s_int) AS col
FROM test_unnest,
     unnest(json_value(a_nested, '$[1]' RETURNING bigint array)) AS u(c)
WHERE (s_int IN (0,
                 1,
                 2)
       OR s_int IS NULL)
  AND ((floor(c)+floor(s_int))<99999
       OR (floor(c)+floor(s_int)) IS NULL);
+-----+
| col |
+-----+
|   2 |
|   3 |
|   3 |
|   4 |
|     |
|     |
|     |
|     |
|     |
+-----+
(9 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_scalar_numeric_funcs TEST_ID: A3_B5_C4_D2
#-------------------------------------------------------------------------
SELECT floor(c+s_int) AS col
FROM test_unnest,
     unnest(json_value(a_nested, '$[1]' RETURNING bigint array)) AS u(c)
WHERE (s_int IN (0,
                 1,
                 2)
       OR s_int IS NULL)
  AND (floor(c+s_int)<99999
       OR floor(c+s_int)<99999 IS NULL);
+-----+
| col |
+-----+
|   2 |
|   3 |
|   3 |
|   4 |
|     |
|     |
|     |
|     |
|     |
+-----+
(9 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_scalar_numeric_funcs TEST_ID: A1_B6_C1_D2
#-------------------------------------------------------------------------
SELECT ln(c)+ln(c) AS col
FROM test_unnest,
     unnest(json_value(a_nested, '$[1]' RETURNING bigint array)) AS u(c)
WHERE (s_int IN (0,
                 1,
                 2)
       OR s_int IS NULL)
  AND ((ln(c)+ln(c))<99999
       OR (ln(c)+ln(c)) IS NULL);
+--------------------+
| col                |
+--------------------+
|                0.0 |
|                0.0 |
|                0.0 |
| 1.3862943611198906 |
| 1.3862943611198906 |
| 1.3862943611198906 |
|                    |
|                    |
|                    |
+--------------------+
(9 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_scalar_numeric_funcs TEST_ID: A1_B6_C2_D2
#-------------------------------------------------------------------------
SELECT ln(c+c) AS col
FROM test_unnest,
     unnest(json_value(a_nested, '$[1]' RETURNING bigint array)) AS u(c)
WHERE (s_int IN (0,
                 1,
                 2)
       OR s_int IS NULL)
  AND (ln(c+c)<99999
       OR ln(c+c) IS NULL);
+--------------------+
| col                |
+--------------------+
| 0.6931471805599453 |
| 0.6931471805599453 |
| 0.6931471805599453 |
| 1.3862943611198906 |
| 1.3862943611198906 |
| 1.3862943611198906 |
|                    |
|                    |
|                    |
+--------------------+
(9 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_scalar_numeric_funcs TEST_ID: A1_B6_C3_D2
#-------------------------------------------------------------------------
SELECT ln(c)+ln(s_int) AS col
FROM test_unnest,
     unnest(json_value(a_nested, '$[1]' RETURNING bigint array)) AS u(c)
WHERE (s_int IN (0,
                 1,
                 2)
       OR s_int IS NULL)
  AND ((ln(c)+ln(s_int))<99999
       OR (ln(c)+ln(s_int)) IS NULL);
+--------------------+
| col                |
+--------------------+
|                0.0 |
| 0.6931471805599453 |
| 0.6931471805599453 |
| 1.3862943611198906 |
|                    |
|                    |
|                    |
|                    |
|                    |
+--------------------+
(9 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_scalar_numeric_funcs TEST_ID: A1_B6_C4_D2
#-------------------------------------------------------------------------
SELECT ln(c+s_int) AS col
FROM test_unnest,
     unnest(json_value(a_nested, '$[1]' RETURNING bigint array)) AS u(c)
WHERE (s_int IN (0,
                 1,
                 2)
       OR s_int IS NULL)
  AND (ln(c+s_int)<99999
       OR ln(c+s_int)<99999 IS NULL);
+--------------------+
| col                |
+--------------------+
| 0.6931471805599453 |
| 1.0986122886681098 |
| 1.0986122886681098 |
| 1.3862943611198906 |
|                    |
|                    |
|                    |
|                    |
|                    |
+--------------------+
(9 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_scalar_numeric_funcs TEST_ID: A1_B7_C1_D2
#-------------------------------------------------------------------------
SELECT log10(c)+log10(c) AS col
FROM test_unnest,
     unnest(json_value(a_nested, '$[1]' RETURNING bigint array)) AS u(c)
WHERE (s_int IN (0,
                 1,
                 2)
       OR s_int IS NULL)
  AND ((log10(c)+log10(c))<99999
       OR (log10(c)+log10(c)) IS NULL);
+--------------------+
| col                |
+--------------------+
|                0.0 |
|                0.0 |
|                0.0 |
| 0.6020599913279624 |
| 0.6020599913279624 |
| 0.6020599913279624 |
|                    |
|                    |
|                    |
+--------------------+
(9 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_scalar_numeric_funcs TEST_ID: A1_B7_C2_D2
#-------------------------------------------------------------------------
SELECT log10(c+c) AS col
FROM test_unnest,
     unnest(json_value(a_nested, '$[1]' RETURNING bigint array)) AS u(c)
WHERE (s_int IN (0,
                 1,
                 2)
       OR s_int IS NULL)
  AND (log10(c+c)<99999
       OR log10(c+c) IS NULL);
+--------------------+
| col                |
+--------------------+
| 0.3010299956639812 |
| 0.3010299956639812 |
| 0.3010299956639812 |
| 0.6020599913279624 |
| 0.6020599913279624 |
| 0.6020599913279624 |
|                    |
|                    |
|                    |
+--------------------+
(9 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_scalar_numeric_funcs TEST_ID: A1_B7_C3_D2
#-------------------------------------------------------------------------
SELECT log10(c)+log10(s_int) AS col
FROM test_unnest,
     unnest(json_value(a_nested, '$[1]' RETURNING bigint array)) AS u(c)
WHERE (s_int IN (0,
                 1,
                 2)
       OR s_int IS NULL)
  AND ((log10(c)+log10(s_int))<99999
       OR (log10(c)+log10(s_int)) IS NULL);
+--------------------+
| col                |
+--------------------+
|                0.0 |
| 0.3010299956639812 |
| 0.3010299956639812 |
| 0.6020599913279624 |
|                    |
|                    |
|                    |
|                    |
|                    |
+--------------------+
(9 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_scalar_numeric_funcs TEST_ID: A1_B7_C4_D2
#-------------------------------------------------------------------------
SELECT log10(c+s_int) AS col
FROM test_unnest,
     unnest(json_value(a_nested, '$[1]' RETURNING bigint array)) AS u(c)
WHERE (s_int IN (0,
                 1,
                 2)
       OR s_int IS NULL)
  AND (log10(c+s_int)<99999
       OR log10(c+s_int) IS NULL);
+---------------------+
| col                 |
+---------------------+
|  0.3010299956639812 |
| 0.47712125471966244 |
| 0.47712125471966244 |
|  0.6020599913279624 |
|                     |
|                     |
|                     |
|                     |
|                     |
+---------------------+
(9 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_scalar_numeric_funcs TEST_ID: A1_B8_C1_D2
#-------------------------------------------------------------------------
SELECT power(c, 1)+power(c, 1) AS col
FROM test_unnest,
     unnest(json_value(a_nested, '$[1]' RETURNING bigint array)) AS u(c)
WHERE (s_int IN (0,
                 1,
                 2)
       OR s_int IS NULL)
  AND ((power(c, 1)+power(c, 1))<99999
       OR (power(c, 1)+power(c, 1)) IS NULL);
+-----+
| col |
+-----+
| 2.0 |
| 2.0 |
| 2.0 |
| 4.0 |
| 4.0 |
| 4.0 |
|     |
|     |
|     |
+-----+
(9 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_scalar_numeric_funcs TEST_ID: A1_B8_C2_D2
#-------------------------------------------------------------------------
SELECT power(c+c, 1) AS col
FROM test_unnest,
     unnest(json_value(a_nested, '$[1]' RETURNING bigint array)) AS u(c)
WHERE (s_int IN (0,
                 1,
                 2)
       OR s_int IS NULL)
  AND (power(c+c, 1)<99999
       OR power(c+c, 1) IS NULL);
+-----+
| col |
+-----+
| 2.0 |
| 2.0 |
| 2.0 |
| 4.0 |
| 4.0 |
| 4.0 |
|     |
|     |
|     |
+-----+
(9 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_scalar_numeric_funcs TEST_ID: A1_B8_C3_D2
#-------------------------------------------------------------------------
SELECT power(c, 1)+power(s_int, 1) AS col
FROM test_unnest,
     unnest(json_value(a_nested, '$[1]' RETURNING bigint array)) AS u(c)
WHERE (s_int IN (0,
                 1,
                 2)
       OR s_int IS NULL)
  AND ((power(c, 1)+power(s_int, 1))<99999
       OR (power(c, 1)+power(s_int, 1)) IS NULL);
+-----+
| col |
+-----+
| 2.0 |
| 3.0 |
| 3.0 |
| 4.0 |
|     |
|     |
|     |
|     |
|     |
+-----+
(9 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_scalar_numeric_funcs TEST_ID: A1_B8_C4_D2
#-------------------------------------------------------------------------
SELECT power(c+s_int, 1) AS col
FROM test_unnest,
     unnest(json_value(a_nested, '$[1]' RETURNING bigint array)) AS u(c)
WHERE (s_int IN (0,
                 1,
                 2)
       OR s_int IS NULL)
  AND (power(c+s_int, 1)<99999
       OR power(c+s_int, 1) IS NULL);
+-----+
| col |
+-----+
| 2.0 |
| 3.0 |
| 3.0 |
| 4.0 |
|     |
|     |
|     |
|     |
|     |
+-----+
(9 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_scalar_numeric_funcs TEST_ID: A1_B9_C1_D2
#-------------------------------------------------------------------------
SELECT sqrt(c)+sqrt(c) AS col
FROM test_unnest,
     unnest(json_value(a_nested, '$[1]' RETURNING bigint array)) AS u(c)
WHERE (s_int IN (0,
                 1,
                 2)
       OR s_int IS NULL)
  AND ((sqrt(c)+sqrt(c))<99999
       OR (sqrt(c)+sqrt(c)) IS NULL);
+--------------------+
| col                |
+--------------------+
|                2.0 |
|                2.0 |
|                2.0 |
| 2.8284271247461903 |
| 2.8284271247461903 |
| 2.8284271247461903 |
|                    |
|                    |
|                    |
+--------------------+
(9 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_scalar_numeric_funcs TEST_ID: A1_B9_C2_D2
#-------------------------------------------------------------------------
SELECT sqrt(c+c) AS col
FROM test_unnest,
     unnest(json_value(a_nested, '$[1]' RETURNING bigint array)) AS u(c)
WHERE (s_int IN (0,
                 1,
                 2)
       OR s_int IS NULL)
  AND (sqrt(c+c)<99999
       OR sqrt(c+c) IS NULL);
+--------------------+
| col                |
+--------------------+
| 1.4142135623730951 |
| 1.4142135623730951 |
| 1.4142135623730951 |
|                2.0 |
|                2.0 |
|                2.0 |
|                    |
|                    |
|                    |
+--------------------+
(9 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_scalar_numeric_funcs TEST_ID: A1_B9_C3_D2
#-------------------------------------------------------------------------
SELECT sqrt(c)+sqrt(s_int) AS col
FROM test_unnest,
     unnest(json_value(a_nested, '$[1]' RETURNING bigint array)) AS u(c)
WHERE (s_int IN (0,
                 1,
                 2)
       OR s_int IS NULL)
  AND ((sqrt(c)+sqrt(s_int))<99999
       OR (sqrt(c)+sqrt(s_int)) IS NULL);
+--------------------+
| col                |
+--------------------+
|                2.0 |
|  2.414213562373095 |
|  2.414213562373095 |
| 2.8284271247461903 |
|                    |
|                    |
|                    |
|                    |
|                    |
+--------------------+
(9 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_scalar_numeric_funcs TEST_ID: A1_B9_C4_D2
#-------------------------------------------------------------------------
SELECT sqrt(c+s_int) AS col
FROM test_unnest,
     unnest(json_value(a_nested, '$[1]' RETURNING bigint array)) AS u(c)
WHERE (s_int IN (0,
                 1,
                 2)
       OR s_int IS NULL)
  AND (sqrt(c+s_int)<99999
       OR sqrt(c+s_int) IS NULL);
+--------------------+
| col                |
+--------------------+
| 1.4142135623730951 |
| 1.7320508075688772 |
| 1.7320508075688772 |
|                2.0 |
|                    |
|                    |
|                    |
|                    |
|                    |
+--------------------+
(9 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_scalar_numeric_funcs TEST_ID: A1_B10_C1_D2
#-------------------------------------------------------------------------
SELECT truncate(cast(c AS decimal), 1)+truncate(cast(c AS decimal), 1) AS col
FROM test_unnest,
     unnest(json_value(a_nested, '$[1]' RETURNING bigint array)) AS u(c)
WHERE (s_int IN (0,
                 1,
                 2)
       OR s_int IS NULL)
  AND ((truncate(cast(c AS decimal), 1)+truncate(cast(c AS decimal), 1))<99999
       OR (truncate(cast(c AS decimal), 1)+truncate(cast(c AS decimal), 1)) IS NULL);
+-----+
| col |
+-----+
| 2.0 |
| 2.0 |
| 2.0 |
| 4.0 |
| 4.0 |
| 4.0 |
|     |
|     |
|     |
+-----+
(9 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_scalar_numeric_funcs TEST_ID: A1_B10_C2_D2
#-------------------------------------------------------------------------
SELECT truncate(cast(c AS decimal)+cast(c AS decimal), 1) AS col
FROM test_unnest,
     unnest(json_value(a_nested, '$[1]' RETURNING bigint array)) AS u(c)
WHERE (s_int IN (0,
                 1,
                 2)
       OR s_int IS NULL)
  AND (truncate(cast(c AS decimal)+cast(c AS decimal), 1)<99999
       OR truncate(cast(c AS decimal)+cast(c AS decimal), 1) IS NULL);
+-----+
| col |
+-----+
| 2.0 |
| 2.0 |
| 2.0 |
| 4.0 |
| 4.0 |
| 4.0 |
|     |
|     |
|     |
+-----+
(9 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_scalar_numeric_funcs TEST_ID: A1_B10_C3_D2
#-------------------------------------------------------------------------
SELECT truncate(cast(c AS decimal), 1)+truncate(s_int, 1) AS col
FROM test_unnest,
     unnest(json_value(a_nested, '$[1]' RETURNING bigint array)) AS u(c)
WHERE (s_int IN (0,
                 1,
                 2)
       OR s_int IS NULL)
  AND ((truncate(cast(c AS decimal), 1)+truncate(s_int, 1))<99999
       OR (truncate(cast(c AS decimal), 1)+truncate(s_int, 1)) IS NULL);
+-----+
| col |
+-----+
| 2.0 |
| 3.0 |
| 3.0 |
| 4.0 |
|     |
|     |
|     |
|     |
|     |
+-----+
(9 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_scalar_numeric_funcs TEST_ID: A1_B10_C4_D2
#-------------------------------------------------------------------------
SELECT truncate(cast(c AS decimal)+s_int, 1) AS col
FROM test_unnest,
     unnest(json_value(a_nested, '$[1]' RETURNING bigint array)) AS u(c)
WHERE (s_int IN (0,
                 1,
                 2)
       OR s_int IS NULL)
  AND (truncate(cast(c AS decimal)+s_int, 1)<99999
       OR truncate(cast(c AS decimal)+s_int, 1) IS NULL);
+-----+
| col |
+-----+
| 2.0 |
| 3.0 |
| 3.0 |
| 4.0 |
|     |
|     |
|     |
|     |
|     |
+-----+
(9 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_scalar_numeric_funcs TEST_ID: A1_B11_C1_D2
#-------------------------------------------------------------------------
SELECT trunc(cast(c AS decimal), 1)+trunc(cast(c AS decimal), 1) AS col
FROM test_unnest,
     unnest(json_value(a_nested, '$[1]' RETURNING bigint array)) AS u(c)
WHERE (s_int IN (0,
                 1,
                 2)
       OR s_int IS NULL)
  AND ((trunc(cast(c AS decimal), 1)+trunc(cast(c AS decimal), 1))<99999
       OR (trunc(cast(c AS decimal), 1)+trunc(cast(c AS decimal), 1)) IS NULL);
+-----+
| col |
+-----+
| 2.0 |
| 2.0 |
| 2.0 |
| 4.0 |
| 4.0 |
| 4.0 |
|     |
|     |
|     |
+-----+
(9 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_scalar_numeric_funcs TEST_ID: A1_B11_C2_D2
#-------------------------------------------------------------------------
SELECT trunc(cast(c AS decimal)+cast(c AS decimal), 1) AS col
FROM test_unnest,
     unnest(json_value(a_nested, '$[1]' RETURNING bigint array)) AS u(c)
WHERE (s_int IN (0,
                 1,
                 2)
       OR s_int IS NULL)
  AND (trunc(cast(c AS decimal)+cast(c AS decimal), 1)<99999
       OR trunc(cast(c AS decimal)+cast(c AS decimal), 1) IS NULL);
+-----+
| col |
+-----+
| 2.0 |
| 2.0 |
| 2.0 |
| 4.0 |
| 4.0 |
| 4.0 |
|     |
|     |
|     |
+-----+
(9 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_scalar_numeric_funcs TEST_ID: A1_B11_C3_D2
#-------------------------------------------------------------------------
SELECT trunc(cast(c AS decimal), 1)+trunc(s_int, 1) AS col
FROM test_unnest,
     unnest(json_value(a_nested, '$[1]' RETURNING bigint array)) AS u(c)
WHERE (s_int IN (0,
                 1,
                 2)
       OR s_int IS NULL)
  AND ((trunc(cast(c AS decimal), 1)+trunc(s_int, 1))<99999
       OR (trunc(cast(c AS decimal), 1)+trunc(s_int, 1)) IS NULL);
+-----+
| col |
+-----+
| 2.0 |
| 3.0 |
| 3.0 |
| 4.0 |
|     |
|     |
|     |
|     |
|     |
+-----+
(9 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_scalar_numeric_funcs TEST_ID: A1_B11_C4_D2
#-------------------------------------------------------------------------
SELECT trunc(cast(c AS decimal)+s_int, 1) AS col
FROM test_unnest,
     unnest(json_value(a_nested, '$[1]' RETURNING bigint array)) AS u(c)
WHERE (s_int IN (0,
                 1,
                 2)
       OR s_int IS NULL)
  AND (trunc(cast(c AS decimal)+s_int, 1)<99999
       OR trunc(cast(c AS decimal)+s_int, 1) IS NULL);
+-----+
| col |
+-----+
| 2.0 |
| 3.0 |
| 3.0 |
| 4.0 |
|     |
|     |
|     |
|     |
|     |
+-----+
(9 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_scalar_numeric_funcs TEST_ID: A1_B12_C1_D2
#-------------------------------------------------------------------------
SELECT round(cast(c AS decimal), 1)+round(cast(c AS decimal), 1) AS col
FROM test_unnest,
     unnest(json_value(a_nested, '$[1]' RETURNING bigint array)) AS u(c)
WHERE (s_int IN (0,
                 1,
                 2)
       OR s_int IS NULL)
  AND ((round(cast(c AS decimal), 1)+round(cast(c AS decimal), 1))<99999
       OR (round(cast(c AS decimal), 1)+round(cast(c AS decimal), 1)) IS NULL);
+-----+
| col |
+-----+
| 2.0 |
| 2.0 |
| 2.0 |
| 4.0 |
| 4.0 |
| 4.0 |
|     |
|     |
|     |
+-----+
(9 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_scalar_numeric_funcs TEST_ID: A1_B12_C2_D2
#-------------------------------------------------------------------------
SELECT round(cast(c AS decimal)+cast(c AS decimal), 1) AS col
FROM test_unnest,
     unnest(json_value(a_nested, '$[1]' RETURNING bigint array)) AS u(c)
WHERE (s_int IN (0,
                 1,
                 2)
       OR s_int IS NULL)
  AND (round(cast(c AS decimal)+cast(c AS decimal), 1)<99999
       OR round(cast(c AS decimal)+cast(c AS decimal), 1) IS NULL);
+-----+
| col |
+-----+
| 2.0 |
| 2.0 |
| 2.0 |
| 4.0 |
| 4.0 |
| 4.0 |
|     |
|     |
|     |
+-----+
(9 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_scalar_numeric_funcs TEST_ID: A1_B12_C3_D2
#-------------------------------------------------------------------------
SELECT round(cast(c AS decimal), 1)+round(s_int, 1) AS col
FROM test_unnest,
     unnest(json_value(a_nested, '$[1]' RETURNING bigint array)) AS u(c)
WHERE (s_int IN (0,
                 1,
                 2)
       OR s_int IS NULL)
  AND ((round(cast(c AS decimal), 1)+round(s_int, 1))<99999
       OR (round(cast(c AS decimal), 1)+round(s_int, 1)) IS NULL);
+-----+
| col |
+-----+
| 2.0 |
| 3.0 |
| 3.0 |
| 4.0 |
|     |
|     |
|     |
|     |
|     |
+-----+
(9 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_scalar_numeric_funcs TEST_ID: A1_B12_C4_D2
#-------------------------------------------------------------------------
SELECT round(cast(c AS decimal)+s_int, 1) AS col
FROM test_unnest,
     unnest(json_value(a_nested, '$[1]' RETURNING bigint array)) AS u(c)
WHERE (s_int IN (0,
                 1,
                 2)
       OR s_int IS NULL)
  AND (round(cast(c AS decimal)+s_int, 1)<99999
       OR round(cast(c AS decimal)+s_int, 1) IS NULL);
+-----+
| col |
+-----+
| 2.0 |
| 3.0 |
| 3.0 |
| 4.0 |
|     |
|     |
|     |
|     |
|     |
+-----+
(9 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_scalar_numeric_funcs TEST_ID: A1_B13_C1_D2
#-------------------------------------------------------------------------
SELECT mod(c, 2)+mod(c, 2) AS col
FROM test_unnest,
     unnest(json_value(a_nested, '$[1]' RETURNING bigint array)) AS u(c)
WHERE (s_int IN (0,
                 1,
                 2)
       OR s_int IS NULL)
  AND ((mod(c, 2)+mod(c, 2))<99999
       OR (mod(c, 2)+mod(c, 2))<99999 IS NULL);
+-----+
| col |
+-----+
|   0 |
|   0 |
|   0 |
|   2 |
|   2 |
|   2 |
|     |
|     |
|     |
+-----+
(9 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_scalar_numeric_funcs TEST_ID: A1_B13_C2_D2
#-------------------------------------------------------------------------
SELECT mod(c, c) AS col
FROM test_unnest,
     unnest(json_value(a_nested, '$[1]' RETURNING bigint array)) AS u(c)
WHERE (s_int IN (0,
                 1,
                 2)
       OR s_int IS NULL)
  AND (mod(c, c)<99999
       OR mod(c, c) IS NULL);
+-----+
| col |
+-----+
|   0 |
|   0 |
|   0 |
|   0 |
|   0 |
|   0 |
|     |
|     |
|     |
+-----+
(9 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_scalar_numeric_funcs TEST_ID: A1_B13_C3_D2
#-------------------------------------------------------------------------
SELECT mod(c, 2)+mod(s_int, 2) AS col
FROM test_unnest,
     unnest(json_value(a_nested, '$[1]' RETURNING bigint array)) AS u(c)
WHERE (s_int IN (0,
                 1,
                 2)
       OR s_int IS NULL)
  AND ((mod(c, 2)+mod(s_int, 2))<99999
       OR (mod(c, 2)+mod(s_int, 2)) IS NULL);
+-----+
| col |
+-----+
|   0 |
|   1 |
|   1 |
|   2 |
|     |
|     |
|     |
|     |
|     |
+-----+
(9 rows)

!ok

