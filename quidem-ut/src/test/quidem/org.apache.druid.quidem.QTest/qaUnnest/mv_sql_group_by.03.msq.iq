!set useApproximateCountDistinct false
!use druidtest://?componentSupplier=StandardMSQComponentSupplier&datasets=sql/src/test/quidem/qatests/qaUnnest/mv&numMergeBuffers=3
!set outputformat mysql
#-------------------------------------------------------------------------
# TESTCASE: test_group_by TEST_ID: A7_B10
#-------------------------------------------------------------------------
SELECT c_str,
       count(*) cnt
FROM test_unnest,
     unnest(mv_to_array(c_mv_all_null_and_empty_val)) AS u(c)
GROUP BY rollup(c_str);
QueryNotSupported
!error

#-------------------------------------------------------------------------
# TESTCASE: test_group_by TEST_ID: A7_B11
#-------------------------------------------------------------------------
SELECT c,
       count(*) cnt
FROM test_unnest,
     unnest(mv_to_array(c_mv_all_null_and_empty_val)) AS u(c)
GROUP BY cube(c);
QueryNotSupported
!error

#-------------------------------------------------------------------------
# TESTCASE: test_group_by TEST_ID: A7_B12
#-------------------------------------------------------------------------
SELECT c_str,
       c,
       count(*) cnt
FROM test_unnest,
     unnest(mv_to_array(c_mv_all_null_and_empty_val)) AS u(c)
GROUP BY cube(c_str, c);
QueryNotSupported
!error

#-------------------------------------------------------------------------
# TESTCASE: test_group_by TEST_ID: A7_B13
#-------------------------------------------------------------------------
SELECT c_str,
       count(*) cnt
FROM test_unnest,
     unnest(mv_to_array(c_mv_all_null_and_empty_val)) AS u(c)
GROUP BY cube(c_str);
QueryNotSupported
!error

#-------------------------------------------------------------------------
# TESTCASE: test_group_by TEST_ID: A7_B14
#-------------------------------------------------------------------------
SELECT c,
       count(*) cnt
FROM test_unnest,
     unnest(mv_to_array(c_mv_all_null_and_empty_val)) AS u(c)
GROUP BY c
HAVING c='1';
+---+-----+
| c | cnt |
+---+-----+
+---+-----+
(0 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_group_by TEST_ID: A7_B15
#-------------------------------------------------------------------------
SELECT c_str,
       count(*) cnt
FROM test_unnest,
     unnest(mv_to_array(c_mv_all_null_and_empty_val)) AS u(c)
GROUP BY c_str
HAVING c_str='str2';
+-------+-----+
| c_str | cnt |
+-------+-----+
| str2  |   5 |
+-------+-----+
(1 row)

!ok

