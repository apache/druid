!set useApproximateCountDistinct false
!use druidtest://?componentSupplier=DartComponentSupplier&datasets=sql/src/test/quidem/qatests/qaUnnest/array
!set outputformat mysql
#-------------------------------------------------------------------------
# TESTCASE: test_order_by TEST_ID: A6_B10
#-------------------------------------------------------------------------
SELECT __time
FROM test_unnest,
     unnest(json_value(a_nested, '$[2]' RETURNING DOUBLE array)) AS u(c)
ORDER BY 1 DESC;
+-------------------------+
| __time                  |
+-------------------------+
| 2022-03-01 00:00:00.000 |
| 2022-03-01 00:00:00.000 |
| 2022-03-01 00:00:00.000 |
| 2022-02-01 00:00:00.000 |
| 2022-02-01 00:00:00.000 |
| 2022-02-01 00:00:00.000 |
| 2022-01-01 00:00:00.000 |
| 2022-01-01 00:00:00.000 |
| 2022-01-01 00:00:00.000 |
+-------------------------+
(9 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_order_by TEST_ID: A6_B11
#-------------------------------------------------------------------------
SELECT __time
FROM
  (SELECT __time
   FROM test_unnest,
        unnest(json_value(a_nested, '$[2]' RETURNING DOUBLE array)) AS u(c)
   ORDER BY __time ASC);
+-------------------------+
| __time                  |
+-------------------------+
| 2022-01-01 00:00:00.000 |
| 2022-01-01 00:00:00.000 |
| 2022-01-01 00:00:00.000 |
| 2022-02-01 00:00:00.000 |
| 2022-02-01 00:00:00.000 |
| 2022-02-01 00:00:00.000 |
| 2022-03-01 00:00:00.000 |
| 2022-03-01 00:00:00.000 |
| 2022-03-01 00:00:00.000 |
+-------------------------+
(9 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_order_by TEST_ID: A6_B12
#-------------------------------------------------------------------------
SELECT __time
FROM
  (SELECT __time
   FROM test_unnest,
        unnest(json_value(a_nested, '$[2]' RETURNING DOUBLE array)) AS u(c)
   ORDER BY 1 DESC);
+-------------------------+
| __time                  |
+-------------------------+
| 2022-01-01 00:00:00.000 |
| 2022-01-01 00:00:00.000 |
| 2022-01-01 00:00:00.000 |
| 2022-02-01 00:00:00.000 |
| 2022-02-01 00:00:00.000 |
| 2022-02-01 00:00:00.000 |
| 2022-03-01 00:00:00.000 |
| 2022-03-01 00:00:00.000 |
| 2022-03-01 00:00:00.000 |
+-------------------------+
(9 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_order_by TEST_ID: A6_B13
#-------------------------------------------------------------------------
SELECT s_int,
       count(*) cnt
FROM test_unnest,
     unnest(json_value(a_nested, '$[2]' RETURNING DOUBLE array)) AS u(c)
GROUP BY s_int
ORDER BY s_int ASC;
+-------+-----+
| s_int | cnt |
+-------+-----+
|       |   3 |
|     1 |   3 |
|     2 |   3 |
+-------+-----+
(3 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_order_by TEST_ID: A6_B14
#-------------------------------------------------------------------------
SELECT s_int,
       count(*) cnt
FROM test_unnest,
     unnest(json_value(a_nested, '$[2]' RETURNING DOUBLE array)) AS u(c)
GROUP BY s_int
ORDER BY 1 DESC;
+-------+-----+
| s_int | cnt |
+-------+-----+
|     2 |   3 |
|     1 |   3 |
|       |   3 |
+-------+-----+
(3 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_order_by TEST_ID: A6_B15
#-------------------------------------------------------------------------
SELECT s_int
FROM test_unnest,
     unnest(json_value(a_nested, '$[2]' RETURNING DOUBLE array)) AS u(c)
ORDER BY s_int ASC;
+-------+
| s_int |
+-------+
|       |
|       |
|       |
|     1 |
|     1 |
|     1 |
|     2 |
|     2 |
|     2 |
+-------+
(9 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_order_by TEST_ID: A6_B16
#-------------------------------------------------------------------------
SELECT s_int
FROM test_unnest,
     unnest(json_value(a_nested, '$[2]' RETURNING DOUBLE array)) AS u(c)
ORDER BY 1 DESC;
+-------+
| s_int |
+-------+
|     2 |
|     2 |
|     2 |
|     1 |
|     1 |
|     1 |
|       |
|       |
|       |
+-------+
(9 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_order_by TEST_ID: A6_B17
#-------------------------------------------------------------------------
SELECT s_int
FROM
  (SELECT s_int
   FROM test_unnest,
        unnest(json_value(a_nested, '$[2]' RETURNING DOUBLE array)) AS u(c)
   ORDER BY s_int ASC);
+-------+
| s_int |
+-------+
|     1 |
|     1 |
|     1 |
|     2 |
|     2 |
|     2 |
|       |
|       |
|       |
+-------+
(9 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_order_by TEST_ID: A6_B18
#-------------------------------------------------------------------------
SELECT s_int
FROM
  (SELECT s_int
   FROM test_unnest,
        unnest(json_value(a_nested, '$[2]' RETURNING DOUBLE array)) AS u(c)
   ORDER BY 1 DESC);
+-------+
| s_int |
+-------+
|     1 |
|     1 |
|     1 |
|     2 |
|     2 |
|     2 |
|       |
|       |
|       |
+-------+
(9 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_order_by TEST_ID: A7_B1
#-------------------------------------------------------------------------
SELECT c,
       count(*) cnt
FROM test_unnest,
     unnest(a_str) AS u(c)
GROUP BY c
ORDER BY c ASC;
+----+-----+
| c  | cnt |
+----+-----+
|    |   3 |
| S1 |   3 |
| S2 |   3 |
+----+-----+
(3 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_order_by TEST_ID: A7_B2
#-------------------------------------------------------------------------
SELECT c,
       count(*) cnt
FROM test_unnest,
     unnest(a_str) AS u(c)
GROUP BY c
ORDER BY 1 DESC;
+----+-----+
| c  | cnt |
+----+-----+
| S2 |   3 |
| S1 |   3 |
|    |   3 |
+----+-----+
(3 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_order_by TEST_ID: A7_B3
#-------------------------------------------------------------------------
SELECT c
FROM test_unnest,
     unnest(a_str) AS u(c)
ORDER BY c ASC;
+----+
| c  |
+----+
|    |
|    |
|    |
| S1 |
| S1 |
| S1 |
| S2 |
| S2 |
| S2 |
+----+
(9 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_order_by TEST_ID: A7_B4
#-------------------------------------------------------------------------
SELECT c
FROM test_unnest,
     unnest(a_str) AS u(c)
ORDER BY 1 DESC;
+----+
| c  |
+----+
| S2 |
| S2 |
| S2 |
| S1 |
| S1 |
| S1 |
|    |
|    |
|    |
+----+
(9 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_order_by TEST_ID: A7_B5
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT c
   FROM test_unnest,
        unnest(a_str) AS u(c)
   ORDER BY c ASC);
+----+
| c  |
+----+
| S1 |
| S1 |
| S1 |
| S2 |
| S2 |
| S2 |
|    |
|    |
|    |
+----+
(9 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_order_by TEST_ID: A7_B6
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT c
   FROM test_unnest,
        unnest(a_str) AS u(c)
   ORDER BY 1 DESC);
+----+
| c  |
+----+
| S1 |
| S1 |
| S1 |
| S2 |
| S2 |
| S2 |
|    |
|    |
|    |
+----+
(9 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_order_by TEST_ID: A7_B7
#-------------------------------------------------------------------------
SELECT __time,
       count(*) cnt
FROM test_unnest,
     unnest(a_str) AS u(c)
GROUP BY __time
ORDER BY __time ASC;
+-------------------------+-----+
| __time                  | cnt |
+-------------------------+-----+
| 2022-01-01 00:00:00.000 |   3 |
| 2022-02-01 00:00:00.000 |   3 |
| 2022-03-01 00:00:00.000 |   3 |
+-------------------------+-----+
(3 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_order_by TEST_ID: A7_B8
#-------------------------------------------------------------------------
SELECT __time,
       count(*) cnt
FROM test_unnest,
     unnest(a_str) AS u(c)
GROUP BY __time
ORDER BY __time DESC;
+-------------------------+-----+
| __time                  | cnt |
+-------------------------+-----+
| 2022-03-01 00:00:00.000 |   3 |
| 2022-02-01 00:00:00.000 |   3 |
| 2022-01-01 00:00:00.000 |   3 |
+-------------------------+-----+
(3 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_order_by TEST_ID: A7_B9
#-------------------------------------------------------------------------
SELECT __time
FROM test_unnest,
     unnest(a_str) AS u(c)
ORDER BY __time ASC;
+-------------------------+
| __time                  |
+-------------------------+
| 2022-01-01 00:00:00.000 |
| 2022-01-01 00:00:00.000 |
| 2022-01-01 00:00:00.000 |
| 2022-02-01 00:00:00.000 |
| 2022-02-01 00:00:00.000 |
| 2022-02-01 00:00:00.000 |
| 2022-03-01 00:00:00.000 |
| 2022-03-01 00:00:00.000 |
| 2022-03-01 00:00:00.000 |
+-------------------------+
(9 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_order_by TEST_ID: A7_B10
#-------------------------------------------------------------------------
SELECT __time
FROM test_unnest,
     unnest(a_str) AS u(c)
ORDER BY 1 DESC;
+-------------------------+
| __time                  |
+-------------------------+
| 2022-03-01 00:00:00.000 |
| 2022-03-01 00:00:00.000 |
| 2022-03-01 00:00:00.000 |
| 2022-02-01 00:00:00.000 |
| 2022-02-01 00:00:00.000 |
| 2022-02-01 00:00:00.000 |
| 2022-01-01 00:00:00.000 |
| 2022-01-01 00:00:00.000 |
| 2022-01-01 00:00:00.000 |
+-------------------------+
(9 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_order_by TEST_ID: A7_B11
#-------------------------------------------------------------------------
SELECT __time
FROM
  (SELECT __time
   FROM test_unnest,
        unnest(a_str) AS u(c)
   ORDER BY __time ASC);
+-------------------------+
| __time                  |
+-------------------------+
| 2022-01-01 00:00:00.000 |
| 2022-01-01 00:00:00.000 |
| 2022-01-01 00:00:00.000 |
| 2022-02-01 00:00:00.000 |
| 2022-02-01 00:00:00.000 |
| 2022-02-01 00:00:00.000 |
| 2022-03-01 00:00:00.000 |
| 2022-03-01 00:00:00.000 |
| 2022-03-01 00:00:00.000 |
+-------------------------+
(9 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_order_by TEST_ID: A7_B12
#-------------------------------------------------------------------------
SELECT __time
FROM
  (SELECT __time
   FROM test_unnest,
        unnest(a_str) AS u(c)
   ORDER BY 1 DESC);
+-------------------------+
| __time                  |
+-------------------------+
| 2022-01-01 00:00:00.000 |
| 2022-01-01 00:00:00.000 |
| 2022-01-01 00:00:00.000 |
| 2022-02-01 00:00:00.000 |
| 2022-02-01 00:00:00.000 |
| 2022-02-01 00:00:00.000 |
| 2022-03-01 00:00:00.000 |
| 2022-03-01 00:00:00.000 |
| 2022-03-01 00:00:00.000 |
+-------------------------+
(9 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_order_by TEST_ID: A7_B13
#-------------------------------------------------------------------------
SELECT s_int,
       count(*) cnt
FROM test_unnest,
     unnest(a_str) AS u(c)
GROUP BY s_int
ORDER BY s_int ASC;
+-------+-----+
| s_int | cnt |
+-------+-----+
|       |   3 |
|     1 |   3 |
|     2 |   3 |
+-------+-----+
(3 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_order_by TEST_ID: A7_B14
#-------------------------------------------------------------------------
SELECT s_int,
       count(*) cnt
FROM test_unnest,
     unnest(a_str) AS u(c)
GROUP BY s_int
ORDER BY 1 DESC;
+-------+-----+
| s_int | cnt |
+-------+-----+
|     2 |   3 |
|     1 |   3 |
|       |   3 |
+-------+-----+
(3 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_order_by TEST_ID: A7_B15
#-------------------------------------------------------------------------
SELECT s_int
FROM test_unnest,
     unnest(a_str) AS u(c)
ORDER BY s_int ASC;
+-------+
| s_int |
+-------+
|       |
|       |
|       |
|     1 |
|     1 |
|     1 |
|     2 |
|     2 |
|     2 |
+-------+
(9 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_order_by TEST_ID: A7_B16
#-------------------------------------------------------------------------
SELECT s_int
FROM test_unnest,
     unnest(a_str) AS u(c)
ORDER BY 1 DESC;
+-------+
| s_int |
+-------+
|     2 |
|     2 |
|     2 |
|     1 |
|     1 |
|     1 |
|       |
|       |
|       |
+-------+
(9 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_order_by TEST_ID: A7_B17
#-------------------------------------------------------------------------
SELECT s_int
FROM
  (SELECT s_int
   FROM test_unnest,
        unnest(a_str) AS u(c)
   ORDER BY s_int ASC);
+-------+
| s_int |
+-------+
|     1 |
|     1 |
|     1 |
|     2 |
|     2 |
|     2 |
|       |
|       |
|       |
+-------+
(9 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_order_by TEST_ID: A7_B18
#-------------------------------------------------------------------------
SELECT s_int
FROM
  (SELECT s_int
   FROM test_unnest,
        unnest(a_str) AS u(c)
   ORDER BY 1 DESC);
+-------+
| s_int |
+-------+
|     1 |
|     1 |
|     1 |
|     2 |
|     2 |
|     2 |
|       |
|       |
|       |
+-------+
(9 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_order_by TEST_ID: A8_B1
#-------------------------------------------------------------------------
SELECT c,
       count(*) cnt
FROM test_unnest,
     unnest(json_value(a_nested, '$[3]' RETURNING varchar array)) AS u(c)
GROUP BY c
ORDER BY c ASC;
+----+-----+
| c  | cnt |
+----+-----+
|    |   3 |
| S1 |   3 |
| S2 |   3 |
+----+-----+
(3 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_order_by TEST_ID: A8_B2
#-------------------------------------------------------------------------
SELECT c,
       count(*) cnt
FROM test_unnest,
     unnest(json_value(a_nested, '$[3]' RETURNING varchar array)) AS u(c)
GROUP BY c
ORDER BY 1 DESC;
+----+-----+
| c  | cnt |
+----+-----+
| S2 |   3 |
| S1 |   3 |
|    |   3 |
+----+-----+
(3 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_order_by TEST_ID: A8_B3
#-------------------------------------------------------------------------
SELECT c
FROM test_unnest,
     unnest(json_value(a_nested, '$[3]' RETURNING varchar array)) AS u(c)
ORDER BY c ASC;
+----+
| c  |
+----+
|    |
|    |
|    |
| S1 |
| S1 |
| S1 |
| S2 |
| S2 |
| S2 |
+----+
(9 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_order_by TEST_ID: A8_B4
#-------------------------------------------------------------------------
SELECT c
FROM test_unnest,
     unnest(json_value(a_nested, '$[3]' RETURNING varchar array)) AS u(c)
ORDER BY 1 DESC;
+----+
| c  |
+----+
| S2 |
| S2 |
| S2 |
| S1 |
| S1 |
| S1 |
|    |
|    |
|    |
+----+
(9 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_order_by TEST_ID: A8_B5
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT c
   FROM test_unnest,
        unnest(json_value(a_nested, '$[3]' RETURNING varchar array)) AS u(c)
   ORDER BY c ASC);
+----+
| c  |
+----+
| S1 |
| S1 |
| S1 |
| S2 |
| S2 |
| S2 |
|    |
|    |
|    |
+----+
(9 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_order_by TEST_ID: A8_B6
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT c
   FROM test_unnest,
        unnest(json_value(a_nested, '$[3]' RETURNING varchar array)) AS u(c)
   ORDER BY 1 DESC);
+----+
| c  |
+----+
| S1 |
| S1 |
| S1 |
| S2 |
| S2 |
| S2 |
|    |
|    |
|    |
+----+
(9 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_order_by TEST_ID: A8_B7
#-------------------------------------------------------------------------
SELECT __time,
       count(*) cnt
FROM test_unnest,
     unnest(json_value(a_nested, '$[3]' RETURNING varchar array)) AS u(c)
GROUP BY __time
ORDER BY __time ASC;
+-------------------------+-----+
| __time                  | cnt |
+-------------------------+-----+
| 2022-01-01 00:00:00.000 |   3 |
| 2022-02-01 00:00:00.000 |   3 |
| 2022-03-01 00:00:00.000 |   3 |
+-------------------------+-----+
(3 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_order_by TEST_ID: A8_B8
#-------------------------------------------------------------------------
SELECT __time,
       count(*) cnt
FROM test_unnest,
     unnest(json_value(a_nested, '$[3]' RETURNING varchar array)) AS u(c)
GROUP BY __time
ORDER BY __time DESC;
+-------------------------+-----+
| __time                  | cnt |
+-------------------------+-----+
| 2022-03-01 00:00:00.000 |   3 |
| 2022-02-01 00:00:00.000 |   3 |
| 2022-01-01 00:00:00.000 |   3 |
+-------------------------+-----+
(3 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_order_by TEST_ID: A8_B9
#-------------------------------------------------------------------------
SELECT __time
FROM test_unnest,
     unnest(json_value(a_nested, '$[3]' RETURNING varchar array)) AS u(c)
ORDER BY __time ASC;
+-------------------------+
| __time                  |
+-------------------------+
| 2022-01-01 00:00:00.000 |
| 2022-01-01 00:00:00.000 |
| 2022-01-01 00:00:00.000 |
| 2022-02-01 00:00:00.000 |
| 2022-02-01 00:00:00.000 |
| 2022-02-01 00:00:00.000 |
| 2022-03-01 00:00:00.000 |
| 2022-03-01 00:00:00.000 |
| 2022-03-01 00:00:00.000 |
+-------------------------+
(9 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_order_by TEST_ID: A8_B10
#-------------------------------------------------------------------------
SELECT __time
FROM test_unnest,
     unnest(json_value(a_nested, '$[3]' RETURNING varchar array)) AS u(c)
ORDER BY 1 DESC;
+-------------------------+
| __time                  |
+-------------------------+
| 2022-03-01 00:00:00.000 |
| 2022-03-01 00:00:00.000 |
| 2022-03-01 00:00:00.000 |
| 2022-02-01 00:00:00.000 |
| 2022-02-01 00:00:00.000 |
| 2022-02-01 00:00:00.000 |
| 2022-01-01 00:00:00.000 |
| 2022-01-01 00:00:00.000 |
| 2022-01-01 00:00:00.000 |
+-------------------------+
(9 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_order_by TEST_ID: A8_B11
#-------------------------------------------------------------------------
SELECT __time
FROM
  (SELECT __time
   FROM test_unnest,
        unnest(json_value(a_nested, '$[3]' RETURNING varchar array)) AS u(c)
   ORDER BY __time ASC);
+-------------------------+
| __time                  |
+-------------------------+
| 2022-01-01 00:00:00.000 |
| 2022-01-01 00:00:00.000 |
| 2022-01-01 00:00:00.000 |
| 2022-02-01 00:00:00.000 |
| 2022-02-01 00:00:00.000 |
| 2022-02-01 00:00:00.000 |
| 2022-03-01 00:00:00.000 |
| 2022-03-01 00:00:00.000 |
| 2022-03-01 00:00:00.000 |
+-------------------------+
(9 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_order_by TEST_ID: A8_B12
#-------------------------------------------------------------------------
SELECT __time
FROM
  (SELECT __time
   FROM test_unnest,
        unnest(json_value(a_nested, '$[3]' RETURNING varchar array)) AS u(c)
   ORDER BY 1 DESC);
+-------------------------+
| __time                  |
+-------------------------+
| 2022-01-01 00:00:00.000 |
| 2022-01-01 00:00:00.000 |
| 2022-01-01 00:00:00.000 |
| 2022-02-01 00:00:00.000 |
| 2022-02-01 00:00:00.000 |
| 2022-02-01 00:00:00.000 |
| 2022-03-01 00:00:00.000 |
| 2022-03-01 00:00:00.000 |
| 2022-03-01 00:00:00.000 |
+-------------------------+
(9 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_order_by TEST_ID: A8_B13
#-------------------------------------------------------------------------
SELECT s_int,
       count(*) cnt
FROM test_unnest,
     unnest(json_value(a_nested, '$[3]' RETURNING varchar array)) AS u(c)
GROUP BY s_int
ORDER BY s_int ASC;
+-------+-----+
| s_int | cnt |
+-------+-----+
|       |   3 |
|     1 |   3 |
|     2 |   3 |
+-------+-----+
(3 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_order_by TEST_ID: A8_B14
#-------------------------------------------------------------------------
SELECT s_int,
       count(*) cnt
FROM test_unnest,
     unnest(json_value(a_nested, '$[3]' RETURNING varchar array)) AS u(c)
GROUP BY s_int
ORDER BY 1 DESC;
+-------+-----+
| s_int | cnt |
+-------+-----+
|     2 |   3 |
|     1 |   3 |
|       |   3 |
+-------+-----+
(3 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_order_by TEST_ID: A8_B15
#-------------------------------------------------------------------------
SELECT s_int
FROM test_unnest,
     unnest(json_value(a_nested, '$[3]' RETURNING varchar array)) AS u(c)
ORDER BY s_int ASC;
+-------+
| s_int |
+-------+
|       |
|       |
|       |
|     1 |
|     1 |
|     1 |
|     2 |
|     2 |
|     2 |
+-------+
(9 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_order_by TEST_ID: A8_B16
#-------------------------------------------------------------------------
SELECT s_int
FROM test_unnest,
     unnest(json_value(a_nested, '$[3]' RETURNING varchar array)) AS u(c)
ORDER BY 1 DESC;
+-------+
| s_int |
+-------+
|     2 |
|     2 |
|     2 |
|     1 |
|     1 |
|     1 |
|       |
|       |
|       |
+-------+
(9 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_order_by TEST_ID: A8_B17
#-------------------------------------------------------------------------
SELECT s_int
FROM
  (SELECT s_int
   FROM test_unnest,
        unnest(json_value(a_nested, '$[3]' RETURNING varchar array)) AS u(c)
   ORDER BY s_int ASC);
+-------+
| s_int |
+-------+
|     1 |
|     1 |
|     1 |
|     2 |
|     2 |
|     2 |
|       |
|       |
|       |
+-------+
(9 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_order_by TEST_ID: A8_B18
#-------------------------------------------------------------------------
SELECT s_int
FROM
  (SELECT s_int
   FROM test_unnest,
        unnest(json_value(a_nested, '$[3]' RETURNING varchar array)) AS u(c)
   ORDER BY 1 DESC);
+-------+
| s_int |
+-------+
|     1 |
|     1 |
|     1 |
|     2 |
|     2 |
|     2 |
|       |
|       |
|       |
+-------+
(9 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_order_by TEST_ID: A9_B1
#-------------------------------------------------------------------------
SELECT c,
       count(*) cnt
FROM test_unnest,
     unnest(a_mixed) AS u(c)
GROUP BY c
ORDER BY c ASC;
+------+-----+
| c    | cnt |
+------+-----+
|      |   3 |
| 0.1  |   3 |
| 1    |   3 |
| S1   |   3 |
| true |   3 |
+------+-----+
(5 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_order_by TEST_ID: A9_B2
#-------------------------------------------------------------------------
SELECT c,
       count(*) cnt
FROM test_unnest,
     unnest(a_mixed) AS u(c)
GROUP BY c
ORDER BY 1 DESC;
+------+-----+
| c    | cnt |
+------+-----+
| true |   3 |
| S1   |   3 |
| 1    |   3 |
| 0.1  |   3 |
|      |   3 |
+------+-----+
(5 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_order_by TEST_ID: A9_B3
#-------------------------------------------------------------------------
SELECT c
FROM test_unnest,
     unnest(a_mixed) AS u(c)
ORDER BY c ASC;
+------+
| c    |
+------+
|      |
|      |
|      |
| 0.1  |
| 0.1  |
| 0.1  |
| 1    |
| 1    |
| 1    |
| S1   |
| S1   |
| S1   |
| true |
| true |
| true |
+------+
(15 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_order_by TEST_ID: A9_B4
#-------------------------------------------------------------------------
SELECT c
FROM test_unnest,
     unnest(a_mixed) AS u(c)
ORDER BY 1 DESC;
+------+
| c    |
+------+
| true |
| true |
| true |
| S1   |
| S1   |
| S1   |
| 1    |
| 1    |
| 1    |
| 0.1  |
| 0.1  |
| 0.1  |
|      |
|      |
|      |
+------+
(15 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_order_by TEST_ID: A9_B5
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT c
   FROM test_unnest,
        unnest(a_mixed) AS u(c)
   ORDER BY c ASC);
+------+
| c    |
+------+
| 0.1  |
| 0.1  |
| 0.1  |
| 1    |
| 1    |
| 1    |
| S1   |
| S1   |
| S1   |
| true |
| true |
| true |
|      |
|      |
|      |
+------+
(15 rows)

!ok

