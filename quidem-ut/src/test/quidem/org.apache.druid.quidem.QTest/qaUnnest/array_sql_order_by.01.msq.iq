!set useApproximateCountDistinct false
!use druidtest://?componentSupplier=StandardMSQComponentSupplier&datasets=sql/src/test/quidem/qatests/qaUnnest/array
!set outputformat mysql
#-------------------------------------------------------------------------
# TESTCASE: test_order_by TEST_ID: SEL_DATASOURCE
#-------------------------------------------------------------------------
SELECT *
FROM test_unnest;
+-------------------------+-------+--------+--------------+--------------+------------------+----------------+--------------------+---------+--------------------------+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| __time                  | s_int | s_null | a_bool       | a_int        | a_float          | a_str          | a_null             | a_empty | a_mixed                  | a_nested                                                                                                                                                                                                                                                                                                                      |
+-------------------------+-------+--------+--------------+--------------+------------------+----------------+--------------------+---------+--------------------------+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| 2022-01-01 00:00:00.000 |     1 |        | [1, 0, null] | [1, 2, null] | [0.1, 0.2, null] | [S1, S2, null] | [null, null, null] | []      | [true, 1, 0.1, S1, null] | [[true,false,null],[1,2,null],[0.1,0.2,null],["S1","S2",null],[null,null,null],[],[true,1,0.1,"S1",null],[[true,false,null],[1,2,null],[0.1,0.2,null],["S1","S2",null],[null,null,null],[],[true,1,0.1,"S1",null],[[true,false,null],[1,2,null],[0.1,0.2,null],["S1","S2",null],[null,null,null],[],[true,1,0.1,"S1",null]]]] |
| 2022-02-01 00:00:00.000 |     2 |        | [null, 1, 0] | [null, 1, 2] | [null, 0.1, 0.2] | [null, S1, S2] | [null, null, null] | []      | [null, true, 1, 0.1, S1] | [[null,true,false],[null,1,2],[null,0.1,0.2],[null,"S1","S2"],[null,null,null],[],[null,true,1,0.1,"S1"],[[null,true,false],[null,1,2],[null,0.1,0.2],[null,"S1","S2"],[null,null,null],[],[null,true,1,0.1,"S1"],[[null,true,false],[null,1,2],[null,0.1,0.2],[null,"S1","S2"],[null,null,null],[],[null,true,1,0.1,"S1"]]]] |
| 2022-03-01 00:00:00.000 |       |        | [0, null, 1] | [2, null, 1] | [0.2, null, 0.1] | [S2, null, S1] | [null, null, null] | []      | [S1, null, true, 1, 0.1] | [[false,null,true],[2,null,1],[0.2,null,0.1],["S2",null,"S1"],[null,null,null],[],["S1",null,true,1,0.1],[[false,null,true],[2,null,1],[0.2,null,0.1],["S2",null,"S1"],[null,null,null],[],["S1",null,true,1,0.1],[[false,null,true],[2,null,1],[0.2,null,0.1],["S2",null,"S1"],[null,null,null],[],["S1",null,true,1,0.1]]]] |
+-------------------------+-------+--------+--------------+--------------+------------------+----------------+--------------------+---------+--------------------------+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
(3 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_order_by TEST_ID: A1_B1
#-------------------------------------------------------------------------
SELECT c,
       count(*) cnt
FROM test_unnest,
     unnest(a_bool) AS u(c)
GROUP BY c
ORDER BY c ASC;
+---+-----+
| c | cnt |
+---+-----+
|   |   3 |
| 0 |   3 |
| 1 |   3 |
+---+-----+
(3 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_order_by TEST_ID: A1_B2
#-------------------------------------------------------------------------
SELECT c,
       count(*) cnt
FROM test_unnest,
     unnest(a_bool) AS u(c)
GROUP BY c
ORDER BY 1 DESC;
+---+-----+
| c | cnt |
+---+-----+
| 1 |   3 |
| 0 |   3 |
|   |   3 |
+---+-----+
(3 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_order_by TEST_ID: A1_B3
#-------------------------------------------------------------------------
SELECT c
FROM test_unnest,
     unnest(a_bool) AS u(c)
ORDER BY c ASC;
+---+
| c |
+---+
|   |
|   |
|   |
| 0 |
| 0 |
| 0 |
| 1 |
| 1 |
| 1 |
+---+
(9 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_order_by TEST_ID: A1_B4
#-------------------------------------------------------------------------
SELECT c
FROM test_unnest,
     unnest(a_bool) AS u(c)
ORDER BY 1 DESC;
+---+
| c |
+---+
| 1 |
| 1 |
| 1 |
| 0 |
| 0 |
| 0 |
|   |
|   |
|   |
+---+
(9 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_order_by TEST_ID: A1_B5
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT c
   FROM test_unnest,
        unnest(a_bool) AS u(c)
   ORDER BY c ASC);
+---+
| c |
+---+
| 0 |
| 0 |
| 0 |
| 1 |
| 1 |
| 1 |
|   |
|   |
|   |
+---+
(9 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_order_by TEST_ID: A1_B6
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT c
   FROM test_unnest,
        unnest(a_bool) AS u(c)
   ORDER BY 1 DESC);
+---+
| c |
+---+
| 0 |
| 0 |
| 0 |
| 1 |
| 1 |
| 1 |
|   |
|   |
|   |
+---+
(9 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_order_by TEST_ID: A1_B7
#-------------------------------------------------------------------------
SELECT __time,
       count(*) cnt
FROM test_unnest,
     unnest(a_bool) AS u(c)
GROUP BY __time
ORDER BY __time ASC;
+-------------------------+-----+
| __time                  | cnt |
+-------------------------+-----+
| 2022-01-01 00:00:00.000 |   3 |
| 2022-02-01 00:00:00.000 |   3 |
| 2022-03-01 00:00:00.000 |   3 |
+-------------------------+-----+
(3 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_order_by TEST_ID: A1_B8
#-------------------------------------------------------------------------
SELECT __time,
       count(*) cnt
FROM test_unnest,
     unnest(a_bool) AS u(c)
GROUP BY __time
ORDER BY __time DESC;
+-------------------------+-----+
| __time                  | cnt |
+-------------------------+-----+
| 2022-03-01 00:00:00.000 |   3 |
| 2022-02-01 00:00:00.000 |   3 |
| 2022-01-01 00:00:00.000 |   3 |
+-------------------------+-----+
(3 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_order_by TEST_ID: A1_B9
#-------------------------------------------------------------------------
SELECT __time
FROM test_unnest,
     unnest(a_bool) AS u(c)
ORDER BY __time ASC;
+-------------------------+
| __time                  |
+-------------------------+
| 2022-01-01 00:00:00.000 |
| 2022-01-01 00:00:00.000 |
| 2022-01-01 00:00:00.000 |
| 2022-02-01 00:00:00.000 |
| 2022-02-01 00:00:00.000 |
| 2022-02-01 00:00:00.000 |
| 2022-03-01 00:00:00.000 |
| 2022-03-01 00:00:00.000 |
| 2022-03-01 00:00:00.000 |
+-------------------------+
(9 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_order_by TEST_ID: A1_B10
#-------------------------------------------------------------------------
SELECT __time
FROM test_unnest,
     unnest(a_bool) AS u(c)
ORDER BY 1 DESC;
+-------------------------+
| __time                  |
+-------------------------+
| 2022-03-01 00:00:00.000 |
| 2022-03-01 00:00:00.000 |
| 2022-03-01 00:00:00.000 |
| 2022-02-01 00:00:00.000 |
| 2022-02-01 00:00:00.000 |
| 2022-02-01 00:00:00.000 |
| 2022-01-01 00:00:00.000 |
| 2022-01-01 00:00:00.000 |
| 2022-01-01 00:00:00.000 |
+-------------------------+
(9 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_order_by TEST_ID: A1_B11
#-------------------------------------------------------------------------
SELECT __time
FROM
  (SELECT __time
   FROM test_unnest,
        unnest(a_bool) AS u(c)
   ORDER BY __time ASC);
+-------------------------+
| __time                  |
+-------------------------+
| 2022-01-01 00:00:00.000 |
| 2022-01-01 00:00:00.000 |
| 2022-01-01 00:00:00.000 |
| 2022-02-01 00:00:00.000 |
| 2022-02-01 00:00:00.000 |
| 2022-02-01 00:00:00.000 |
| 2022-03-01 00:00:00.000 |
| 2022-03-01 00:00:00.000 |
| 2022-03-01 00:00:00.000 |
+-------------------------+
(9 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_order_by TEST_ID: A1_B12
#-------------------------------------------------------------------------
SELECT __time
FROM
  (SELECT __time
   FROM test_unnest,
        unnest(a_bool) AS u(c)
   ORDER BY 1 DESC);
+-------------------------+
| __time                  |
+-------------------------+
| 2022-01-01 00:00:00.000 |
| 2022-01-01 00:00:00.000 |
| 2022-01-01 00:00:00.000 |
| 2022-02-01 00:00:00.000 |
| 2022-02-01 00:00:00.000 |
| 2022-02-01 00:00:00.000 |
| 2022-03-01 00:00:00.000 |
| 2022-03-01 00:00:00.000 |
| 2022-03-01 00:00:00.000 |
+-------------------------+
(9 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_order_by TEST_ID: A1_B13
#-------------------------------------------------------------------------
SELECT s_int,
       count(*) cnt
FROM test_unnest,
     unnest(a_bool) AS u(c)
GROUP BY s_int
ORDER BY s_int ASC;
+-------+-----+
| s_int | cnt |
+-------+-----+
|       |   3 |
|     1 |   3 |
|     2 |   3 |
+-------+-----+
(3 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_order_by TEST_ID: A1_B14
#-------------------------------------------------------------------------
SELECT s_int,
       count(*) cnt
FROM test_unnest,
     unnest(a_bool) AS u(c)
GROUP BY s_int
ORDER BY 1 DESC;
+-------+-----+
| s_int | cnt |
+-------+-----+
|     2 |   3 |
|     1 |   3 |
|       |   3 |
+-------+-----+
(3 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_order_by TEST_ID: A1_B15
#-------------------------------------------------------------------------
SELECT s_int
FROM test_unnest,
     unnest(a_bool) AS u(c)
ORDER BY s_int ASC;
+-------+
| s_int |
+-------+
|       |
|       |
|       |
|     1 |
|     1 |
|     1 |
|     2 |
|     2 |
|     2 |
+-------+
(9 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_order_by TEST_ID: A1_B16
#-------------------------------------------------------------------------
SELECT s_int
FROM test_unnest,
     unnest(a_bool) AS u(c)
ORDER BY 1 DESC;
+-------+
| s_int |
+-------+
|     2 |
|     2 |
|     2 |
|     1 |
|     1 |
|     1 |
|       |
|       |
|       |
+-------+
(9 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_order_by TEST_ID: A1_B17
#-------------------------------------------------------------------------
SELECT s_int
FROM
  (SELECT s_int
   FROM test_unnest,
        unnest(a_bool) AS u(c)
   ORDER BY s_int ASC);
+-------+
| s_int |
+-------+
|     1 |
|     1 |
|     1 |
|     2 |
|     2 |
|     2 |
|       |
|       |
|       |
+-------+
(9 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_order_by TEST_ID: A1_B18
#-------------------------------------------------------------------------
SELECT s_int
FROM
  (SELECT s_int
   FROM test_unnest,
        unnest(a_bool) AS u(c)
   ORDER BY 1 DESC);
+-------+
| s_int |
+-------+
|     1 |
|     1 |
|     1 |
|     2 |
|     2 |
|     2 |
|       |
|       |
|       |
+-------+
(9 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_order_by TEST_ID: A2_B1
#-------------------------------------------------------------------------
SELECT c,
       count(*) cnt
FROM test_unnest,
     unnest(json_value(a_nested, '$[0]' RETURNING boolean array)) AS u(c)
GROUP BY c
ORDER BY c ASC;
+-------+-----+
| c     | cnt |
+-------+-----+
|       |   3 |
| false |   3 |
|  true |   3 |
+-------+-----+
(3 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_order_by TEST_ID: A2_B2
#-------------------------------------------------------------------------
SELECT c,
       count(*) cnt
FROM test_unnest,
     unnest(json_value(a_nested, '$[0]' RETURNING boolean array)) AS u(c)
GROUP BY c
ORDER BY 1 DESC;
+-------+-----+
| c     | cnt |
+-------+-----+
|  true |   3 |
| false |   3 |
|       |   3 |
+-------+-----+
(3 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_order_by TEST_ID: A2_B3
#-------------------------------------------------------------------------
SELECT c
FROM test_unnest,
     unnest(json_value(a_nested, '$[0]' RETURNING boolean array)) AS u(c)
ORDER BY c ASC;
+-------+
| c     |
+-------+
|       |
|       |
|       |
| false |
| false |
| false |
|  true |
|  true |
|  true |
+-------+
(9 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_order_by TEST_ID: A2_B4
#-------------------------------------------------------------------------
SELECT c
FROM test_unnest,
     unnest(json_value(a_nested, '$[0]' RETURNING boolean array)) AS u(c)
ORDER BY 1 DESC;
+-------+
| c     |
+-------+
|  true |
|  true |
|  true |
| false |
| false |
| false |
|       |
|       |
|       |
+-------+
(9 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_order_by TEST_ID: A2_B5
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT c
   FROM test_unnest,
        unnest(json_value(a_nested, '$[0]' RETURNING boolean array)) AS u(c)
   ORDER BY c ASC);
+-------+
| c     |
+-------+
| false |
| false |
| false |
|  true |
|  true |
|  true |
|       |
|       |
|       |
+-------+
(9 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_order_by TEST_ID: A2_B6
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT c
   FROM test_unnest,
        unnest(json_value(a_nested, '$[0]' RETURNING boolean array)) AS u(c)
   ORDER BY 1 DESC);
+-------+
| c     |
+-------+
| false |
| false |
| false |
|  true |
|  true |
|  true |
|       |
|       |
|       |
+-------+
(9 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_order_by TEST_ID: A2_B7
#-------------------------------------------------------------------------
SELECT __time,
       count(*) cnt
FROM test_unnest,
     unnest(json_value(a_nested, '$[0]' RETURNING boolean array)) AS u(c)
GROUP BY __time
ORDER BY __time ASC;
+-------------------------+-----+
| __time                  | cnt |
+-------------------------+-----+
| 2022-01-01 00:00:00.000 |   3 |
| 2022-02-01 00:00:00.000 |   3 |
| 2022-03-01 00:00:00.000 |   3 |
+-------------------------+-----+
(3 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_order_by TEST_ID: A2_B8
#-------------------------------------------------------------------------
SELECT __time,
       count(*) cnt
FROM test_unnest,
     unnest(json_value(a_nested, '$[0]' RETURNING boolean array)) AS u(c)
GROUP BY __time
ORDER BY __time DESC;
+-------------------------+-----+
| __time                  | cnt |
+-------------------------+-----+
| 2022-03-01 00:00:00.000 |   3 |
| 2022-02-01 00:00:00.000 |   3 |
| 2022-01-01 00:00:00.000 |   3 |
+-------------------------+-----+
(3 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_order_by TEST_ID: A2_B9
#-------------------------------------------------------------------------
SELECT __time
FROM test_unnest,
     unnest(json_value(a_nested, '$[0]' RETURNING boolean array)) AS u(c)
ORDER BY __time ASC;
+-------------------------+
| __time                  |
+-------------------------+
| 2022-01-01 00:00:00.000 |
| 2022-01-01 00:00:00.000 |
| 2022-01-01 00:00:00.000 |
| 2022-02-01 00:00:00.000 |
| 2022-02-01 00:00:00.000 |
| 2022-02-01 00:00:00.000 |
| 2022-03-01 00:00:00.000 |
| 2022-03-01 00:00:00.000 |
| 2022-03-01 00:00:00.000 |
+-------------------------+
(9 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_order_by TEST_ID: A2_B10
#-------------------------------------------------------------------------
SELECT __time
FROM test_unnest,
     unnest(json_value(a_nested, '$[0]' RETURNING boolean array)) AS u(c)
ORDER BY 1 DESC;
+-------------------------+
| __time                  |
+-------------------------+
| 2022-03-01 00:00:00.000 |
| 2022-03-01 00:00:00.000 |
| 2022-03-01 00:00:00.000 |
| 2022-02-01 00:00:00.000 |
| 2022-02-01 00:00:00.000 |
| 2022-02-01 00:00:00.000 |
| 2022-01-01 00:00:00.000 |
| 2022-01-01 00:00:00.000 |
| 2022-01-01 00:00:00.000 |
+-------------------------+
(9 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_order_by TEST_ID: A2_B11
#-------------------------------------------------------------------------
SELECT __time
FROM
  (SELECT __time
   FROM test_unnest,
        unnest(json_value(a_nested, '$[0]' RETURNING boolean array)) AS u(c)
   ORDER BY __time ASC);
+-------------------------+
| __time                  |
+-------------------------+
| 2022-01-01 00:00:00.000 |
| 2022-01-01 00:00:00.000 |
| 2022-01-01 00:00:00.000 |
| 2022-02-01 00:00:00.000 |
| 2022-02-01 00:00:00.000 |
| 2022-02-01 00:00:00.000 |
| 2022-03-01 00:00:00.000 |
| 2022-03-01 00:00:00.000 |
| 2022-03-01 00:00:00.000 |
+-------------------------+
(9 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_order_by TEST_ID: A2_B12
#-------------------------------------------------------------------------
SELECT __time
FROM
  (SELECT __time
   FROM test_unnest,
        unnest(json_value(a_nested, '$[0]' RETURNING boolean array)) AS u(c)
   ORDER BY 1 DESC);
+-------------------------+
| __time                  |
+-------------------------+
| 2022-01-01 00:00:00.000 |
| 2022-01-01 00:00:00.000 |
| 2022-01-01 00:00:00.000 |
| 2022-02-01 00:00:00.000 |
| 2022-02-01 00:00:00.000 |
| 2022-02-01 00:00:00.000 |
| 2022-03-01 00:00:00.000 |
| 2022-03-01 00:00:00.000 |
| 2022-03-01 00:00:00.000 |
+-------------------------+
(9 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_order_by TEST_ID: A2_B13
#-------------------------------------------------------------------------
SELECT s_int,
       count(*) cnt
FROM test_unnest,
     unnest(json_value(a_nested, '$[0]' RETURNING boolean array)) AS u(c)
GROUP BY s_int
ORDER BY s_int ASC;
+-------+-----+
| s_int | cnt |
+-------+-----+
|       |   3 |
|     1 |   3 |
|     2 |   3 |
+-------+-----+
(3 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_order_by TEST_ID: A2_B14
#-------------------------------------------------------------------------
SELECT s_int,
       count(*) cnt
FROM test_unnest,
     unnest(json_value(a_nested, '$[0]' RETURNING boolean array)) AS u(c)
GROUP BY s_int
ORDER BY 1 DESC;
+-------+-----+
| s_int | cnt |
+-------+-----+
|     2 |   3 |
|     1 |   3 |
|       |   3 |
+-------+-----+
(3 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_order_by TEST_ID: A2_B15
#-------------------------------------------------------------------------
SELECT s_int
FROM test_unnest,
     unnest(json_value(a_nested, '$[0]' RETURNING boolean array)) AS u(c)
ORDER BY s_int ASC;
+-------+
| s_int |
+-------+
|       |
|       |
|       |
|     1 |
|     1 |
|     1 |
|     2 |
|     2 |
|     2 |
+-------+
(9 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_order_by TEST_ID: A2_B16
#-------------------------------------------------------------------------
SELECT s_int
FROM test_unnest,
     unnest(json_value(a_nested, '$[0]' RETURNING boolean array)) AS u(c)
ORDER BY 1 DESC;
+-------+
| s_int |
+-------+
|     2 |
|     2 |
|     2 |
|     1 |
|     1 |
|     1 |
|       |
|       |
|       |
+-------+
(9 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_order_by TEST_ID: A2_B17
#-------------------------------------------------------------------------
SELECT s_int
FROM
  (SELECT s_int
   FROM test_unnest,
        unnest(json_value(a_nested, '$[0]' RETURNING boolean array)) AS u(c)
   ORDER BY s_int ASC);
+-------+
| s_int |
+-------+
|     1 |
|     1 |
|     1 |
|     2 |
|     2 |
|     2 |
|       |
|       |
|       |
+-------+
(9 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_order_by TEST_ID: A2_B18
#-------------------------------------------------------------------------
SELECT s_int
FROM
  (SELECT s_int
   FROM test_unnest,
        unnest(json_value(a_nested, '$[0]' RETURNING boolean array)) AS u(c)
   ORDER BY 1 DESC);
+-------+
| s_int |
+-------+
|     1 |
|     1 |
|     1 |
|     2 |
|     2 |
|     2 |
|       |
|       |
|       |
+-------+
(9 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_order_by TEST_ID: A3_B1
#-------------------------------------------------------------------------
SELECT c,
       count(*) cnt
FROM test_unnest,
     unnest(a_int) AS u(c)
GROUP BY c
ORDER BY c ASC;
+---+-----+
| c | cnt |
+---+-----+
|   |   3 |
| 1 |   3 |
| 2 |   3 |
+---+-----+
(3 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_order_by TEST_ID: A3_B2
#-------------------------------------------------------------------------
SELECT c,
       count(*) cnt
FROM test_unnest,
     unnest(a_int) AS u(c)
GROUP BY c
ORDER BY 1 DESC;
+---+-----+
| c | cnt |
+---+-----+
| 2 |   3 |
| 1 |   3 |
|   |   3 |
+---+-----+
(3 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_order_by TEST_ID: A3_B3
#-------------------------------------------------------------------------
SELECT c
FROM test_unnest,
     unnest(a_int) AS u(c)
ORDER BY c ASC;
+---+
| c |
+---+
|   |
|   |
|   |
| 1 |
| 1 |
| 1 |
| 2 |
| 2 |
| 2 |
+---+
(9 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_order_by TEST_ID: A3_B4
#-------------------------------------------------------------------------
SELECT c
FROM test_unnest,
     unnest(a_int) AS u(c)
ORDER BY 1 DESC;
+---+
| c |
+---+
| 2 |
| 2 |
| 2 |
| 1 |
| 1 |
| 1 |
|   |
|   |
|   |
+---+
(9 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_order_by TEST_ID: A3_B5
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT c
   FROM test_unnest,
        unnest(a_int) AS u(c)
   ORDER BY c ASC);
+---+
| c |
+---+
| 1 |
| 1 |
| 1 |
| 2 |
| 2 |
| 2 |
|   |
|   |
|   |
+---+
(9 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_order_by TEST_ID: A3_B6
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT c
   FROM test_unnest,
        unnest(a_int) AS u(c)
   ORDER BY 1 DESC);
+---+
| c |
+---+
| 1 |
| 1 |
| 1 |
| 2 |
| 2 |
| 2 |
|   |
|   |
|   |
+---+
(9 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_order_by TEST_ID: A3_B7
#-------------------------------------------------------------------------
SELECT __time,
       count(*) cnt
FROM test_unnest,
     unnest(a_int) AS u(c)
GROUP BY __time
ORDER BY __time ASC;
+-------------------------+-----+
| __time                  | cnt |
+-------------------------+-----+
| 2022-01-01 00:00:00.000 |   3 |
| 2022-02-01 00:00:00.000 |   3 |
| 2022-03-01 00:00:00.000 |   3 |
+-------------------------+-----+
(3 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_order_by TEST_ID: A3_B8
#-------------------------------------------------------------------------
SELECT __time,
       count(*) cnt
FROM test_unnest,
     unnest(a_int) AS u(c)
GROUP BY __time
ORDER BY __time DESC;
+-------------------------+-----+
| __time                  | cnt |
+-------------------------+-----+
| 2022-03-01 00:00:00.000 |   3 |
| 2022-02-01 00:00:00.000 |   3 |
| 2022-01-01 00:00:00.000 |   3 |
+-------------------------+-----+
(3 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_order_by TEST_ID: A3_B9
#-------------------------------------------------------------------------
SELECT __time
FROM test_unnest,
     unnest(a_int) AS u(c)
ORDER BY __time ASC;
+-------------------------+
| __time                  |
+-------------------------+
| 2022-01-01 00:00:00.000 |
| 2022-01-01 00:00:00.000 |
| 2022-01-01 00:00:00.000 |
| 2022-02-01 00:00:00.000 |
| 2022-02-01 00:00:00.000 |
| 2022-02-01 00:00:00.000 |
| 2022-03-01 00:00:00.000 |
| 2022-03-01 00:00:00.000 |
| 2022-03-01 00:00:00.000 |
+-------------------------+
(9 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_order_by TEST_ID: A3_B10
#-------------------------------------------------------------------------
SELECT __time
FROM test_unnest,
     unnest(a_int) AS u(c)
ORDER BY 1 DESC;
+-------------------------+
| __time                  |
+-------------------------+
| 2022-03-01 00:00:00.000 |
| 2022-03-01 00:00:00.000 |
| 2022-03-01 00:00:00.000 |
| 2022-02-01 00:00:00.000 |
| 2022-02-01 00:00:00.000 |
| 2022-02-01 00:00:00.000 |
| 2022-01-01 00:00:00.000 |
| 2022-01-01 00:00:00.000 |
| 2022-01-01 00:00:00.000 |
+-------------------------+
(9 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_order_by TEST_ID: A3_B11
#-------------------------------------------------------------------------
SELECT __time
FROM
  (SELECT __time
   FROM test_unnest,
        unnest(a_int) AS u(c)
   ORDER BY __time ASC);
+-------------------------+
| __time                  |
+-------------------------+
| 2022-01-01 00:00:00.000 |
| 2022-01-01 00:00:00.000 |
| 2022-01-01 00:00:00.000 |
| 2022-02-01 00:00:00.000 |
| 2022-02-01 00:00:00.000 |
| 2022-02-01 00:00:00.000 |
| 2022-03-01 00:00:00.000 |
| 2022-03-01 00:00:00.000 |
| 2022-03-01 00:00:00.000 |
+-------------------------+
(9 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_order_by TEST_ID: A3_B12
#-------------------------------------------------------------------------
SELECT __time
FROM
  (SELECT __time
   FROM test_unnest,
        unnest(a_int) AS u(c)
   ORDER BY 1 DESC);
+-------------------------+
| __time                  |
+-------------------------+
| 2022-01-01 00:00:00.000 |
| 2022-01-01 00:00:00.000 |
| 2022-01-01 00:00:00.000 |
| 2022-02-01 00:00:00.000 |
| 2022-02-01 00:00:00.000 |
| 2022-02-01 00:00:00.000 |
| 2022-03-01 00:00:00.000 |
| 2022-03-01 00:00:00.000 |
| 2022-03-01 00:00:00.000 |
+-------------------------+
(9 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_order_by TEST_ID: A3_B13
#-------------------------------------------------------------------------
SELECT s_int,
       count(*) cnt
FROM test_unnest,
     unnest(a_int) AS u(c)
GROUP BY s_int
ORDER BY s_int ASC;
+-------+-----+
| s_int | cnt |
+-------+-----+
|       |   3 |
|     1 |   3 |
|     2 |   3 |
+-------+-----+
(3 rows)

!ok

