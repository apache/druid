!set useApproximateCountDistinct false
!use druidtest://?componentSupplier=AllDruidEnginesComponentSupplier&datasets=sql/src/test/quidem/qatests/qaUnnest/array
!set outputformat mysql
#-------------------------------------------------------------------------
# TESTCASE: test_scalar_numeric_funcs TEST_ID: A1_B13_C4_D2
#-------------------------------------------------------------------------
SELECT mod(c, s_int) AS col
FROM test_unnest,
     unnest(json_value(a_nested, '$[1]' RETURNING bigint array)) AS u(c)
WHERE (s_int IN (0,
                 1,
                 2)
       OR s_int IS NULL)
  AND (mod(c, s_int)<99999
       OR mod(c, s_int) IS NULL);
+-----+
| col |
+-----+
|   0 |
|   0 |
|   0 |
|   1 |
|     |
|     |
|     |
|     |
|     |
+-----+
(9 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_scalar_numeric_funcs TEST_ID: A1_B14_C1_D2
#-------------------------------------------------------------------------
SELECT trunc(sin(c),11)+trunc(sin(c),11) AS col
FROM test_unnest,
     unnest(json_value(a_nested, '$[1]' RETURNING bigint array)) AS u(c)
WHERE (s_int IN (0,
                 1,
                 2)
       OR s_int IS NULL)
  AND ((sin(c)+sin(c))<99999
       OR (sin(c)+sin(c)) IS NULL);
+---------------+
| col           |
+---------------+
|  1.6829419696 |
|  1.6829419696 |
|  1.6829419696 |
| 1.81859485364 |
| 1.81859485364 |
| 1.81859485364 |
|               |
|               |
|               |
+---------------+
(9 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_scalar_numeric_funcs TEST_ID: A1_B14_C2_D2
#-------------------------------------------------------------------------
SELECT trunc(sin(c+c),11) AS col
FROM test_unnest,
     unnest(json_value(a_nested, '$[1]' RETURNING bigint array)) AS u(c)
WHERE (s_int IN (0,
                 1,
                 2)
       OR s_int IS NULL)
  AND (sin(c+c)<99999
       OR sin(c+c) IS NULL);
+---------------+
| col           |
+---------------+
| -0.7568024953 |
| -0.7568024953 |
| -0.7568024953 |
| 0.90929742682 |
| 0.90929742682 |
| 0.90929742682 |
|               |
|               |
|               |
+---------------+
(9 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_scalar_numeric_funcs TEST_ID: A1_B14_C3_D2
#-------------------------------------------------------------------------
SELECT trunc(sin(c),11)+trunc(sin(s_int),11) AS col
FROM test_unnest,
     unnest(json_value(a_nested, '$[1]' RETURNING bigint array)) AS u(c)
WHERE (s_int IN (0,
                 1,
                 2)
       OR s_int IS NULL)
  AND ((sin(c)+sin(s_int))<99999
       OR (sin(c)+sin(s_int)) IS NULL);
+--------------------+
| col                |
+--------------------+
|                    |
|                    |
|                    |
|                    |
|                    |
|       1.6829419696 |
| 1.7507684116200002 |
| 1.7507684116200002 |
|      1.81859485364 |
+--------------------+
(9 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_scalar_numeric_funcs TEST_ID: A1_B14_C4_D2
#-------------------------------------------------------------------------
SELECT trunc(sin(c+s_int),11) AS col
FROM test_unnest,
     unnest(json_value(a_nested, '$[1]' RETURNING bigint array)) AS u(c)
WHERE (s_int IN (0,
                 1,
                 2)
       OR s_int IS NULL)
  AND (sin(c+s_int)<99999
       OR sin(c+s_int)<99999 IS NULL);
+---------------+
| col           |
+---------------+
| -0.7568024953 |
| 0.14112000805 |
| 0.14112000805 |
| 0.90929742682 |
|               |
|               |
|               |
|               |
|               |
+---------------+
(9 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_scalar_numeric_funcs TEST_ID: A1_B15_C1_D2
#-------------------------------------------------------------------------
SELECT trunc(cos(c),11)+trunc(cos(c),11) AS col
FROM test_unnest,
     unnest(json_value(a_nested, '$[1]' RETURNING bigint array)) AS u(c)
WHERE (s_int IN (0,
                 1,
                 2)
       OR s_int IS NULL)
  AND ((cos(c)+cos(c))<99999
       OR (cos(c)+cos(c)) IS NULL);
+----------------+
| col            |
+----------------+
| -0.83229367308 |
| -0.83229367308 |
| -0.83229367308 |
|  1.08060461172 |
|  1.08060461172 |
|  1.08060461172 |
|                |
|                |
|                |
+----------------+
(9 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_scalar_numeric_funcs TEST_ID: A1_B15_C2_D2
#-------------------------------------------------------------------------
SELECT trunc(cos(c+c),11) AS col
FROM test_unnest,
     unnest(json_value(a_nested, '$[1]' RETURNING bigint array)) AS u(c)
WHERE (s_int IN (0,
                 1,
                 2)
       OR s_int IS NULL)
  AND (cos(c+c)<99999
       OR cos(c+c) IS NULL);
+----------------+
| col            |
+----------------+
| -0.41614683654 |
| -0.41614683654 |
| -0.41614683654 |
| -0.65364362086 |
| -0.65364362086 |
| -0.65364362086 |
|                |
|                |
|                |
+----------------+
(9 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_scalar_numeric_funcs TEST_ID: A1_B15_C3_D2
#-------------------------------------------------------------------------
SELECT trunc(cos(c),11)+trunc(cos(s_int),11) AS col
FROM test_unnest,
     unnest(json_value(a_nested, '$[1]' RETURNING bigint array)) AS u(c)
WHERE (s_int IN (0,
                 1,
                 2)
       OR s_int IS NULL)
  AND ((cos(c)+cos(s_int))<99999
       OR (cos(c)+cos(s_int)) IS NULL);
+---------------------+
| col                 |
+---------------------+
|                     |
|                     |
|                     |
|                     |
|                     |
|      -0.83229367308 |
| 0.12415546932000004 |
| 0.12415546932000004 |
|       1.08060461172 |
+---------------------+
(9 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_scalar_numeric_funcs TEST_ID: A1_B15_C4_D2
#-------------------------------------------------------------------------
SELECT trunc(cos(c+s_int),11) AS col
FROM test_unnest,
     unnest(json_value(a_nested, '$[1]' RETURNING bigint array)) AS u(c)
WHERE (s_int IN (0,
                 1,
                 2)
       OR s_int IS NULL)
  AND (cos(c+s_int)<99999
       OR cos(c+s_int) IS NULL);
+----------------+
| col            |
+----------------+
| -0.41614683654 |
| -0.65364362086 |
|  -0.9899924966 |
|  -0.9899924966 |
|                |
|                |
|                |
|                |
|                |
+----------------+
(9 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_scalar_numeric_funcs TEST_ID: A1_B16_C1_D2
#-------------------------------------------------------------------------
SELECT trunc(tan(c),11)+trunc(tan(c),11) AS col
FROM test_unnest,
     unnest(json_value(a_nested, '$[1]' RETURNING bigint array)) AS u(c)
WHERE (s_int IN (0,
                 1,
                 2)
       OR s_int IS NULL)
  AND ((tan(c)+tan(c))<99999
       OR (tan(c)+tan(c)) IS NULL);
+----------------+
| col            |
+----------------+
| -4.37007972652 |
| -4.37007972652 |
| -4.37007972652 |
|   3.1148154493 |
|   3.1148154493 |
|   3.1148154493 |
|                |
|                |
|                |
+----------------+
(9 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_scalar_numeric_funcs TEST_ID: A1_B16_C2_D2
#-------------------------------------------------------------------------
SELECT trunc(tan(c+c),11) AS col
FROM test_unnest,
     unnest(json_value(a_nested, '$[1]' RETURNING bigint array)) AS u(c)
WHERE (s_int IN (0,
                 1,
                 2)
       OR s_int IS NULL)
  AND (tan(c+c)<99999
       OR tan(c+c) IS NULL);
+----------------+
| col            |
+----------------+
| -2.18503986326 |
| -2.18503986326 |
| -2.18503986326 |
|  1.15782128234 |
|  1.15782128234 |
|  1.15782128234 |
|                |
|                |
|                |
+----------------+
(9 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_scalar_numeric_funcs TEST_ID: A1_B16_C3_D2
#-------------------------------------------------------------------------
SELECT trunc(tan(c),11)+trunc(tan(s_int),11) AS col
FROM test_unnest,
     unnest(json_value(a_nested, '$[1]' RETURNING bigint array)) AS u(c)
WHERE (s_int IN (0,
                 1,
                 2)
       OR s_int IS NULL)
  AND ((tan(c)+tan(s_int))<99999
       OR (tan(c)+tan(s_int)) IS NULL);
+---------------------+
| col                 |
+---------------------+
|                     |
|                     |
|                     |
|                     |
|                     |
| -0.6276321386100001 |
| -0.6276321386100001 |
|      -4.37007972652 |
|        3.1148154493 |
+---------------------+
(9 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_scalar_numeric_funcs TEST_ID: A1_B16_C4_D2
#-------------------------------------------------------------------------
SELECT trunc(tan(c+s_int),11) AS col
FROM test_unnest,
     unnest(json_value(a_nested, '$[1]' RETURNING bigint array)) AS u(c)
WHERE (s_int IN (0,
                 1,
                 2)
       OR s_int IS NULL)
  AND (tan(c+s_int)<99999
       OR tan(c+s_int) IS NULL);
+----------------+
| col            |
+----------------+
| -0.14254654307 |
| -0.14254654307 |
| -2.18503986326 |
|  1.15782128234 |
|                |
|                |
|                |
|                |
|                |
+----------------+
(9 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_scalar_numeric_funcs TEST_ID: A1_B17_C1_D2
#-------------------------------------------------------------------------
SELECT trunc(cot(c),11)+trunc(cot(c),11) AS col
FROM test_unnest,
     unnest(json_value(a_nested, '$[1]' RETURNING bigint array)) AS u(c)
WHERE (s_int IN (0,
                 1,
                 2)
       OR s_int IS NULL)
  AND ((cot(c)+cot(c))<99999
       OR (cot(c)+cot(c)) IS NULL);
+----------------+
| col            |
+----------------+
| -0.91531510872 |
| -0.91531510872 |
| -0.91531510872 |
|  1.28418523186 |
|  1.28418523186 |
|  1.28418523186 |
|                |
|                |
|                |
+----------------+
(9 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_scalar_numeric_funcs TEST_ID: A1_B17_C2_D2
#-------------------------------------------------------------------------
SELECT trunc(cot(c+c),11) AS col
FROM test_unnest,
     unnest(json_value(a_nested, '$[1]' RETURNING bigint array)) AS u(c)
WHERE (s_int IN (0,
                 1,
                 2)
       OR s_int IS NULL)
  AND (cot(c+c)<99999
       OR cot(c+c) IS NULL);
+----------------+
| col            |
+----------------+
| -0.45765755436 |
| -0.45765755436 |
| -0.45765755436 |
|  0.86369115445 |
|  0.86369115445 |
|  0.86369115445 |
|                |
|                |
|                |
+----------------+
(9 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_scalar_numeric_funcs TEST_ID: A1_B17_C3_D2
#-------------------------------------------------------------------------
SELECT trunc(cot(c),11)+trunc(cot(s_int),11) AS col
FROM test_unnest,
     unnest(json_value(a_nested, '$[1]' RETURNING bigint array)) AS u(c)
WHERE (s_int IN (0,
                 1,
                 2)
       OR s_int IS NULL)
  AND ((cot(c)+cot(s_int))<99999
       OR (cot(c)+cot(s_int)) IS NULL);
+----------------+
| col            |
+----------------+
| -0.91531510872 |
|  0.18443506157 |
|  0.18443506157 |
|  1.28418523186 |
|                |
|                |
|                |
|                |
|                |
+----------------+
(9 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_scalar_numeric_funcs TEST_ID: A1_B17_C4_D2
#-------------------------------------------------------------------------
SELECT trunc(cot(c+s_int),11) AS col
FROM test_unnest,
     unnest(json_value(a_nested, '$[1]' RETURNING bigint array)) AS u(c)
WHERE (s_int IN (0,
                 1,
                 2)
       OR s_int IS NULL)
  AND (cot(c+s_int)<99999
       OR cot(c+s_int) IS NULL);
+----------------+
| col            |
+----------------+
| -0.45765755436 |
| -7.01525255143 |
| -7.01525255143 |
|  0.86369115445 |
|                |
|                |
|                |
|                |
|                |
+----------------+
(9 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_scalar_numeric_funcs TEST_ID: A1_B18_C1_D2
#-------------------------------------------------------------------------
SELECT trunc(asin(c),11)+trunc(asin(c),11) AS col
FROM test_unnest,
     unnest(json_value(a_nested, '$[1]' RETURNING bigint array)) AS u(c)
WHERE (s_int IN (0,
                 1,
                 2)
       OR s_int IS NULL)
  AND ((asin(c)+asin(c))<99999
       OR (asin(c)+asin(c)) IS NULL);
+---------------+
| col           |
+---------------+
| 3.14159265358 |
| 3.14159265358 |
| 3.14159265358 |
|               |
|               |
|               |
+---------------+
(6 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_scalar_numeric_funcs TEST_ID: A1_B18_C2_D2
#-------------------------------------------------------------------------
SELECT trunc(asin(c+c),11) AS col
FROM test_unnest,
     unnest(json_value(a_nested, '$[1]' RETURNING bigint array)) AS u(c)
WHERE (s_int IN (0,
                 1,
                 2)
       OR s_int IS NULL)
  AND (asin(c+c)<99999
       OR asin(c+c)<99999 IS NULL);
+-----+
| col |
+-----+
|     |
|     |
|     |
+-----+
(3 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_scalar_numeric_funcs TEST_ID: A1_B18_C3_D2
#-------------------------------------------------------------------------
SELECT trunc(asin(c),11)+trunc(asin(s_int),11) AS col
FROM test_unnest,
     unnest(json_value(a_nested, '$[1]' RETURNING bigint array)) AS u(c)
WHERE (s_int IN (0,
                 1,
                 2)
       OR s_int IS NULL)
  AND ((asin(c)+asin(s_int))<99999
       OR (asin(c)+asin(s_int)) IS NULL);
+---------------+
| col           |
+---------------+
| 3.14159265358 |
|               |
|               |
|               |
|               |
|               |
+---------------+
(6 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_scalar_numeric_funcs TEST_ID: A1_B18_C4_D2
#-------------------------------------------------------------------------
SELECT trunc(asin(c+s_int),11) AS col
FROM test_unnest,
     unnest(json_value(a_nested, '$[1]' RETURNING bigint array)) AS u(c)
WHERE (s_int IN (0,
                 1,
                 2)
       OR s_int IS NULL)
  AND (asin(c+s_int)<99999
       OR asin(c+s_int)<99999 IS NULL);
+-----+
| col |
+-----+
|     |
|     |
|     |
|     |
|     |
+-----+
(5 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_scalar_numeric_funcs TEST_ID: A1_B19_C1_D2
#-------------------------------------------------------------------------
SELECT acos(c)+acos(c) AS col
FROM test_unnest,
     unnest(json_value(a_nested, '$[1]' RETURNING bigint array)) AS u(c)
WHERE (s_int IN (0,
                 1,
                 2)
       OR s_int IS NULL)
  AND ((acos(c)+acos(c))<99999
       OR (acos(c)+acos(c)) IS NULL);
+-----+
| col |
+-----+
| 0.0 |
| 0.0 |
| 0.0 |
|     |
|     |
|     |
+-----+
(6 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_scalar_numeric_funcs TEST_ID: A1_B19_C2_D2
#-------------------------------------------------------------------------
SELECT trunc(acos(c+c),11) AS col
FROM test_unnest,
     unnest(json_value(a_nested, '$[1]' RETURNING bigint array)) AS u(c)
WHERE (s_int IN (0,
                 1,
                 2)
       OR s_int IS NULL)
  AND (acos(c+c)<99999
       OR acos(c+c) IS NULL);
+-----+
| col |
+-----+
|     |
|     |
|     |
+-----+
(3 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_scalar_numeric_funcs TEST_ID: A1_B19_C3_D2
#-------------------------------------------------------------------------
SELECT acos(c)+acos(s_int) AS col
FROM test_unnest,
     unnest(json_value(a_nested, '$[1]' RETURNING bigint array)) AS u(c)
WHERE (s_int IN (0,
                 1,
                 2)
       OR s_int IS NULL)
  AND ((acos(c)+acos(s_int))<99999
       OR (acos(c)+acos(s_int)) IS NULL);
+-----+
| col |
+-----+
| 0.0 |
|     |
|     |
|     |
|     |
|     |
+-----+
(6 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_scalar_numeric_funcs TEST_ID: A1_B19_C4_D2
#-------------------------------------------------------------------------
SELECT trunc(acos(c+s_int),11) AS col
FROM test_unnest,
     unnest(json_value(a_nested, '$[1]' RETURNING bigint array)) AS u(c)
WHERE (s_int IN (0,
                 1,
                 2)
       OR s_int IS NULL)
  AND (acos(c+s_int)<99999
       OR acos(c+s_int) IS NULL);
+-----+
| col |
+-----+
|     |
|     |
|     |
|     |
|     |
+-----+
(5 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_scalar_numeric_funcs TEST_ID: A1_B20_C1_D2
#-------------------------------------------------------------------------
SELECT trunc(atan(c),11)+trunc(atan(c),11) AS col
FROM test_unnest,
     unnest(json_value(a_nested, '$[1]' RETURNING bigint array)) AS u(c)
WHERE (s_int IN (0,
                 1,
                 2)
       OR s_int IS NULL)
  AND ((atan(c)+atan(c))<99999
       OR (atan(c)+atan(c)) IS NULL);
+---------------+
| col           |
+---------------+
| 1.57079632678 |
| 1.57079632678 |
| 1.57079632678 |
| 2.21429743558 |
| 2.21429743558 |
| 2.21429743558 |
|               |
|               |
|               |
+---------------+
(9 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_scalar_numeric_funcs TEST_ID: A1_B20_C2_D2
#-------------------------------------------------------------------------
SELECT trunc(atan(c+c),11) AS col
FROM test_unnest,
     unnest(json_value(a_nested, '$[1]' RETURNING bigint array)) AS u(c)
WHERE (s_int IN (0,
                 1,
                 2)
       OR s_int IS NULL)
  AND (atan(c+c)<99999
       OR atan(c+c) IS NULL);
+---------------+
| col           |
+---------------+
| 1.10714871779 |
| 1.10714871779 |
| 1.10714871779 |
| 1.32581766366 |
| 1.32581766366 |
| 1.32581766366 |
|               |
|               |
|               |
+---------------+
(9 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_scalar_numeric_funcs TEST_ID: A1_B20_C3_D2
#-------------------------------------------------------------------------
SELECT trunc(atan(c),11)+trunc(atan(s_int),11) AS col
FROM test_unnest,
     unnest(json_value(a_nested, '$[1]' RETURNING bigint array)) AS u(c)
WHERE (s_int IN (0,
                 1,
                 2)
       OR s_int IS NULL)
  AND ((atan(c)+atan(s_int))<99999
       OR (atan(c)+atan(s_int)) IS NULL);
+---------------+
| col           |
+---------------+
| 1.57079632678 |
| 1.89254688118 |
| 1.89254688118 |
| 2.21429743558 |
|               |
|               |
|               |
|               |
|               |
+---------------+
(9 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_scalar_numeric_funcs TEST_ID: A1_B20_C4_D2
#-------------------------------------------------------------------------
SELECT trunc(atan(c+s_int),11) AS col
FROM test_unnest,
     unnest(json_value(a_nested, '$[1]' RETURNING bigint array)) AS u(c)
WHERE (s_int IN (0,
                 1,
                 2)
       OR s_int IS NULL)
  AND (atan(c+s_int)<99999
       OR atan(c+s_int) IS NULL);
+---------------+
| col           |
+---------------+
| 1.10714871779 |
| 1.24904577239 |
| 1.24904577239 |
| 1.32581766366 |
|               |
|               |
|               |
|               |
|               |
+---------------+
(9 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_scalar_numeric_funcs TEST_ID: A1_B21_C1_D2
#-------------------------------------------------------------------------
SELECT trunc(atan2(c, 1),11)+trunc(atan2(c, 1),11) AS col
FROM test_unnest,
     unnest(json_value(a_nested, '$[1]' RETURNING bigint array)) AS u(c)
WHERE (s_int IN (0,
                 1,
                 2)
       OR s_int IS NULL)
  AND ((atan2(c, 1)+atan2(c, 1))<99999
       OR (atan2(c, 1)+atan2(c, 1)) IS NULL);
+---------------+
| col           |
+---------------+
| 1.57079632678 |
| 1.57079632678 |
| 1.57079632678 |
| 2.21429743558 |
| 2.21429743558 |
| 2.21429743558 |
|               |
|               |
|               |
+---------------+
(9 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_scalar_numeric_funcs TEST_ID: A1_B21_C2_D2
#-------------------------------------------------------------------------
SELECT trunc(atan2(c, c),11) AS col
FROM test_unnest,
     unnest(json_value(a_nested, '$[1]' RETURNING bigint array)) AS u(c)
WHERE (s_int IN (0,
                 1,
                 2)
       OR s_int IS NULL)
  AND (atan2(c, c)<99999
       OR atan2(c, c) IS NULL);
+---------------+
| col           |
+---------------+
| 0.78539816339 |
| 0.78539816339 |
| 0.78539816339 |
| 0.78539816339 |
| 0.78539816339 |
| 0.78539816339 |
|               |
|               |
|               |
+---------------+
(9 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_scalar_numeric_funcs TEST_ID: A1_B21_C3_D2
#-------------------------------------------------------------------------
SELECT trunc(atan2(c, 1),11)+trunc(atan2(s_int, 1),11) AS col
FROM test_unnest,
     unnest(json_value(a_nested, '$[1]' RETURNING bigint array)) AS u(c)
WHERE (s_int IN (0,
                 1,
                 2)
       OR s_int IS NULL)
  AND ((atan2(c, 1)+atan2(s_int, 1))<99999
       OR (atan2(c, 1)+atan2(s_int, 1)) IS NULL);
+---------------+
| col           |
+---------------+
| 1.57079632678 |
| 1.89254688118 |
| 1.89254688118 |
| 2.21429743558 |
|               |
|               |
|               |
|               |
|               |
+---------------+
(9 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_scalar_numeric_funcs TEST_ID: A1_B21_C4_D2
#-------------------------------------------------------------------------
SELECT trunc(atan2(c, s_int),11) AS col
FROM test_unnest,
     unnest(json_value(a_nested, '$[1]' RETURNING bigint array)) AS u(c)
WHERE (s_int IN (0,
                 1,
                 2)
       OR s_int IS NULL)
  AND (atan2(c, s_int)<99999
       OR atan2(c, s_int) IS NULL);
+---------------+
| col           |
+---------------+
|   0.463647609 |
| 0.78539816339 |
| 0.78539816339 |
| 1.10714871779 |
|               |
|               |
|               |
|               |
|               |
+---------------+
(9 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_scalar_numeric_funcs TEST_ID: A1_B22_C1_D2
#-------------------------------------------------------------------------
SELECT degrees(c)+degrees(c) AS col
FROM test_unnest,
     unnest(json_value(a_nested, '$[1]' RETURNING bigint array)) AS u(c)
WHERE (s_int IN (0,
                 1,
                 2)
       OR s_int IS NULL)
  AND ((degrees(c)+degrees(c))<99999
       OR (degrees(c)+degrees(c)) IS NULL);
+--------------------+
| col                |
+--------------------+
| 114.59155902616465 |
| 114.59155902616465 |
| 114.59155902616465 |
|  229.1831180523293 |
|  229.1831180523293 |
|  229.1831180523293 |
|                    |
|                    |
|                    |
+--------------------+
(9 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_scalar_numeric_funcs TEST_ID: A1_B22_C2_D2
#-------------------------------------------------------------------------
SELECT degrees(c+c) AS col
FROM test_unnest,
     unnest(json_value(a_nested, '$[1]' RETURNING bigint array)) AS u(c)
WHERE (s_int IN (0,
                 1,
                 2)
       OR s_int IS NULL)
  AND (degrees(c+c)<99999
       OR degrees(c+c) IS NULL);
+--------------------+
| col                |
+--------------------+
| 114.59155902616465 |
| 114.59155902616465 |
| 114.59155902616465 |
|  229.1831180523293 |
|  229.1831180523293 |
|  229.1831180523293 |
|                    |
|                    |
|                    |
+--------------------+
(9 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_scalar_numeric_funcs TEST_ID: A1_B22_C3_D2
#-------------------------------------------------------------------------
SELECT degrees(c)+degrees(s_int) AS col
FROM test_unnest,
     unnest(json_value(a_nested, '$[1]' RETURNING bigint array)) AS u(c)
WHERE (s_int IN (0,
                 1,
                 2)
       OR s_int IS NULL)
  AND ((degrees(c)+degrees(s_int))<99999
       OR (degrees(c)+degrees(s_int)) IS NULL);
+--------------------+
| col                |
+--------------------+
| 114.59155902616465 |
| 171.88733853924697 |
| 171.88733853924697 |
|  229.1831180523293 |
|                    |
|                    |
|                    |
|                    |
|                    |
+--------------------+
(9 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_scalar_numeric_funcs TEST_ID: A1_B22_C4_D2
#-------------------------------------------------------------------------
SELECT degrees(c+s_int) AS col
FROM test_unnest,
     unnest(json_value(a_nested, '$[1]' RETURNING bigint array)) AS u(c)
WHERE (s_int IN (0,
                 1,
                 2)
       OR s_int IS NULL)
  AND (degrees(c+s_int)<99999
       OR degrees(c+s_int) IS NULL);
+--------------------+
| col                |
+--------------------+
| 114.59155902616465 |
| 171.88733853924697 |
| 171.88733853924697 |
|  229.1831180523293 |
|                    |
|                    |
|                    |
|                    |
|                    |
+--------------------+
(9 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_scalar_numeric_funcs TEST_ID: A1_B23_C1_D2
#-------------------------------------------------------------------------
SELECT radians(c)+radians(c) AS col
FROM test_unnest,
     unnest(json_value(a_nested, '$[1]' RETURNING bigint array)) AS u(c)
WHERE (s_int IN (0,
                 1,
                 2)
       OR s_int IS NULL)
  AND ((radians(c)+radians(c))<99999
       OR (radians(c)+radians(c)) IS NULL);
+---------------------+
| col                 |
+---------------------+
| 0.03490658503988659 |
| 0.03490658503988659 |
| 0.03490658503988659 |
| 0.06981317007977318 |
| 0.06981317007977318 |
| 0.06981317007977318 |
|                     |
|                     |
|                     |
+---------------------+
(9 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_scalar_numeric_funcs TEST_ID: A1_B23_C2_D2
#-------------------------------------------------------------------------
SELECT radians(c+c) AS col
FROM test_unnest,
     unnest(json_value(a_nested, '$[1]' RETURNING bigint array)) AS u(c)
WHERE (s_int IN (0,
                 1,
                 2)
       OR s_int IS NULL)
  AND (radians(c+c)<99999
       OR radians(c+c) IS NULL);
+---------------------+
| col                 |
+---------------------+
| 0.03490658503988659 |
| 0.03490658503988659 |
| 0.03490658503988659 |
| 0.06981317007977318 |
| 0.06981317007977318 |
| 0.06981317007977318 |
|                     |
|                     |
|                     |
+---------------------+
(9 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_scalar_numeric_funcs TEST_ID: A1_B23_C3_D2
#-------------------------------------------------------------------------
SELECT radians(c)+radians(s_int) AS col
FROM test_unnest,
     unnest(json_value(a_nested, '$[1]' RETURNING bigint array)) AS u(c)
WHERE (s_int IN (0,
                 1,
                 2)
       OR s_int IS NULL)
  AND ((radians(c)+radians(s_int))<99999
       OR (radians(c)+radians(s_int)) IS NULL);
+---------------------+
| col                 |
+---------------------+
| 0.03490658503988659 |
| 0.05235987755982989 |
| 0.05235987755982989 |
| 0.06981317007977318 |
|                     |
|                     |
|                     |
|                     |
|                     |
+---------------------+
(9 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_scalar_numeric_funcs TEST_ID: A1_B23_C4_D2
#-------------------------------------------------------------------------
SELECT radians(c+s_int) AS col
FROM test_unnest,
     unnest(json_value(a_nested, '$[1]' RETURNING bigint array)) AS u(c)
WHERE (s_int IN (0,
                 1,
                 2)
       OR s_int IS NULL)
  AND (radians(c+s_int)<99999
       OR radians(c+s_int) IS NULL);
+---------------------+
| col                 |
+---------------------+
| 0.03490658503988659 |
| 0.05235987755982989 |
| 0.05235987755982989 |
| 0.06981317007977318 |
|                     |
|                     |
|                     |
|                     |
|                     |
+---------------------+
(9 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_scalar_numeric_funcs TEST_ID: A1_B24_C1_D2
#-------------------------------------------------------------------------
SELECT bitwise_and(c, 1)+bitwise_and(c, 1) AS col
FROM test_unnest,
     unnest(json_value(a_nested, '$[1]' RETURNING bigint array)) AS u(c)
WHERE (s_int IN (0,
                 1,
                 2)
       OR s_int IS NULL)
  AND ((bitwise_and(c, 1)+bitwise_and(c, 1))<99999
       OR (bitwise_and(c, 1)+bitwise_and(c, 1)) IS NULL);
+-----+
| col |
+-----+
|   0 |
|   0 |
|   0 |
|   2 |
|   2 |
|   2 |
|     |
|     |
|     |
+-----+
(9 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_scalar_numeric_funcs TEST_ID: A1_B24_C2_D2
#-------------------------------------------------------------------------
SELECT bitwise_and(c, c) AS col
FROM test_unnest,
     unnest(json_value(a_nested, '$[1]' RETURNING bigint array)) AS u(c)
WHERE (s_int IN (0,
                 1,
                 2)
       OR s_int IS NULL)
  AND (bitwise_and(c, c)<99999
       OR bitwise_and(c, c) IS NULL);
+-----+
| col |
+-----+
|   1 |
|   1 |
|   1 |
|   2 |
|   2 |
|   2 |
|     |
|     |
|     |
+-----+
(9 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_scalar_numeric_funcs TEST_ID: A1_B24_C3_D2
#-------------------------------------------------------------------------
SELECT bitwise_and(c, 1)+bitwise_and(s_int, 1) AS col
FROM test_unnest,
     unnest(json_value(a_nested, '$[1]' RETURNING bigint array)) AS u(c)
WHERE (s_int IN (0,
                 1,
                 2)
       OR s_int IS NULL)
  AND ((bitwise_and(c, 1)+bitwise_and(s_int, 1))<99999
       OR (bitwise_and(c, 1)+bitwise_and(s_int, 1)) IS NULL);
+-----+
| col |
+-----+
|   0 |
|   1 |
|   1 |
|   2 |
|     |
|     |
|     |
|     |
|     |
+-----+
(9 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_scalar_numeric_funcs TEST_ID: A1_B24_C4_D2
#-------------------------------------------------------------------------
SELECT bitwise_and(c, s_int) AS col
FROM test_unnest,
     unnest(json_value(a_nested, '$[1]' RETURNING bigint array)) AS u(c)
WHERE (s_int IN (0,
                 1,
                 2)
       OR s_int IS NULL)
  AND (bitwise_and(c, s_int)<99999
       OR bitwise_and(c, s_int) IS NULL);
+-----+
| col |
+-----+
|   0 |
|   0 |
|   1 |
|   2 |
|     |
|     |
|     |
|     |
|     |
+-----+
(9 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_scalar_numeric_funcs TEST_ID: A1_B25_C1_D2
#-------------------------------------------------------------------------
SELECT bitwise_complement(c)+bitwise_complement(c) AS col
FROM test_unnest,
     unnest(json_value(a_nested, '$[1]' RETURNING bigint array)) AS u(c)
WHERE (s_int IN (0,
                 1,
                 2)
       OR s_int IS NULL)
  AND ((bitwise_complement(c)+bitwise_complement(c))<99999
       OR (bitwise_complement(c)+bitwise_complement(c)) IS NULL);
+-----+
| col |
+-----+
|  -4 |
|  -4 |
|  -4 |
|  -6 |
|  -6 |
|  -6 |
|     |
|     |
|     |
+-----+
(9 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_scalar_numeric_funcs TEST_ID: A1_B25_C2_D2
#-------------------------------------------------------------------------
SELECT bitwise_complement(c+c) AS col
FROM test_unnest,
     unnest(json_value(a_nested, '$[1]' RETURNING bigint array)) AS u(c)
WHERE (s_int IN (0,
                 1,
                 2)
       OR s_int IS NULL)
  AND (bitwise_complement(c+c)<99999
       OR bitwise_complement(c+c) IS NULL);
+-----+
| col |
+-----+
|  -3 |
|  -3 |
|  -3 |
|  -5 |
|  -5 |
|  -5 |
|     |
|     |
|     |
+-----+
(9 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_scalar_numeric_funcs TEST_ID: A1_B25_C3_D2
#-------------------------------------------------------------------------
SELECT bitwise_complement(c)+bitwise_complement(s_int) AS col
FROM test_unnest,
     unnest(json_value(a_nested, '$[1]' RETURNING bigint array)) AS u(c)
WHERE (s_int IN (0,
                 1,
                 2)
       OR s_int IS NULL)
  AND ((bitwise_complement(c)+bitwise_complement(s_int))<99999
       OR (bitwise_complement(c)+bitwise_complement(s_int)) IS NULL);
+-----+
| col |
+-----+
|  -4 |
|  -5 |
|  -5 |
|  -6 |
|     |
|     |
|     |
|     |
|     |
+-----+
(9 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_scalar_numeric_funcs TEST_ID: A1_B25_C4_D2
#-------------------------------------------------------------------------
SELECT bitwise_complement(c+s_int) AS col
FROM test_unnest,
     unnest(json_value(a_nested, '$[1]' RETURNING bigint array)) AS u(c)
WHERE (s_int IN (0,
                 1,
                 2)
       OR s_int IS NULL)
  AND (bitwise_complement(c+s_int)<99999
       OR bitwise_complement(c+s_int) IS NULL);
+-----+
| col |
+-----+
|  -3 |
|  -4 |
|  -4 |
|  -5 |
|     |
|     |
|     |
|     |
|     |
+-----+
(9 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_scalar_numeric_funcs TEST_ID: A1_B26_C1_D2
#-------------------------------------------------------------------------
SELECT bitwise_convert_double_to_long_bits(cast(c AS DOUBLE))+bitwise_convert_double_to_long_bits(cast(c AS DOUBLE)) AS col
FROM test_unnest,
     unnest(json_value(a_nested, '$[1]' RETURNING bigint array)) AS u(c)
WHERE (s_int IN (0,
                 1,
                 2)
       OR s_int IS NULL)
  AND ((bitwise_convert_double_to_long_bits(cast(c AS DOUBLE))+bitwise_convert_double_to_long_bits(cast(c AS DOUBLE)))>0
       OR (bitwise_convert_double_to_long_bits(cast(c AS DOUBLE))+bitwise_convert_double_to_long_bits(cast(c AS DOUBLE)))<0
       OR (bitwise_convert_double_to_long_bits(cast(c AS DOUBLE))+bitwise_convert_double_to_long_bits(cast(c AS DOUBLE))) IS NULL);
+----------------------+
| col                  |
+----------------------+
| -9223372036854775808 |
| -9223372036854775808 |
| -9223372036854775808 |
|  9214364837600034816 |
|  9214364837600034816 |
|  9214364837600034816 |
|                      |
|                      |
|                      |
+----------------------+
(9 rows)

!ok

