!set useApproximateCountDistinct false
!use druidtest://?componentSupplier=StandardMSQComponentSupplier&datasets=sql/src/test/quidem/qatests/qaUnnest/array
!set outputformat mysql
#-------------------------------------------------------------------------
# TESTCASE: test_order_by TEST_ID: A3_B14
#-------------------------------------------------------------------------
SELECT s_int,
       count(*) cnt
FROM test_unnest,
     unnest(a_int) AS u(c)
GROUP BY s_int
ORDER BY 1 DESC;
+-------+-----+
| s_int | cnt |
+-------+-----+
|     2 |   3 |
|     1 |   3 |
|       |   3 |
+-------+-----+
(3 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_order_by TEST_ID: A3_B15
#-------------------------------------------------------------------------
SELECT s_int
FROM test_unnest,
     unnest(a_int) AS u(c)
ORDER BY s_int ASC;
+-------+
| s_int |
+-------+
|       |
|       |
|       |
|     1 |
|     1 |
|     1 |
|     2 |
|     2 |
|     2 |
+-------+
(9 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_order_by TEST_ID: A3_B16
#-------------------------------------------------------------------------
SELECT s_int
FROM test_unnest,
     unnest(a_int) AS u(c)
ORDER BY 1 DESC;
+-------+
| s_int |
+-------+
|     2 |
|     2 |
|     2 |
|     1 |
|     1 |
|     1 |
|       |
|       |
|       |
+-------+
(9 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_order_by TEST_ID: A3_B17
#-------------------------------------------------------------------------
SELECT s_int
FROM
  (SELECT s_int
   FROM test_unnest,
        unnest(a_int) AS u(c)
   ORDER BY s_int ASC);
+-------+
| s_int |
+-------+
|     1 |
|     1 |
|     1 |
|     2 |
|     2 |
|     2 |
|       |
|       |
|       |
+-------+
(9 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_order_by TEST_ID: A3_B18
#-------------------------------------------------------------------------
SELECT s_int
FROM
  (SELECT s_int
   FROM test_unnest,
        unnest(a_int) AS u(c)
   ORDER BY 1 DESC);
+-------+
| s_int |
+-------+
|     1 |
|     1 |
|     1 |
|     2 |
|     2 |
|     2 |
|       |
|       |
|       |
+-------+
(9 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_order_by TEST_ID: A4_B1
#-------------------------------------------------------------------------
SELECT c,
       count(*) cnt
FROM test_unnest,
     unnest(json_value(a_nested, '$[1]' RETURNING bigint array)) AS u(c)
GROUP BY c
ORDER BY c ASC;
+---+-----+
| c | cnt |
+---+-----+
|   |   3 |
| 1 |   3 |
| 2 |   3 |
+---+-----+
(3 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_order_by TEST_ID: A4_B2
#-------------------------------------------------------------------------
SELECT c,
       count(*) cnt
FROM test_unnest,
     unnest(json_value(a_nested, '$[1]' RETURNING bigint array)) AS u(c)
GROUP BY c
ORDER BY 1 DESC;
+---+-----+
| c | cnt |
+---+-----+
| 2 |   3 |
| 1 |   3 |
|   |   3 |
+---+-----+
(3 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_order_by TEST_ID: A4_B3
#-------------------------------------------------------------------------
SELECT c
FROM test_unnest,
     unnest(json_value(a_nested, '$[1]' RETURNING bigint array)) AS u(c)
ORDER BY c ASC;
+---+
| c |
+---+
|   |
|   |
|   |
| 1 |
| 1 |
| 1 |
| 2 |
| 2 |
| 2 |
+---+
(9 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_order_by TEST_ID: A4_B4
#-------------------------------------------------------------------------
SELECT c
FROM test_unnest,
     unnest(json_value(a_nested, '$[1]' RETURNING bigint array)) AS u(c)
ORDER BY 1 DESC;
+---+
| c |
+---+
| 2 |
| 2 |
| 2 |
| 1 |
| 1 |
| 1 |
|   |
|   |
|   |
+---+
(9 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_order_by TEST_ID: A4_B5
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT c
   FROM test_unnest,
        unnest(json_value(a_nested, '$[1]' RETURNING bigint array)) AS u(c)
   ORDER BY c ASC);
+---+
| c |
+---+
| 1 |
| 1 |
| 1 |
| 2 |
| 2 |
| 2 |
|   |
|   |
|   |
+---+
(9 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_order_by TEST_ID: A4_B6
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT c
   FROM test_unnest,
        unnest(json_value(a_nested, '$[1]' RETURNING bigint array)) AS u(c)
   ORDER BY 1 DESC);
+---+
| c |
+---+
| 1 |
| 1 |
| 1 |
| 2 |
| 2 |
| 2 |
|   |
|   |
|   |
+---+
(9 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_order_by TEST_ID: A4_B7
#-------------------------------------------------------------------------
SELECT __time,
       count(*) cnt
FROM test_unnest,
     unnest(json_value(a_nested, '$[1]' RETURNING bigint array)) AS u(c)
GROUP BY __time
ORDER BY __time ASC;
+-------------------------+-----+
| __time                  | cnt |
+-------------------------+-----+
| 2022-01-01 00:00:00.000 |   3 |
| 2022-02-01 00:00:00.000 |   3 |
| 2022-03-01 00:00:00.000 |   3 |
+-------------------------+-----+
(3 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_order_by TEST_ID: A4_B8
#-------------------------------------------------------------------------
SELECT __time,
       count(*) cnt
FROM test_unnest,
     unnest(json_value(a_nested, '$[1]' RETURNING bigint array)) AS u(c)
GROUP BY __time
ORDER BY __time DESC;
+-------------------------+-----+
| __time                  | cnt |
+-------------------------+-----+
| 2022-03-01 00:00:00.000 |   3 |
| 2022-02-01 00:00:00.000 |   3 |
| 2022-01-01 00:00:00.000 |   3 |
+-------------------------+-----+
(3 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_order_by TEST_ID: A4_B9
#-------------------------------------------------------------------------
SELECT __time
FROM test_unnest,
     unnest(json_value(a_nested, '$[1]' RETURNING bigint array)) AS u(c)
ORDER BY __time ASC;
+-------------------------+
| __time                  |
+-------------------------+
| 2022-01-01 00:00:00.000 |
| 2022-01-01 00:00:00.000 |
| 2022-01-01 00:00:00.000 |
| 2022-02-01 00:00:00.000 |
| 2022-02-01 00:00:00.000 |
| 2022-02-01 00:00:00.000 |
| 2022-03-01 00:00:00.000 |
| 2022-03-01 00:00:00.000 |
| 2022-03-01 00:00:00.000 |
+-------------------------+
(9 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_order_by TEST_ID: A4_B10
#-------------------------------------------------------------------------
SELECT __time
FROM test_unnest,
     unnest(json_value(a_nested, '$[1]' RETURNING bigint array)) AS u(c)
ORDER BY 1 DESC;
+-------------------------+
| __time                  |
+-------------------------+
| 2022-03-01 00:00:00.000 |
| 2022-03-01 00:00:00.000 |
| 2022-03-01 00:00:00.000 |
| 2022-02-01 00:00:00.000 |
| 2022-02-01 00:00:00.000 |
| 2022-02-01 00:00:00.000 |
| 2022-01-01 00:00:00.000 |
| 2022-01-01 00:00:00.000 |
| 2022-01-01 00:00:00.000 |
+-------------------------+
(9 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_order_by TEST_ID: A4_B11
#-------------------------------------------------------------------------
SELECT __time
FROM
  (SELECT __time
   FROM test_unnest,
        unnest(json_value(a_nested, '$[1]' RETURNING bigint array)) AS u(c)
   ORDER BY __time ASC);
+-------------------------+
| __time                  |
+-------------------------+
| 2022-01-01 00:00:00.000 |
| 2022-01-01 00:00:00.000 |
| 2022-01-01 00:00:00.000 |
| 2022-02-01 00:00:00.000 |
| 2022-02-01 00:00:00.000 |
| 2022-02-01 00:00:00.000 |
| 2022-03-01 00:00:00.000 |
| 2022-03-01 00:00:00.000 |
| 2022-03-01 00:00:00.000 |
+-------------------------+
(9 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_order_by TEST_ID: A4_B12
#-------------------------------------------------------------------------
SELECT __time
FROM
  (SELECT __time
   FROM test_unnest,
        unnest(json_value(a_nested, '$[1]' RETURNING bigint array)) AS u(c)
   ORDER BY 1 DESC);
+-------------------------+
| __time                  |
+-------------------------+
| 2022-01-01 00:00:00.000 |
| 2022-01-01 00:00:00.000 |
| 2022-01-01 00:00:00.000 |
| 2022-02-01 00:00:00.000 |
| 2022-02-01 00:00:00.000 |
| 2022-02-01 00:00:00.000 |
| 2022-03-01 00:00:00.000 |
| 2022-03-01 00:00:00.000 |
| 2022-03-01 00:00:00.000 |
+-------------------------+
(9 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_order_by TEST_ID: A4_B13
#-------------------------------------------------------------------------
SELECT s_int,
       count(*) cnt
FROM test_unnest,
     unnest(json_value(a_nested, '$[1]' RETURNING bigint array)) AS u(c)
GROUP BY s_int
ORDER BY s_int ASC;
+-------+-----+
| s_int | cnt |
+-------+-----+
|       |   3 |
|     1 |   3 |
|     2 |   3 |
+-------+-----+
(3 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_order_by TEST_ID: A4_B14
#-------------------------------------------------------------------------
SELECT s_int,
       count(*) cnt
FROM test_unnest,
     unnest(json_value(a_nested, '$[1]' RETURNING bigint array)) AS u(c)
GROUP BY s_int
ORDER BY 1 DESC;
+-------+-----+
| s_int | cnt |
+-------+-----+
|     2 |   3 |
|     1 |   3 |
|       |   3 |
+-------+-----+
(3 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_order_by TEST_ID: A4_B15
#-------------------------------------------------------------------------
SELECT s_int
FROM test_unnest,
     unnest(json_value(a_nested, '$[1]' RETURNING bigint array)) AS u(c)
ORDER BY s_int ASC;
+-------+
| s_int |
+-------+
|       |
|       |
|       |
|     1 |
|     1 |
|     1 |
|     2 |
|     2 |
|     2 |
+-------+
(9 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_order_by TEST_ID: A4_B16
#-------------------------------------------------------------------------
SELECT s_int
FROM test_unnest,
     unnest(json_value(a_nested, '$[1]' RETURNING bigint array)) AS u(c)
ORDER BY 1 DESC;
+-------+
| s_int |
+-------+
|     2 |
|     2 |
|     2 |
|     1 |
|     1 |
|     1 |
|       |
|       |
|       |
+-------+
(9 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_order_by TEST_ID: A4_B17
#-------------------------------------------------------------------------
SELECT s_int
FROM
  (SELECT s_int
   FROM test_unnest,
        unnest(json_value(a_nested, '$[1]' RETURNING bigint array)) AS u(c)
   ORDER BY s_int ASC);
+-------+
| s_int |
+-------+
|     1 |
|     1 |
|     1 |
|     2 |
|     2 |
|     2 |
|       |
|       |
|       |
+-------+
(9 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_order_by TEST_ID: A4_B18
#-------------------------------------------------------------------------
SELECT s_int
FROM
  (SELECT s_int
   FROM test_unnest,
        unnest(json_value(a_nested, '$[1]' RETURNING bigint array)) AS u(c)
   ORDER BY 1 DESC);
+-------+
| s_int |
+-------+
|     1 |
|     1 |
|     1 |
|     2 |
|     2 |
|     2 |
|       |
|       |
|       |
+-------+
(9 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_order_by TEST_ID: A5_B1
#-------------------------------------------------------------------------
SELECT c,
       count(*) cnt
FROM test_unnest,
     unnest(a_float) AS u(c)
GROUP BY c
ORDER BY c ASC;
+-----+-----+
| c   | cnt |
+-----+-----+
|     |   3 |
| 0.1 |   3 |
| 0.2 |   3 |
+-----+-----+
(3 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_order_by TEST_ID: A5_B2
#-------------------------------------------------------------------------
SELECT c,
       count(*) cnt
FROM test_unnest,
     unnest(a_float) AS u(c)
GROUP BY c
ORDER BY 1 DESC;
+-----+-----+
| c   | cnt |
+-----+-----+
| 0.2 |   3 |
| 0.1 |   3 |
|     |   3 |
+-----+-----+
(3 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_order_by TEST_ID: A5_B3
#-------------------------------------------------------------------------
SELECT c
FROM test_unnest,
     unnest(a_float) AS u(c)
ORDER BY c ASC;
+-----+
| c   |
+-----+
|     |
|     |
|     |
| 0.1 |
| 0.1 |
| 0.1 |
| 0.2 |
| 0.2 |
| 0.2 |
+-----+
(9 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_order_by TEST_ID: A5_B4
#-------------------------------------------------------------------------
SELECT c
FROM test_unnest,
     unnest(a_float) AS u(c)
ORDER BY 1 DESC;
+-----+
| c   |
+-----+
| 0.2 |
| 0.2 |
| 0.2 |
| 0.1 |
| 0.1 |
| 0.1 |
|     |
|     |
|     |
+-----+
(9 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_order_by TEST_ID: A5_B5
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT c
   FROM test_unnest,
        unnest(a_float) AS u(c)
   ORDER BY c ASC);
+-----+
| c   |
+-----+
| 0.1 |
| 0.1 |
| 0.1 |
| 0.2 |
| 0.2 |
| 0.2 |
|     |
|     |
|     |
+-----+
(9 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_order_by TEST_ID: A5_B6
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT c
   FROM test_unnest,
        unnest(a_float) AS u(c)
   ORDER BY 1 DESC);
+-----+
| c   |
+-----+
| 0.1 |
| 0.1 |
| 0.1 |
| 0.2 |
| 0.2 |
| 0.2 |
|     |
|     |
|     |
+-----+
(9 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_order_by TEST_ID: A5_B7
#-------------------------------------------------------------------------
SELECT __time,
       count(*) cnt
FROM test_unnest,
     unnest(a_float) AS u(c)
GROUP BY __time
ORDER BY __time ASC;
+-------------------------+-----+
| __time                  | cnt |
+-------------------------+-----+
| 2022-01-01 00:00:00.000 |   3 |
| 2022-02-01 00:00:00.000 |   3 |
| 2022-03-01 00:00:00.000 |   3 |
+-------------------------+-----+
(3 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_order_by TEST_ID: A5_B8
#-------------------------------------------------------------------------
SELECT __time,
       count(*) cnt
FROM test_unnest,
     unnest(a_float) AS u(c)
GROUP BY __time
ORDER BY __time DESC;
+-------------------------+-----+
| __time                  | cnt |
+-------------------------+-----+
| 2022-03-01 00:00:00.000 |   3 |
| 2022-02-01 00:00:00.000 |   3 |
| 2022-01-01 00:00:00.000 |   3 |
+-------------------------+-----+
(3 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_order_by TEST_ID: A5_B9
#-------------------------------------------------------------------------
SELECT __time
FROM test_unnest,
     unnest(a_float) AS u(c)
ORDER BY __time ASC;
+-------------------------+
| __time                  |
+-------------------------+
| 2022-01-01 00:00:00.000 |
| 2022-01-01 00:00:00.000 |
| 2022-01-01 00:00:00.000 |
| 2022-02-01 00:00:00.000 |
| 2022-02-01 00:00:00.000 |
| 2022-02-01 00:00:00.000 |
| 2022-03-01 00:00:00.000 |
| 2022-03-01 00:00:00.000 |
| 2022-03-01 00:00:00.000 |
+-------------------------+
(9 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_order_by TEST_ID: A5_B10
#-------------------------------------------------------------------------
SELECT __time
FROM test_unnest,
     unnest(a_float) AS u(c)
ORDER BY 1 DESC;
+-------------------------+
| __time                  |
+-------------------------+
| 2022-03-01 00:00:00.000 |
| 2022-03-01 00:00:00.000 |
| 2022-03-01 00:00:00.000 |
| 2022-02-01 00:00:00.000 |
| 2022-02-01 00:00:00.000 |
| 2022-02-01 00:00:00.000 |
| 2022-01-01 00:00:00.000 |
| 2022-01-01 00:00:00.000 |
| 2022-01-01 00:00:00.000 |
+-------------------------+
(9 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_order_by TEST_ID: A5_B11
#-------------------------------------------------------------------------
SELECT __time
FROM
  (SELECT __time
   FROM test_unnest,
        unnest(a_float) AS u(c)
   ORDER BY __time ASC);
+-------------------------+
| __time                  |
+-------------------------+
| 2022-01-01 00:00:00.000 |
| 2022-01-01 00:00:00.000 |
| 2022-01-01 00:00:00.000 |
| 2022-02-01 00:00:00.000 |
| 2022-02-01 00:00:00.000 |
| 2022-02-01 00:00:00.000 |
| 2022-03-01 00:00:00.000 |
| 2022-03-01 00:00:00.000 |
| 2022-03-01 00:00:00.000 |
+-------------------------+
(9 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_order_by TEST_ID: A5_B12
#-------------------------------------------------------------------------
SELECT __time
FROM
  (SELECT __time
   FROM test_unnest,
        unnest(a_float) AS u(c)
   ORDER BY 1 DESC);
+-------------------------+
| __time                  |
+-------------------------+
| 2022-01-01 00:00:00.000 |
| 2022-01-01 00:00:00.000 |
| 2022-01-01 00:00:00.000 |
| 2022-02-01 00:00:00.000 |
| 2022-02-01 00:00:00.000 |
| 2022-02-01 00:00:00.000 |
| 2022-03-01 00:00:00.000 |
| 2022-03-01 00:00:00.000 |
| 2022-03-01 00:00:00.000 |
+-------------------------+
(9 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_order_by TEST_ID: A5_B13
#-------------------------------------------------------------------------
SELECT s_int,
       count(*) cnt
FROM test_unnest,
     unnest(a_float) AS u(c)
GROUP BY s_int
ORDER BY s_int ASC;
+-------+-----+
| s_int | cnt |
+-------+-----+
|       |   3 |
|     1 |   3 |
|     2 |   3 |
+-------+-----+
(3 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_order_by TEST_ID: A5_B14
#-------------------------------------------------------------------------
SELECT s_int,
       count(*) cnt
FROM test_unnest,
     unnest(a_float) AS u(c)
GROUP BY s_int
ORDER BY 1 DESC;
+-------+-----+
| s_int | cnt |
+-------+-----+
|     2 |   3 |
|     1 |   3 |
|       |   3 |
+-------+-----+
(3 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_order_by TEST_ID: A5_B15
#-------------------------------------------------------------------------
SELECT s_int
FROM test_unnest,
     unnest(a_float) AS u(c)
ORDER BY s_int ASC;
+-------+
| s_int |
+-------+
|       |
|       |
|       |
|     1 |
|     1 |
|     1 |
|     2 |
|     2 |
|     2 |
+-------+
(9 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_order_by TEST_ID: A5_B16
#-------------------------------------------------------------------------
SELECT s_int
FROM test_unnest,
     unnest(a_float) AS u(c)
ORDER BY 1 DESC;
+-------+
| s_int |
+-------+
|     2 |
|     2 |
|     2 |
|     1 |
|     1 |
|     1 |
|       |
|       |
|       |
+-------+
(9 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_order_by TEST_ID: A5_B17
#-------------------------------------------------------------------------
SELECT s_int
FROM
  (SELECT s_int
   FROM test_unnest,
        unnest(a_float) AS u(c)
   ORDER BY s_int ASC);
+-------+
| s_int |
+-------+
|     1 |
|     1 |
|     1 |
|     2 |
|     2 |
|     2 |
|       |
|       |
|       |
+-------+
(9 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_order_by TEST_ID: A5_B18
#-------------------------------------------------------------------------
SELECT s_int
FROM
  (SELECT s_int
   FROM test_unnest,
        unnest(a_float) AS u(c)
   ORDER BY 1 DESC);
+-------+
| s_int |
+-------+
|     1 |
|     1 |
|     1 |
|     2 |
|     2 |
|     2 |
|       |
|       |
|       |
+-------+
(9 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_order_by TEST_ID: A6_B1
#-------------------------------------------------------------------------
SELECT c,
       count(*) cnt
FROM test_unnest,
     unnest(json_value(a_nested, '$[2]' RETURNING DOUBLE array)) AS u(c)
GROUP BY c
ORDER BY c ASC;
+-----+-----+
| c   | cnt |
+-----+-----+
|     |   3 |
| 0.1 |   3 |
| 0.2 |   3 |
+-----+-----+
(3 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_order_by TEST_ID: A6_B2
#-------------------------------------------------------------------------
SELECT c,
       count(*) cnt
FROM test_unnest,
     unnest(json_value(a_nested, '$[2]' RETURNING DOUBLE array)) AS u(c)
GROUP BY c
ORDER BY 1 DESC;
+-----+-----+
| c   | cnt |
+-----+-----+
| 0.2 |   3 |
| 0.1 |   3 |
|     |   3 |
+-----+-----+
(3 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_order_by TEST_ID: A6_B3
#-------------------------------------------------------------------------
SELECT c
FROM test_unnest,
     unnest(json_value(a_nested, '$[2]' RETURNING DOUBLE array)) AS u(c)
ORDER BY c ASC;
+-----+
| c   |
+-----+
|     |
|     |
|     |
| 0.1 |
| 0.1 |
| 0.1 |
| 0.2 |
| 0.2 |
| 0.2 |
+-----+
(9 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_order_by TEST_ID: A6_B4
#-------------------------------------------------------------------------
SELECT c
FROM test_unnest,
     unnest(json_value(a_nested, '$[2]' RETURNING DOUBLE array)) AS u(c)
ORDER BY 1 DESC;
+-----+
| c   |
+-----+
| 0.2 |
| 0.2 |
| 0.2 |
| 0.1 |
| 0.1 |
| 0.1 |
|     |
|     |
|     |
+-----+
(9 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_order_by TEST_ID: A6_B5
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT c
   FROM test_unnest,
        unnest(json_value(a_nested, '$[2]' RETURNING DOUBLE array)) AS u(c)
   ORDER BY c ASC);
+-----+
| c   |
+-----+
| 0.1 |
| 0.1 |
| 0.1 |
| 0.2 |
| 0.2 |
| 0.2 |
|     |
|     |
|     |
+-----+
(9 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_order_by TEST_ID: A6_B6
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT c
   FROM test_unnest,
        unnest(json_value(a_nested, '$[2]' RETURNING DOUBLE array)) AS u(c)
   ORDER BY 1 DESC);
+-----+
| c   |
+-----+
| 0.1 |
| 0.1 |
| 0.1 |
| 0.2 |
| 0.2 |
| 0.2 |
|     |
|     |
|     |
+-----+
(9 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_order_by TEST_ID: A6_B7
#-------------------------------------------------------------------------
SELECT __time,
       count(*) cnt
FROM test_unnest,
     unnest(json_value(a_nested, '$[2]' RETURNING DOUBLE array)) AS u(c)
GROUP BY __time
ORDER BY __time ASC;
+-------------------------+-----+
| __time                  | cnt |
+-------------------------+-----+
| 2022-01-01 00:00:00.000 |   3 |
| 2022-02-01 00:00:00.000 |   3 |
| 2022-03-01 00:00:00.000 |   3 |
+-------------------------+-----+
(3 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_order_by TEST_ID: A6_B8
#-------------------------------------------------------------------------
SELECT __time,
       count(*) cnt
FROM test_unnest,
     unnest(json_value(a_nested, '$[2]' RETURNING DOUBLE array)) AS u(c)
GROUP BY __time
ORDER BY __time DESC;
+-------------------------+-----+
| __time                  | cnt |
+-------------------------+-----+
| 2022-03-01 00:00:00.000 |   3 |
| 2022-02-01 00:00:00.000 |   3 |
| 2022-01-01 00:00:00.000 |   3 |
+-------------------------+-----+
(3 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_order_by TEST_ID: A6_B9
#-------------------------------------------------------------------------
SELECT __time
FROM test_unnest,
     unnest(json_value(a_nested, '$[2]' RETURNING DOUBLE array)) AS u(c)
ORDER BY __time ASC;
+-------------------------+
| __time                  |
+-------------------------+
| 2022-01-01 00:00:00.000 |
| 2022-01-01 00:00:00.000 |
| 2022-01-01 00:00:00.000 |
| 2022-02-01 00:00:00.000 |
| 2022-02-01 00:00:00.000 |
| 2022-02-01 00:00:00.000 |
| 2022-03-01 00:00:00.000 |
| 2022-03-01 00:00:00.000 |
| 2022-03-01 00:00:00.000 |
+-------------------------+
(9 rows)

!ok

