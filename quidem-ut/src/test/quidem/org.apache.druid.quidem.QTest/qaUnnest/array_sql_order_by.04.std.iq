!set useApproximateCountDistinct false
!use druidtest://?componentSupplier=StandardComponentSupplier&datasets=sql/src/test/quidem/qatests/qaUnnest/array
!set outputformat mysql
#-------------------------------------------------------------------------
# TESTCASE: test_order_by TEST_ID: A9_B6
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT c
   FROM test_unnest,
        unnest(a_mixed) AS u(c)
   ORDER BY 1 DESC);
+------+
| c    |
+------+
| 0.1  |
| 0.1  |
| 0.1  |
| 1    |
| 1    |
| 1    |
| S1   |
| S1   |
| S1   |
| true |
| true |
| true |
|      |
|      |
|      |
+------+
(15 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_order_by TEST_ID: A9_B7
#-------------------------------------------------------------------------
SELECT __time,
       count(*) cnt
FROM test_unnest,
     unnest(a_mixed) AS u(c)
GROUP BY __time
ORDER BY __time ASC;
+-------------------------+-----+
| __time                  | cnt |
+-------------------------+-----+
| 2022-01-01 00:00:00.000 |   5 |
| 2022-02-01 00:00:00.000 |   5 |
| 2022-03-01 00:00:00.000 |   5 |
+-------------------------+-----+
(3 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_order_by TEST_ID: A9_B8
#-------------------------------------------------------------------------
SELECT __time,
       count(*) cnt
FROM test_unnest,
     unnest(a_mixed) AS u(c)
GROUP BY __time
ORDER BY __time DESC;
+-------------------------+-----+
| __time                  | cnt |
+-------------------------+-----+
| 2022-03-01 00:00:00.000 |   5 |
| 2022-02-01 00:00:00.000 |   5 |
| 2022-01-01 00:00:00.000 |   5 |
+-------------------------+-----+
(3 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_order_by TEST_ID: A9_B9
#-------------------------------------------------------------------------
SELECT __time
FROM test_unnest,
     unnest(a_mixed) AS u(c)
ORDER BY __time ASC;
+-------------------------+
| __time                  |
+-------------------------+
| 2022-01-01 00:00:00.000 |
| 2022-01-01 00:00:00.000 |
| 2022-01-01 00:00:00.000 |
| 2022-01-01 00:00:00.000 |
| 2022-01-01 00:00:00.000 |
| 2022-02-01 00:00:00.000 |
| 2022-02-01 00:00:00.000 |
| 2022-02-01 00:00:00.000 |
| 2022-02-01 00:00:00.000 |
| 2022-02-01 00:00:00.000 |
| 2022-03-01 00:00:00.000 |
| 2022-03-01 00:00:00.000 |
| 2022-03-01 00:00:00.000 |
| 2022-03-01 00:00:00.000 |
| 2022-03-01 00:00:00.000 |
+-------------------------+
(15 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_order_by TEST_ID: A9_B10
#-------------------------------------------------------------------------
SELECT __time
FROM test_unnest,
     unnest(a_mixed) AS u(c)
ORDER BY 1 DESC;
+-------------------------+
| __time                  |
+-------------------------+
| 2022-03-01 00:00:00.000 |
| 2022-03-01 00:00:00.000 |
| 2022-03-01 00:00:00.000 |
| 2022-03-01 00:00:00.000 |
| 2022-03-01 00:00:00.000 |
| 2022-02-01 00:00:00.000 |
| 2022-02-01 00:00:00.000 |
| 2022-02-01 00:00:00.000 |
| 2022-02-01 00:00:00.000 |
| 2022-02-01 00:00:00.000 |
| 2022-01-01 00:00:00.000 |
| 2022-01-01 00:00:00.000 |
| 2022-01-01 00:00:00.000 |
| 2022-01-01 00:00:00.000 |
| 2022-01-01 00:00:00.000 |
+-------------------------+
(15 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_order_by TEST_ID: A9_B11
#-------------------------------------------------------------------------
SELECT __time
FROM
  (SELECT __time
   FROM test_unnest,
        unnest(a_mixed) AS u(c)
   ORDER BY __time ASC);
+-------------------------+
| __time                  |
+-------------------------+
| 2022-01-01 00:00:00.000 |
| 2022-01-01 00:00:00.000 |
| 2022-01-01 00:00:00.000 |
| 2022-01-01 00:00:00.000 |
| 2022-01-01 00:00:00.000 |
| 2022-02-01 00:00:00.000 |
| 2022-02-01 00:00:00.000 |
| 2022-02-01 00:00:00.000 |
| 2022-02-01 00:00:00.000 |
| 2022-02-01 00:00:00.000 |
| 2022-03-01 00:00:00.000 |
| 2022-03-01 00:00:00.000 |
| 2022-03-01 00:00:00.000 |
| 2022-03-01 00:00:00.000 |
| 2022-03-01 00:00:00.000 |
+-------------------------+
(15 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_order_by TEST_ID: A9_B12
#-------------------------------------------------------------------------
SELECT __time
FROM
  (SELECT __time
   FROM test_unnest,
        unnest(a_mixed) AS u(c)
   ORDER BY 1 DESC);
+-------------------------+
| __time                  |
+-------------------------+
| 2022-01-01 00:00:00.000 |
| 2022-01-01 00:00:00.000 |
| 2022-01-01 00:00:00.000 |
| 2022-01-01 00:00:00.000 |
| 2022-01-01 00:00:00.000 |
| 2022-02-01 00:00:00.000 |
| 2022-02-01 00:00:00.000 |
| 2022-02-01 00:00:00.000 |
| 2022-02-01 00:00:00.000 |
| 2022-02-01 00:00:00.000 |
| 2022-03-01 00:00:00.000 |
| 2022-03-01 00:00:00.000 |
| 2022-03-01 00:00:00.000 |
| 2022-03-01 00:00:00.000 |
| 2022-03-01 00:00:00.000 |
+-------------------------+
(15 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_order_by TEST_ID: A9_B13
#-------------------------------------------------------------------------
SELECT s_int,
       count(*) cnt
FROM test_unnest,
     unnest(a_mixed) AS u(c)
GROUP BY s_int
ORDER BY s_int ASC;
+-------+-----+
| s_int | cnt |
+-------+-----+
|       |   5 |
|     1 |   5 |
|     2 |   5 |
+-------+-----+
(3 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_order_by TEST_ID: A9_B14
#-------------------------------------------------------------------------
SELECT s_int,
       count(*) cnt
FROM test_unnest,
     unnest(a_mixed) AS u(c)
GROUP BY s_int
ORDER BY 1 DESC;
+-------+-----+
| s_int | cnt |
+-------+-----+
|     2 |   5 |
|     1 |   5 |
|       |   5 |
+-------+-----+
(3 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_order_by TEST_ID: A9_B15
#-------------------------------------------------------------------------
SELECT s_int
FROM test_unnest,
     unnest(a_mixed) AS u(c)
ORDER BY s_int ASC;
CannotBuildQueryException
!error

#-------------------------------------------------------------------------
# TESTCASE: test_order_by TEST_ID: A9_B16
#-------------------------------------------------------------------------
SELECT s_int
FROM test_unnest,
     unnest(a_mixed) AS u(c)
ORDER BY 1 DESC;
CannotBuildQueryException
!error

#-------------------------------------------------------------------------
# TESTCASE: test_order_by TEST_ID: A9_B17
#-------------------------------------------------------------------------
SELECT s_int
FROM
  (SELECT s_int
   FROM test_unnest,
        unnest(a_mixed) AS u(c)
   ORDER BY s_int ASC);
+-------+
| s_int |
+-------+
|     1 |
|     1 |
|     1 |
|     1 |
|     1 |
|     2 |
|     2 |
|     2 |
|     2 |
|     2 |
|       |
|       |
|       |
|       |
|       |
+-------+
(15 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_order_by TEST_ID: A9_B18
#-------------------------------------------------------------------------
SELECT s_int
FROM
  (SELECT s_int
   FROM test_unnest,
        unnest(a_mixed) AS u(c)
   ORDER BY 1 DESC);
+-------+
| s_int |
+-------+
|     1 |
|     1 |
|     1 |
|     1 |
|     1 |
|     2 |
|     2 |
|     2 |
|     2 |
|     2 |
|       |
|       |
|       |
|       |
|       |
+-------+
(15 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_order_by TEST_ID: A10_B1
#-------------------------------------------------------------------------
SELECT c,
       count(*) cnt
FROM test_unnest,
     unnest(json_value(a_nested, '$[6]' RETURNING varchar array)) AS u(c)
GROUP BY c
ORDER BY c ASC;
+------+-----+
| c    | cnt |
+------+-----+
|      |   3 |
| 0.1  |   3 |
| 1    |   3 |
| S1   |   3 |
| true |   3 |
+------+-----+
(5 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_order_by TEST_ID: A10_B2
#-------------------------------------------------------------------------
SELECT c,
       count(*) cnt
FROM test_unnest,
     unnest(json_value(a_nested, '$[6]' RETURNING varchar array)) AS u(c)
GROUP BY c
ORDER BY 1 DESC;
+------+-----+
| c    | cnt |
+------+-----+
| true |   3 |
| S1   |   3 |
| 1    |   3 |
| 0.1  |   3 |
|      |   3 |
+------+-----+
(5 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_order_by TEST_ID: A10_B3
#-------------------------------------------------------------------------
SELECT c
FROM test_unnest,
     unnest(json_value(a_nested, '$[6]' RETURNING varchar array)) AS u(c)
ORDER BY c ASC;
CannotBuildQueryException
!error

#-------------------------------------------------------------------------
# TESTCASE: test_order_by TEST_ID: A10_B4
#-------------------------------------------------------------------------
SELECT c
FROM test_unnest,
     unnest(json_value(a_nested, '$[6]' RETURNING varchar array)) AS u(c)
ORDER BY 1 DESC;
CannotBuildQueryException
!error

#-------------------------------------------------------------------------
# TESTCASE: test_order_by TEST_ID: A10_B5
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT c
   FROM test_unnest,
        unnest(json_value(a_nested, '$[6]' RETURNING varchar array)) AS u(c)
   ORDER BY c ASC);
+------+
| c    |
+------+
| 0.1  |
| 0.1  |
| 0.1  |
| 1    |
| 1    |
| 1    |
| S1   |
| S1   |
| S1   |
| true |
| true |
| true |
|      |
|      |
|      |
+------+
(15 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_order_by TEST_ID: A10_B6
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT c
   FROM test_unnest,
        unnest(json_value(a_nested, '$[6]' RETURNING varchar array)) AS u(c)
   ORDER BY 1 DESC);
+------+
| c    |
+------+
| 0.1  |
| 0.1  |
| 0.1  |
| 1    |
| 1    |
| 1    |
| S1   |
| S1   |
| S1   |
| true |
| true |
| true |
|      |
|      |
|      |
+------+
(15 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_order_by TEST_ID: A10_B7
#-------------------------------------------------------------------------
SELECT __time,
       count(*) cnt
FROM test_unnest,
     unnest(json_value(a_nested, '$[6]' RETURNING varchar array)) AS u(c)
GROUP BY __time
ORDER BY __time ASC;
+-------------------------+-----+
| __time                  | cnt |
+-------------------------+-----+
| 2022-01-01 00:00:00.000 |   5 |
| 2022-02-01 00:00:00.000 |   5 |
| 2022-03-01 00:00:00.000 |   5 |
+-------------------------+-----+
(3 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_order_by TEST_ID: A10_B8
#-------------------------------------------------------------------------
SELECT __time,
       count(*) cnt
FROM test_unnest,
     unnest(json_value(a_nested, '$[6]' RETURNING varchar array)) AS u(c)
GROUP BY __time
ORDER BY __time DESC;
+-------------------------+-----+
| __time                  | cnt |
+-------------------------+-----+
| 2022-03-01 00:00:00.000 |   5 |
| 2022-02-01 00:00:00.000 |   5 |
| 2022-01-01 00:00:00.000 |   5 |
+-------------------------+-----+
(3 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_order_by TEST_ID: A10_B9
#-------------------------------------------------------------------------
SELECT __time
FROM test_unnest,
     unnest(json_value(a_nested, '$[6]' RETURNING varchar array)) AS u(c)
ORDER BY __time ASC;
+-------------------------+
| __time                  |
+-------------------------+
| 2022-01-01 00:00:00.000 |
| 2022-01-01 00:00:00.000 |
| 2022-01-01 00:00:00.000 |
| 2022-01-01 00:00:00.000 |
| 2022-01-01 00:00:00.000 |
| 2022-02-01 00:00:00.000 |
| 2022-02-01 00:00:00.000 |
| 2022-02-01 00:00:00.000 |
| 2022-02-01 00:00:00.000 |
| 2022-02-01 00:00:00.000 |
| 2022-03-01 00:00:00.000 |
| 2022-03-01 00:00:00.000 |
| 2022-03-01 00:00:00.000 |
| 2022-03-01 00:00:00.000 |
| 2022-03-01 00:00:00.000 |
+-------------------------+
(15 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_order_by TEST_ID: A10_B10
#-------------------------------------------------------------------------
SELECT __time
FROM test_unnest,
     unnest(json_value(a_nested, '$[6]' RETURNING varchar array)) AS u(c)
ORDER BY 1 DESC;
+-------------------------+
| __time                  |
+-------------------------+
| 2022-03-01 00:00:00.000 |
| 2022-03-01 00:00:00.000 |
| 2022-03-01 00:00:00.000 |
| 2022-03-01 00:00:00.000 |
| 2022-03-01 00:00:00.000 |
| 2022-02-01 00:00:00.000 |
| 2022-02-01 00:00:00.000 |
| 2022-02-01 00:00:00.000 |
| 2022-02-01 00:00:00.000 |
| 2022-02-01 00:00:00.000 |
| 2022-01-01 00:00:00.000 |
| 2022-01-01 00:00:00.000 |
| 2022-01-01 00:00:00.000 |
| 2022-01-01 00:00:00.000 |
| 2022-01-01 00:00:00.000 |
+-------------------------+
(15 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_order_by TEST_ID: A10_B11
#-------------------------------------------------------------------------
SELECT __time
FROM
  (SELECT __time
   FROM test_unnest,
        unnest(json_value(a_nested, '$[6]' RETURNING varchar array)) AS u(c)
   ORDER BY __time ASC);
+-------------------------+
| __time                  |
+-------------------------+
| 2022-01-01 00:00:00.000 |
| 2022-01-01 00:00:00.000 |
| 2022-01-01 00:00:00.000 |
| 2022-01-01 00:00:00.000 |
| 2022-01-01 00:00:00.000 |
| 2022-02-01 00:00:00.000 |
| 2022-02-01 00:00:00.000 |
| 2022-02-01 00:00:00.000 |
| 2022-02-01 00:00:00.000 |
| 2022-02-01 00:00:00.000 |
| 2022-03-01 00:00:00.000 |
| 2022-03-01 00:00:00.000 |
| 2022-03-01 00:00:00.000 |
| 2022-03-01 00:00:00.000 |
| 2022-03-01 00:00:00.000 |
+-------------------------+
(15 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_order_by TEST_ID: A10_B12
#-------------------------------------------------------------------------
SELECT __time
FROM
  (SELECT __time
   FROM test_unnest,
        unnest(json_value(a_nested, '$[6]' RETURNING varchar array)) AS u(c)
   ORDER BY 1 DESC);
+-------------------------+
| __time                  |
+-------------------------+
| 2022-01-01 00:00:00.000 |
| 2022-01-01 00:00:00.000 |
| 2022-01-01 00:00:00.000 |
| 2022-01-01 00:00:00.000 |
| 2022-01-01 00:00:00.000 |
| 2022-02-01 00:00:00.000 |
| 2022-02-01 00:00:00.000 |
| 2022-02-01 00:00:00.000 |
| 2022-02-01 00:00:00.000 |
| 2022-02-01 00:00:00.000 |
| 2022-03-01 00:00:00.000 |
| 2022-03-01 00:00:00.000 |
| 2022-03-01 00:00:00.000 |
| 2022-03-01 00:00:00.000 |
| 2022-03-01 00:00:00.000 |
+-------------------------+
(15 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_order_by TEST_ID: A10_B13
#-------------------------------------------------------------------------
SELECT s_int,
       count(*) cnt
FROM test_unnest,
     unnest(json_value(a_nested, '$[6]' RETURNING varchar array)) AS u(c)
GROUP BY s_int
ORDER BY s_int ASC;
+-------+-----+
| s_int | cnt |
+-------+-----+
|       |   5 |
|     1 |   5 |
|     2 |   5 |
+-------+-----+
(3 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_order_by TEST_ID: A10_B14
#-------------------------------------------------------------------------
SELECT s_int,
       count(*) cnt
FROM test_unnest,
     unnest(json_value(a_nested, '$[6]' RETURNING varchar array)) AS u(c)
GROUP BY s_int
ORDER BY 1 DESC;
+-------+-----+
| s_int | cnt |
+-------+-----+
|     2 |   5 |
|     1 |   5 |
|       |   5 |
+-------+-----+
(3 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_order_by TEST_ID: A10_B15
#-------------------------------------------------------------------------
SELECT s_int
FROM test_unnest,
     unnest(json_value(a_nested, '$[6]' RETURNING varchar array)) AS u(c)
ORDER BY s_int ASC;
CannotBuildQueryException
!error

#-------------------------------------------------------------------------
# TESTCASE: test_order_by TEST_ID: A10_B16
#-------------------------------------------------------------------------
SELECT s_int
FROM test_unnest,
     unnest(json_value(a_nested, '$[6]' RETURNING varchar array)) AS u(c)
ORDER BY 1 DESC;
CannotBuildQueryException
!error

#-------------------------------------------------------------------------
# TESTCASE: test_order_by TEST_ID: A10_B17
#-------------------------------------------------------------------------
SELECT s_int
FROM
  (SELECT s_int
   FROM test_unnest,
        unnest(json_value(a_nested, '$[6]' RETURNING varchar array)) AS u(c)
   ORDER BY s_int ASC);
+-------+
| s_int |
+-------+
|     1 |
|     1 |
|     1 |
|     1 |
|     1 |
|     2 |
|     2 |
|     2 |
|     2 |
|     2 |
|       |
|       |
|       |
|       |
|       |
+-------+
(15 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_order_by TEST_ID: A10_B18
#-------------------------------------------------------------------------
SELECT s_int
FROM
  (SELECT s_int
   FROM test_unnest,
        unnest(json_value(a_nested, '$[6]' RETURNING varchar array)) AS u(c)
   ORDER BY 1 DESC);
+-------+
| s_int |
+-------+
|     1 |
|     1 |
|     1 |
|     1 |
|     1 |
|     2 |
|     2 |
|     2 |
|     2 |
|     2 |
|       |
|       |
|       |
|       |
|       |
+-------+
(15 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_order_by TEST_ID: A11_B1
#-------------------------------------------------------------------------
SELECT c,
       count(*) cnt
FROM test_unnest,
     unnest(json_value(a_nested, '$[4]' RETURNING varchar array)) AS u(c)
GROUP BY c
ORDER BY c ASC;
+---+-----+
| c | cnt |
+---+-----+
|   |   9 |
+---+-----+
(1 row)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_order_by TEST_ID: A11_B2
#-------------------------------------------------------------------------
SELECT c,
       count(*) cnt
FROM test_unnest,
     unnest(json_value(a_nested, '$[4]' RETURNING varchar array)) AS u(c)
GROUP BY c
ORDER BY 1 DESC;
+---+-----+
| c | cnt |
+---+-----+
|   |   9 |
+---+-----+
(1 row)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_order_by TEST_ID: A11_B3
#-------------------------------------------------------------------------
SELECT c
FROM test_unnest,
     unnest(json_value(a_nested, '$[4]' RETURNING varchar array)) AS u(c)
ORDER BY c ASC;
CannotBuildQueryException
!error

#-------------------------------------------------------------------------
# TESTCASE: test_order_by TEST_ID: A11_B4
#-------------------------------------------------------------------------
SELECT c
FROM test_unnest,
     unnest(json_value(a_nested, '$[4]' RETURNING varchar array)) AS u(c)
ORDER BY 1 DESC;
CannotBuildQueryException
!error

#-------------------------------------------------------------------------
# TESTCASE: test_order_by TEST_ID: A11_B5
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT c
   FROM test_unnest,
        unnest(json_value(a_nested, '$[4]' RETURNING varchar array)) AS u(c)
   ORDER BY c ASC);
+---+
| c |
+---+
|   |
|   |
|   |
|   |
|   |
|   |
|   |
|   |
|   |
+---+
(9 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_order_by TEST_ID: A11_B6
#-------------------------------------------------------------------------
SELECT c
FROM
  (SELECT c
   FROM test_unnest,
        unnest(json_value(a_nested, '$[4]' RETURNING varchar array)) AS u(c)
   ORDER BY 1 DESC);
+---+
| c |
+---+
|   |
|   |
|   |
|   |
|   |
|   |
|   |
|   |
|   |
+---+
(9 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_order_by TEST_ID: A11_B7
#-------------------------------------------------------------------------
SELECT __time,
       count(*) cnt
FROM test_unnest,
     unnest(json_value(a_nested, '$[4]' RETURNING varchar array)) AS u(c)
GROUP BY __time
ORDER BY __time ASC;
+-------------------------+-----+
| __time                  | cnt |
+-------------------------+-----+
| 2022-01-01 00:00:00.000 |   3 |
| 2022-02-01 00:00:00.000 |   3 |
| 2022-03-01 00:00:00.000 |   3 |
+-------------------------+-----+
(3 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_order_by TEST_ID: A11_B8
#-------------------------------------------------------------------------
SELECT __time,
       count(*) cnt
FROM test_unnest,
     unnest(json_value(a_nested, '$[4]' RETURNING varchar array)) AS u(c)
GROUP BY __time
ORDER BY __time DESC;
+-------------------------+-----+
| __time                  | cnt |
+-------------------------+-----+
| 2022-03-01 00:00:00.000 |   3 |
| 2022-02-01 00:00:00.000 |   3 |
| 2022-01-01 00:00:00.000 |   3 |
+-------------------------+-----+
(3 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_order_by TEST_ID: A11_B9
#-------------------------------------------------------------------------
SELECT __time
FROM test_unnest,
     unnest(json_value(a_nested, '$[4]' RETURNING varchar array)) AS u(c)
ORDER BY __time ASC;
+-------------------------+
| __time                  |
+-------------------------+
| 2022-01-01 00:00:00.000 |
| 2022-01-01 00:00:00.000 |
| 2022-01-01 00:00:00.000 |
| 2022-02-01 00:00:00.000 |
| 2022-02-01 00:00:00.000 |
| 2022-02-01 00:00:00.000 |
| 2022-03-01 00:00:00.000 |
| 2022-03-01 00:00:00.000 |
| 2022-03-01 00:00:00.000 |
+-------------------------+
(9 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_order_by TEST_ID: A11_B10
#-------------------------------------------------------------------------
SELECT __time
FROM test_unnest,
     unnest(json_value(a_nested, '$[4]' RETURNING varchar array)) AS u(c)
ORDER BY 1 DESC;
+-------------------------+
| __time                  |
+-------------------------+
| 2022-03-01 00:00:00.000 |
| 2022-03-01 00:00:00.000 |
| 2022-03-01 00:00:00.000 |
| 2022-02-01 00:00:00.000 |
| 2022-02-01 00:00:00.000 |
| 2022-02-01 00:00:00.000 |
| 2022-01-01 00:00:00.000 |
| 2022-01-01 00:00:00.000 |
| 2022-01-01 00:00:00.000 |
+-------------------------+
(9 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_order_by TEST_ID: A11_B11
#-------------------------------------------------------------------------
SELECT __time
FROM
  (SELECT __time
   FROM test_unnest,
        unnest(json_value(a_nested, '$[4]' RETURNING varchar array)) AS u(c)
   ORDER BY __time ASC);
+-------------------------+
| __time                  |
+-------------------------+
| 2022-01-01 00:00:00.000 |
| 2022-01-01 00:00:00.000 |
| 2022-01-01 00:00:00.000 |
| 2022-02-01 00:00:00.000 |
| 2022-02-01 00:00:00.000 |
| 2022-02-01 00:00:00.000 |
| 2022-03-01 00:00:00.000 |
| 2022-03-01 00:00:00.000 |
| 2022-03-01 00:00:00.000 |
+-------------------------+
(9 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_order_by TEST_ID: A11_B12
#-------------------------------------------------------------------------
SELECT __time
FROM
  (SELECT __time
   FROM test_unnest,
        unnest(json_value(a_nested, '$[4]' RETURNING varchar array)) AS u(c)
   ORDER BY 1 DESC);
+-------------------------+
| __time                  |
+-------------------------+
| 2022-01-01 00:00:00.000 |
| 2022-01-01 00:00:00.000 |
| 2022-01-01 00:00:00.000 |
| 2022-02-01 00:00:00.000 |
| 2022-02-01 00:00:00.000 |
| 2022-02-01 00:00:00.000 |
| 2022-03-01 00:00:00.000 |
| 2022-03-01 00:00:00.000 |
| 2022-03-01 00:00:00.000 |
+-------------------------+
(9 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_order_by TEST_ID: A11_B13
#-------------------------------------------------------------------------
SELECT s_int,
       count(*) cnt
FROM test_unnest,
     unnest(json_value(a_nested, '$[4]' RETURNING varchar array)) AS u(c)
GROUP BY s_int
ORDER BY s_int ASC;
+-------+-----+
| s_int | cnt |
+-------+-----+
|       |   3 |
|     1 |   3 |
|     2 |   3 |
+-------+-----+
(3 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_order_by TEST_ID: A11_B14
#-------------------------------------------------------------------------
SELECT s_int,
       count(*) cnt
FROM test_unnest,
     unnest(json_value(a_nested, '$[4]' RETURNING varchar array)) AS u(c)
GROUP BY s_int
ORDER BY 1 DESC;
+-------+-----+
| s_int | cnt |
+-------+-----+
|     2 |   3 |
|     1 |   3 |
|       |   3 |
+-------+-----+
(3 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_order_by TEST_ID: A11_B15
#-------------------------------------------------------------------------
SELECT s_int
FROM test_unnest,
     unnest(json_value(a_nested, '$[4]' RETURNING varchar array)) AS u(c)
ORDER BY s_int ASC;
CannotBuildQueryException
!error

#-------------------------------------------------------------------------
# TESTCASE: test_order_by TEST_ID: A11_B16
#-------------------------------------------------------------------------
SELECT s_int
FROM test_unnest,
     unnest(json_value(a_nested, '$[4]' RETURNING varchar array)) AS u(c)
ORDER BY 1 DESC;
CannotBuildQueryException
!error

#-------------------------------------------------------------------------
# TESTCASE: test_order_by TEST_ID: A11_B17
#-------------------------------------------------------------------------
SELECT s_int
FROM
  (SELECT s_int
   FROM test_unnest,
        unnest(json_value(a_nested, '$[4]' RETURNING varchar array)) AS u(c)
   ORDER BY s_int ASC);
+-------+
| s_int |
+-------+
|     1 |
|     1 |
|     1 |
|     2 |
|     2 |
|     2 |
|       |
|       |
|       |
+-------+
(9 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_order_by TEST_ID: A11_B18
#-------------------------------------------------------------------------
SELECT s_int
FROM
  (SELECT s_int
   FROM test_unnest,
        unnest(json_value(a_nested, '$[4]' RETURNING varchar array)) AS u(c)
   ORDER BY 1 DESC);
+-------+
| s_int |
+-------+
|     1 |
|     1 |
|     1 |
|     2 |
|     2 |
|     2 |
|       |
|       |
|       |
+-------+
(9 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_order_by TEST_ID: A12_B1
#-------------------------------------------------------------------------
SELECT c,
       count(*) cnt
FROM test_unnest,
     unnest(json_value(a_nested, '$[5]' RETURNING varchar array)) AS u(c)
GROUP BY c
ORDER BY c ASC;
+---+-----+
| c | cnt |
+---+-----+
+---+-----+
(0 rows)

!ok

