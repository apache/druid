!set useApproximateCountDistinct false
!use druidtest://?componentSupplier=AllDruidEnginesComponentSupplier&datasets=sql/src/test/quidem/qatests/qaJsonCols/ingest/flatten_spec
!set outputformat mysql
#-------------------------------------------------------------------------
# TESTCASE: test_flatten_spec TEST_ID: SEL_DATASOURCE
#-------------------------------------------------------------------------
SELECT count(*) cnt
FROM test_json_cols;
+-----+
| cnt |
+-----+
|   2 |
+-----+
(1 row)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_flatten_spec TEST_ID: G01
#-------------------------------------------------------------------------
SELECT count(*) c
FROM
  (SELECT __time
   FROM test_json_cols
   GROUP BY __time);
+---+
| c |
+---+
| 2 |
+---+
(1 row)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_flatten_spec TEST_ID: G02
#-------------------------------------------------------------------------
SELECT count(*) c
FROM test_json_cols
WHERE json_value(s_str, '$.') = 'A';
+---+
| c |
+---+
| 1 |
+---+
(1 row)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_flatten_spec TEST_ID: G03
#-------------------------------------------------------------------------
SELECT count(*) c
FROM test_json_cols
WHERE json_value(s_num_int, '$.') = 1;
+---+
| c |
+---+
| 1 |
+---+
(1 row)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_flatten_spec TEST_ID: G04
#-------------------------------------------------------------------------
SELECT count(*) c
FROM test_json_cols
WHERE json_value(s_num_float, '$.') = 0.1;
+---+
| c |
+---+
| 1 |
+---+
(1 row)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_flatten_spec TEST_ID: G05
#-------------------------------------------------------------------------
SELECT count(*) c
FROM test_json_cols
WHERE json_value(s_bool, '$.') = 1;
+---+
| c |
+---+
| 1 |
+---+
(1 row)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_flatten_spec TEST_ID: G06
#-------------------------------------------------------------------------
SELECT count(*) c
FROM test_json_cols
WHERE json_value(s_null, '$.') IS NULL;
+---+
| c |
+---+
| 2 |
+---+
(1 row)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_flatten_spec TEST_ID: G07
#-------------------------------------------------------------------------
SELECT json_query(c_empty_obj, '$.') c
FROM test_json_cols;
+----+
| c  |
+----+
| {} |
|    |
+----+
(2 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_flatten_spec TEST_ID: G08
#-------------------------------------------------------------------------
SELECT json_query(c_empty_array, '$.') c
FROM test_json_cols;
+----+
| c  |
+----+
| [] |
|    |
+----+
(2 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_flatten_spec TEST_ID: G09
#-------------------------------------------------------------------------
SELECT json_query(c_empty_obj_nested, '$.') c
FROM test_json_cols;
+-----------------------------+
| c                           |
+-----------------------------+
| {"o1":{},"o2":[],"o3":null} |
|                             |
+-----------------------------+
(2 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_flatten_spec TEST_ID: G10
#-------------------------------------------------------------------------
SELECT json_query(c_empty_array_nested, '$.') c
FROM test_json_cols;
+--------------+
| c            |
+--------------+
| [{},[],null] |
|              |
+--------------+
(2 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_flatten_spec TEST_ID: G11
#-------------------------------------------------------------------------
SELECT count(*) c
FROM test_json_cols
WHERE s_str = 'A';
+---+
| c |
+---+
| 1 |
+---+
(1 row)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_flatten_spec TEST_ID: G12
#-------------------------------------------------------------------------
SELECT count(*) c
FROM test_json_cols
WHERE s_num_int = 1;
+---+
| c |
+---+
| 1 |
+---+
(1 row)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_flatten_spec TEST_ID: G13
#-------------------------------------------------------------------------
SELECT count(*) c
FROM test_json_cols
WHERE s_num_float = 0.1;
+---+
| c |
+---+
| 1 |
+---+
(1 row)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_flatten_spec TEST_ID: G14
#-------------------------------------------------------------------------
SELECT count(*) c
FROM test_json_cols
WHERE s_bool = 1;
+---+
| c |
+---+
| 1 |
+---+
(1 row)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_flatten_spec TEST_ID: G15
#-------------------------------------------------------------------------
SELECT count(*) c
FROM test_json_cols
WHERE s_null IS NULL;
+---+
| c |
+---+
| 2 |
+---+
(1 row)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_flatten_spec TEST_ID: G16
#-------------------------------------------------------------------------
SELECT c_empty_obj
FROM test_json_cols;
+-------------+
| c_empty_obj |
+-------------+
| {}          |
|             |
+-------------+
(2 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_flatten_spec TEST_ID: G17
#-------------------------------------------------------------------------
SELECT c_empty_array
FROM test_json_cols;
+---------------+
| c_empty_array |
+---------------+
| []            |
|               |
+---------------+
(2 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_flatten_spec TEST_ID: G18
#-------------------------------------------------------------------------
SELECT c_empty_obj_nested
FROM test_json_cols;
+-----------------------------+
| c_empty_obj_nested          |
+-----------------------------+
| {"o1":{},"o2":[],"o3":null} |
|                             |
+-----------------------------+
(2 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_flatten_spec TEST_ID: G19
#-------------------------------------------------------------------------
SELECT c_empty_array_nested
FROM test_json_cols;
+----------------------+
| c_empty_array_nested |
+----------------------+
| [{},[],null]         |
|                      |
+----------------------+
(2 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_flatten_spec TEST_ID: G20
#-------------------------------------------------------------------------
SELECT count(*) c
FROM test_json_cols
WHERE json_value(c1, '$.a_str') = 'A';
+---+
| c |
+---+
| 1 |
+---+
(1 row)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_flatten_spec TEST_ID: G21
#-------------------------------------------------------------------------
SELECT count(*) c
FROM test_json_cols
WHERE json_value(c1, '$.a_num_int') = 1;
+---+
| c |
+---+
| 1 |
+---+
(1 row)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_flatten_spec TEST_ID: G22
#-------------------------------------------------------------------------
SELECT count(*) c
FROM test_json_cols
WHERE json_value(c1, '$.a_num_float') = 0.1;
+---+
| c |
+---+
| 1 |
+---+
(1 row)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_flatten_spec TEST_ID: G23
#-------------------------------------------------------------------------
SELECT count(*) c
FROM test_json_cols
WHERE json_value(c1, '$.a_bool') = 1;
+---+
| c |
+---+
| 1 |
+---+
(1 row)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_flatten_spec TEST_ID: G24
#-------------------------------------------------------------------------
SELECT count(*) c
FROM test_json_cols
WHERE json_value(c1, '$.a_null') IS NULL;
+---+
| c |
+---+
| 2 |
+---+
(1 row)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_flatten_spec TEST_ID: G25
#-------------------------------------------------------------------------
SELECT json_query(c1, '$.a_empty_obj') c
FROM test_json_cols;
+----+
| c  |
+----+
| {} |
|    |
+----+
(2 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_flatten_spec TEST_ID: G26
#-------------------------------------------------------------------------
SELECT json_query(c1, '$.a_empty_array') c
FROM test_json_cols;
+----+
| c  |
+----+
| [] |
|    |
+----+
(2 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_flatten_spec TEST_ID: G27
#-------------------------------------------------------------------------
SELECT json_query(c1, '$.a_empty_obj_nested') c
FROM test_json_cols;
+-----------------------------+
| c                           |
+-----------------------------+
| {"o1":{},"o2":[],"o3":null} |
|                             |
+-----------------------------+
(2 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_flatten_spec TEST_ID: G28
#-------------------------------------------------------------------------
SELECT json_query(c1, '$.a_empty_array_nested') c
FROM test_json_cols;
+--------------+
| c            |
+--------------+
| [{},[],null] |
|              |
+--------------+
(2 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_flatten_spec TEST_ID: G29
#-------------------------------------------------------------------------
SELECT count(*) c
FROM test_json_cols
WHERE json_value(c1, '$.a_obj.a_str') = 'A';
+---+
| c |
+---+
| 1 |
+---+
(1 row)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_flatten_spec TEST_ID: G30
#-------------------------------------------------------------------------
SELECT count(*) c
FROM test_json_cols
WHERE json_value(c1, '$.a_obj.a_num_int') = 1;
+---+
| c |
+---+
| 1 |
+---+
(1 row)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_flatten_spec TEST_ID: G31
#-------------------------------------------------------------------------
SELECT count(*) c
FROM test_json_cols
WHERE json_value(c1, '$.a_obj.a_num_float') = 0.1;
+---+
| c |
+---+
| 1 |
+---+
(1 row)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_flatten_spec TEST_ID: G32
#-------------------------------------------------------------------------
SELECT count(*) c
FROM test_json_cols
WHERE json_value(c1, '$.a_obj.a_bool') = 1;
+---+
| c |
+---+
| 1 |
+---+
(1 row)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_flatten_spec TEST_ID: G33
#-------------------------------------------------------------------------
SELECT count(*) c
FROM test_json_cols
WHERE json_value(c1, '$.a_obj.a_null') IS NULL;
+---+
| c |
+---+
| 2 |
+---+
(1 row)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_flatten_spec TEST_ID: G34
#-------------------------------------------------------------------------
SELECT json_query(c1, '$.a_obj.a_empty_obj') c
FROM test_json_cols;
+----+
| c  |
+----+
| {} |
|    |
+----+
(2 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_flatten_spec TEST_ID: G35
#-------------------------------------------------------------------------
SELECT json_query(c1, '$.a_obj.a_empty_array') c
FROM test_json_cols;
+----+
| c  |
+----+
| [] |
|    |
+----+
(2 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_flatten_spec TEST_ID: G36
#-------------------------------------------------------------------------
SELECT json_query(c1, '$.a_obj.a_empty_obj_nested') c
FROM test_json_cols;
+-----------------------------+
| c                           |
+-----------------------------+
| {"o1":{},"o2":[],"o3":null} |
|                             |
+-----------------------------+
(2 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_flatten_spec TEST_ID: G37
#-------------------------------------------------------------------------
SELECT json_query(c1, '$.a_obj.a_empty_array_nested') c
FROM test_json_cols;
+--------------+
| c            |
+--------------+
| [{},[],null] |
|              |
+--------------+
(2 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_flatten_spec TEST_ID: G38
#-------------------------------------------------------------------------
SELECT count(*) c
FROM test_json_cols
WHERE json_value(c1, '$.a_obj.a_obj.a_str') IS NULL;
+---+
| c |
+---+
| 2 |
+---+
(1 row)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_flatten_spec TEST_ID: G39
#-------------------------------------------------------------------------
SELECT count(*) c
FROM test_json_cols
WHERE json_value(c1, '$.a_obj.a_array[0].a_str') IS NULL;
+---+
| c |
+---+
| 2 |
+---+
(1 row)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_flatten_spec TEST_ID: G40
#-------------------------------------------------------------------------
SELECT count(*) c
FROM test_json_cols
WHERE json_value(c2, '$.b_obj.b_str') IS NULL;
+---+
| c |
+---+
| 2 |
+---+
(1 row)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_flatten_spec TEST_ID: G41
#-------------------------------------------------------------------------
SELECT count(*) c
FROM test_json_cols
WHERE json_value(c2, '$.b_array[1].b_str') IS NULL;
+---+
| c |
+---+
| 2 |
+---+
(1 row)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_flatten_spec TEST_ID: G42
#-------------------------------------------------------------------------
SELECT count(*) c
FROM test_json_cols
WHERE json_value(t_obj, '$.a_str') = 'A';
+---+
| c |
+---+
| 0 |
+---+
(1 row)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_flatten_spec TEST_ID: G43
#-------------------------------------------------------------------------
SELECT count(*) c
FROM test_json_cols
WHERE json_value(t_obj, '$.a_num_int') = 1;
+---+
| c |
+---+
| 0 |
+---+
(1 row)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_flatten_spec TEST_ID: G44
#-------------------------------------------------------------------------
SELECT count(*) c
FROM test_json_cols
WHERE json_value(t_obj, '$.a_num_float') = 0.1;
+---+
| c |
+---+
| 0 |
+---+
(1 row)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_flatten_spec TEST_ID: G45
#-------------------------------------------------------------------------
SELECT count(*) c
FROM test_json_cols
WHERE json_value(t_obj, '$.a_bool') = 1;
+---+
| c |
+---+
| 0 |
+---+
(1 row)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_flatten_spec TEST_ID: G46
#-------------------------------------------------------------------------
SELECT count(*) c
FROM test_json_cols
WHERE json_value(t_obj, '$.a_null') IS NULL;
+---+
| c |
+---+
| 2 |
+---+
(1 row)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_flatten_spec TEST_ID: G47
#-------------------------------------------------------------------------
SELECT json_query(t_obj, '$.a_empty_obj') c
FROM test_json_cols;
+---+
| c |
+---+
|   |
|   |
+---+
(2 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_flatten_spec TEST_ID: G48
#-------------------------------------------------------------------------
SELECT json_query(t_obj, '$.a_empty_array') c
FROM test_json_cols;
+---+
| c |
+---+
|   |
|   |
+---+
(2 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_flatten_spec TEST_ID: G49
#-------------------------------------------------------------------------
SELECT json_query(t_obj, '$.a_empty_obj_nested') c
FROM test_json_cols;
+---+
| c |
+---+
|   |
|   |
+---+
(2 rows)

!ok

