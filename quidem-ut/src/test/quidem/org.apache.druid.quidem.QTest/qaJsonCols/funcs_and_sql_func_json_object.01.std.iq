!set useApproximateCountDistinct false
!use druidtest://?componentSupplier=StandardComponentSupplier&datasets=sql/src/test/quidem/qatests/qaJsonCols/funcs_and_sql
!set outputformat mysql
#-------------------------------------------------------------------------
# TESTCASE: test_func_json_object TEST_ID: SEL_DATASOURCE
#-------------------------------------------------------------------------
SELECT count(*) cnt
FROM test_json_cols;
+-----+
| cnt |
+-----+
|   4 |
+-----+
(1 row)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_func_json_object TEST_ID: A001
#-------------------------------------------------------------------------
SELECT json_object(value 'A' KEY 'a') c
FROM test_json_cols;
QueryInterruptedException
!error

#-------------------------------------------------------------------------
# TESTCASE: test_func_json_object TEST_ID: A002
#-------------------------------------------------------------------------
SELECT json_object(KEY 'a' vAlUe 'A') c
FROM test_json_cols;
+-----------+
| c         |
+-----------+
| {"a":"A"} |
| {"a":"A"} |
| {"a":"A"} |
| {"a":"A"} |
+-----------+
(4 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_func_json_object TEST_ID: A003
#-------------------------------------------------------------------------
SELECT json_object(KEY 'a' value 'A1', KEY 'b' value 'A2', KEY 'c' value 'A3') c
FROM test_json_cols;
+------------------------------+
| c                            |
+------------------------------+
| {"a":"A1","b":"A2","c":"A3"} |
| {"a":"A1","b":"A2","c":"A3"} |
| {"a":"A1","b":"A2","c":"A3"} |
| {"a":"A1","b":"A2","c":"A3"} |
+------------------------------+
(4 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_func_json_object TEST_ID: A004
#-------------------------------------------------------------------------
SELECT json_object('a':'A1', 'b':'A2', 'c':'A3') c
FROM test_json_cols;
+------------------------------+
| c                            |
+------------------------------+
| {"a":"A1","b":"A2","c":"A3"} |
| {"a":"A1","b":"A2","c":"A3"} |
| {"a":"A1","b":"A2","c":"A3"} |
| {"a":"A1","b":"A2","c":"A3"} |
+------------------------------+
(4 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_func_json_object TEST_ID: A005
#-------------------------------------------------------------------------
SELECT json_object(KEY 'aAa' value 'A1', KEY 'AaA' value 'A2', KEY 'AAa' value 'A3') c
FROM test_json_cols;
+------------------------------------+
| c                                  |
+------------------------------------+
| {"aAa":"A1","AaA":"A2","AAa":"A3"} |
| {"aAa":"A1","AaA":"A2","AAa":"A3"} |
| {"aAa":"A1","AaA":"A2","AAa":"A3"} |
| {"aAa":"A1","AaA":"A2","AAa":"A3"} |
+------------------------------------+
(4 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_func_json_object TEST_ID: A006
#-------------------------------------------------------------------------
SELECT json_object('aAa':'A1', 'AaA':'A2', 'AAa':'A3') c
FROM test_json_cols;
+------------------------------------+
| c                                  |
+------------------------------------+
| {"aAa":"A1","AaA":"A2","AAa":"A3"} |
| {"aAa":"A1","AaA":"A2","AAa":"A3"} |
| {"aAa":"A1","AaA":"A2","AAa":"A3"} |
| {"aAa":"A1","AaA":"A2","AAa":"A3"} |
+------------------------------------+
(4 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_func_json_object TEST_ID: A007
#-------------------------------------------------------------------------
SELECT json_object(KEY 'aaa' value 'A1', KEY 'aaa' value 'A2', KEY 'aaa' value 'A3') c
FROM test_json_cols;
+--------------+
| c            |
+--------------+
| {"aaa":"A3"} |
| {"aaa":"A3"} |
| {"aaa":"A3"} |
| {"aaa":"A3"} |
+--------------+
(4 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_func_json_object TEST_ID: A008
#-------------------------------------------------------------------------
SELECT json_object('aaa':'A1', 'aaa':'A2', 'aaa':'A3') c
FROM test_json_cols;
+--------------+
| c            |
+--------------+
| {"aaa":"A3"} |
| {"aaa":"A3"} |
| {"aaa":"A3"} |
| {"aaa":"A3"} |
+--------------+
(4 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_func_json_object TEST_ID: A009
#-------------------------------------------------------------------------
SELECT json_object(KEY 'a' value 'A') c
FROM test_json_cols;
+-----------+
| c         |
+-----------+
| {"a":"A"} |
| {"a":"A"} |
| {"a":"A"} |
| {"a":"A"} |
+-----------+
(4 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_func_json_object TEST_ID: A010
#-------------------------------------------------------------------------
SELECT json_object('a':'A') c
FROM test_json_cols;
+-----------+
| c         |
+-----------+
| {"a":"A"} |
| {"a":"A"} |
| {"a":"A"} |
| {"a":"A"} |
+-----------+
(4 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_func_json_object TEST_ID: A011
#-------------------------------------------------------------------------
SELECT json_object(KEY '123' value 'A') c
FROM test_json_cols;
+-------------+
| c           |
+-------------+
| {"123":"A"} |
| {"123":"A"} |
| {"123":"A"} |
| {"123":"A"} |
+-------------+
(4 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_func_json_object TEST_ID: A012
#-------------------------------------------------------------------------
SELECT json_object('123':'A') c
FROM test_json_cols;
+-------------+
| c           |
+-------------+
| {"123":"A"} |
| {"123":"A"} |
| {"123":"A"} |
| {"123":"A"} |
+-------------+
(4 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_func_json_object TEST_ID: A013
#-------------------------------------------------------------------------
SELECT json_object(KEY '日本' value 'A') c
FROM test_json_cols;
+------------+
| c          |
+------------+
| {"日本":"A"} |
| {"日本":"A"} |
| {"日本":"A"} |
| {"日本":"A"} |
+------------+
(4 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_func_json_object TEST_ID: A014
#-------------------------------------------------------------------------
SELECT json_object('日本':'A') c
FROM test_json_cols;
+------------+
| c          |
+------------+
| {"日本":"A"} |
| {"日本":"A"} |
| {"日本":"A"} |
| {"日本":"A"} |
+------------+
(4 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_func_json_object TEST_ID: A015
#-------------------------------------------------------------------------
SELECT json_object(KEY 'a'||'b'||'c' value 'A') c
FROM test_json_cols;
+-------------+
| c           |
+-------------+
| {"abc":"A"} |
| {"abc":"A"} |
| {"abc":"A"} |
| {"abc":"A"} |
+-------------+
(4 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_func_json_object TEST_ID: A016
#-------------------------------------------------------------------------
SELECT json_object('a'||'b'||'c':'A') c
FROM test_json_cols;
+-------------+
| c           |
+-------------+
| {"abc":"A"} |
| {"abc":"A"} |
| {"abc":"A"} |
| {"abc":"A"} |
+-------------+
(4 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_func_json_object TEST_ID: A017
#-------------------------------------------------------------------------
SELECT json_object(KEY '"This is My Key"' value 'A') c
FROM test_json_cols;
+----------------------------+
| c                          |
+----------------------------+
| {"\"This is My Key\"":"A"} |
| {"\"This is My Key\"":"A"} |
| {"\"This is My Key\"":"A"} |
| {"\"This is My Key\"":"A"} |
+----------------------------+
(4 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_func_json_object TEST_ID: A018
#-------------------------------------------------------------------------
SELECT json_object('"This is My Key"':'A') c
FROM test_json_cols;
+----------------------------+
| c                          |
+----------------------------+
| {"\"This is My Key\"":"A"} |
| {"\"This is My Key\"":"A"} |
| {"\"This is My Key\"":"A"} |
| {"\"This is My Key\"":"A"} |
+----------------------------+
(4 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_func_json_object TEST_ID: A019
#-------------------------------------------------------------------------
SELECT json_object(KEY json_value(s_str, '$') value 'A') c
FROM test_json_cols;
AvaticaSqlException
!error

#-------------------------------------------------------------------------
# TESTCASE: test_func_json_object TEST_ID: A020
#-------------------------------------------------------------------------
SELECT json_object(json_value(s_str, '$'):'A') c
FROM test_json_cols;
AvaticaSqlException
!error

#-------------------------------------------------------------------------
# TESTCASE: test_func_json_object TEST_ID: A021
#-------------------------------------------------------------------------
SELECT json_object(KEY 123 value 'A') c
FROM test_json_cols;
field name must be a STRING
!error

#-------------------------------------------------------------------------
# TESTCASE: test_func_json_object TEST_ID: A022
#-------------------------------------------------------------------------
SELECT json_object(123:'A') c
FROM test_json_cols;
field name must be a STRING
!error

#-------------------------------------------------------------------------
# TESTCASE: test_func_json_object TEST_ID: A023
#-------------------------------------------------------------------------
SELECT json_object(KEY 1+1 value 'A') c
FROM test_json_cols;
field name must be a STRING
!error

#-------------------------------------------------------------------------
# TESTCASE: test_func_json_object TEST_ID: A024
#-------------------------------------------------------------------------
SELECT json_object(1+1:'A') c
FROM test_json_cols;
field name must be a STRING
!error

#-------------------------------------------------------------------------
# TESTCASE: test_func_json_object TEST_ID: A025
#-------------------------------------------------------------------------
SELECT json_object(KEY json_value(s_num_int, '$' RETURNING bigint) value 'A') c
FROM test_json_cols;
field name must be a STRING
!error

#-------------------------------------------------------------------------
# TESTCASE: test_func_json_object TEST_ID: A026
#-------------------------------------------------------------------------
SELECT json_object(json_value(s_num_int, '$' RETURNING bigint):'A') c
FROM test_json_cols;
field name must be a STRING
!error

#-------------------------------------------------------------------------
# TESTCASE: test_func_json_object TEST_ID: A027
#-------------------------------------------------------------------------
SELECT json_object(KEY 0.123 value 'A') c
FROM test_json_cols;
field name must be a STRING
!error

#-------------------------------------------------------------------------
# TESTCASE: test_func_json_object TEST_ID: A028
#-------------------------------------------------------------------------
SELECT json_object(0.123:'A') c
FROM test_json_cols;
field name must be a STRING
!error

#-------------------------------------------------------------------------
# TESTCASE: test_func_json_object TEST_ID: A029
#-------------------------------------------------------------------------
SELECT json_object(KEY 0.1+0.1 value 'A') c
FROM test_json_cols;
field name must be a STRING
!error

#-------------------------------------------------------------------------
# TESTCASE: test_func_json_object TEST_ID: A030
#-------------------------------------------------------------------------
SELECT json_object(0.1+0.1:'A') c
FROM test_json_cols;
field name must be a STRING
!error

#-------------------------------------------------------------------------
# TESTCASE: test_func_json_object TEST_ID: A031
#-------------------------------------------------------------------------
SELECT json_object(KEY json_value(s_num_float, '$' RETURNING DOUBLE) value 'A') c
FROM test_json_cols;
field name must be a STRING
!error

#-------------------------------------------------------------------------
# TESTCASE: test_func_json_object TEST_ID: A032
#-------------------------------------------------------------------------
SELECT json_object(json_value(s_num_float, '$' RETURNING DOUBLE):'A') c
FROM test_json_cols;
field name must be a STRING
!error

#-------------------------------------------------------------------------
# TESTCASE: test_func_json_object TEST_ID: A033
#-------------------------------------------------------------------------
SELECT json_object(KEY TRUE value 'A') c
FROM test_json_cols;
field name must be a STRING
!error

#-------------------------------------------------------------------------
# TESTCASE: test_func_json_object TEST_ID: A034
#-------------------------------------------------------------------------
SELECT json_object(TRUE:'A') c
FROM test_json_cols;
field name must be a STRING
!error

#-------------------------------------------------------------------------
# TESTCASE: test_func_json_object TEST_ID: A035
#-------------------------------------------------------------------------
SELECT json_object(KEY (1=2) value 'A') c
FROM test_json_cols;
field name must be a STRING
!error

#-------------------------------------------------------------------------
# TESTCASE: test_func_json_object TEST_ID: A036
#-------------------------------------------------------------------------
SELECT json_object((1=2):'A') c
FROM test_json_cols;
field name must be a STRING
!error

#-------------------------------------------------------------------------
# TESTCASE: test_func_json_object TEST_ID: A037
#-------------------------------------------------------------------------
SELECT json_object(KEY json_value(s_bool, '$' RETURNING boolean) value 'A') c
FROM test_json_cols;
AvaticaSqlException
!error

#-------------------------------------------------------------------------
# TESTCASE: test_func_json_object TEST_ID: A038
#-------------------------------------------------------------------------
SELECT json_object(json_value(s_bool, '$' RETURNING boolean):'A') c
FROM test_json_cols;
AvaticaSqlException
!error

#-------------------------------------------------------------------------
# TESTCASE: test_func_json_object TEST_ID: A039
#-------------------------------------------------------------------------
SELECT json_object(KEY NULL value 'A') c
FROM test_json_cols;
AvaticaSqlException
!error

#-------------------------------------------------------------------------
# TESTCASE: test_func_json_object TEST_ID: A040
#-------------------------------------------------------------------------
SELECT json_object(NULL:'A') c
FROM test_json_cols;
AvaticaSqlException
!error

#-------------------------------------------------------------------------
# TESTCASE: test_func_json_object TEST_ID: A041
#-------------------------------------------------------------------------
SELECT json_object(KEY json_value(s_null, '$') value 'A') c
FROM test_json_cols;
AvaticaSqlException
!error

#-------------------------------------------------------------------------
# TESTCASE: test_func_json_object TEST_ID: A042
#-------------------------------------------------------------------------
SELECT json_object(json_value(s_null, '$'):'A') c
FROM test_json_cols;
AvaticaSqlException
!error

#-------------------------------------------------------------------------
# TESTCASE: test_func_json_object TEST_ID: A043
#-------------------------------------------------------------------------
SELECT json_object(KEY json_value(c1, '$.doesnotexist') value 'A') c
FROM test_json_cols;
AvaticaSqlException
!error

#-------------------------------------------------------------------------
# TESTCASE: test_func_json_object TEST_ID: A044
#-------------------------------------------------------------------------
SELECT json_object(json_value(c1, '$.doesnotexist'):'A') c
FROM test_json_cols;
AvaticaSqlException
!error

#-------------------------------------------------------------------------
# TESTCASE: test_func_json_object TEST_ID: A045
#-------------------------------------------------------------------------
SELECT json_object(KEY __time value 'A') c
FROM test_json_cols;
field name must be a STRING
!error

#-------------------------------------------------------------------------
# TESTCASE: test_func_json_object TEST_ID: A046
#-------------------------------------------------------------------------
SELECT json_object(__time:'A') c
FROM test_json_cols;
field name must be a STRING
!error

#-------------------------------------------------------------------------
# TESTCASE: test_func_json_object TEST_ID: A047
#-------------------------------------------------------------------------
SELECT json_object(KEY CURRENT_TIMESTAMP value 'A') c
FROM test_json_cols;
field name must be a STRING
!error

#-------------------------------------------------------------------------
# TESTCASE: test_func_json_object TEST_ID: A048
#-------------------------------------------------------------------------
SELECT json_object(CURRENT_TIMESTAMP:'A') c
FROM test_json_cols;
field name must be a STRING
!error

#-------------------------------------------------------------------------
# TESTCASE: test_func_json_object TEST_ID: A049
#-------------------------------------------------------------------------
SELECT json_object(KEY c1 value 'A') c
FROM test_json_cols;
field name must be a STRING
!error

