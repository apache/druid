!set useApproximateCountDistinct false
!use druidtest://?componentSupplier=StandardMSQComponentSupplier&datasets=sql/src/test/quidem/qatests/qaJsonCols/funcs_and_sql
!set outputformat mysql
#-------------------------------------------------------------------------
# TESTCASE: test_func_json_value TEST_ID: A050
#-------------------------------------------------------------------------
SELECT count(*) c
FROM test_json_cols
WHERE json_value(c_empty_obj_nested, '$.o1') IS NOT NULL;
+---+
| c |
+---+
| 0 |
+---+
(1 row)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_func_json_value TEST_ID: A051
#-------------------------------------------------------------------------
SELECT DISTINCT json_value(c_empty_obj_nested, '$.o2') c
FROM test_json_cols;
+---+
| c |
+---+
|   |
+---+
(1 row)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_func_json_value TEST_ID: A052
#-------------------------------------------------------------------------
SELECT DISTINCT json_value(c_empty_obj_nested, '$.o2') c
FROM test_json_cols;
+---+
| c |
+---+
|   |
+---+
(1 row)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_func_json_value TEST_ID: A053
#-------------------------------------------------------------------------
SELECT count(*) c
FROM test_json_cols
WHERE json_value(c_empty_obj_nested, '$.o2') IS NULL;
+---+
| c |
+---+
| 2 |
+---+
(1 row)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_func_json_value TEST_ID: A054
#-------------------------------------------------------------------------
SELECT count(*) c
FROM test_json_cols
WHERE json_value(c_empty_obj_nested, '$.o2') IS NOT NULL;
+---+
| c |
+---+
| 2 |
+---+
(1 row)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_func_json_value TEST_ID: A055
#-------------------------------------------------------------------------
SELECT DISTINCT json_value(c_empty_obj_nested, '$.o3') c
FROM test_json_cols;
+---+
| c |
+---+
|   |
+---+
(1 row)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_func_json_value TEST_ID: A056
#-------------------------------------------------------------------------
SELECT count(*) c
FROM test_json_cols
WHERE json_value(c_empty_obj_nested, '$.o3') IS NULL;
+---+
| c |
+---+
| 4 |
+---+
(1 row)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_func_json_value TEST_ID: A057
#-------------------------------------------------------------------------
SELECT count(*) c
FROM test_json_cols
WHERE json_value(c_empty_obj_nested, '$.o3') IS NOT NULL;
+---+
| c |
+---+
| 0 |
+---+
(1 row)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_func_json_value TEST_ID: A058
#-------------------------------------------------------------------------
SELECT DISTINCT json_value(c_empty_array_nested, '$[0]') c
FROM test_json_cols;
+---+
| c |
+---+
|   |
+---+
(1 row)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_func_json_value TEST_ID: A059
#-------------------------------------------------------------------------
SELECT count(*) c
FROM test_json_cols
WHERE json_value(c_empty_array_nested, '$[0]') IS NULL;
+---+
| c |
+---+
| 4 |
+---+
(1 row)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_func_json_value TEST_ID: A060
#-------------------------------------------------------------------------
SELECT count(*) c
FROM test_json_cols
WHERE json_value(c_empty_array_nested, '$[0]') IS NOT NULL;
+---+
| c |
+---+
| 0 |
+---+
(1 row)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_func_json_value TEST_ID: A061
#-------------------------------------------------------------------------
SELECT DISTINCT json_value(c_empty_array_nested, '$[1]') c
FROM test_json_cols;
+---+
| c |
+---+
|   |
+---+
(1 row)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_func_json_value TEST_ID: A062
#-------------------------------------------------------------------------
SELECT DISTINCT json_value(c_empty_array_nested, '$[1]') c
FROM test_json_cols;
+---+
| c |
+---+
|   |
+---+
(1 row)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_func_json_value TEST_ID: A063
#-------------------------------------------------------------------------
SELECT count(*) c
FROM test_json_cols
WHERE json_value(c_empty_array_nested, '$[1]') IS NULL;
+---+
| c |
+---+
| 2 |
+---+
(1 row)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_func_json_value TEST_ID: A064
#-------------------------------------------------------------------------
SELECT count(*) c
FROM test_json_cols
WHERE json_value(c_empty_array_nested, '$[1]') IS NOT NULL;
+---+
| c |
+---+
| 2 |
+---+
(1 row)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_func_json_value TEST_ID: A065
#-------------------------------------------------------------------------
SELECT DISTINCT json_value(c_empty_array_nested, '$[2]') c
FROM test_json_cols;
+---+
| c |
+---+
|   |
+---+
(1 row)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_func_json_value TEST_ID: A066
#-------------------------------------------------------------------------
SELECT count(*) c
FROM test_json_cols
WHERE json_value(c_empty_array_nested, '$[2]') IS NULL;
+---+
| c |
+---+
| 4 |
+---+
(1 row)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_func_json_value TEST_ID: A067
#-------------------------------------------------------------------------
SELECT count(*) c
FROM test_json_cols
WHERE json_value(c_empty_array_nested, '$[2]') IS NOT NULL;
+---+
| c |
+---+
| 0 |
+---+
(1 row)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_func_json_value TEST_ID: A068
#-------------------------------------------------------------------------
SELECT count(*) c
FROM test_json_cols
WHERE json_value(c1, '$.does.not.exist') IS NULL;
+---+
| c |
+---+
| 4 |
+---+
(1 row)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_func_json_value TEST_ID: A069
#-------------------------------------------------------------------------
SELECT count(*) c
FROM test_json_cols
WHERE json_value(c_empty_obj_nested, '$.') IS NULL;
+---+
| c |
+---+
| 4 |
+---+
(1 row)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_func_json_value TEST_ID: A070
#-------------------------------------------------------------------------
SELECT count(*) c
FROM test_json_cols
WHERE json_value(c_empty_array_nested, '$.') IS NULL;
+---+
| c |
+---+
| 4 |
+---+
(1 row)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_func_json_value TEST_ID: A071
#-------------------------------------------------------------------------
SELECT count(*) c
FROM test_json_cols
WHERE json_value(c1, '$.a_obj') IS NULL;
+---+
| c |
+---+
| 4 |
+---+
(1 row)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_func_json_value TEST_ID: A072
#-------------------------------------------------------------------------
SELECT count(*) c
FROM test_json_cols
WHERE json_value(c1, '$.a_array[0]') IS NULL;
+---+
| c |
+---+
| 4 |
+---+
(1 row)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_func_json_value TEST_ID: A073
#-------------------------------------------------------------------------
SELECT count(*) c
FROM test_json_cols
WHERE json_value(c1, '$.a_array[0,1]') IS NULL;
QueryInterruptedException
!error

#-------------------------------------------------------------------------
# TESTCASE: test_func_json_value TEST_ID: A074
#-------------------------------------------------------------------------
SELECT count(*) c
FROM test_json_cols
WHERE json_value(c1, '$.a_array[0:2]') IS NULL;
QueryInterruptedException
!error

#-------------------------------------------------------------------------
# TESTCASE: test_func_json_value TEST_ID: A075
#-------------------------------------------------------------------------
SELECT count(*) c
FROM test_json_cols
WHERE json_value(c1, '$.a_array[:2]') IS NULL;
QueryInterruptedException
!error

#-------------------------------------------------------------------------
# TESTCASE: test_func_json_value TEST_ID: A076
#-------------------------------------------------------------------------
SELECT count(*) c
FROM test_json_cols
WHERE json_value(c1, '$.a_array[0:]') IS NULL;
QueryInterruptedException
!error

#-------------------------------------------------------------------------
# TESTCASE: test_func_json_value TEST_ID: A077
#-------------------------------------------------------------------------
SELECT count(*) c
FROM test_json_cols
WHERE json_value(c1, '$.a_array[-1].a_str') IS NULL;
+---+
| c |
+---+
| 4 |
+---+
(1 row)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_func_json_value TEST_ID: A078
#-------------------------------------------------------------------------
SELECT count(*) c
FROM test_json_cols
WHERE json_value(c1, '$.a_array[-2].a_str') IS NULL;
+---+
| c |
+---+
| 4 |
+---+
(1 row)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_func_json_value TEST_ID: A079
#-------------------------------------------------------------------------
SELECT count(*) c
FROM test_json_cols
WHERE json_value(c1, '$.a_array[-1234567890].a_str') IS NULL;
+---+
| c |
+---+
| 4 |
+---+
(1 row)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_func_json_value TEST_ID: A080
#-------------------------------------------------------------------------
SELECT count(*) c
FROM test_json_cols
WHERE json_value(c1, '$.a_array[0].a_str.length()') IS NULL;
+---+
| c |
+---+
| 4 |
+---+
(1 row)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_func_json_value TEST_ID: A081
#-------------------------------------------------------------------------
SELECT count(*) c
FROM test_json_cols
WHERE json_value(c1, '$.a_array[0].a_str') = 'A';
+---+
| c |
+---+
| 2 |
+---+
(1 row)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_func_json_value TEST_ID: A082
#-------------------------------------------------------------------------
SELECT count(*) c
FROM test_json_cols
WHERE json_value(c1, '$.a_array[1].a_str') = 'A';
+---+
| c |
+---+
| 2 |
+---+
(1 row)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_func_json_value TEST_ID: A083
#-------------------------------------------------------------------------
SELECT count(*) c
FROM test_json_cols
WHERE json_value(c1, '$.a_array[2].a_str') IS NULL;
+---+
| c |
+---+
| 4 |
+---+
(1 row)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_func_json_value TEST_ID: A084
#-------------------------------------------------------------------------
SELECT count(*) c
FROM test_json_cols
WHERE json_value(c1, '$.a_array[1234567890].a_str') IS NULL;
+---+
| c |
+---+
| 4 |
+---+
(1 row)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_func_json_value TEST_ID: A085
#-------------------------------------------------------------------------
SELECT count(*) c
FROM test_json_cols
WHERE json_value(c1, '$.a_empty_obj') IS NULL;
+---+
| c |
+---+
| 4 |
+---+
(1 row)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_func_json_value TEST_ID: A086
#-------------------------------------------------------------------------
SELECT count(*) c
FROM test_json_cols
WHERE json_value(c1, '$.a_empty_array') IS NULL;
+---+
| c |
+---+
| 2 |
+---+
(1 row)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_func_json_value TEST_ID: A087
#-------------------------------------------------------------------------
SELECT count(*) c
FROM test_json_cols
WHERE json_value(c1, '$.a_empty_obj_nested.o1') IS NULL;
+---+
| c |
+---+
| 4 |
+---+
(1 row)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_func_json_value TEST_ID: A088
#-------------------------------------------------------------------------
SELECT count(*) c
FROM test_json_cols
WHERE json_value(c1, '$.a_empty_obj_nested.o2') IS NULL;
+---+
| c |
+---+
| 2 |
+---+
(1 row)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_func_json_value TEST_ID: A089
#-------------------------------------------------------------------------
SELECT count(*) c
FROM test_json_cols
WHERE json_value(c1, '$.a_empty_obj_nested.o3') IS NULL;
+---+
| c |
+---+
| 4 |
+---+
(1 row)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_func_json_value TEST_ID: A090
#-------------------------------------------------------------------------
SELECT count(*) c
FROM test_json_cols
WHERE json_value(c1, '$.a_empty_array_nested[0]') IS NULL;
+---+
| c |
+---+
| 4 |
+---+
(1 row)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_func_json_value TEST_ID: A091
#-------------------------------------------------------------------------
SELECT count(*) c
FROM test_json_cols
WHERE json_value(c1, '$.a_empty_array_nested[1]') IS NULL;
+---+
| c |
+---+
| 2 |
+---+
(1 row)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_func_json_value TEST_ID: A092
#-------------------------------------------------------------------------
SELECT count(*) c
FROM test_json_cols
WHERE json_value(c1, '$.a_empty_array_nested[2]') IS NULL;
+---+
| c |
+---+
| 4 |
+---+
(1 row)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_func_json_value TEST_ID: A093
#-------------------------------------------------------------------------
SELECT count(*) c
FROM test_json_cols
WHERE json_value(c1, '$.a_obj.a_str') = 'A';
+---+
| c |
+---+
| 2 |
+---+
(1 row)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_func_json_value TEST_ID: A094
#-------------------------------------------------------------------------
SELECT json_value(s_str, '$') c
FROM test_json_cols;
+---+
| c |
+---+
| A |
| A |
|   |
|   |
+---+
(4 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_func_json_value TEST_ID: A095
#-------------------------------------------------------------------------
SELECT json_value(c1, '$.a_str') c
FROM test_json_cols;
+---+
| c |
+---+
| A |
| A |
|   |
|   |
+---+
(4 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_func_json_value TEST_ID: A096
#-------------------------------------------------------------------------
SELECT json_value(c1, '$.a_obj.a_str') c
FROM test_json_cols;
+---+
| c |
+---+
| A |
| A |
|   |
|   |
+---+
(4 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_func_json_value TEST_ID: A097
#-------------------------------------------------------------------------
SELECT json_value(c1, '$.a_array[0].a_str') c
FROM test_json_cols;
+---+
| c |
+---+
| A |
| A |
|   |
|   |
+---+
(4 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_func_json_value TEST_ID: A098
#-------------------------------------------------------------------------
SELECT json_value(s_str, '$' RETURNING bigint) c
FROM test_json_cols;
+---+
| c |
+---+
|   |
|   |
|   |
|   |
+---+
(4 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_func_json_value TEST_ID: A099
#-------------------------------------------------------------------------
SELECT json_value(c1, '$.a_str' RETURNING bigint) c
FROM test_json_cols;
+---+
| c |
+---+
|   |
|   |
|   |
|   |
+---+
(4 rows)

!ok

