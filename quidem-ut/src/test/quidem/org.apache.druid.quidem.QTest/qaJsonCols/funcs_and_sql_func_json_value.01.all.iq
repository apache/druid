!set useApproximateCountDistinct false
!use druidtest://?componentSupplier=AllDruidEnginesComponentSupplier&datasets=sql/src/test/quidem/qatests/qaJsonCols/funcs_and_sql
!set outputformat mysql
#-------------------------------------------------------------------------
# TESTCASE: test_func_json_value TEST_ID: SEL_DATASOURCE
#-------------------------------------------------------------------------
SELECT count(*) cnt
FROM test_json_cols;
+-----+
| cnt |
+-----+
|   4 |
+-----+
(1 row)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_func_json_value TEST_ID: A001
#-------------------------------------------------------------------------
SELECT json_value(__time, '$') c
FROM test_json_cols;
+---------------+
| c             |
+---------------+
| 1640995200000 |
| 1640995200000 |
| 1643673600000 |
| 1643673600000 |
+---------------+
(4 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_func_json_value TEST_ID: A002
#-------------------------------------------------------------------------
SELECT count(*) c
FROM test_json_cols
WHERE json_value(__time, '$' RETURNING bigint) = 1640995200000;
+---+
| c |
+---+
| 2 |
+---+
(1 row)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_func_json_value TEST_ID: A003
#-------------------------------------------------------------------------
SELECT count(*) c
FROM test_json_cols
WHERE json_value(__time, '$' RETURNING bigint) <> 1640995200000;
+---+
| c |
+---+
| 2 |
+---+
(1 row)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_func_json_value TEST_ID: A004
#-------------------------------------------------------------------------
SELECT count(*) c
FROM test_json_cols
WHERE json_value(__time, '$') IS NOT NULL;
+---+
| c |
+---+
| 4 |
+---+
(1 row)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_func_json_value TEST_ID: A005
#-------------------------------------------------------------------------
SELECT count(*) c
FROM test_json_cols
WHERE json_value(__time, '$') IS NULL;
+---+
| c |
+---+
| 0 |
+---+
(1 row)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_func_json_value TEST_ID: A006
#-------------------------------------------------------------------------
SELECT json_value('ABCD', '$' RETURNING CHAR) c
FROM test_json_cols;
+------+
| c    |
+------+
| ABCD |
| ABCD |
| ABCD |
| ABCD |
+------+
(4 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_func_json_value TEST_ID: A007
#-------------------------------------------------------------------------
SELECT count(*) c
FROM test_json_cols
WHERE json_value('ABCD', '$' RETURNING CHAR) = 'ABCD';
+---+
| c |
+---+
| 4 |
+---+
(1 row)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_func_json_value TEST_ID: A008
#-------------------------------------------------------------------------
SELECT count(*) c
FROM test_json_cols
WHERE json_value('ABCD', '$' RETURNING CHAR) <> 'ABCD';
+---+
| c |
+---+
| 0 |
+---+
(1 row)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_func_json_value TEST_ID: A009
#-------------------------------------------------------------------------
SELECT count(*) c
FROM test_json_cols
WHERE json_value('ABCD', '$' RETURNING CHAR) IS NOT NULL;
+---+
| c |
+---+
| 4 |
+---+
(1 row)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_func_json_value TEST_ID: A010
#-------------------------------------------------------------------------
SELECT count(*) c
FROM test_json_cols
WHERE json_value('ABCD', '$' RETURNING CHAR) IS NULL;
+---+
| c |
+---+
| 0 |
+---+
(1 row)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_func_json_value TEST_ID: A011
#-------------------------------------------------------------------------
SELECT json_value(s_str, '$' RETURNING CHAR) c
FROM test_json_cols;
+---+
| c |
+---+
| A |
| A |
|   |
|   |
+---+
(4 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_func_json_value TEST_ID: A012
#-------------------------------------------------------------------------
SELECT count(*) c
FROM test_json_cols
WHERE json_value(s_str, '$' RETURNING CHAR) = 'A';
+---+
| c |
+---+
| 2 |
+---+
(1 row)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_func_json_value TEST_ID: A013
#-------------------------------------------------------------------------
SELECT count(*) c
FROM test_json_cols
WHERE json_value(s_str, '$' RETURNING CHAR) <> 'A';
+---+
| c |
+---+
| 0 |
+---+
(1 row)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_func_json_value TEST_ID: A014
#-------------------------------------------------------------------------
SELECT count(*) c
FROM test_json_cols
WHERE json_value(s_str, '$' RETURNING CHAR) IS NOT NULL;
+---+
| c |
+---+
| 2 |
+---+
(1 row)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_func_json_value TEST_ID: A015
#-------------------------------------------------------------------------
SELECT count(*) c
FROM test_json_cols
WHERE json_value(s_str, '$' RETURNING CHAR) IS NULL;
+---+
| c |
+---+
| 2 |
+---+
(1 row)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_func_json_value TEST_ID: A016
#-------------------------------------------------------------------------
SELECT json_value(1234, '$' RETURNING int) c
FROM test_json_cols;
+------+
| c    |
+------+
| 1234 |
| 1234 |
| 1234 |
| 1234 |
+------+
(4 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_func_json_value TEST_ID: A017
#-------------------------------------------------------------------------
SELECT count(*) c
FROM test_json_cols
WHERE json_value(1234, '$') = 1234;
+---+
| c |
+---+
| 4 |
+---+
(1 row)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_func_json_value TEST_ID: A018
#-------------------------------------------------------------------------
SELECT count(*) c
FROM test_json_cols
WHERE json_value(1234, '$') <> 1234;
+---+
| c |
+---+
| 0 |
+---+
(1 row)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_func_json_value TEST_ID: A019
#-------------------------------------------------------------------------
SELECT count(*) c
FROM test_json_cols
WHERE json_value(1234, '$') IS NOT NULL;
+---+
| c |
+---+
| 4 |
+---+
(1 row)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_func_json_value TEST_ID: A020
#-------------------------------------------------------------------------
SELECT count(*) c
FROM test_json_cols
WHERE json_value(1234, '$') IS NULL;
+---+
| c |
+---+
| 0 |
+---+
(1 row)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_func_json_value TEST_ID: A021
#-------------------------------------------------------------------------
SELECT json_value(s_num_int, '$' RETURNING int) c
FROM test_json_cols;
+---+
| c |
+---+
| 1 |
| 1 |
|   |
|   |
+---+
(4 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_func_json_value TEST_ID: A022
#-------------------------------------------------------------------------
SELECT count(*) c
FROM test_json_cols
WHERE json_value(s_num_int, '$' RETURNING int) = 1;
+---+
| c |
+---+
| 2 |
+---+
(1 row)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_func_json_value TEST_ID: A023
#-------------------------------------------------------------------------
SELECT count(*) c
FROM test_json_cols
WHERE json_value(s_num_int, '$' RETURNING int) <> 1;
+---+
| c |
+---+
| 0 |
+---+
(1 row)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_func_json_value TEST_ID: A024
#-------------------------------------------------------------------------
SELECT count(*) c
FROM test_json_cols
WHERE json_value(s_num_int, '$' RETURNING int) IS NOT NULL;
+---+
| c |
+---+
| 2 |
+---+
(1 row)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_func_json_value TEST_ID: A025
#-------------------------------------------------------------------------
SELECT count(*) c
FROM test_json_cols
WHERE json_value(s_num_int, '$' RETURNING int) IS NULL;
+---+
| c |
+---+
| 2 |
+---+
(1 row)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_func_json_value TEST_ID: A026
#-------------------------------------------------------------------------
SELECT json_value(1234.5678, '$' RETURNING DOUBLE) c
FROM test_json_cols;
+-----------+
| c         |
+-----------+
| 1234.5678 |
| 1234.5678 |
| 1234.5678 |
| 1234.5678 |
+-----------+
(4 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_func_json_value TEST_ID: A027
#-------------------------------------------------------------------------
SELECT count(*) c
FROM test_json_cols
WHERE json_value(1234.5678, '$' RETURNING DOUBLE) = 1234.5678;
+---+
| c |
+---+
| 4 |
+---+
(1 row)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_func_json_value TEST_ID: A028
#-------------------------------------------------------------------------
SELECT count(*) c
FROM test_json_cols
WHERE json_value(1234.5678, '$' RETURNING DOUBLE) <> 1234.5678;
+---+
| c |
+---+
| 0 |
+---+
(1 row)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_func_json_value TEST_ID: A029
#-------------------------------------------------------------------------
SELECT count(*) c
FROM test_json_cols
WHERE json_value(1234.5678, '$' RETURNING DOUBLE) IS NOT NULL;
+---+
| c |
+---+
| 4 |
+---+
(1 row)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_func_json_value TEST_ID: A030
#-------------------------------------------------------------------------
SELECT count(*) c
FROM test_json_cols
WHERE json_value(1234.5678, '$' RETURNING DOUBLE) IS NULL;
+---+
| c |
+---+
| 0 |
+---+
(1 row)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_func_json_value TEST_ID: A031
#-------------------------------------------------------------------------
SELECT json_value(s_num_float, '$' RETURNING DOUBLE) c
FROM test_json_cols;
+-----+
| c   |
+-----+
| 0.1 |
| 0.1 |
|     |
|     |
+-----+
(4 rows)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_func_json_value TEST_ID: A032
#-------------------------------------------------------------------------
SELECT count(*) c
FROM test_json_cols
WHERE json_value(s_num_float, '$' RETURNING DOUBLE) = 0.1;
+---+
| c |
+---+
| 2 |
+---+
(1 row)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_func_json_value TEST_ID: A033
#-------------------------------------------------------------------------
SELECT count(*) c
FROM test_json_cols
WHERE json_value(s_num_float, '$' RETURNING DOUBLE) <> 0.1;
+---+
| c |
+---+
| 0 |
+---+
(1 row)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_func_json_value TEST_ID: A034
#-------------------------------------------------------------------------
SELECT count(*) c
FROM test_json_cols
WHERE json_value(s_num_float, '$' RETURNING DOUBLE) IS NOT NULL;
+---+
| c |
+---+
| 2 |
+---+
(1 row)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_func_json_value TEST_ID: A035
#-------------------------------------------------------------------------
SELECT count(*) c
FROM test_json_cols
WHERE json_value(s_num_float, '$' RETURNING DOUBLE) IS NULL;
+---+
| c |
+---+
| 2 |
+---+
(1 row)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_func_json_value TEST_ID: A036
#-------------------------------------------------------------------------
SELECT DISTINCT json_value(NULL, '$') c
FROM test_json_cols;
+---+
| c |
+---+
|   |
+---+
(1 row)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_func_json_value TEST_ID: A037
#-------------------------------------------------------------------------
SELECT count(*) c
FROM test_json_cols
WHERE json_value(NULL, '$') IS NULL;
+---+
| c |
+---+
| 4 |
+---+
(1 row)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_func_json_value TEST_ID: A038
#-------------------------------------------------------------------------
SELECT count(*) c
FROM test_json_cols
WHERE json_value(NULL, '$') IS NOT NULL;
+---+
| c |
+---+
| 0 |
+---+
(1 row)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_func_json_value TEST_ID: A039
#-------------------------------------------------------------------------
SELECT DISTINCT json_value(s_null, '$') c
FROM test_json_cols;
+---+
| c |
+---+
|   |
+---+
(1 row)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_func_json_value TEST_ID: A040
#-------------------------------------------------------------------------
SELECT count(*) c
FROM test_json_cols
WHERE json_value(s_null, '$') IS NULL;
+---+
| c |
+---+
| 4 |
+---+
(1 row)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_func_json_value TEST_ID: A041
#-------------------------------------------------------------------------
SELECT count(*) c
FROM test_json_cols
WHERE json_value(s_null, '$') IS NOT NULL;
+---+
| c |
+---+
| 0 |
+---+
(1 row)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_func_json_value TEST_ID: A042
#-------------------------------------------------------------------------
SELECT DISTINCT json_value(c_empty_obj, '$') c
FROM test_json_cols;
+---+
| c |
+---+
|   |
+---+
(1 row)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_func_json_value TEST_ID: A043
#-------------------------------------------------------------------------
SELECT count(*) c
FROM test_json_cols
WHERE json_value(c_empty_obj, '$') IS NULL;
+---+
| c |
+---+
| 4 |
+---+
(1 row)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_func_json_value TEST_ID: A044
#-------------------------------------------------------------------------
SELECT count(*) c
FROM test_json_cols
WHERE json_value(c_empty_obj, '$') IS NOT NULL;
+---+
| c |
+---+
| 0 |
+---+
(1 row)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_func_json_value TEST_ID: A045
#-------------------------------------------------------------------------
SELECT DISTINCT json_value(c_empty_array, '$') c
FROM test_json_cols;
+---+
| c |
+---+
|   |
+---+
(1 row)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_func_json_value TEST_ID: A046
#-------------------------------------------------------------------------
SELECT count(*) c
FROM test_json_cols
WHERE json_value(c_empty_array, '$') IS NULL;
+---+
| c |
+---+
| 2 |
+---+
(1 row)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_func_json_value TEST_ID: A047
#-------------------------------------------------------------------------
SELECT count(*) c
FROM test_json_cols
WHERE json_value(c_empty_array, '$') IS NOT NULL;
+---+
| c |
+---+
| 2 |
+---+
(1 row)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_func_json_value TEST_ID: A048
#-------------------------------------------------------------------------
SELECT DISTINCT json_value(c_empty_obj_nested, '$.o1') c
FROM test_json_cols;
+---+
| c |
+---+
|   |
+---+
(1 row)

!ok

#-------------------------------------------------------------------------
# TESTCASE: test_func_json_value TEST_ID: A049
#-------------------------------------------------------------------------
SELECT count(*) c
FROM test_json_cols
WHERE json_value(c_empty_obj_nested, '$.o1') IS NULL;
+---+
| c |
+---+
| 4 |
+---+
(1 row)

!ok

