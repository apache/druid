/*
 * Licensed to the Apache Software Foundation (ASF) under one
 * or more contributor license agreements.  See the NOTICE file
 * distributed with this work for additional information
 * regarding copyright ownership.  The ASF licenses this file
 * to you under the Apache License, Version 2.0 (the
 * "License"); you may not use this file except in compliance
 * with the License.  You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing,
 * software distributed under the License is distributed on an
 * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 * KIND, either express or implied.  See the License for the
 * specific language governing permissions and limitations
 * under the License.
 */

package org.apache.druid.msq.dart.controller.http;

import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.google.common.base.Preconditions;
import org.apache.druid.msq.dart.controller.ControllerHolder;
import org.apache.druid.query.QueryContexts;
import org.joda.time.DateTime;

/**
 * Class included in {@link GetQueriesResponse}.
 */
public class DartQueryInfo
{
  private final String sqlQueryId;
  private final String dartQueryId;
  private final String sql;
  private final String identity;
  private final DateTime startTime;

  @JsonCreator
  public DartQueryInfo(
      @JsonProperty("sqlQueryId") final String sqlQueryId,
      @JsonProperty("dartQueryId") final String dartQueryId,
      @JsonProperty("sql") final String sql,
      @JsonProperty("identity") final String identity,
      @JsonProperty("startTime") final DateTime startTime
  )
  {
    this.sqlQueryId = Preconditions.checkNotNull(sqlQueryId, "sqlQueryId");
    this.dartQueryId = Preconditions.checkNotNull(dartQueryId, "dartQueryId");
    this.sql = sql;
    this.identity = identity;
    this.startTime = startTime;
  }

  public static DartQueryInfo fromControllerHolder(final ControllerHolder holder)
  {
    return new DartQueryInfo(
        holder.getSqlQueryId(),
        holder.getController().queryId(),
        holder.getSql(),
        holder.getIdentity(),
        holder.getStartTime()
    );
  }

  /**
   * The {@link QueryContexts#CTX_SQL_QUERY_ID} provided by the user, or generated by the system.
   */
  @JsonProperty
  public String getSqlQueryId()
  {
    return sqlQueryId;
  }

  /**
   * Dart query ID generated by the system. Globally unique.
   */
  @JsonProperty
  public String getDartQueryId()
  {
    return dartQueryId;
  }

  /**
   * SQL string for this query.
   */
  @JsonProperty
  @JsonInclude(JsonInclude.Include.NON_NULL)
  public String getSql()
  {
    return sql;
  }

  /**
   * User that issued this query.
   */
  @JsonProperty
  @JsonInclude(JsonInclude.Include.NON_NULL)
  public String getIdentity()
  {
    return identity;
  }

  /**
   * Time this query was started.
   */
  @JsonProperty
  @JsonInclude(JsonInclude.Include.NON_NULL)
  public DateTime getStartTime()
  {
    return startTime;
  }
}
