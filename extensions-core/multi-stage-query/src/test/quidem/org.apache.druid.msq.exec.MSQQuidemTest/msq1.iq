!set plannerStrategy DECOUPLED
!use druidtest://?componentSupplier=DrillWindowQueryMSQComponentSupplier
!set outputformat mysql

select cityName, count(case when delta > 0 then channel end) as cnt, count(1) as aall
from wikipedia
where cityName in ('New York', 'Aarhus')
group by 1
order by 1;
+----------+-----+------+
| cityName | cnt | aall |
+----------+-----+------+
| Aarhus   |   0 |    1 |
| New York |   7 |   13 |
+----------+-----+------+
(2 rows)

!ok
[ {
  "stageNumber" : 0,
  "definition" : {
    "id" : "query-04f832a4-d6dd-4b44-b08e-f649b41d411c_0",
    "input" : [ {
      "type" : "table",
      "dataSource" : "wikipedia",
      "intervals" : [ "-146136543-09-08T08:23:32.096Z/146140482-04-24T15:36:27.903Z" ],
      "filter" : {
        "type" : "inType",
        "column" : "cityName",
        "matchValueType" : "STRING",
        "sortedValues" : [ "Aarhus", "New York" ]
      },
      "filterFields" : [ "cityName" ]
    } ],
    "processor" : {
      "type" : "groupByPreShuffle",
      "query" : {
        "queryType" : "groupBy",
        "dataSource" : {
          "type" : "inputNumber",
          "inputNumber" : 0
        },
        "intervals" : {
          "type" : "intervals",
          "intervals" : [ "-146136543-09-08T08:23:32.096Z/146140482-04-24T15:36:27.903Z" ]
        },
        "filter" : {
          "type" : "inType",
          "column" : "cityName",
          "matchValueType" : "STRING",
          "sortedValues" : [ "Aarhus", "New York" ]
        },
        "granularity" : {
          "type" : "all"
        },
        "dimensions" : [ {
          "type" : "default",
          "dimension" : "cityName",
          "outputName" : "d0",
          "outputType" : "STRING"
        } ],
        "aggregations" : [ {
          "type" : "filtered",
          "aggregator" : {
            "type" : "count",
            "name" : "a0"
          },
          "filter" : {
            "type" : "and",
            "fields" : [ {
              "type" : "not",
              "field" : {
                "type" : "null",
                "column" : "channel"
              }
            }, {
              "type" : "range",
              "column" : "delta",
              "matchValueType" : "LONG",
              "lower" : 0,
              "lowerOpen" : true
            } ]
          },
          "name" : "a0"
        }, {
          "type" : "count",
          "name" : "a1"
        } ],
        "limitSpec" : {
          "type" : "NoopLimitSpec"
        },
        "context" : {
          "__user" : null,
          "finalize" : true,
          "maxParseExceptions" : 0,
          "plannerStrategy" : "DECOUPLED",
          "sqlQueryId" : "04f832a4-d6dd-4b44-b08e-f649b41d411c",
          "sqlStringifyArrays" : false
        }
      }
    },
    "signature" : [ {
      "name" : "d0",
      "type" : "STRING"
    }, {
      "name" : "a0",
      "type" : "LONG"
    }, {
      "name" : "a1",
      "type" : "LONG"
    } ],
    "shuffleSpec" : {
      "type" : "maxCount",
      "clusterBy" : {
        "columns" : [ {
          "columnName" : "d0",
          "order" : "ASCENDING"
        } ]
      },
      "partitions" : 1,
      "aggregate" : true
    },
    "maxWorkerCount" : 1
  },
  "phase" : "FINISHED",
  "workerCount" : 1,
  "partitionCount" : 1,
  "shuffle" : "globalSort",
  "output" : "localStorage",
  "startTime" : "2024-07-19T04:29:01.541Z",
  "duration" : 633,
  "sort" : true
}, {
  "stageNumber" : 1,
  "definition" : {
    "id" : "query-04f832a4-d6dd-4b44-b08e-f649b41d411c_1",
    "input" : [ {
      "type" : "stage",
      "stage" : 0
    } ],
    "processor" : {
      "type" : "groupByPostShuffle",
      "query" : {
        "queryType" : "groupBy",
        "dataSource" : {
          "type" : "inputNumber",
          "inputNumber" : 0
        },
        "intervals" : {
          "type" : "intervals",
          "intervals" : [ "-146136543-09-08T08:23:32.096Z/146140482-04-24T15:36:27.903Z" ]
        },
        "filter" : {
          "type" : "inType",
          "column" : "cityName",
          "matchValueType" : "STRING",
          "sortedValues" : [ "Aarhus", "New York" ]
        },
        "granularity" : {
          "type" : "all"
        },
        "dimensions" : [ {
          "type" : "default",
          "dimension" : "cityName",
          "outputName" : "d0",
          "outputType" : "STRING"
        } ],
        "aggregations" : [ {
          "type" : "filtered",
          "aggregator" : {
            "type" : "count",
            "name" : "a0"
          },
          "filter" : {
            "type" : "and",
            "fields" : [ {
              "type" : "not",
              "field" : {
                "type" : "null",
                "column" : "channel"
              }
            }, {
              "type" : "range",
              "column" : "delta",
              "matchValueType" : "LONG",
              "lower" : 0,
              "lowerOpen" : true
            } ]
          },
          "name" : "a0"
        }, {
          "type" : "count",
          "name" : "a1"
        } ],
        "limitSpec" : {
          "type" : "NoopLimitSpec"
        },
        "context" : {
          "__user" : null,
          "finalize" : true,
          "maxParseExceptions" : 0,
          "plannerStrategy" : "DECOUPLED",
          "sqlQueryId" : "04f832a4-d6dd-4b44-b08e-f649b41d411c",
          "sqlStringifyArrays" : false
        }
      }
    },
    "signature" : [ {
      "name" : "d0",
      "type" : "STRING"
    }, {
      "name" : "a0",
      "type" : "LONG"
    }, {
      "name" : "a1",
      "type" : "LONG"
    } ],
    "maxWorkerCount" : 1
  },
  "phase" : "FINISHED",
  "workerCount" : 1,
  "partitionCount" : 1,
  "output" : "localStorage",
  "startTime" : "2024-07-19T04:29:02.173Z",
  "duration" : 2
} ]
!msqPlan
LogicalSort(sort0=[$0], dir0=[ASC])
  LogicalAggregate(group=[{0}], cnt=[COUNT($1)], aall=[COUNT()])
    LogicalProject(cityName=[$2], $f1=[CASE(>($17, 0), $1, null:VARCHAR)])
      LogicalFilter(condition=[OR(=($2, 'New York'), =($2, 'Aarhus'))])
        LogicalTableScan(table=[[druid, wikipedia]])

!convertedPlan
LogicalSort(sort0=[$0], dir0=[ASC])
  LogicalAggregate(group=[{0}], cnt=[COUNT($1) FILTER $2], aall=[COUNT()])
    LogicalProject(cityName=[$2], channel=[$1], $f3=[IS TRUE(>($17, 0))])
      LogicalFilter(condition=[SEARCH($2, Sarg['Aarhus':VARCHAR, 'New York':VARCHAR]:VARCHAR)])
        LogicalTableScan(table=[[druid, wikipedia]])

!logicalPlan
DruidAggregate(group=[{0}], cnt=[COUNT($1) FILTER $2], aall=[COUNT()], druid=[logical])
  DruidProject(cityName=[$2], channel=[$1], $f3=[IS TRUE(>($17, 0))], druid=[logical])
    DruidFilter(condition=[SEARCH($2, Sarg['Aarhus':VARCHAR, 'New York':VARCHAR]:VARCHAR)])
      DruidTableScan(table=[[druid, wikipedia]], druid=[logical])

!druidPlan
{
  "queryType" : "groupBy",
  "dataSource" : {
    "type" : "table",
    "name" : "wikipedia"
  },
  "intervals" : {
    "type" : "intervals",
    "intervals" : [ "-146136543-09-08T08:23:32.096Z/146140482-04-24T15:36:27.903Z" ]
  },
  "filter" : {
    "type" : "inType",
    "column" : "cityName",
    "matchValueType" : "STRING",
    "sortedValues" : [ "Aarhus", "New York" ]
  },
  "granularity" : {
    "type" : "all"
  },
  "dimensions" : [ {
    "type" : "default",
    "dimension" : "cityName",
    "outputName" : "d0",
    "outputType" : "STRING"
  } ],
  "aggregations" : [ {
    "type" : "filtered",
    "aggregator" : {
      "type" : "count",
      "name" : "a0"
    },
    "filter" : {
      "type" : "and",
      "fields" : [ {
        "type" : "not",
        "field" : {
          "type" : "null",
          "column" : "channel"
        }
      }, {
        "type" : "range",
        "column" : "delta",
        "matchValueType" : "LONG",
        "lower" : 0,
        "lowerOpen" : true
      } ]
    },
    "name" : "a0"
  }, {
    "type" : "count",
    "name" : "a1"
  } ],
  "limitSpec" : {
    "type" : "NoopLimitSpec"
  }
}
!nativePlan

