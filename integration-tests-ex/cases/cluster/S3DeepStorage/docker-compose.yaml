# Licensed to the Apache Software Foundation (ASF) under one or more
# contributor license agreements.  See the NOTICE file distributed with
# this work for additional information regarding copyright ownership.
# The ASF licenses this file to You under the Apache License, Version 2.0
# (the "License"); you may not use this file except in compliance with
# the License.  You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

networks:
  druid-it-net:
    name: druid-it-net
    ipam:
      config:
        - subnet: 172.172.172.0/24

services:
  zookeeper:
    extends:
      file: ../Common/dependencies.yaml
      service: zookeeper

  metadata:
    extends:
      file: ../Common/dependencies.yaml
      service: metadata

  coordinator:
    extends:
      file: ../Common/druid.yaml
      service: coordinator
    container_name: coordinator
    environment:
      - DRUID_INTEGRATION_TEST_GROUP=${DRUID_INTEGRATION_TEST_GROUP}
      # The frequency with which the coordinator polls the database
      # for changes. The DB population code has to wait at least this
      # long for the coordinator to notice changes.
      - druid_manager_segments_pollDuration=PT5S
      - druid_coordinator_period=PT10S
      - AWS_REGION=${AWS_REGION}
      - druid_s3_accessKey=${AWS_ACCESS_KEY_ID}
      - druid_s3_secretKey=${AWS_SECRET_ACCESS_KEY}
    depends_on:
      - zookeeper
      - metadata

  overlord:
    extends:
      file: ../Common/druid.yaml
      service: overlord
    container_name: overlord
    environment:
      - DRUID_INTEGRATION_TEST_GROUP=${DRUID_INTEGRATION_TEST_GROUP}
      - AWS_REGION=${AWS_REGION}
      - druid_s3_accessKey=${AWS_ACCESS_KEY_ID}
      - druid_s3_secretKey=${AWS_SECRET_ACCESS_KEY}
    depends_on:
      - zookeeper
      - metadata

  broker:
    extends:
      file: ../Common/druid.yaml
      service: broker
    environment:
      - DRUID_INTEGRATION_TEST_GROUP=${DRUID_INTEGRATION_TEST_GROUP}
      - AWS_REGION=${AWS_REGION}
      - druid_s3_accessKey=${AWS_ACCESS_KEY_ID}
      - druid_s3_secretKey=${AWS_SECRET_ACCESS_KEY}
    depends_on:
      - zookeeper

  router:
    extends:
      file: ../Common/druid.yaml
      service: router
    environment:
      - DRUID_INTEGRATION_TEST_GROUP=${DRUID_INTEGRATION_TEST_GROUP}
      - AWS_REGION=${AWS_REGION}
      - druid_s3_accessKey=${AWS_ACCESS_KEY_ID}
      - druid_s3_secretKey=${AWS_SECRET_ACCESS_KEY}
    depends_on:
      - zookeeper

  historical:
    extends:
      file: ../Common/druid.yaml
      service: historical
    environment:
      - DRUID_INTEGRATION_TEST_GROUP=${DRUID_INTEGRATION_TEST_GROUP}
      - AWS_REGION=${AWS_REGION}
      - druid_s3_accessKey=${AWS_ACCESS_KEY_ID}
      - druid_s3_secretKey=${AWS_SECRET_ACCESS_KEY}
    depends_on:
      - zookeeper

  indexer:
    extends:
      file: ../Common/druid.yaml
      service: indexer
    environment:
      - DRUID_INTEGRATION_TEST_GROUP=${DRUID_INTEGRATION_TEST_GROUP}
      - druid_storage_type=s3
      - druid_storage_bucket=${DRUID_CLOUD_BUCKET}
      # Using DRUID_CLOUD_PATH env as baseKey as well.
      - druid_storage_baseKey=${DRUID_CLOUD_PATH}
      - druid_s3_accessKey=${AWS_ACCESS_KEY_ID}
      - druid_s3_secretKey=${AWS_SECRET_ACCESS_KEY}
      - AWS_REGION=${AWS_REGION}
    volumes:
      # Test data
      - ../data:/resources
    depends_on:
      - zookeeper
