// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`tasks view matches snapshot 1`] = `
<Fragment>
  <t
    customClassName="tasks-view app-view"
    onDragEnd={null}
    onDragStart={null}
    onSecondaryPaneSizeChange={[Function]}
    percentage={true}
    primaryIndex={0}
    primaryMinSize={30}
    secondaryInitialSize={60}
    secondaryMinSize={30}
    vertical={true}
  >
    <div
      className="top-pane"
    >
      <ViewControlBar
        label="Supervisors"
      >
        <RefreshButton
          localStorageKey="supervisors-refresh-rate"
          onRefresh={[Function]}
        />
        <Blueprint3.Popover
          boundary="scrollParent"
          captureDismiss={false}
          content={
            <Blueprint3.Menu>
              <Blueprint3.MenuItem
                disabled={false}
                icon="cloud-upload"
                multiline={false}
                onClick={[Function]}
                popoverProps={Object {}}
                shouldDismissPopover={true}
                text="Go to data loader"
              />
              <Blueprint3.MenuItem
                disabled={false}
                icon="manually-entered-data"
                multiline={false}
                onClick={[Function]}
                popoverProps={Object {}}
                shouldDismissPopover={true}
                text="Submit JSON supervisor"
              />
            </Blueprint3.Menu>
          }
          defaultIsOpen={false}
          disabled={false}
          hasBackdrop={false}
          hoverCloseDelay={300}
          hoverOpenDelay={150}
          inheritDarkTheme={true}
          interactionKind="click"
          minimal={false}
          modifiers={Object {}}
          openOnTargetFocus={true}
          position="bottom-left"
          targetTagName="span"
          transitionDuration={300}
          usePortal={true}
          wrapperTagName="span"
        >
          <Blueprint3.Button
            icon="plus"
            text="Submit supervisor"
          />
        </Blueprint3.Popover>
        <Blueprint3.Popover
          boundary="scrollParent"
          captureDismiss={false}
          content={
            <Blueprint3.Menu>
              <Blueprint3.MenuItem
                disabled={false}
                icon="play"
                multiline={false}
                onClick={[Function]}
                popoverProps={Object {}}
                shouldDismissPopover={true}
                text="Resume all supervisors"
              />
              <Blueprint3.MenuItem
                disabled={false}
                icon="pause"
                multiline={false}
                onClick={[Function]}
                popoverProps={Object {}}
                shouldDismissPopover={true}
                text="Suspend all supervisors"
              />
              <Blueprint3.MenuItem
                disabled={false}
                icon="cross"
                intent="danger"
                multiline={false}
                onClick={[Function]}
                popoverProps={Object {}}
                shouldDismissPopover={true}
                text="Terminate all supervisors"
              />
            </Blueprint3.Menu>
          }
          defaultIsOpen={false}
          disabled={false}
          hasBackdrop={false}
          hoverCloseDelay={300}
          hoverOpenDelay={150}
          inheritDarkTheme={true}
          interactionKind="click"
          minimal={false}
          modifiers={Object {}}
          openOnTargetFocus={true}
          position="bottom-left"
          targetTagName="span"
          transitionDuration={300}
          usePortal={true}
          wrapperTagName="span"
        >
          <Blueprint3.Button
            icon="more"
          />
        </Blueprint3.Popover>
        <TableColumnSelector
          columns={
            Array [
              "Datasource",
              "Type",
              "Topic/Stream",
              "Status",
              "Actions",
            ]
          }
          onChange={[Function]}
          tableColumnsHidden={Array []}
        />
      </ViewControlBar>
      <ReactTable
        AggregatedComponent={[Function]}
        ExpanderComponent={[Function]}
        FilterComponent={[Function]}
        LoadingComponent={[Function]}
        NoDataComponent={[Function]}
        PadRowComponent={[Function]}
        PaginationComponent={[Function]}
        PivotValueComponent={[Function]}
        ResizerComponent={[Function]}
        TableComponent={[Function]}
        TbodyComponent={[Function]}
        TdComponent={[Function]}
        TfootComponent={[Function]}
        ThComponent={[Function]}
        TheadComponent={[Function]}
        TrComponent={[Function]}
        TrGroupComponent={[Function]}
        aggregatedKey="_aggregated"
        className=""
        collapseOnDataChange={true}
        collapseOnPageChange={true}
        collapseOnSortingChange={true}
        column={
          Object {
            "Aggregated": undefined,
            "Cell": undefined,
            "Expander": undefined,
            "Filter": undefined,
            "Footer": undefined,
            "Header": undefined,
            "Pivot": undefined,
            "PivotValue": undefined,
            "Placeholder": undefined,
            "aggregate": undefined,
            "className": "",
            "filterAll": false,
            "filterMethod": undefined,
            "filterable": undefined,
            "footerClassName": "",
            "footerStyle": Object {},
            "getFooterProps": [Function],
            "getHeaderProps": [Function],
            "getProps": [Function],
            "headerClassName": "",
            "headerStyle": Object {},
            "minResizeWidth": 11,
            "minWidth": 100,
            "resizable": undefined,
            "show": true,
            "sortMethod": undefined,
            "sortable": undefined,
            "style": Object {},
          }
        }
        columns={
          Array [
            Object {
              "Header": "Datasource",
              "accessor": "id",
              "id": "datasource",
              "show": true,
              "width": 300,
            },
            Object {
              "Header": "Type",
              "accessor": [Function],
              "id": "type",
              "show": true,
            },
            Object {
              "Header": "Topic/Stream",
              "accessor": [Function],
              "id": "topic",
              "show": true,
            },
            Object {
              "Cell": [Function],
              "Header": "Status",
              "accessor": [Function],
              "id": "status",
              "show": true,
              "width": 300,
            },
            Object {
              "Cell": [Function],
              "Header": "Actions",
              "accessor": "id",
              "filterable": false,
              "id": "actions",
              "show": true,
              "width": 70,
            },
          ]
        }
        data={Array []}
        defaultExpanded={Object {}}
        defaultFilterMethod={[Function]}
        defaultFiltered={Array []}
        defaultPage={0}
        defaultPageSize={20}
        defaultResized={Array []}
        defaultSortDesc={false}
        defaultSortMethod={[Function]}
        defaultSorted={Array []}
        expanderDefaults={
          Object {
            "filterable": false,
            "resizable": false,
            "sortable": false,
            "width": 35,
          }
        }
        filterable={true}
        freezeWhenExpanded={false}
        getLoadingProps={[Function]}
        getNoDataProps={[Function]}
        getPaginationProps={[Function]}
        getProps={[Function]}
        getResizerProps={[Function]}
        getTableProps={[Function]}
        getTbodyProps={[Function]}
        getTdProps={[Function]}
        getTfootProps={[Function]}
        getTfootTdProps={[Function]}
        getTfootTrProps={[Function]}
        getTheadFilterProps={[Function]}
        getTheadFilterThProps={[Function]}
        getTheadFilterTrProps={[Function]}
        getTheadGroupProps={[Function]}
        getTheadGroupThProps={[Function]}
        getTheadGroupTrProps={[Function]}
        getTheadProps={[Function]}
        getTheadThProps={[Function]}
        getTheadTrProps={[Function]}
        getTrGroupProps={[Function]}
        getTrProps={[Function]}
        groupedByPivotKey="_groupedByPivot"
        indexKey="_index"
        loading={true}
        loadingText="Loading..."
        multiSort={true}
        nestingLevelKey="_nestingLevel"
        nextText="Next"
        noDataText=""
        ofText="of"
        onFetchData={[Function]}
        originalKey="_original"
        pageJumpText="jump to page"
        pageSizeOptions={
          Array [
            5,
            10,
            20,
            25,
            50,
            100,
          ]
        }
        pageText="Page"
        pivotDefaults={Object {}}
        pivotIDKey="_pivotID"
        pivotValKey="_pivotVal"
        previousText="Previous"
        resizable={true}
        resolveData={[Function]}
        rowsSelectorText="rows per page"
        rowsText="rows"
        showPageJump={true}
        showPageSizeOptions={true}
        showPagination={true}
        showPaginationBottom={true}
        showPaginationTop={false}
        sortable={true}
        style={Object {}}
        subRowsKey="_subRows"
      />
    </div>
    <div
      className="bottom-pane"
    >
      <ViewControlBar
        label="Tasks"
      >
        <Component>
          Group by
        </Component>
        <Blueprint3.ButtonGroup>
          <Blueprint3.Button
            active={true}
            onClick={[Function]}
          >
            None
          </Blueprint3.Button>
          <Blueprint3.Button
            active={false}
            onClick={[Function]}
          >
            Type
          </Blueprint3.Button>
          <Blueprint3.Button
            active={false}
            onClick={[Function]}
          >
            Datasource
          </Blueprint3.Button>
          <Blueprint3.Button
            active={false}
            onClick={[Function]}
          >
            Status
          </Blueprint3.Button>
        </Blueprint3.ButtonGroup>
        <RefreshButton
          localStorageKey="task-refresh-rate"
          onRefresh={[Function]}
        />
        <Blueprint3.Button
          icon="application"
          onClick={[Function]}
          text="Go to SQL"
        />
        <Blueprint3.Popover
          boundary="scrollParent"
          captureDismiss={false}
          content={
            <Blueprint3.Menu>
              <Blueprint3.MenuItem
                disabled={false}
                icon="cloud-upload"
                multiline={false}
                onClick={[Function]}
                popoverProps={Object {}}
                shouldDismissPopover={true}
                text="Go to data loader"
              />
              <Blueprint3.MenuItem
                disabled={false}
                icon="manually-entered-data"
                multiline={false}
                onClick={[Function]}
                popoverProps={Object {}}
                shouldDismissPopover={true}
                text="Submit JSON task"
              />
            </Blueprint3.Menu>
          }
          defaultIsOpen={false}
          disabled={false}
          hasBackdrop={false}
          hoverCloseDelay={300}
          hoverOpenDelay={150}
          inheritDarkTheme={true}
          interactionKind="click"
          minimal={false}
          modifiers={Object {}}
          openOnTargetFocus={true}
          position="bottom-left"
          targetTagName="span"
          transitionDuration={300}
          usePortal={true}
          wrapperTagName="span"
        >
          <Blueprint3.Button
            icon="plus"
            text="Submit task"
          />
        </Blueprint3.Popover>
        <TableColumnSelector
          columns={
            Array [
              "Task ID",
              "Type",
              "Datasource",
              "Location",
              "Created time",
              "Status",
              "Duration",
              "Actions",
            ]
          }
          onChange={[Function]}
          tableColumnsHidden={Array []}
        />
      </ViewControlBar>
      <ReactTable
        AggregatedComponent={[Function]}
        ExpanderComponent={[Function]}
        FilterComponent={[Function]}
        LoadingComponent={[Function]}
        NoDataComponent={[Function]}
        PadRowComponent={[Function]}
        PaginationComponent={[Function]}
        PivotValueComponent={[Function]}
        ResizerComponent={[Function]}
        TableComponent={[Function]}
        TbodyComponent={[Function]}
        TdComponent={[Function]}
        TfootComponent={[Function]}
        ThComponent={[Function]}
        TheadComponent={[Function]}
        TrComponent={[Function]}
        TrGroupComponent={[Function]}
        aggregatedKey="_aggregated"
        className=""
        collapseOnDataChange={true}
        collapseOnPageChange={true}
        collapseOnSortingChange={true}
        column={
          Object {
            "Aggregated": undefined,
            "Cell": undefined,
            "Expander": undefined,
            "Filter": undefined,
            "Footer": undefined,
            "Header": undefined,
            "Pivot": undefined,
            "PivotValue": undefined,
            "Placeholder": undefined,
            "aggregate": undefined,
            "className": "",
            "filterAll": false,
            "filterMethod": undefined,
            "filterable": undefined,
            "footerClassName": "",
            "footerStyle": Object {},
            "getFooterProps": [Function],
            "getHeaderProps": [Function],
            "getProps": [Function],
            "headerClassName": "",
            "headerStyle": Object {},
            "minResizeWidth": 11,
            "minWidth": 100,
            "resizable": undefined,
            "show": true,
            "sortMethod": undefined,
            "sortable": undefined,
            "style": Object {},
          }
        }
        columns={
          Array [
            Object {
              "Aggregated": [Function],
              "Header": "Task ID",
              "accessor": "task_id",
              "show": true,
              "width": 300,
            },
            Object {
              "Cell": [Function],
              "Header": "Type",
              "accessor": "type",
              "show": true,
            },
            Object {
              "Cell": [Function],
              "Header": "Datasource",
              "accessor": "datasource",
              "show": true,
            },
            Object {
              "Aggregated": [Function],
              "Header": "Location",
              "accessor": "location",
              "filterMethod": [Function],
              "show": true,
            },
            Object {
              "Aggregated": [Function],
              "Header": "Created time",
              "accessor": "created_time",
              "show": true,
              "width": 120,
            },
            Object {
              "Cell": [Function],
              "Header": "Status",
              "accessor": [Function],
              "filterMethod": [Function],
              "id": "status",
              "show": true,
              "sortMethod": [Function],
              "width": 110,
            },
            Object {
              "Aggregated": [Function],
              "Cell": [Function],
              "Header": "Duration",
              "accessor": "duration",
              "filterable": false,
              "show": true,
            },
            Object {
              "Aggregated": [Function],
              "Cell": [Function],
              "Header": "Actions",
              "accessor": "task_id",
              "filterable": false,
              "id": "actions",
              "show": true,
              "width": 70,
            },
          ]
        }
        data={Array []}
        defaultExpanded={Object {}}
        defaultFilterMethod={[Function]}
        defaultFiltered={Array []}
        defaultPage={0}
        defaultPageSize={20}
        defaultResized={Array []}
        defaultSortDesc={false}
        defaultSortMethod={[Function]}
        defaultSorted={
          Array [
            Object {
              "desc": true,
              "id": "status",
            },
          ]
        }
        expanderDefaults={
          Object {
            "filterable": false,
            "resizable": false,
            "sortable": false,
            "width": 35,
          }
        }
        filterable={true}
        filtered={
          Array [
            Object {
              "id": "task_id",
              "value": "test",
            },
          ]
        }
        freezeWhenExpanded={false}
        getLoadingProps={[Function]}
        getNoDataProps={[Function]}
        getPaginationProps={[Function]}
        getProps={[Function]}
        getResizerProps={[Function]}
        getTableProps={[Function]}
        getTbodyProps={[Function]}
        getTdProps={[Function]}
        getTfootProps={[Function]}
        getTfootTdProps={[Function]}
        getTfootTrProps={[Function]}
        getTheadFilterProps={[Function]}
        getTheadFilterThProps={[Function]}
        getTheadFilterTrProps={[Function]}
        getTheadGroupProps={[Function]}
        getTheadGroupThProps={[Function]}
        getTheadGroupTrProps={[Function]}
        getTheadProps={[Function]}
        getTheadThProps={[Function]}
        getTheadTrProps={[Function]}
        getTrGroupProps={[Function]}
        getTrProps={[Function]}
        groupedByPivotKey="_groupedByPivot"
        indexKey="_index"
        loading={true}
        loadingText="Loading..."
        multiSort={true}
        nestingLevelKey="_nestingLevel"
        nextText="Next"
        noDataText=""
        ofText="of"
        onFetchData={[Function]}
        onFilteredChange={[Function]}
        originalKey="_original"
        pageJumpText="jump to page"
        pageSizeOptions={
          Array [
            5,
            10,
            20,
            25,
            50,
            100,
          ]
        }
        pageText="Page"
        pivotBy={Array []}
        pivotDefaults={Object {}}
        pivotIDKey="_pivotID"
        pivotValKey="_pivotVal"
        previousText="Previous"
        resizable={true}
        resolveData={[Function]}
        rowsSelectorText="rows per page"
        rowsText="rows"
        showPageJump={true}
        showPageSizeOptions={true}
        showPagination={true}
        showPaginationBottom={true}
        showPaginationTop={false}
        sortable={true}
        style={Object {}}
        subRowsKey="_subRows"
      />
    </div>
  </t>
  <Blueprint3.Alert
    canEscapeKeyCancel={false}
    canOutsideClickCancel={false}
    confirmButtonText="OK"
    icon="error"
    intent="primary"
    isOpen={false}
    onConfirm={[Function]}
  >
    <p />
  </Blueprint3.Alert>
</Fragment>
`;
