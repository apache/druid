// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`ExecutionDetailsPane matches snapshot no init tab 1`] = `
<Memo(FancyTabPane)
  activeTab="general"
  className="execution-details-pane"
  onActivateTab={[Function]}
  tabs={
    [
      {
        "icon": "many-to-one",
        "id": "general",
        "label": "General",
      },
      {
        "icon": "application",
        "id": "sql",
        "label": "SQL query",
      },
      {
        "icon": "cog",
        "id": "native",
        "label": "Native query",
      },
      false,
      undefined,
      undefined,
      {
        "icon": "error",
        "id": "error",
        "label": "Error",
      },
      {
        "icon": "warning-sign",
        "id": "warnings",
        "label": "Warnings",
      },
    ]
  }
>
  <div>
    <p>
      General info for query-26d490c6-c06d-4cd2-938f-bc5f7f982754 ingesting into "kttm-blank-lines"
    </p>
    <p>
      Results written to dataSource
    </p>
    <Memo(ExecutionErrorPane)
      execution={
        Execution {
          "_payload": {
            "payload": {
              "context": {
                "forceTimeChunkLock": true,
                "useLineageBasedSegmentAllocation": true,
              },
              "dataSource": "kttm-blank-lines",
              "groupId": "query-26d490c6-c06d-4cd2-938f-bc5f7f982754",
              "id": "query-26d490c6-c06d-4cd2-938f-bc5f7f982754",
              "nativeTypeNames": [
                "LONG",
                "STRING",
              ],
              "resource": {
                "availabilityGroup": "query-26d490c6-c06d-4cd2-938f-bc5f7f982754",
                "requiredCapacity": 1,
              },
              "spec": {
                "assignmentStrategy": "max",
                "columnMappings": [
                  {
                    "outputColumn": "__time",
                    "queryColumn": "v0",
                  },
                  {
                    "outputColumn": "agent_type",
                    "queryColumn": "agent_type",
                  },
                ],
                "destination": {
                  "dataSource": "kttm-blank-lines",
                  "replaceTimeChunks": [
                    "-146136543-09-08T08:23:32.096Z/146140482-04-24T15:36:27.903Z",
                  ],
                  "segmentGranularity": "DAY",
                  "type": "dataSource",
                },
                "query": {
                  "columns": [
                    "agent_type",
                    "v0",
                  ],
                  "context": {
                    "__resultFormat": "array",
                    "__user": "allowAll",
                    "executionMode": "async",
                    "finalize": false,
                    "finalizeAggregations": false,
                    "groupByEnableMultiValueUnnesting": false,
                    "maxNumTasks": 2,
                    "maxParseExceptions": 2,
                    "queryId": "26d490c6-c06d-4cd2-938f-bc5f7f982754",
                    "scanSignature": "[{"name":"agent_type","type":"STRING"},{"name":"v0","type":"LONG"}]",
                    "sqlInsertSegmentGranularity": ""DAY"",
                    "sqlQueryId": "26d490c6-c06d-4cd2-938f-bc5f7f982754",
                    "sqlReplaceTimeChunks": "all",
                    "waitUntilSegmentsLoad": true,
                  },
                  "dataSource": {
                    "inputFormat": {
                      "assumeNewlineDelimited": false,
                      "keepNullColumns": false,
                      "type": "json",
                      "useJsonNodeReader": false,
                    },
                    "inputSource": {
                      "type": "http",
                      "uris": [
                        "https://static.imply.io/example-data/kttm-with-issues/kttm-blank-lines.json",
                      ],
                    },
                    "signature": [
                      {
                        "name": "timestamp",
                        "type": "STRING",
                      },
                      {
                        "name": "agent_type",
                        "type": "STRING",
                      },
                    ],
                    "type": "external",
                  },
                  "granularity": {
                    "type": "all",
                  },
                  "intervals": {
                    "intervals": [
                      "-146136543-09-08T08:23:32.096Z/146140482-04-24T15:36:27.903Z",
                    ],
                    "type": "intervals",
                  },
                  "legacy": false,
                  "queryType": "scan",
                  "resultFormat": "compactedList",
                  "virtualColumns": [
                    {
                      "expression": "timestamp_parse("timestamp",null,'UTC')",
                      "name": "v0",
                      "outputType": "LONG",
                      "type": "expression",
                    },
                  ],
                },
                "tuningConfig": {
                  "maxNumWorkers": 1,
                  "maxRowsInMemory": 100000,
                  "rowsPerSegment": 3000000,
                },
              },
              "sqlQuery": "REPLACE INTO "kttm-blank-lines" OVERWRITE ALL
SELECT
  TIME_PARSE("timestamp") AS "__time",
  "agent_type"
FROM TABLE(
  EXTERN(
    '{"type":"http","uris":["https://static.imply.io/example-data/kttm-with-issues/kttm-blank-lines.json"]}',
    '{"type":"json"}'
  )
) EXTEND ("timestamp" VARCHAR, "agent_type" VARCHAR)
PARTITIONED BY DAY",
              "sqlQueryContext": {
                "__resultFormat": "array",
                "executionMode": "async",
                "finalizeAggregations": false,
                "groupByEnableMultiValueUnnesting": false,
                "maxNumTasks": 2,
                "maxParseExceptions": 2,
                "queryId": "26d490c6-c06d-4cd2-938f-bc5f7f982754",
                "sqlInsertSegmentGranularity": ""DAY"",
                "sqlQueryId": "26d490c6-c06d-4cd2-938f-bc5f7f982754",
                "sqlReplaceTimeChunks": "all",
                "waitUntilSegmentsLoad": true,
              },
              "sqlResultsContext": {
                "serializeComplexValues": true,
                "stringifyArrays": true,
                "timeZone": "UTC",
              },
              "sqlTypeNames": [
                "TIMESTAMP",
                "VARCHAR",
              ],
              "type": "query_controller",
            },
            "task": "query-26d490c6-c06d-4cd2-938f-bc5f7f982754",
          },
          "capacityInfo": undefined,
          "destination": {
            "dataSource": "kttm-blank-lines",
            "replaceTimeChunks": [
              "-146136543-09-08T08:23:32.096Z/146140482-04-24T15:36:27.903Z",
            ],
            "segmentGranularity": "DAY",
            "type": "dataSource",
          },
          "destinationPages": undefined,
          "duration": 4483,
          "engine": "sql-msq-task",
          "error": {
            "error": {
              "errorCode": "TooManyWarnings",
              "errorMessage": "Too many warnings of type CannotParseExternalData generated (max = 2)",
              "maxWarnings": 2,
              "rootErrorCode": "CannotParseExternalData",
            },
            "host": "localhost",
            "taskId": "query-26d490c6-c06d-4cd2-938f-bc5f7f982754-worker0_0",
          },
          "id": "query-26d490c6-c06d-4cd2-938f-bc5f7f982754",
          "nativeQuery": {
            "columns": [
              "agent_type",
              "v0",
            ],
            "context": {
              "__resultFormat": "array",
              "__user": "allowAll",
              "executionMode": "async",
              "finalize": false,
              "finalizeAggregations": false,
              "groupByEnableMultiValueUnnesting": false,
              "maxNumTasks": 2,
              "maxParseExceptions": 2,
              "queryId": "26d490c6-c06d-4cd2-938f-bc5f7f982754",
              "scanSignature": "[{"name":"agent_type","type":"STRING"},{"name":"v0","type":"LONG"}]",
              "sqlInsertSegmentGranularity": ""DAY"",
              "sqlQueryId": "26d490c6-c06d-4cd2-938f-bc5f7f982754",
              "sqlReplaceTimeChunks": "all",
              "waitUntilSegmentsLoad": true,
            },
            "dataSource": {
              "inputFormat": {
                "assumeNewlineDelimited": false,
                "keepNullColumns": false,
                "type": "json",
                "useJsonNodeReader": false,
              },
              "inputSource": {
                "type": "http",
                "uris": [
                  "https://static.imply.io/example-data/kttm-with-issues/kttm-blank-lines.json",
                ],
              },
              "signature": [
                {
                  "name": "timestamp",
                  "type": "STRING",
                },
                {
                  "name": "agent_type",
                  "type": "STRING",
                },
              ],
              "type": "external",
            },
            "granularity": {
              "type": "all",
            },
            "intervals": {
              "intervals": [
                "-146136543-09-08T08:23:32.096Z/146140482-04-24T15:36:27.903Z",
              ],
              "type": "intervals",
            },
            "legacy": false,
            "queryType": "scan",
            "resultFormat": "compactedList",
            "virtualColumns": [
              {
                "expression": "timestamp_parse("timestamp",null,'UTC')",
                "name": "v0",
                "outputType": "LONG",
                "type": "expression",
              },
            ],
          },
          "queryContext": {
            "__resultFormat": "array",
            "executionMode": "async",
            "finalizeAggregations": false,
            "groupByEnableMultiValueUnnesting": false,
            "maxNumTasks": 2,
            "maxParseExceptions": 2,
            "waitUntilSegmentsLoad": true,
          },
          "result": undefined,
          "segmentStatus": undefined,
          "sqlQuery": "REPLACE INTO "kttm-blank-lines" OVERWRITE ALL
SELECT
  TIME_PARSE("timestamp") AS "__time",
  "agent_type"
FROM TABLE(
  EXTERN(
    '{"type":"http","uris":["https://static.imply.io/example-data/kttm-with-issues/kttm-blank-lines.json"]}',
    '{"type":"json"}'
  )
) EXTEND ("timestamp" VARCHAR, "agent_type" VARCHAR)
PARTITIONED BY DAY",
          "stages": Stages {
            "counters": {
              "0": {
                "0": {
                  "input0": {
                    "bytes": [
                      7658,
                    ],
                    "files": [
                      1,
                    ],
                    "rows": [
                      10,
                    ],
                    "totalFiles": [
                      1,
                    ],
                    "type": "channel",
                  },
                  "output": {
                    "bytes": [
                      712,
                    ],
                    "frames": [
                      1,
                    ],
                    "rows": [
                      10,
                    ],
                    "type": "channel",
                  },
                  "sortProgress": {
                    "levelToMergedBatches": {},
                    "levelToTotalBatches": {
                      "0": 1,
                      "1": 1,
                      "2": -1,
                    },
                    "progressDigest": 0,
                    "totalMergersForUltimateLevel": -1,
                    "totalMergingLevels": 3,
                    "type": "sortProgress",
                  },
                  "warnings": {
                    "CannotParseExternalData": 3,
                    "type": "warnings",
                  },
                },
              },
            },
            "stages": [
              {
                "definition": {
                  "id": "2c45d26d-8a63-45a7-ae8d-2a2a4d6309b7_0",
                  "input": [
                    {
                      "inputFormat": {
                        "assumeNewlineDelimited": false,
                        "keepNullColumns": false,
                        "type": "json",
                        "useJsonNodeReader": false,
                      },
                      "inputSource": {
                        "type": "http",
                        "uris": [
                          "https://static.imply.io/example-data/kttm-with-issues/kttm-blank-lines.json",
                        ],
                      },
                      "signature": [
                        {
                          "name": "timestamp",
                          "type": "STRING",
                        },
                        {
                          "name": "agent_type",
                          "type": "STRING",
                        },
                      ],
                      "type": "external",
                    },
                  ],
                  "maxWorkerCount": 1,
                  "processor": {
                    "query": {
                      "columns": [
                        "agent_type",
                        "v0",
                      ],
                      "context": {
                        "__resultFormat": "array",
                        "__timeColumn": "v0",
                        "__user": "allowAll",
                        "executionMode": "async",
                        "finalize": false,
                        "finalizeAggregations": false,
                        "groupByEnableMultiValueUnnesting": false,
                        "maxNumTasks": 2,
                        "maxParseExceptions": 2,
                        "queryId": "26d490c6-c06d-4cd2-938f-bc5f7f982754",
                        "scanSignature": "[{"name":"agent_type","type":"STRING"},{"name":"v0","type":"LONG"}]",
                        "sqlInsertSegmentGranularity": ""DAY"",
                        "sqlQueryId": "26d490c6-c06d-4cd2-938f-bc5f7f982754",
                        "sqlReplaceTimeChunks": "all",
                        "waitUntilSegmentsLoad": true,
                      },
                      "dataSource": {
                        "inputFormat": {
                          "assumeNewlineDelimited": false,
                          "keepNullColumns": false,
                          "type": "json",
                          "useJsonNodeReader": false,
                        },
                        "inputSource": {
                          "type": "http",
                          "uris": [
                            "https://static.imply.io/example-data/kttm-with-issues/kttm-blank-lines.json",
                          ],
                        },
                        "signature": [
                          {
                            "name": "timestamp",
                            "type": "STRING",
                          },
                          {
                            "name": "agent_type",
                            "type": "STRING",
                          },
                        ],
                        "type": "external",
                      },
                      "granularity": {
                        "type": "all",
                      },
                      "intervals": {
                        "intervals": [
                          "-146136543-09-08T08:23:32.096Z/146140482-04-24T15:36:27.903Z",
                        ],
                        "type": "intervals",
                      },
                      "legacy": false,
                      "queryType": "scan",
                      "resultFormat": "compactedList",
                      "virtualColumns": [
                        {
                          "expression": "timestamp_parse("timestamp",null,'UTC')",
                          "name": "v0",
                          "outputType": "LONG",
                          "type": "expression",
                        },
                      ],
                    },
                    "type": "scan",
                  },
                  "shuffleCheckHasMultipleValues": true,
                  "shuffleSpec": {
                    "clusterBy": {
                      "bucketByCount": 1,
                      "columns": [
                        {
                          "columnName": "__bucket",
                          "order": "ASCENDING",
                        },
                        {
                          "columnName": "__boost",
                          "order": "ASCENDING",
                        },
                      ],
                    },
                    "targetSize": 3000000,
                    "type": "targetSize",
                  },
                  "signature": [
                    {
                      "name": "__bucket",
                      "type": "LONG",
                    },
                    {
                      "name": "__boost",
                      "type": "LONG",
                    },
                    {
                      "name": "agent_type",
                      "type": "STRING",
                    },
                    {
                      "name": "v0",
                      "type": "LONG",
                    },
                  ],
                },
                "duration": 4259,
                "phase": "FAILED",
                "sort": true,
                "stageNumber": 0,
                "startTime": "2024-01-23T19:56:44.857Z",
                "workerCount": 1,
              },
              {
                "definition": {
                  "id": "2c45d26d-8a63-45a7-ae8d-2a2a4d6309b7_1",
                  "input": [
                    {
                      "stage": 0,
                      "type": "stage",
                    },
                  ],
                  "maxWorkerCount": 1,
                  "processor": {
                    "columnMappings": [
                      {
                        "outputColumn": "__time",
                        "queryColumn": "v0",
                      },
                      {
                        "outputColumn": "agent_type",
                        "queryColumn": "agent_type",
                      },
                    ],
                    "dataSchema": {
                      "dataSource": "kttm-blank-lines",
                      "dimensionsSpec": {
                        "dimensionExclusions": [
                          "__time",
                        ],
                        "dimensions": [
                          {
                            "createBitmapIndex": true,
                            "multiValueHandling": "SORTED_ARRAY",
                            "name": "agent_type",
                            "type": "string",
                          },
                        ],
                        "includeAllDimensions": false,
                        "useSchemaDiscovery": false,
                      },
                      "granularitySpec": {
                        "intervals": [
                          "-146136543-09-08T08:23:32.096Z/146140482-04-24T15:36:27.903Z",
                        ],
                        "queryGranularity": {
                          "type": "none",
                        },
                        "rollup": false,
                        "type": "arbitrary",
                      },
                      "metricsSpec": [],
                      "timestampSpec": {
                        "column": "__time",
                        "format": "millis",
                        "missingValue": null,
                      },
                      "transformSpec": {
                        "filter": null,
                        "transforms": [],
                      },
                    },
                    "tuningConfig": {
                      "maxNumWorkers": 1,
                      "maxRowsInMemory": 100000,
                      "rowsPerSegment": 3000000,
                    },
                    "type": "segmentGenerator",
                  },
                  "signature": [],
                },
                "stageNumber": 1,
              },
            ],
          },
          "startTime": 2024-01-23T19:56:44.633Z,
          "status": "FAILED",
          "usageInfo": {
            "pendingTasks": 0,
            "runningTasks": 1,
          },
          "warnings": [
            {
              "error": {
                "errorCode": "CannotParseExternalData",
                "errorMessage": "Unable to parse row [] (Path: https://static.imply.io/example-data/kttm-with-issues/kttm-blank-lines.json, Record: 3, Line: 3)",
              },
              "exceptionStackTrace": "org.apache.druid.java.util.common.parsers.ParseException: Unable to parse row [] (Path: https://static.imply.io/example-data/kttm-with-issues/kttm-blank-lines.json, Record: 3, Line: 3)
	at org.apache.druid.data.input.IntermediateRowParsingReader$1.hasNext(IntermediateRowParsingReader.java:79)
	at org.apache.druid.java.util.common.parsers.CloseableIterator$1.hasNext(CloseableIterator.java:42)
	at org.apache.druid.java.util.common.parsers.CloseableIterator$2.findNextIteratorIfNecessary(CloseableIterator.java:72)
	at org.apache.druid.java.util.common.parsers.CloseableIterator$2.hasNext(CloseableIterator.java:93)
	at org.apache.druid.java.util.common.parsers.CloseableIterator$1.hasNext(CloseableIterator.java:42)
	at org.apache.druid.msq.input.external.ExternalSegment$1$1.hasNext(ExternalSegment.java:95)
	at org.apache.druid.java.util.common.guava.BaseSequence$1.next(BaseSequence.java:115)
	at org.apache.druid.segment.RowWalker.advance(RowWalker.java:75)
	at org.apache.druid.segment.RowBasedCursor.advanceUninterruptibly(RowBasedCursor.java:110)
	at org.apache.druid.segment.RowBasedCursor.advance(RowBasedCursor.java:103)
	at org.apache.druid.msq.querykit.scan.ScanQueryFrameProcessor.populateFrameWriterAndFlushIfNeeded(ScanQueryFrameProcessor.java:362)
	at org.apache.druid.msq.querykit.scan.ScanQueryFrameProcessor.populateFrameWriterAndFlushIfNeededWithExceptionHandling(ScanQueryFrameProcessor.java:329)
	at org.apache.druid.msq.querykit.scan.ScanQueryFrameProcessor.runWithSegment(ScanQueryFrameProcessor.java:268)
	at org.apache.druid.msq.querykit.BaseLeafFrameProcessor.runIncrementally(BaseLeafFrameProcessor.java:89)
	at org.apache.druid.msq.querykit.scan.ScanQueryFrameProcessor.runIncrementally(ScanQueryFrameProcessor.java:158)
	at org.apache.druid.frame.processor.FrameProcessors$1FrameProcessorWithBaggage.runIncrementally(FrameProcessors.java:75)
	at org.apache.druid.frame.processor.FrameProcessorExecutor$1ExecutorRunnable.runProcessorNow(FrameProcessorExecutor.java:230)
	at org.apache.druid.frame.processor.FrameProcessorExecutor$1ExecutorRunnable.run(FrameProcessorExecutor.java:138)
	at org.apache.druid.msq.exec.WorkerImpl$1$2.run(WorkerImpl.java:840)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at org.apache.druid.query.PrioritizedListenableFutureTask.run(PrioritizedExecutorService.java:259)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)
Caused by: com.fasterxml.jackson.databind.exc.MismatchedInputException: No content to map due to end-of-input
 at [Source: (String)""; line: 1, column: 0]
	at com.fasterxml.jackson.databind.exc.MismatchedInputException.from(MismatchedInputException.java:59)
	at com.fasterxml.jackson.databind.ObjectMapper._initForReading(ObjectMapper.java:4688)
	at com.fasterxml.jackson.databind.ObjectMapper._readMapAndClose(ObjectMapper.java:4586)
	at com.fasterxml.jackson.databind.ObjectMapper.readValue(ObjectMapper.java:3548)
	at com.fasterxml.jackson.databind.ObjectMapper.readValue(ObjectMapper.java:3516)
	at org.apache.druid.data.input.impl.JsonLineReader.parseInputRows(JsonLineReader.java:75)
	at org.apache.druid.data.input.impl.JsonLineReader.parseInputRows(JsonLineReader.java:48)
	at org.apache.druid.data.input.IntermediateRowParsingReader$1.hasNext(IntermediateRowParsingReader.java:71)
	... 24 more
",
              "host": "localhost:8101",
              "stageNumber": 0,
              "taskId": "query-26d490c6-c06d-4cd2-938f-bc5f7f982754-worker0_0",
            },
            {
              "error": {
                "errorCode": "CannotParseExternalData",
                "errorMessage": "Unable to parse row [] (Path: https://static.imply.io/example-data/kttm-with-issues/kttm-blank-lines.json, Record: 6, Line: 7)",
              },
              "exceptionStackTrace": "org.apache.druid.java.util.common.parsers.ParseException: Unable to parse row [] (Path: https://static.imply.io/example-data/kttm-with-issues/kttm-blank-lines.json, Record: 6, Line: 7)
	at org.apache.druid.data.input.IntermediateRowParsingReader$1.hasNext(IntermediateRowParsingReader.java:79)
	at org.apache.druid.java.util.common.parsers.CloseableIterator$1.hasNext(CloseableIterator.java:42)
	at org.apache.druid.java.util.common.parsers.CloseableIterator$2.findNextIteratorIfNecessary(CloseableIterator.java:72)
	at org.apache.druid.java.util.common.parsers.CloseableIterator$2.hasNext(CloseableIterator.java:93)
	at org.apache.druid.java.util.common.parsers.CloseableIterator$1.hasNext(CloseableIterator.java:42)
	at org.apache.druid.msq.input.external.ExternalSegment$1$1.hasNext(ExternalSegment.java:95)
	at org.apache.druid.java.util.common.guava.BaseSequence$1.next(BaseSequence.java:115)
	at org.apache.druid.segment.RowWalker.advance(RowWalker.java:75)
	at org.apache.druid.segment.RowBasedCursor.advanceUninterruptibly(RowBasedCursor.java:110)
	at org.apache.druid.segment.RowBasedCursor.advance(RowBasedCursor.java:103)
	at org.apache.druid.msq.querykit.scan.ScanQueryFrameProcessor.populateFrameWriterAndFlushIfNeeded(ScanQueryFrameProcessor.java:362)
	at org.apache.druid.msq.querykit.scan.ScanQueryFrameProcessor.populateFrameWriterAndFlushIfNeededWithExceptionHandling(ScanQueryFrameProcessor.java:329)
	at org.apache.druid.msq.querykit.scan.ScanQueryFrameProcessor.runWithSegment(ScanQueryFrameProcessor.java:268)
	at org.apache.druid.msq.querykit.BaseLeafFrameProcessor.runIncrementally(BaseLeafFrameProcessor.java:89)
	at org.apache.druid.msq.querykit.scan.ScanQueryFrameProcessor.runIncrementally(ScanQueryFrameProcessor.java:158)
	at org.apache.druid.frame.processor.FrameProcessors$1FrameProcessorWithBaggage.runIncrementally(FrameProcessors.java:75)
	at org.apache.druid.frame.processor.FrameProcessorExecutor$1ExecutorRunnable.runProcessorNow(FrameProcessorExecutor.java:230)
	at org.apache.druid.frame.processor.FrameProcessorExecutor$1ExecutorRunnable.run(FrameProcessorExecutor.java:138)
	at org.apache.druid.msq.exec.WorkerImpl$1$2.run(WorkerImpl.java:840)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at org.apache.druid.query.PrioritizedListenableFutureTask.run(PrioritizedExecutorService.java:259)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)
Caused by: com.fasterxml.jackson.databind.exc.MismatchedInputException: No content to map due to end-of-input
 at [Source: (String)""; line: 1, column: 0]
	at com.fasterxml.jackson.databind.exc.MismatchedInputException.from(MismatchedInputException.java:59)
	at com.fasterxml.jackson.databind.ObjectMapper._initForReading(ObjectMapper.java:4688)
	at com.fasterxml.jackson.databind.ObjectMapper._readMapAndClose(ObjectMapper.java:4586)
	at com.fasterxml.jackson.databind.ObjectMapper.readValue(ObjectMapper.java:3548)
	at com.fasterxml.jackson.databind.ObjectMapper.readValue(ObjectMapper.java:3516)
	at org.apache.druid.data.input.impl.JsonLineReader.parseInputRows(JsonLineReader.java:75)
	at org.apache.druid.data.input.impl.JsonLineReader.parseInputRows(JsonLineReader.java:48)
	at org.apache.druid.data.input.IntermediateRowParsingReader$1.hasNext(IntermediateRowParsingReader.java:71)
	... 24 more
",
              "host": "localhost:8101",
              "stageNumber": 0,
              "taskId": "query-26d490c6-c06d-4cd2-938f-bc5f7f982754-worker0_0",
            },
          ],
        }
      }
    />
    <Memo(ExecutionStagesPane)
      execution={
        Execution {
          "_payload": {
            "payload": {
              "context": {
                "forceTimeChunkLock": true,
                "useLineageBasedSegmentAllocation": true,
              },
              "dataSource": "kttm-blank-lines",
              "groupId": "query-26d490c6-c06d-4cd2-938f-bc5f7f982754",
              "id": "query-26d490c6-c06d-4cd2-938f-bc5f7f982754",
              "nativeTypeNames": [
                "LONG",
                "STRING",
              ],
              "resource": {
                "availabilityGroup": "query-26d490c6-c06d-4cd2-938f-bc5f7f982754",
                "requiredCapacity": 1,
              },
              "spec": {
                "assignmentStrategy": "max",
                "columnMappings": [
                  {
                    "outputColumn": "__time",
                    "queryColumn": "v0",
                  },
                  {
                    "outputColumn": "agent_type",
                    "queryColumn": "agent_type",
                  },
                ],
                "destination": {
                  "dataSource": "kttm-blank-lines",
                  "replaceTimeChunks": [
                    "-146136543-09-08T08:23:32.096Z/146140482-04-24T15:36:27.903Z",
                  ],
                  "segmentGranularity": "DAY",
                  "type": "dataSource",
                },
                "query": {
                  "columns": [
                    "agent_type",
                    "v0",
                  ],
                  "context": {
                    "__resultFormat": "array",
                    "__user": "allowAll",
                    "executionMode": "async",
                    "finalize": false,
                    "finalizeAggregations": false,
                    "groupByEnableMultiValueUnnesting": false,
                    "maxNumTasks": 2,
                    "maxParseExceptions": 2,
                    "queryId": "26d490c6-c06d-4cd2-938f-bc5f7f982754",
                    "scanSignature": "[{"name":"agent_type","type":"STRING"},{"name":"v0","type":"LONG"}]",
                    "sqlInsertSegmentGranularity": ""DAY"",
                    "sqlQueryId": "26d490c6-c06d-4cd2-938f-bc5f7f982754",
                    "sqlReplaceTimeChunks": "all",
                    "waitUntilSegmentsLoad": true,
                  },
                  "dataSource": {
                    "inputFormat": {
                      "assumeNewlineDelimited": false,
                      "keepNullColumns": false,
                      "type": "json",
                      "useJsonNodeReader": false,
                    },
                    "inputSource": {
                      "type": "http",
                      "uris": [
                        "https://static.imply.io/example-data/kttm-with-issues/kttm-blank-lines.json",
                      ],
                    },
                    "signature": [
                      {
                        "name": "timestamp",
                        "type": "STRING",
                      },
                      {
                        "name": "agent_type",
                        "type": "STRING",
                      },
                    ],
                    "type": "external",
                  },
                  "granularity": {
                    "type": "all",
                  },
                  "intervals": {
                    "intervals": [
                      "-146136543-09-08T08:23:32.096Z/146140482-04-24T15:36:27.903Z",
                    ],
                    "type": "intervals",
                  },
                  "legacy": false,
                  "queryType": "scan",
                  "resultFormat": "compactedList",
                  "virtualColumns": [
                    {
                      "expression": "timestamp_parse("timestamp",null,'UTC')",
                      "name": "v0",
                      "outputType": "LONG",
                      "type": "expression",
                    },
                  ],
                },
                "tuningConfig": {
                  "maxNumWorkers": 1,
                  "maxRowsInMemory": 100000,
                  "rowsPerSegment": 3000000,
                },
              },
              "sqlQuery": "REPLACE INTO "kttm-blank-lines" OVERWRITE ALL
SELECT
  TIME_PARSE("timestamp") AS "__time",
  "agent_type"
FROM TABLE(
  EXTERN(
    '{"type":"http","uris":["https://static.imply.io/example-data/kttm-with-issues/kttm-blank-lines.json"]}',
    '{"type":"json"}'
  )
) EXTEND ("timestamp" VARCHAR, "agent_type" VARCHAR)
PARTITIONED BY DAY",
              "sqlQueryContext": {
                "__resultFormat": "array",
                "executionMode": "async",
                "finalizeAggregations": false,
                "groupByEnableMultiValueUnnesting": false,
                "maxNumTasks": 2,
                "maxParseExceptions": 2,
                "queryId": "26d490c6-c06d-4cd2-938f-bc5f7f982754",
                "sqlInsertSegmentGranularity": ""DAY"",
                "sqlQueryId": "26d490c6-c06d-4cd2-938f-bc5f7f982754",
                "sqlReplaceTimeChunks": "all",
                "waitUntilSegmentsLoad": true,
              },
              "sqlResultsContext": {
                "serializeComplexValues": true,
                "stringifyArrays": true,
                "timeZone": "UTC",
              },
              "sqlTypeNames": [
                "TIMESTAMP",
                "VARCHAR",
              ],
              "type": "query_controller",
            },
            "task": "query-26d490c6-c06d-4cd2-938f-bc5f7f982754",
          },
          "capacityInfo": undefined,
          "destination": {
            "dataSource": "kttm-blank-lines",
            "replaceTimeChunks": [
              "-146136543-09-08T08:23:32.096Z/146140482-04-24T15:36:27.903Z",
            ],
            "segmentGranularity": "DAY",
            "type": "dataSource",
          },
          "destinationPages": undefined,
          "duration": 4483,
          "engine": "sql-msq-task",
          "error": {
            "error": {
              "errorCode": "TooManyWarnings",
              "errorMessage": "Too many warnings of type CannotParseExternalData generated (max = 2)",
              "maxWarnings": 2,
              "rootErrorCode": "CannotParseExternalData",
            },
            "host": "localhost",
            "taskId": "query-26d490c6-c06d-4cd2-938f-bc5f7f982754-worker0_0",
          },
          "id": "query-26d490c6-c06d-4cd2-938f-bc5f7f982754",
          "nativeQuery": {
            "columns": [
              "agent_type",
              "v0",
            ],
            "context": {
              "__resultFormat": "array",
              "__user": "allowAll",
              "executionMode": "async",
              "finalize": false,
              "finalizeAggregations": false,
              "groupByEnableMultiValueUnnesting": false,
              "maxNumTasks": 2,
              "maxParseExceptions": 2,
              "queryId": "26d490c6-c06d-4cd2-938f-bc5f7f982754",
              "scanSignature": "[{"name":"agent_type","type":"STRING"},{"name":"v0","type":"LONG"}]",
              "sqlInsertSegmentGranularity": ""DAY"",
              "sqlQueryId": "26d490c6-c06d-4cd2-938f-bc5f7f982754",
              "sqlReplaceTimeChunks": "all",
              "waitUntilSegmentsLoad": true,
            },
            "dataSource": {
              "inputFormat": {
                "assumeNewlineDelimited": false,
                "keepNullColumns": false,
                "type": "json",
                "useJsonNodeReader": false,
              },
              "inputSource": {
                "type": "http",
                "uris": [
                  "https://static.imply.io/example-data/kttm-with-issues/kttm-blank-lines.json",
                ],
              },
              "signature": [
                {
                  "name": "timestamp",
                  "type": "STRING",
                },
                {
                  "name": "agent_type",
                  "type": "STRING",
                },
              ],
              "type": "external",
            },
            "granularity": {
              "type": "all",
            },
            "intervals": {
              "intervals": [
                "-146136543-09-08T08:23:32.096Z/146140482-04-24T15:36:27.903Z",
              ],
              "type": "intervals",
            },
            "legacy": false,
            "queryType": "scan",
            "resultFormat": "compactedList",
            "virtualColumns": [
              {
                "expression": "timestamp_parse("timestamp",null,'UTC')",
                "name": "v0",
                "outputType": "LONG",
                "type": "expression",
              },
            ],
          },
          "queryContext": {
            "__resultFormat": "array",
            "executionMode": "async",
            "finalizeAggregations": false,
            "groupByEnableMultiValueUnnesting": false,
            "maxNumTasks": 2,
            "maxParseExceptions": 2,
            "waitUntilSegmentsLoad": true,
          },
          "result": undefined,
          "segmentStatus": undefined,
          "sqlQuery": "REPLACE INTO "kttm-blank-lines" OVERWRITE ALL
SELECT
  TIME_PARSE("timestamp") AS "__time",
  "agent_type"
FROM TABLE(
  EXTERN(
    '{"type":"http","uris":["https://static.imply.io/example-data/kttm-with-issues/kttm-blank-lines.json"]}',
    '{"type":"json"}'
  )
) EXTEND ("timestamp" VARCHAR, "agent_type" VARCHAR)
PARTITIONED BY DAY",
          "stages": Stages {
            "counters": {
              "0": {
                "0": {
                  "input0": {
                    "bytes": [
                      7658,
                    ],
                    "files": [
                      1,
                    ],
                    "rows": [
                      10,
                    ],
                    "totalFiles": [
                      1,
                    ],
                    "type": "channel",
                  },
                  "output": {
                    "bytes": [
                      712,
                    ],
                    "frames": [
                      1,
                    ],
                    "rows": [
                      10,
                    ],
                    "type": "channel",
                  },
                  "sortProgress": {
                    "levelToMergedBatches": {},
                    "levelToTotalBatches": {
                      "0": 1,
                      "1": 1,
                      "2": -1,
                    },
                    "progressDigest": 0,
                    "totalMergersForUltimateLevel": -1,
                    "totalMergingLevels": 3,
                    "type": "sortProgress",
                  },
                  "warnings": {
                    "CannotParseExternalData": 3,
                    "type": "warnings",
                  },
                },
              },
            },
            "stages": [
              {
                "definition": {
                  "id": "2c45d26d-8a63-45a7-ae8d-2a2a4d6309b7_0",
                  "input": [
                    {
                      "inputFormat": {
                        "assumeNewlineDelimited": false,
                        "keepNullColumns": false,
                        "type": "json",
                        "useJsonNodeReader": false,
                      },
                      "inputSource": {
                        "type": "http",
                        "uris": [
                          "https://static.imply.io/example-data/kttm-with-issues/kttm-blank-lines.json",
                        ],
                      },
                      "signature": [
                        {
                          "name": "timestamp",
                          "type": "STRING",
                        },
                        {
                          "name": "agent_type",
                          "type": "STRING",
                        },
                      ],
                      "type": "external",
                    },
                  ],
                  "maxWorkerCount": 1,
                  "processor": {
                    "query": {
                      "columns": [
                        "agent_type",
                        "v0",
                      ],
                      "context": {
                        "__resultFormat": "array",
                        "__timeColumn": "v0",
                        "__user": "allowAll",
                        "executionMode": "async",
                        "finalize": false,
                        "finalizeAggregations": false,
                        "groupByEnableMultiValueUnnesting": false,
                        "maxNumTasks": 2,
                        "maxParseExceptions": 2,
                        "queryId": "26d490c6-c06d-4cd2-938f-bc5f7f982754",
                        "scanSignature": "[{"name":"agent_type","type":"STRING"},{"name":"v0","type":"LONG"}]",
                        "sqlInsertSegmentGranularity": ""DAY"",
                        "sqlQueryId": "26d490c6-c06d-4cd2-938f-bc5f7f982754",
                        "sqlReplaceTimeChunks": "all",
                        "waitUntilSegmentsLoad": true,
                      },
                      "dataSource": {
                        "inputFormat": {
                          "assumeNewlineDelimited": false,
                          "keepNullColumns": false,
                          "type": "json",
                          "useJsonNodeReader": false,
                        },
                        "inputSource": {
                          "type": "http",
                          "uris": [
                            "https://static.imply.io/example-data/kttm-with-issues/kttm-blank-lines.json",
                          ],
                        },
                        "signature": [
                          {
                            "name": "timestamp",
                            "type": "STRING",
                          },
                          {
                            "name": "agent_type",
                            "type": "STRING",
                          },
                        ],
                        "type": "external",
                      },
                      "granularity": {
                        "type": "all",
                      },
                      "intervals": {
                        "intervals": [
                          "-146136543-09-08T08:23:32.096Z/146140482-04-24T15:36:27.903Z",
                        ],
                        "type": "intervals",
                      },
                      "legacy": false,
                      "queryType": "scan",
                      "resultFormat": "compactedList",
                      "virtualColumns": [
                        {
                          "expression": "timestamp_parse("timestamp",null,'UTC')",
                          "name": "v0",
                          "outputType": "LONG",
                          "type": "expression",
                        },
                      ],
                    },
                    "type": "scan",
                  },
                  "shuffleCheckHasMultipleValues": true,
                  "shuffleSpec": {
                    "clusterBy": {
                      "bucketByCount": 1,
                      "columns": [
                        {
                          "columnName": "__bucket",
                          "order": "ASCENDING",
                        },
                        {
                          "columnName": "__boost",
                          "order": "ASCENDING",
                        },
                      ],
                    },
                    "targetSize": 3000000,
                    "type": "targetSize",
                  },
                  "signature": [
                    {
                      "name": "__bucket",
                      "type": "LONG",
                    },
                    {
                      "name": "__boost",
                      "type": "LONG",
                    },
                    {
                      "name": "agent_type",
                      "type": "STRING",
                    },
                    {
                      "name": "v0",
                      "type": "LONG",
                    },
                  ],
                },
                "duration": 4259,
                "phase": "FAILED",
                "sort": true,
                "stageNumber": 0,
                "startTime": "2024-01-23T19:56:44.857Z",
                "workerCount": 1,
              },
              {
                "definition": {
                  "id": "2c45d26d-8a63-45a7-ae8d-2a2a4d6309b7_1",
                  "input": [
                    {
                      "stage": 0,
                      "type": "stage",
                    },
                  ],
                  "maxWorkerCount": 1,
                  "processor": {
                    "columnMappings": [
                      {
                        "outputColumn": "__time",
                        "queryColumn": "v0",
                      },
                      {
                        "outputColumn": "agent_type",
                        "queryColumn": "agent_type",
                      },
                    ],
                    "dataSchema": {
                      "dataSource": "kttm-blank-lines",
                      "dimensionsSpec": {
                        "dimensionExclusions": [
                          "__time",
                        ],
                        "dimensions": [
                          {
                            "createBitmapIndex": true,
                            "multiValueHandling": "SORTED_ARRAY",
                            "name": "agent_type",
                            "type": "string",
                          },
                        ],
                        "includeAllDimensions": false,
                        "useSchemaDiscovery": false,
                      },
                      "granularitySpec": {
                        "intervals": [
                          "-146136543-09-08T08:23:32.096Z/146140482-04-24T15:36:27.903Z",
                        ],
                        "queryGranularity": {
                          "type": "none",
                        },
                        "rollup": false,
                        "type": "arbitrary",
                      },
                      "metricsSpec": [],
                      "timestampSpec": {
                        "column": "__time",
                        "format": "millis",
                        "missingValue": null,
                      },
                      "transformSpec": {
                        "filter": null,
                        "transforms": [],
                      },
                    },
                    "tuningConfig": {
                      "maxNumWorkers": 1,
                      "maxRowsInMemory": 100000,
                      "rowsPerSegment": 3000000,
                    },
                    "type": "segmentGenerator",
                  },
                  "signature": [],
                },
                "stageNumber": 1,
              },
            ],
          },
          "startTime": 2024-01-23T19:56:44.633Z,
          "status": "FAILED",
          "usageInfo": {
            "pendingTasks": 0,
            "runningTasks": 1,
          },
          "warnings": [
            {
              "error": {
                "errorCode": "CannotParseExternalData",
                "errorMessage": "Unable to parse row [] (Path: https://static.imply.io/example-data/kttm-with-issues/kttm-blank-lines.json, Record: 3, Line: 3)",
              },
              "exceptionStackTrace": "org.apache.druid.java.util.common.parsers.ParseException: Unable to parse row [] (Path: https://static.imply.io/example-data/kttm-with-issues/kttm-blank-lines.json, Record: 3, Line: 3)
	at org.apache.druid.data.input.IntermediateRowParsingReader$1.hasNext(IntermediateRowParsingReader.java:79)
	at org.apache.druid.java.util.common.parsers.CloseableIterator$1.hasNext(CloseableIterator.java:42)
	at org.apache.druid.java.util.common.parsers.CloseableIterator$2.findNextIteratorIfNecessary(CloseableIterator.java:72)
	at org.apache.druid.java.util.common.parsers.CloseableIterator$2.hasNext(CloseableIterator.java:93)
	at org.apache.druid.java.util.common.parsers.CloseableIterator$1.hasNext(CloseableIterator.java:42)
	at org.apache.druid.msq.input.external.ExternalSegment$1$1.hasNext(ExternalSegment.java:95)
	at org.apache.druid.java.util.common.guava.BaseSequence$1.next(BaseSequence.java:115)
	at org.apache.druid.segment.RowWalker.advance(RowWalker.java:75)
	at org.apache.druid.segment.RowBasedCursor.advanceUninterruptibly(RowBasedCursor.java:110)
	at org.apache.druid.segment.RowBasedCursor.advance(RowBasedCursor.java:103)
	at org.apache.druid.msq.querykit.scan.ScanQueryFrameProcessor.populateFrameWriterAndFlushIfNeeded(ScanQueryFrameProcessor.java:362)
	at org.apache.druid.msq.querykit.scan.ScanQueryFrameProcessor.populateFrameWriterAndFlushIfNeededWithExceptionHandling(ScanQueryFrameProcessor.java:329)
	at org.apache.druid.msq.querykit.scan.ScanQueryFrameProcessor.runWithSegment(ScanQueryFrameProcessor.java:268)
	at org.apache.druid.msq.querykit.BaseLeafFrameProcessor.runIncrementally(BaseLeafFrameProcessor.java:89)
	at org.apache.druid.msq.querykit.scan.ScanQueryFrameProcessor.runIncrementally(ScanQueryFrameProcessor.java:158)
	at org.apache.druid.frame.processor.FrameProcessors$1FrameProcessorWithBaggage.runIncrementally(FrameProcessors.java:75)
	at org.apache.druid.frame.processor.FrameProcessorExecutor$1ExecutorRunnable.runProcessorNow(FrameProcessorExecutor.java:230)
	at org.apache.druid.frame.processor.FrameProcessorExecutor$1ExecutorRunnable.run(FrameProcessorExecutor.java:138)
	at org.apache.druid.msq.exec.WorkerImpl$1$2.run(WorkerImpl.java:840)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at org.apache.druid.query.PrioritizedListenableFutureTask.run(PrioritizedExecutorService.java:259)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)
Caused by: com.fasterxml.jackson.databind.exc.MismatchedInputException: No content to map due to end-of-input
 at [Source: (String)""; line: 1, column: 0]
	at com.fasterxml.jackson.databind.exc.MismatchedInputException.from(MismatchedInputException.java:59)
	at com.fasterxml.jackson.databind.ObjectMapper._initForReading(ObjectMapper.java:4688)
	at com.fasterxml.jackson.databind.ObjectMapper._readMapAndClose(ObjectMapper.java:4586)
	at com.fasterxml.jackson.databind.ObjectMapper.readValue(ObjectMapper.java:3548)
	at com.fasterxml.jackson.databind.ObjectMapper.readValue(ObjectMapper.java:3516)
	at org.apache.druid.data.input.impl.JsonLineReader.parseInputRows(JsonLineReader.java:75)
	at org.apache.druid.data.input.impl.JsonLineReader.parseInputRows(JsonLineReader.java:48)
	at org.apache.druid.data.input.IntermediateRowParsingReader$1.hasNext(IntermediateRowParsingReader.java:71)
	... 24 more
",
              "host": "localhost:8101",
              "stageNumber": 0,
              "taskId": "query-26d490c6-c06d-4cd2-938f-bc5f7f982754-worker0_0",
            },
            {
              "error": {
                "errorCode": "CannotParseExternalData",
                "errorMessage": "Unable to parse row [] (Path: https://static.imply.io/example-data/kttm-with-issues/kttm-blank-lines.json, Record: 6, Line: 7)",
              },
              "exceptionStackTrace": "org.apache.druid.java.util.common.parsers.ParseException: Unable to parse row [] (Path: https://static.imply.io/example-data/kttm-with-issues/kttm-blank-lines.json, Record: 6, Line: 7)
	at org.apache.druid.data.input.IntermediateRowParsingReader$1.hasNext(IntermediateRowParsingReader.java:79)
	at org.apache.druid.java.util.common.parsers.CloseableIterator$1.hasNext(CloseableIterator.java:42)
	at org.apache.druid.java.util.common.parsers.CloseableIterator$2.findNextIteratorIfNecessary(CloseableIterator.java:72)
	at org.apache.druid.java.util.common.parsers.CloseableIterator$2.hasNext(CloseableIterator.java:93)
	at org.apache.druid.java.util.common.parsers.CloseableIterator$1.hasNext(CloseableIterator.java:42)
	at org.apache.druid.msq.input.external.ExternalSegment$1$1.hasNext(ExternalSegment.java:95)
	at org.apache.druid.java.util.common.guava.BaseSequence$1.next(BaseSequence.java:115)
	at org.apache.druid.segment.RowWalker.advance(RowWalker.java:75)
	at org.apache.druid.segment.RowBasedCursor.advanceUninterruptibly(RowBasedCursor.java:110)
	at org.apache.druid.segment.RowBasedCursor.advance(RowBasedCursor.java:103)
	at org.apache.druid.msq.querykit.scan.ScanQueryFrameProcessor.populateFrameWriterAndFlushIfNeeded(ScanQueryFrameProcessor.java:362)
	at org.apache.druid.msq.querykit.scan.ScanQueryFrameProcessor.populateFrameWriterAndFlushIfNeededWithExceptionHandling(ScanQueryFrameProcessor.java:329)
	at org.apache.druid.msq.querykit.scan.ScanQueryFrameProcessor.runWithSegment(ScanQueryFrameProcessor.java:268)
	at org.apache.druid.msq.querykit.BaseLeafFrameProcessor.runIncrementally(BaseLeafFrameProcessor.java:89)
	at org.apache.druid.msq.querykit.scan.ScanQueryFrameProcessor.runIncrementally(ScanQueryFrameProcessor.java:158)
	at org.apache.druid.frame.processor.FrameProcessors$1FrameProcessorWithBaggage.runIncrementally(FrameProcessors.java:75)
	at org.apache.druid.frame.processor.FrameProcessorExecutor$1ExecutorRunnable.runProcessorNow(FrameProcessorExecutor.java:230)
	at org.apache.druid.frame.processor.FrameProcessorExecutor$1ExecutorRunnable.run(FrameProcessorExecutor.java:138)
	at org.apache.druid.msq.exec.WorkerImpl$1$2.run(WorkerImpl.java:840)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at org.apache.druid.query.PrioritizedListenableFutureTask.run(PrioritizedExecutorService.java:259)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)
Caused by: com.fasterxml.jackson.databind.exc.MismatchedInputException: No content to map due to end-of-input
 at [Source: (String)""; line: 1, column: 0]
	at com.fasterxml.jackson.databind.exc.MismatchedInputException.from(MismatchedInputException.java:59)
	at com.fasterxml.jackson.databind.ObjectMapper._initForReading(ObjectMapper.java:4688)
	at com.fasterxml.jackson.databind.ObjectMapper._readMapAndClose(ObjectMapper.java:4586)
	at com.fasterxml.jackson.databind.ObjectMapper.readValue(ObjectMapper.java:3548)
	at com.fasterxml.jackson.databind.ObjectMapper.readValue(ObjectMapper.java:3516)
	at org.apache.druid.data.input.impl.JsonLineReader.parseInputRows(JsonLineReader.java:75)
	at org.apache.druid.data.input.impl.JsonLineReader.parseInputRows(JsonLineReader.java:48)
	at org.apache.druid.data.input.IntermediateRowParsingReader$1.hasNext(IntermediateRowParsingReader.java:71)
	... 24 more
",
              "host": "localhost:8101",
              "stageNumber": 0,
              "taskId": "query-26d490c6-c06d-4cd2-938f-bc5f7f982754-worker0_0",
            },
          ],
        }
      }
      goToTask={[Function]}
      onErrorClick={[Function]}
      onWarningClick={[Function]}
    />
  </div>
</Memo(FancyTabPane)>
`;

exports[`ExecutionDetailsPane matches snapshot with init tab 1`] = `
<Memo(FancyTabPane)
  activeTab="warnings"
  className="execution-details-pane"
  onActivateTab={[Function]}
  tabs={
    [
      {
        "icon": "many-to-one",
        "id": "general",
        "label": "General",
      },
      {
        "icon": "application",
        "id": "sql",
        "label": "SQL query",
      },
      {
        "icon": "cog",
        "id": "native",
        "label": "Native query",
      },
      false,
      undefined,
      undefined,
      {
        "icon": "error",
        "id": "error",
        "label": "Error",
      },
      {
        "icon": "warning-sign",
        "id": "warnings",
        "label": "Warnings",
      },
    ]
  }
>
  <Memo(ExecutionWarningsPane)
    execution={
      Execution {
        "_payload": {
          "payload": {
            "context": {
              "forceTimeChunkLock": true,
              "useLineageBasedSegmentAllocation": true,
            },
            "dataSource": "kttm-blank-lines",
            "groupId": "query-26d490c6-c06d-4cd2-938f-bc5f7f982754",
            "id": "query-26d490c6-c06d-4cd2-938f-bc5f7f982754",
            "nativeTypeNames": [
              "LONG",
              "STRING",
            ],
            "resource": {
              "availabilityGroup": "query-26d490c6-c06d-4cd2-938f-bc5f7f982754",
              "requiredCapacity": 1,
            },
            "spec": {
              "assignmentStrategy": "max",
              "columnMappings": [
                {
                  "outputColumn": "__time",
                  "queryColumn": "v0",
                },
                {
                  "outputColumn": "agent_type",
                  "queryColumn": "agent_type",
                },
              ],
              "destination": {
                "dataSource": "kttm-blank-lines",
                "replaceTimeChunks": [
                  "-146136543-09-08T08:23:32.096Z/146140482-04-24T15:36:27.903Z",
                ],
                "segmentGranularity": "DAY",
                "type": "dataSource",
              },
              "query": {
                "columns": [
                  "agent_type",
                  "v0",
                ],
                "context": {
                  "__resultFormat": "array",
                  "__user": "allowAll",
                  "executionMode": "async",
                  "finalize": false,
                  "finalizeAggregations": false,
                  "groupByEnableMultiValueUnnesting": false,
                  "maxNumTasks": 2,
                  "maxParseExceptions": 2,
                  "queryId": "26d490c6-c06d-4cd2-938f-bc5f7f982754",
                  "scanSignature": "[{"name":"agent_type","type":"STRING"},{"name":"v0","type":"LONG"}]",
                  "sqlInsertSegmentGranularity": ""DAY"",
                  "sqlQueryId": "26d490c6-c06d-4cd2-938f-bc5f7f982754",
                  "sqlReplaceTimeChunks": "all",
                  "waitUntilSegmentsLoad": true,
                },
                "dataSource": {
                  "inputFormat": {
                    "assumeNewlineDelimited": false,
                    "keepNullColumns": false,
                    "type": "json",
                    "useJsonNodeReader": false,
                  },
                  "inputSource": {
                    "type": "http",
                    "uris": [
                      "https://static.imply.io/example-data/kttm-with-issues/kttm-blank-lines.json",
                    ],
                  },
                  "signature": [
                    {
                      "name": "timestamp",
                      "type": "STRING",
                    },
                    {
                      "name": "agent_type",
                      "type": "STRING",
                    },
                  ],
                  "type": "external",
                },
                "granularity": {
                  "type": "all",
                },
                "intervals": {
                  "intervals": [
                    "-146136543-09-08T08:23:32.096Z/146140482-04-24T15:36:27.903Z",
                  ],
                  "type": "intervals",
                },
                "legacy": false,
                "queryType": "scan",
                "resultFormat": "compactedList",
                "virtualColumns": [
                  {
                    "expression": "timestamp_parse("timestamp",null,'UTC')",
                    "name": "v0",
                    "outputType": "LONG",
                    "type": "expression",
                  },
                ],
              },
              "tuningConfig": {
                "maxNumWorkers": 1,
                "maxRowsInMemory": 100000,
                "rowsPerSegment": 3000000,
              },
            },
            "sqlQuery": "REPLACE INTO "kttm-blank-lines" OVERWRITE ALL
SELECT
  TIME_PARSE("timestamp") AS "__time",
  "agent_type"
FROM TABLE(
  EXTERN(
    '{"type":"http","uris":["https://static.imply.io/example-data/kttm-with-issues/kttm-blank-lines.json"]}',
    '{"type":"json"}'
  )
) EXTEND ("timestamp" VARCHAR, "agent_type" VARCHAR)
PARTITIONED BY DAY",
            "sqlQueryContext": {
              "__resultFormat": "array",
              "executionMode": "async",
              "finalizeAggregations": false,
              "groupByEnableMultiValueUnnesting": false,
              "maxNumTasks": 2,
              "maxParseExceptions": 2,
              "queryId": "26d490c6-c06d-4cd2-938f-bc5f7f982754",
              "sqlInsertSegmentGranularity": ""DAY"",
              "sqlQueryId": "26d490c6-c06d-4cd2-938f-bc5f7f982754",
              "sqlReplaceTimeChunks": "all",
              "waitUntilSegmentsLoad": true,
            },
            "sqlResultsContext": {
              "serializeComplexValues": true,
              "stringifyArrays": true,
              "timeZone": "UTC",
            },
            "sqlTypeNames": [
              "TIMESTAMP",
              "VARCHAR",
            ],
            "type": "query_controller",
          },
          "task": "query-26d490c6-c06d-4cd2-938f-bc5f7f982754",
        },
        "capacityInfo": undefined,
        "destination": {
          "dataSource": "kttm-blank-lines",
          "replaceTimeChunks": [
            "-146136543-09-08T08:23:32.096Z/146140482-04-24T15:36:27.903Z",
          ],
          "segmentGranularity": "DAY",
          "type": "dataSource",
        },
        "destinationPages": undefined,
        "duration": 4483,
        "engine": "sql-msq-task",
        "error": {
          "error": {
            "errorCode": "TooManyWarnings",
            "errorMessage": "Too many warnings of type CannotParseExternalData generated (max = 2)",
            "maxWarnings": 2,
            "rootErrorCode": "CannotParseExternalData",
          },
          "host": "localhost",
          "taskId": "query-26d490c6-c06d-4cd2-938f-bc5f7f982754-worker0_0",
        },
        "id": "query-26d490c6-c06d-4cd2-938f-bc5f7f982754",
        "nativeQuery": {
          "columns": [
            "agent_type",
            "v0",
          ],
          "context": {
            "__resultFormat": "array",
            "__user": "allowAll",
            "executionMode": "async",
            "finalize": false,
            "finalizeAggregations": false,
            "groupByEnableMultiValueUnnesting": false,
            "maxNumTasks": 2,
            "maxParseExceptions": 2,
            "queryId": "26d490c6-c06d-4cd2-938f-bc5f7f982754",
            "scanSignature": "[{"name":"agent_type","type":"STRING"},{"name":"v0","type":"LONG"}]",
            "sqlInsertSegmentGranularity": ""DAY"",
            "sqlQueryId": "26d490c6-c06d-4cd2-938f-bc5f7f982754",
            "sqlReplaceTimeChunks": "all",
            "waitUntilSegmentsLoad": true,
          },
          "dataSource": {
            "inputFormat": {
              "assumeNewlineDelimited": false,
              "keepNullColumns": false,
              "type": "json",
              "useJsonNodeReader": false,
            },
            "inputSource": {
              "type": "http",
              "uris": [
                "https://static.imply.io/example-data/kttm-with-issues/kttm-blank-lines.json",
              ],
            },
            "signature": [
              {
                "name": "timestamp",
                "type": "STRING",
              },
              {
                "name": "agent_type",
                "type": "STRING",
              },
            ],
            "type": "external",
          },
          "granularity": {
            "type": "all",
          },
          "intervals": {
            "intervals": [
              "-146136543-09-08T08:23:32.096Z/146140482-04-24T15:36:27.903Z",
            ],
            "type": "intervals",
          },
          "legacy": false,
          "queryType": "scan",
          "resultFormat": "compactedList",
          "virtualColumns": [
            {
              "expression": "timestamp_parse("timestamp",null,'UTC')",
              "name": "v0",
              "outputType": "LONG",
              "type": "expression",
            },
          ],
        },
        "queryContext": {
          "__resultFormat": "array",
          "executionMode": "async",
          "finalizeAggregations": false,
          "groupByEnableMultiValueUnnesting": false,
          "maxNumTasks": 2,
          "maxParseExceptions": 2,
          "waitUntilSegmentsLoad": true,
        },
        "result": undefined,
        "segmentStatus": undefined,
        "sqlQuery": "REPLACE INTO "kttm-blank-lines" OVERWRITE ALL
SELECT
  TIME_PARSE("timestamp") AS "__time",
  "agent_type"
FROM TABLE(
  EXTERN(
    '{"type":"http","uris":["https://static.imply.io/example-data/kttm-with-issues/kttm-blank-lines.json"]}',
    '{"type":"json"}'
  )
) EXTEND ("timestamp" VARCHAR, "agent_type" VARCHAR)
PARTITIONED BY DAY",
        "stages": Stages {
          "counters": {
            "0": {
              "0": {
                "input0": {
                  "bytes": [
                    7658,
                  ],
                  "files": [
                    1,
                  ],
                  "rows": [
                    10,
                  ],
                  "totalFiles": [
                    1,
                  ],
                  "type": "channel",
                },
                "output": {
                  "bytes": [
                    712,
                  ],
                  "frames": [
                    1,
                  ],
                  "rows": [
                    10,
                  ],
                  "type": "channel",
                },
                "sortProgress": {
                  "levelToMergedBatches": {},
                  "levelToTotalBatches": {
                    "0": 1,
                    "1": 1,
                    "2": -1,
                  },
                  "progressDigest": 0,
                  "totalMergersForUltimateLevel": -1,
                  "totalMergingLevels": 3,
                  "type": "sortProgress",
                },
                "warnings": {
                  "CannotParseExternalData": 3,
                  "type": "warnings",
                },
              },
            },
          },
          "stages": [
            {
              "definition": {
                "id": "2c45d26d-8a63-45a7-ae8d-2a2a4d6309b7_0",
                "input": [
                  {
                    "inputFormat": {
                      "assumeNewlineDelimited": false,
                      "keepNullColumns": false,
                      "type": "json",
                      "useJsonNodeReader": false,
                    },
                    "inputSource": {
                      "type": "http",
                      "uris": [
                        "https://static.imply.io/example-data/kttm-with-issues/kttm-blank-lines.json",
                      ],
                    },
                    "signature": [
                      {
                        "name": "timestamp",
                        "type": "STRING",
                      },
                      {
                        "name": "agent_type",
                        "type": "STRING",
                      },
                    ],
                    "type": "external",
                  },
                ],
                "maxWorkerCount": 1,
                "processor": {
                  "query": {
                    "columns": [
                      "agent_type",
                      "v0",
                    ],
                    "context": {
                      "__resultFormat": "array",
                      "__timeColumn": "v0",
                      "__user": "allowAll",
                      "executionMode": "async",
                      "finalize": false,
                      "finalizeAggregations": false,
                      "groupByEnableMultiValueUnnesting": false,
                      "maxNumTasks": 2,
                      "maxParseExceptions": 2,
                      "queryId": "26d490c6-c06d-4cd2-938f-bc5f7f982754",
                      "scanSignature": "[{"name":"agent_type","type":"STRING"},{"name":"v0","type":"LONG"}]",
                      "sqlInsertSegmentGranularity": ""DAY"",
                      "sqlQueryId": "26d490c6-c06d-4cd2-938f-bc5f7f982754",
                      "sqlReplaceTimeChunks": "all",
                      "waitUntilSegmentsLoad": true,
                    },
                    "dataSource": {
                      "inputFormat": {
                        "assumeNewlineDelimited": false,
                        "keepNullColumns": false,
                        "type": "json",
                        "useJsonNodeReader": false,
                      },
                      "inputSource": {
                        "type": "http",
                        "uris": [
                          "https://static.imply.io/example-data/kttm-with-issues/kttm-blank-lines.json",
                        ],
                      },
                      "signature": [
                        {
                          "name": "timestamp",
                          "type": "STRING",
                        },
                        {
                          "name": "agent_type",
                          "type": "STRING",
                        },
                      ],
                      "type": "external",
                    },
                    "granularity": {
                      "type": "all",
                    },
                    "intervals": {
                      "intervals": [
                        "-146136543-09-08T08:23:32.096Z/146140482-04-24T15:36:27.903Z",
                      ],
                      "type": "intervals",
                    },
                    "legacy": false,
                    "queryType": "scan",
                    "resultFormat": "compactedList",
                    "virtualColumns": [
                      {
                        "expression": "timestamp_parse("timestamp",null,'UTC')",
                        "name": "v0",
                        "outputType": "LONG",
                        "type": "expression",
                      },
                    ],
                  },
                  "type": "scan",
                },
                "shuffleCheckHasMultipleValues": true,
                "shuffleSpec": {
                  "clusterBy": {
                    "bucketByCount": 1,
                    "columns": [
                      {
                        "columnName": "__bucket",
                        "order": "ASCENDING",
                      },
                      {
                        "columnName": "__boost",
                        "order": "ASCENDING",
                      },
                    ],
                  },
                  "targetSize": 3000000,
                  "type": "targetSize",
                },
                "signature": [
                  {
                    "name": "__bucket",
                    "type": "LONG",
                  },
                  {
                    "name": "__boost",
                    "type": "LONG",
                  },
                  {
                    "name": "agent_type",
                    "type": "STRING",
                  },
                  {
                    "name": "v0",
                    "type": "LONG",
                  },
                ],
              },
              "duration": 4259,
              "phase": "FAILED",
              "sort": true,
              "stageNumber": 0,
              "startTime": "2024-01-23T19:56:44.857Z",
              "workerCount": 1,
            },
            {
              "definition": {
                "id": "2c45d26d-8a63-45a7-ae8d-2a2a4d6309b7_1",
                "input": [
                  {
                    "stage": 0,
                    "type": "stage",
                  },
                ],
                "maxWorkerCount": 1,
                "processor": {
                  "columnMappings": [
                    {
                      "outputColumn": "__time",
                      "queryColumn": "v0",
                    },
                    {
                      "outputColumn": "agent_type",
                      "queryColumn": "agent_type",
                    },
                  ],
                  "dataSchema": {
                    "dataSource": "kttm-blank-lines",
                    "dimensionsSpec": {
                      "dimensionExclusions": [
                        "__time",
                      ],
                      "dimensions": [
                        {
                          "createBitmapIndex": true,
                          "multiValueHandling": "SORTED_ARRAY",
                          "name": "agent_type",
                          "type": "string",
                        },
                      ],
                      "includeAllDimensions": false,
                      "useSchemaDiscovery": false,
                    },
                    "granularitySpec": {
                      "intervals": [
                        "-146136543-09-08T08:23:32.096Z/146140482-04-24T15:36:27.903Z",
                      ],
                      "queryGranularity": {
                        "type": "none",
                      },
                      "rollup": false,
                      "type": "arbitrary",
                    },
                    "metricsSpec": [],
                    "timestampSpec": {
                      "column": "__time",
                      "format": "millis",
                      "missingValue": null,
                    },
                    "transformSpec": {
                      "filter": null,
                      "transforms": [],
                    },
                  },
                  "tuningConfig": {
                    "maxNumWorkers": 1,
                    "maxRowsInMemory": 100000,
                    "rowsPerSegment": 3000000,
                  },
                  "type": "segmentGenerator",
                },
                "signature": [],
              },
              "stageNumber": 1,
            },
          ],
        },
        "startTime": 2024-01-23T19:56:44.633Z,
        "status": "FAILED",
        "usageInfo": {
          "pendingTasks": 0,
          "runningTasks": 1,
        },
        "warnings": [
          {
            "error": {
              "errorCode": "CannotParseExternalData",
              "errorMessage": "Unable to parse row [] (Path: https://static.imply.io/example-data/kttm-with-issues/kttm-blank-lines.json, Record: 3, Line: 3)",
            },
            "exceptionStackTrace": "org.apache.druid.java.util.common.parsers.ParseException: Unable to parse row [] (Path: https://static.imply.io/example-data/kttm-with-issues/kttm-blank-lines.json, Record: 3, Line: 3)
	at org.apache.druid.data.input.IntermediateRowParsingReader$1.hasNext(IntermediateRowParsingReader.java:79)
	at org.apache.druid.java.util.common.parsers.CloseableIterator$1.hasNext(CloseableIterator.java:42)
	at org.apache.druid.java.util.common.parsers.CloseableIterator$2.findNextIteratorIfNecessary(CloseableIterator.java:72)
	at org.apache.druid.java.util.common.parsers.CloseableIterator$2.hasNext(CloseableIterator.java:93)
	at org.apache.druid.java.util.common.parsers.CloseableIterator$1.hasNext(CloseableIterator.java:42)
	at org.apache.druid.msq.input.external.ExternalSegment$1$1.hasNext(ExternalSegment.java:95)
	at org.apache.druid.java.util.common.guava.BaseSequence$1.next(BaseSequence.java:115)
	at org.apache.druid.segment.RowWalker.advance(RowWalker.java:75)
	at org.apache.druid.segment.RowBasedCursor.advanceUninterruptibly(RowBasedCursor.java:110)
	at org.apache.druid.segment.RowBasedCursor.advance(RowBasedCursor.java:103)
	at org.apache.druid.msq.querykit.scan.ScanQueryFrameProcessor.populateFrameWriterAndFlushIfNeeded(ScanQueryFrameProcessor.java:362)
	at org.apache.druid.msq.querykit.scan.ScanQueryFrameProcessor.populateFrameWriterAndFlushIfNeededWithExceptionHandling(ScanQueryFrameProcessor.java:329)
	at org.apache.druid.msq.querykit.scan.ScanQueryFrameProcessor.runWithSegment(ScanQueryFrameProcessor.java:268)
	at org.apache.druid.msq.querykit.BaseLeafFrameProcessor.runIncrementally(BaseLeafFrameProcessor.java:89)
	at org.apache.druid.msq.querykit.scan.ScanQueryFrameProcessor.runIncrementally(ScanQueryFrameProcessor.java:158)
	at org.apache.druid.frame.processor.FrameProcessors$1FrameProcessorWithBaggage.runIncrementally(FrameProcessors.java:75)
	at org.apache.druid.frame.processor.FrameProcessorExecutor$1ExecutorRunnable.runProcessorNow(FrameProcessorExecutor.java:230)
	at org.apache.druid.frame.processor.FrameProcessorExecutor$1ExecutorRunnable.run(FrameProcessorExecutor.java:138)
	at org.apache.druid.msq.exec.WorkerImpl$1$2.run(WorkerImpl.java:840)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at org.apache.druid.query.PrioritizedListenableFutureTask.run(PrioritizedExecutorService.java:259)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)
Caused by: com.fasterxml.jackson.databind.exc.MismatchedInputException: No content to map due to end-of-input
 at [Source: (String)""; line: 1, column: 0]
	at com.fasterxml.jackson.databind.exc.MismatchedInputException.from(MismatchedInputException.java:59)
	at com.fasterxml.jackson.databind.ObjectMapper._initForReading(ObjectMapper.java:4688)
	at com.fasterxml.jackson.databind.ObjectMapper._readMapAndClose(ObjectMapper.java:4586)
	at com.fasterxml.jackson.databind.ObjectMapper.readValue(ObjectMapper.java:3548)
	at com.fasterxml.jackson.databind.ObjectMapper.readValue(ObjectMapper.java:3516)
	at org.apache.druid.data.input.impl.JsonLineReader.parseInputRows(JsonLineReader.java:75)
	at org.apache.druid.data.input.impl.JsonLineReader.parseInputRows(JsonLineReader.java:48)
	at org.apache.druid.data.input.IntermediateRowParsingReader$1.hasNext(IntermediateRowParsingReader.java:71)
	... 24 more
",
            "host": "localhost:8101",
            "stageNumber": 0,
            "taskId": "query-26d490c6-c06d-4cd2-938f-bc5f7f982754-worker0_0",
          },
          {
            "error": {
              "errorCode": "CannotParseExternalData",
              "errorMessage": "Unable to parse row [] (Path: https://static.imply.io/example-data/kttm-with-issues/kttm-blank-lines.json, Record: 6, Line: 7)",
            },
            "exceptionStackTrace": "org.apache.druid.java.util.common.parsers.ParseException: Unable to parse row [] (Path: https://static.imply.io/example-data/kttm-with-issues/kttm-blank-lines.json, Record: 6, Line: 7)
	at org.apache.druid.data.input.IntermediateRowParsingReader$1.hasNext(IntermediateRowParsingReader.java:79)
	at org.apache.druid.java.util.common.parsers.CloseableIterator$1.hasNext(CloseableIterator.java:42)
	at org.apache.druid.java.util.common.parsers.CloseableIterator$2.findNextIteratorIfNecessary(CloseableIterator.java:72)
	at org.apache.druid.java.util.common.parsers.CloseableIterator$2.hasNext(CloseableIterator.java:93)
	at org.apache.druid.java.util.common.parsers.CloseableIterator$1.hasNext(CloseableIterator.java:42)
	at org.apache.druid.msq.input.external.ExternalSegment$1$1.hasNext(ExternalSegment.java:95)
	at org.apache.druid.java.util.common.guava.BaseSequence$1.next(BaseSequence.java:115)
	at org.apache.druid.segment.RowWalker.advance(RowWalker.java:75)
	at org.apache.druid.segment.RowBasedCursor.advanceUninterruptibly(RowBasedCursor.java:110)
	at org.apache.druid.segment.RowBasedCursor.advance(RowBasedCursor.java:103)
	at org.apache.druid.msq.querykit.scan.ScanQueryFrameProcessor.populateFrameWriterAndFlushIfNeeded(ScanQueryFrameProcessor.java:362)
	at org.apache.druid.msq.querykit.scan.ScanQueryFrameProcessor.populateFrameWriterAndFlushIfNeededWithExceptionHandling(ScanQueryFrameProcessor.java:329)
	at org.apache.druid.msq.querykit.scan.ScanQueryFrameProcessor.runWithSegment(ScanQueryFrameProcessor.java:268)
	at org.apache.druid.msq.querykit.BaseLeafFrameProcessor.runIncrementally(BaseLeafFrameProcessor.java:89)
	at org.apache.druid.msq.querykit.scan.ScanQueryFrameProcessor.runIncrementally(ScanQueryFrameProcessor.java:158)
	at org.apache.druid.frame.processor.FrameProcessors$1FrameProcessorWithBaggage.runIncrementally(FrameProcessors.java:75)
	at org.apache.druid.frame.processor.FrameProcessorExecutor$1ExecutorRunnable.runProcessorNow(FrameProcessorExecutor.java:230)
	at org.apache.druid.frame.processor.FrameProcessorExecutor$1ExecutorRunnable.run(FrameProcessorExecutor.java:138)
	at org.apache.druid.msq.exec.WorkerImpl$1$2.run(WorkerImpl.java:840)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at org.apache.druid.query.PrioritizedListenableFutureTask.run(PrioritizedExecutorService.java:259)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)
Caused by: com.fasterxml.jackson.databind.exc.MismatchedInputException: No content to map due to end-of-input
 at [Source: (String)""; line: 1, column: 0]
	at com.fasterxml.jackson.databind.exc.MismatchedInputException.from(MismatchedInputException.java:59)
	at com.fasterxml.jackson.databind.ObjectMapper._initForReading(ObjectMapper.java:4688)
	at com.fasterxml.jackson.databind.ObjectMapper._readMapAndClose(ObjectMapper.java:4586)
	at com.fasterxml.jackson.databind.ObjectMapper.readValue(ObjectMapper.java:3548)
	at com.fasterxml.jackson.databind.ObjectMapper.readValue(ObjectMapper.java:3516)
	at org.apache.druid.data.input.impl.JsonLineReader.parseInputRows(JsonLineReader.java:75)
	at org.apache.druid.data.input.impl.JsonLineReader.parseInputRows(JsonLineReader.java:48)
	at org.apache.druid.data.input.IntermediateRowParsingReader$1.hasNext(IntermediateRowParsingReader.java:71)
	... 24 more
",
            "host": "localhost:8101",
            "stageNumber": 0,
            "taskId": "query-26d490c6-c06d-4cd2-938f-bc5f7f982754-worker0_0",
          },
        ],
      }
    }
  />
</Memo(FancyTabPane)>
`;
