// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`ExecutionStagesPane matches snapshot 1`] = `
<ReactTable
  AggregatedComponent={[Function]}
  ExpanderComponent={[Function]}
  FilterComponent={[Function]}
  LoadingComponent={[Function]}
  NoDataComponent={[Function]}
  PadRowComponent={[Function]}
  PaginationComponent={[Function]}
  PivotValueComponent={[Function]}
  ResizerComponent={[Function]}
  SubComponent={[Function]}
  TableComponent={[Function]}
  TbodyComponent={[Function]}
  TdComponent={[Function]}
  TfootComponent={[Function]}
  ThComponent={[Function]}
  TheadComponent={[Function]}
  TrComponent={[Function]}
  TrGroupComponent={[Function]}
  aggregatedKey="_aggregated"
  className="execution-stages-pane -striped -highlight padded-header"
  collapseOnDataChange={false}
  collapseOnPageChange={true}
  collapseOnSortingChange={true}
  column={
    Object {
      "Aggregated": undefined,
      "Cell": undefined,
      "Expander": undefined,
      "Filter": undefined,
      "Footer": undefined,
      "Header": undefined,
      "Pivot": undefined,
      "PivotValue": undefined,
      "Placeholder": undefined,
      "aggregate": undefined,
      "className": "",
      "filterAll": false,
      "filterMethod": undefined,
      "filterable": undefined,
      "footerClassName": "",
      "footerStyle": Object {},
      "getFooterProps": [Function],
      "getHeaderProps": [Function],
      "getProps": [Function],
      "headerClassName": "",
      "headerStyle": Object {},
      "minResizeWidth": 11,
      "minWidth": 100,
      "resizable": undefined,
      "show": true,
      "sortMethod": undefined,
      "sortable": undefined,
      "style": Object {},
    }
  }
  columns={
    Array [
      Object {
        "Cell": [Function],
        "Header": <React.Fragment>
          Stage
          <br />
          <i>
            processorType
          </i>
        </React.Fragment>,
        "accessor": "stageNumber",
        "className": "padded",
        "id": "stage",
        "width": 140,
      },
      Object {
        "Cell": [Function],
        "Header": "Counter",
        "accessor": "stageNumber",
        "className": "padded",
        "id": "counter",
        "width": 150,
      },
      Object {
        "Cell": [Function],
        "Header": <React.Fragment>
          Data processed
          <br />
          <i>
            rows   (size or files)
          </i>
        </React.Fragment>,
        "accessor": [Function],
        "className": "padded",
        "id": "data_processed",
        "width": 220,
      },
      Object {
        "Cell": [Function],
        "Header": <React.Fragment>
          Data processing rate
          <br />
          <i>
            rows/s   (data rate)
          </i>
        </React.Fragment>,
        "accessor": [Function],
        "className": "padded",
        "id": "data_processing_rate",
        "width": 200,
      },
      Object {
        "Header": "Phase",
        "accessor": [Function],
        "className": "padded",
        "id": "phase",
        "width": 130,
      },
      Object {
        "Cell": [Function],
        "Header": "Timing",
        "accessor": [Function],
        "className": "padded",
        "id": "timing",
        "width": 170,
      },
      Object {
        "Header": <React.Fragment>
          Num
          <br />
          workers
        </React.Fragment>,
        "accessor": "workerCount",
        "className": "padded",
        "width": 75,
      },
      Object {
        "Header": <React.Fragment>
          Output
          <br />
          partitions
        </React.Fragment>,
        "accessor": "partitionCount",
        "className": "padded",
        "width": 75,
      },
      Object {
        "Cell": [Function],
        "Header": "Cluster by",
        "accessor": [Function],
        "className": "padded",
        "id": "clusterBy",
        "minWidth": 400,
      },
    ]
  }
  data={
    Array [
      Object {
        "definition": Object {
          "id": "b94caff0-f693-47ed-a242-ccf837550383_0",
          "input": Array [
            Object {
              "inputFormat": Object {
                "assumeNewlineDelimited": false,
                "keepNullColumns": false,
                "type": "json",
                "useJsonNodeReader": false,
              },
              "inputSource": Object {
                "type": "http",
                "uris": Array [
                  "https://static.imply.io/example-data/kttm-v2/kttm-v2-2019-08-25.json.gz",
                ],
              },
              "signature": Array [
                Object {
                  "name": "timestamp",
                  "type": "STRING",
                },
                Object {
                  "name": "agent_type",
                  "type": "STRING",
                },
              ],
              "type": "external",
            },
          ],
          "maxWorkerCount": 1,
          "processor": Object {
            "query": Object {
              "columns": Array [
                "agent_type",
                "v0",
              ],
              "context": Object {
                "__timeColumn": "v0",
                "finalize": false,
                "finalizeAggregations": false,
                "groupByEnableMultiValueUnnesting": false,
                "queryId": "09af0c1e-1c0f-4539-917c-b0458849d0d9",
                "scanSignature": "[{\\"name\\":\\"agent_type\\",\\"type\\":\\"STRING\\"},{\\"name\\":\\"v0\\",\\"type\\":\\"LONG\\"}]",
                "sqlInsertSegmentGranularity": "{\\"type\\":\\"all\\"}",
                "sqlQueryId": "09af0c1e-1c0f-4539-917c-b0458849d0d9",
                "sqlReplaceTimeChunks": "all",
              },
              "dataSource": Object {
                "inputNumber": 0,
                "type": "inputNumber",
              },
              "granularity": Object {
                "type": "all",
              },
              "intervals": Object {
                "intervals": Array [
                  "-146136543-09-08T08:23:32.096Z/146140482-04-24T15:36:27.903Z",
                ],
                "type": "intervals",
              },
              "legacy": false,
              "queryType": "scan",
              "resultFormat": "compactedList",
              "virtualColumns": Array [
                Object {
                  "expression": "timestamp_parse(\\"timestamp\\",null,'UTC')",
                  "name": "v0",
                  "outputType": "LONG",
                  "type": "expression",
                },
              ],
            },
            "type": "scan",
          },
          "shuffleCheckHasMultipleValues": true,
          "shuffleSpec": Object {
            "clusterBy": Object {
              "columns": Array [
                Object {
                  "columnName": "__boost",
                },
              ],
            },
            "targetSize": 3000000,
            "type": "targetSize",
          },
          "signature": Array [
            Object {
              "name": "__boost",
              "type": "LONG",
            },
            Object {
              "name": "agent_type",
              "type": "STRING",
            },
            Object {
              "name": "v0",
              "type": "LONG",
            },
          ],
        },
        "duration": 4887,
        "partitionCount": 1,
        "phase": "FINISHED",
        "sort": true,
        "stageNumber": 0,
        "startTime": "2022-10-31T16:11:15.380Z",
        "workerCount": 1,
      },
      Object {
        "definition": Object {
          "id": "b94caff0-f693-47ed-a242-ccf837550383_1",
          "input": Array [
            Object {
              "stage": 0,
              "type": "stage",
            },
          ],
          "maxWorkerCount": 1,
          "processor": Object {
            "columnMappings": Array [
              Object {
                "outputColumn": "__time",
                "queryColumn": "v0",
              },
              Object {
                "outputColumn": "agent_type",
                "queryColumn": "agent_type",
              },
            ],
            "dataSchema": Object {
              "dataSource": "kttm_simple",
              "dimensionsSpec": Object {
                "dimensionExclusions": Array [
                  "__time",
                ],
                "dimensions": Array [
                  Object {
                    "createBitmapIndex": true,
                    "multiValueHandling": "SORTED_ARRAY",
                    "name": "agent_type",
                    "type": "string",
                  },
                ],
                "includeAllDimensions": false,
              },
              "granularitySpec": Object {
                "intervals": Array [
                  "-146136543-09-08T08:23:32.096Z/146140482-04-24T15:36:27.903Z",
                ],
                "queryGranularity": Object {
                  "type": "none",
                },
                "rollup": false,
                "type": "arbitrary",
              },
              "metricsSpec": Array [],
              "timestampSpec": Object {
                "column": "__time",
                "format": "millis",
                "missingValue": null,
              },
              "transformSpec": Object {
                "filter": null,
                "transforms": Array [],
              },
            },
            "tuningConfig": Object {
              "maxNumWorkers": 1,
              "maxRowsInMemory": 100000,
              "rowsPerSegment": 3000000,
            },
            "type": "segmentGenerator",
          },
          "signature": Array [],
        },
        "duration": 1908,
        "partitionCount": 1,
        "phase": "FINISHED",
        "stageNumber": 1,
        "startTime": "2022-10-31T16:11:20.264Z",
        "workerCount": 1,
      },
    ]
  }
  defaultExpanded={Object {}}
  defaultFilterMethod={[Function]}
  defaultFiltered={Array []}
  defaultPage={0}
  defaultPageSize={7}
  defaultResized={Array []}
  defaultSortDesc={false}
  defaultSortMethod={[Function]}
  defaultSorted={Array []}
  expanderDefaults={
    Object {
      "filterable": false,
      "resizable": false,
      "sortable": false,
      "width": 35,
    }
  }
  filterable={false}
  freezeWhenExpanded={false}
  getLoadingProps={[Function]}
  getNoDataProps={[Function]}
  getPaginationProps={[Function]}
  getProps={[Function]}
  getResizerProps={[Function]}
  getTableProps={[Function]}
  getTbodyProps={[Function]}
  getTdProps={[Function]}
  getTfootProps={[Function]}
  getTfootTdProps={[Function]}
  getTfootTrProps={[Function]}
  getTheadFilterProps={[Function]}
  getTheadFilterThProps={[Function]}
  getTheadFilterTrProps={[Function]}
  getTheadGroupProps={[Function]}
  getTheadGroupThProps={[Function]}
  getTheadGroupTrProps={[Function]}
  getTheadProps={[Function]}
  getTheadThProps={[Function]}
  getTheadTrProps={[Function]}
  getTrGroupProps={[Function]}
  getTrProps={[Function]}
  groupedByPivotKey="_groupedByPivot"
  indexKey="_index"
  loading={false}
  loadingText="Loading..."
  multiSort={true}
  nestingLevelKey="_nestingLevel"
  nextText="Next"
  noDataText="No stages"
  ofText="of"
  onFetchData={[Function]}
  originalKey="_original"
  pageJumpText="jump to page"
  pageSizeOptions={
    Array [
      5,
      10,
      20,
      25,
      50,
      100,
    ]
  }
  pageText="Page"
  pivotDefaults={Object {}}
  pivotIDKey="_pivotID"
  pivotValKey="_pivotVal"
  previousText="Previous"
  resizable={true}
  resolveData={[Function]}
  rowsSelectorText="rows per page"
  rowsText="rows"
  showPageJump={true}
  showPageSizeOptions={true}
  showPagination={false}
  showPaginationBottom={true}
  showPaginationTop={false}
  sortable={false}
  style={Object {}}
  subRowsKey="_subRows"
/>
`;
