// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`ExplainDialog matches snapshot on error 1`] = `
<Blueprint5.Dialog
  canOutsideClickClose={true}
  className="explain-dialog"
  isOpen={true}
  onClose={[Function]}
  title="Query plan"
>
  <div
    className="bp5-dialog-body"
  >
    <div>
      test error
    </div>
  </div>
  <div
    className="bp5-dialog-footer"
  >
    <div
      className="bp5-dialog-footer-actions"
    >
      <Blueprint5.Button
        onClick={[Function]}
        text="Close"
      />
    </div>
  </div>
</Blueprint5.Dialog>
`;

exports[`ExplainDialog matches snapshot on init 1`] = `
<Blueprint5.Dialog
  canOutsideClickClose={true}
  className="explain-dialog"
  isOpen={true}
  onClose={[Function]}
  title="Query plan"
>
  <div
    className="bp5-dialog-body"
  >
    <div />
  </div>
  <div
    className="bp5-dialog-footer"
  >
    <div
      className="bp5-dialog-footer-actions"
    >
      <Blueprint5.Button
        onClick={[Function]}
        text="Close"
      />
    </div>
  </div>
</Blueprint5.Dialog>
`;

exports[`ExplainDialog matches snapshot on loading 1`] = `
<Blueprint5.Dialog
  canOutsideClickClose={true}
  className="explain-dialog"
  isOpen={true}
  onClose={[Function]}
  title="Query plan"
>
  <div
    className="bp5-dialog-body"
  >
    <Memo(Loader) />
  </div>
  <div
    className="bp5-dialog-footer"
  >
    <div
      className="bp5-dialog-footer-actions"
    >
      <Blueprint5.Button
        onClick={[Function]}
        text="Close"
      />
    </div>
  </div>
</Blueprint5.Dialog>
`;

exports[`ExplainDialog matches snapshot on some data (many queries) 1`] = `
<Blueprint5.Dialog
  canOutsideClickClose={true}
  className="explain-dialog"
  isOpen={true}
  onClose={[Function]}
  title="Query plan"
>
  <div
    className="bp5-dialog-body"
  >
    <Blueprint5.Tabs
      animate={true}
      fill={false}
      large={false}
      renderActiveTabPanelOnly={true}
      vertical={true}
    >
      <Blueprint5.Tab
        disabled={false}
        id={0}
        panel={
          <div
            className="query-explanation"
          >
            <Blueprint5.FormGroup
              className="query-group"
            >
              <ReactAce
                className="query-string"
                cursorStart={1}
                editorProps={{}}
                enableBasicAutocompletion={false}
                enableLiveAutocompletion={false}
                enableSnippets={false}
                focus={false}
                fontSize={12}
                height="100%"
                highlightActiveLine={true}
                maxLines={null}
                minLines={null}
                mode="hjson"
                name="ace-editor"
                navigateToFileEnd={true}
                onChange={null}
                onLoad={null}
                onPaste={null}
                onScroll={null}
                placeholder={null}
                readOnly={true}
                scrollMargin={
                  [
                    0,
                    0,
                    0,
                    0,
                  ]
                }
                setOptions={{}}
                showGutter={true}
                showPrintMargin={false}
                style={{}}
                tabSize={4}
                theme="solarized_dark"
                value="{
  "queryType": "scan",
  "dataSource": {
    "type": "table",
    "name": "wikipedia"
  },
  "intervals": {
    "type": "intervals",
    "intervals": [
      "-146136543-09-08T08:23:32.096Z/146140482-04-24T15:36:27.903Z"
    ]
  },
  "virtualColumns": [],
  "resultFormat": "compactedList",
  "batchSize": 20480,
  "limit": 101,
  "filter": null,
  "columns": [
    "channel"
  ],
  "context": {},
  "descending": false,
  "granularity": {
    "type": "all"
  }
}"
                width="100%"
                wrapEnabled={false}
              />
            </Blueprint5.FormGroup>
            <Blueprint5.FormGroup
              className="signature-group"
              label="Signature"
            >
              <Blueprint5.InputGroup
                defaultValue="channel::STRING→channel"
                readOnly={true}
              />
            </Blueprint5.FormGroup>
            <Blueprint5.Button
              className="open-query"
              intent="primary"
              minimal={true}
              onClick={[Function]}
              rightIcon="arrow-top-right"
              text="Open query"
            />
          </div>
        }
        title="Query 1"
      />
      <Blueprint5.Tab
        disabled={false}
        id={1}
        panel={
          <div
            className="query-explanation"
          >
            <Blueprint5.FormGroup
              className="query-group"
            >
              <ReactAce
                className="query-string"
                cursorStart={1}
                editorProps={{}}
                enableBasicAutocompletion={false}
                enableLiveAutocompletion={false}
                enableSnippets={false}
                focus={false}
                fontSize={12}
                height="100%"
                highlightActiveLine={true}
                maxLines={null}
                minLines={null}
                mode="hjson"
                name="ace-editor"
                navigateToFileEnd={true}
                onChange={null}
                onLoad={null}
                onPaste={null}
                onScroll={null}
                placeholder={null}
                readOnly={true}
                scrollMargin={
                  [
                    0,
                    0,
                    0,
                    0,
                  ]
                }
                setOptions={{}}
                showGutter={true}
                showPrintMargin={false}
                style={{}}
                tabSize={4}
                theme="solarized_dark"
                value="{
  "queryType": "scan",
  "dataSource": {
    "type": "table",
    "name": "wikipedia"
  },
  "intervals": {
    "type": "intervals",
    "intervals": [
      "-146136543-09-08T08:23:32.096Z/146140482-04-24T15:36:27.903Z"
    ]
  },
  "virtualColumns": [],
  "resultFormat": "compactedList",
  "batchSize": 20480,
  "limit": 101,
  "filter": {
    "type": "selector",
    "dimension": "channel",
    "value": "#en.wikipedia",
    "extractionFn": null
  },
  "columns": [
    "channel"
  ],
  "context": {},
  "descending": false,
  "granularity": {
    "type": "all"
  }
}"
                width="100%"
                wrapEnabled={false}
              />
            </Blueprint5.FormGroup>
            <Blueprint5.FormGroup
              className="signature-group"
              label="Signature"
            >
              <Blueprint5.InputGroup
                defaultValue="channel::STRING→channel"
                readOnly={true}
              />
            </Blueprint5.FormGroup>
            <Blueprint5.Button
              className="open-query"
              intent="primary"
              minimal={true}
              onClick={[Function]}
              rightIcon="arrow-top-right"
              text="Open query"
            />
          </div>
        }
        title="Query 2"
      />
      <TabsExpander />
    </Blueprint5.Tabs>
  </div>
  <div
    className="bp5-dialog-footer"
  >
    <div
      className="bp5-dialog-footer-actions"
    >
      <Blueprint5.Button
        onClick={[Function]}
        text="Close"
      />
    </div>
  </div>
</Blueprint5.Dialog>
`;

exports[`ExplainDialog matches snapshot on some data (one query) 1`] = `
<Blueprint5.Dialog
  canOutsideClickClose={true}
  className="explain-dialog"
  isOpen={true}
  onClose={[Function]}
  title="Query plan"
>
  <div
    className="bp5-dialog-body"
  >
    <div
      className="query-explanation"
    >
      <Blueprint5.FormGroup
        className="query-group"
      >
        <ReactAce
          className="query-string"
          cursorStart={1}
          editorProps={{}}
          enableBasicAutocompletion={false}
          enableLiveAutocompletion={false}
          enableSnippets={false}
          focus={false}
          fontSize={12}
          height="100%"
          highlightActiveLine={true}
          maxLines={null}
          minLines={null}
          mode="hjson"
          name="ace-editor"
          navigateToFileEnd={true}
          onChange={null}
          onLoad={null}
          onPaste={null}
          onScroll={null}
          placeholder={null}
          readOnly={true}
          scrollMargin={
            [
              0,
              0,
              0,
              0,
            ]
          }
          setOptions={{}}
          showGutter={true}
          showPrintMargin={false}
          style={{}}
          tabSize={4}
          theme="solarized_dark"
          value="{
  "queryType": "topN",
  "dataSource": {
    "type": "join",
    "left": {
      "type": "table",
      "name": "wikipedia"
    },
    "right": {
      "type": "query",
      "query": {
        "queryType": "groupBy",
        "dataSource": {
          "type": "table",
          "name": "wikipedia"
        },
        "intervals": {
          "type": "intervals",
          "intervals": [
            "-146136543-09-08T08:23:32.096Z/146140482-04-24T15:36:27.903Z"
          ]
        },
        "virtualColumns": [],
        "filter": {
          "type": "selector",
          "dimension": "channel",
          "value": "#en.wikipedia",
          "extractionFn": null
        },
        "granularity": {
          "type": "all"
        },
        "dimensions": [
          {
            "type": "default",
            "dimension": "channel",
            "outputName": "d0",
            "outputType": "STRING"
          }
        ],
        "aggregations": [],
        "postAggregations": [],
        "having": null,
        "limitSpec": {
          "type": "NoopLimitSpec"
        },
        "context": {},
        "descending": false
      }
    },
    "rightPrefix": "j0.",
    "condition": "(\\"channel\\" == \\"j0.d0\\")",
    "joinType": "LEFT",
    "leftFilter": null
  },
  "virtualColumns": [],
  "dimension": {
    "type": "default",
    "dimension": "channel",
    "outputName": "d0",
    "outputType": "STRING"
  },
  "metric": {
    "type": "dimension",
    "previousStop": null,
    "ordering": {
      "type": "lexicographic"
    }
  },
  "threshold": 101,
  "intervals": {
    "type": "intervals",
    "intervals": [
      "-146136543-09-08T08:23:32.096Z/146140482-04-24T15:36:27.903Z"
    ]
  },
  "filter": null,
  "granularity": {
    "type": "all"
  },
  "aggregations": [
    {
      "type": "count",
      "name": "a0"
    }
  ],
  "postAggregations": [],
  "context": {},
  "descending": false
}"
          width="100%"
          wrapEnabled={false}
        />
      </Blueprint5.FormGroup>
      <Blueprint5.FormGroup
        className="signature-group"
        label="Signature"
      >
        <Blueprint5.InputGroup
          defaultValue="d0::STRING→channel, a0::LONG→"Count""
          readOnly={true}
        />
      </Blueprint5.FormGroup>
      <Blueprint5.Button
        className="open-query"
        intent="primary"
        minimal={true}
        onClick={[Function]}
        rightIcon="arrow-top-right"
        text="Open query"
      />
    </div>
  </div>
  <div
    className="bp5-dialog-footer"
  >
    <div
      className="bp5-dialog-footer-actions"
    >
      <Blueprint5.Button
        onClick={[Function]}
        text="Close"
      />
    </div>
  </div>
</Blueprint5.Dialog>
`;
