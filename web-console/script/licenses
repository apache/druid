#!/usr/bin/env node
/*
 * Licensed to the Apache Software Foundation (ASF) under one
 * or more contributor license agreements.  See the NOTICE file
 * distributed with this work for additional information
 * regarding copyright ownership.  The ASF licenses this file
 * to you under the Apache License, Version 2.0 (the
 * "License"); you may not use this file except in compliance
 * with the License.  You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

const fs = require('fs');
const checker = require('license-checker');
const yaml = require('js-yaml');

const LICENSES_FILE = '../licenses.yaml';
const LICENSES_FILE_INPUT = LICENSES_FILE; // './private/licenses_orig.yaml';
const SEPARATOR = '\n\n---\n\n';

const extraFromOldConsole = `
name: jQuery
license_category: source
module: web-console
license_name: MIT License
version: 1.11.0
copyright: jQuery Foundation, Inc.
license_file_path: licenses/src/jquery.MIT

---

name: jQuery UI
license_category: source
module: web-console
license_name: MIT License
version: 1.9.2
copyright: jQuery Foundation and other contributors
license_file_path: licenses/src/jquery-ui.MIT

---

name: demo_table.css and jquery.dataTables.js from DataTables
license_category: source
module: web-console
license_name: BSD-3-Clause License
version: 1.8.2
copyright: Allan Jardine.
license_file_path: licenses/src/datatables.BSD3

---

name: sizzle.js by way of jQuery
license_category: source
module: web-console
license_name: MIT License
version: 1.11.0
copyright: jQuery Foundation and other contributors
license_file_path: licenses/src/sizzle.MIT

---

name: underscore
license_category: source
module: web-console
license_name: MIT License
version: 1.2.2
copyright: Jeremy Ashkenas, DocumentCloud
license_file_path: licenses/src/underscore.MIT
`.trim().split(SEPARATOR);

function parseDesc(text) {
  return {
    text: text,
    json: yaml.safeLoad(text)
  };
}

function injectConsoleLicenses(consoleLicenses) {
  const text = fs.readFileSync(LICENSES_FILE_INPUT, 'utf-8');
  const textLines = text.split('\n');

  let ownLicense = '';
  while (textLines.length && textLines[0].startsWith('#')) {
    ownLicense += textLines[0] + '\n';
    textLines.shift();
  }

  const modules = textLines
    .join('\n')
    .trim()
    .split(SEPARATOR)
    .map(parseDesc)
    .filter(p => p.json.module !== 'web-console')
    .concat(consoleLicenses.map(parseDesc))
    .concat(extraFromOldConsole.map(parseDesc))
    //.sort((a, b) => String(a.json.module).localeCompare(b.json.module) || String(a.json.name).localeCompare(b.json.name))

  fs.writeFileSync(LICENSES_FILE, ownLicense + '\n' + modules.map(m => m.text).join(SEPARATOR) + '\n');
}

checker.init({
  start: '.',
  production: true
}, function(err, packages) {
  if (err) {
    console.log('err', err);
    return;
  }

  /*
  name: "@blueprintjs/core"
  license_category: binary
  module: web-console
  license_name: Apache License version 2.0
  copyright: Paul R. Holser, Jr.
  version: 1.0.1
  license_file_path: licenses/bin/jopt-simple.MIT
  */

  const mapped = Object.keys(packages).map(p => {
    const m = p.match(/^(.+)@(\d+\.\d+\.\d+.*)$/);
    if (!m) throw new Error(`Malformed name@version`);
    const name = m[1];
    if (name === 'web-console') return null; // This is me!

    const version = m[2];
    const meta = packages[p];
    const { publisher, licenses, licenseFile } = meta;
    if (!licenses) throw new Error(`Package '${p} does not have a licenses`);

    let properLicenseName;
    let licenseExt;
    switch (licenses) {
      case 'MIT':
        properLicenseName = 'MIT License';
        licenseExt = 'MIT';
        break;

      case 'Apache-2.0':
        properLicenseName = 'Apache License version 2.0';
        licenseExt = 'A2';
        break;

      case 'BSD-3-Clause':
        properLicenseName = 'BSD-3-Clause License';
        licenseExt = 'BSD3';
        break;

      default:
        throw new Error(`Unknown license '${licenses}'`);
    }

    const simpleName = name.replace('/', '-');
    const licenseDest = `licenses/bin/${simpleName}.${licenseExt}`

    let licenseCopied = false;
    if (licenseFile && licenseFile.match(/\/license(?:\.\w+)?/i)) {
      try {
        fs.copyFileSync(licenseFile, `../${licenseDest}`);
        licenseCopied = true;
      } catch (e) {
        console.log(meta);
        console.log(`Could not copy license for '${p}'`);
      }
    } else {
      console.log(meta);
      console.log(`Could not find license for '${p}'`);
    }

    const lines = [
      `name: "${name}"`,
      `license_category: binary`,
      `module: web-console`,
      `license_name: ${properLicenseName}`,
      publisher ? `copyright: ${publisher}` : null,
      `version: ${version}`,
      licenseCopied ? `license_file_path: ${licenseDest}` : null,
    ];

    return lines.filter(Boolean).join('\n');
  }).filter(Boolean);

  injectConsoleLicenses(mapped);
});

