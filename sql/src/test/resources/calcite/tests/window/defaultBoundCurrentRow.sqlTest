type: "operatorValidation"

sql: |
  SELECT
    dim2,
    count(*) OVER (partition by dim2 ORDER BY dim1 ROWS UNBOUNDED PRECEDING),
    count(*) OVER (partition by dim2 ORDER BY dim1 ROWS 1 PRECEDING),
    count(*) OVER (partition by dim2 ORDER BY dim1 ROWS CURRENT ROW),
    count(*) OVER (partition by dim2 ORDER BY dim1 ROWS 1 FOLLOWING),
    count(*) OVER (partition by dim2 ORDER BY dim1 ROWS UNBOUNDED FOLLOWING)
  FROM numfoo
  WHERE dim2 IN ('a', 'abc')
  GROUP BY dim2, dim1

expectedOperators:
  - {"type":"naiveSort","columns":[{"column":"_d1","direction":"ASC"},{"column":"_d0","direction":"ASC"}]}
  - { type: "naivePartition", partitionColumns: [ "_d1" ] }
  - type: "window"
    processor:
      type: "framedAgg"
      frame:
          peerType: "ROWS"
          lowUnbounded: true
          lowOffset: 0
          uppUnbounded: false
          uppOffset: 0
          orderBy: null
      aggregations:
        - { type: "count", name: "w0" }
  - type: "window"
    processor:
      type: "framedAgg"
      frame:
          peerType: "ROWS"
          lowUnbounded: false
          lowOffset: -1
          uppUnbounded: false
          uppOffset: 0
          orderBy: null
      aggregations:
        - { type: "count", name: "w1" }
  - type: "window"
    processor:
      type: "framedAgg"
      frame:
          peerType: "ROWS"
          lowUnbounded: false
          lowOffset: 0
          uppUnbounded: false
          uppOffset: 0
          orderBy: null
      aggregations:
        - { type: "count", name: "w2" }
  - type: "window"
    processor:
      type: "framedAgg"
      frame:
          peerType: "ROWS"
          lowUnbounded: false
          lowOffset: 0
          uppUnbounded: false
          uppOffset: 1
          orderBy: null
      aggregations:
        - { type: "count", name: "w3" }
  - type: "window"
    processor:
      type: "framedAgg"
      frame:
          peerType: "ROWS"
          lowUnbounded: false
          lowOffset: 0
          uppUnbounded: true
          uppOffset: 0
          orderBy: null
      aggregations:
        - { type: "count", name: "w4" }

expectedResults:
  - ["a",1,1,1,2,2]
  - ["a",2,2,1,1,1]
  - ["abc",1,1,1,1,1]
