!use druidtest://?numMergeBuffers=3
!set outputformat mysql

SELECT dim1, l.v from druid.foo f inner join lookup.lookyloo l on f.dim1 = l.k where f.dim2 is null;
LogicalProject(dim1=[$1], v=[$9])
  LogicalFilter(condition=[IS NULL($2)])
    LogicalJoin(condition=[=($1, $8)], joinType=[inner])
      LogicalTableScan(table=[[druid, foo]])
      LogicalTableScan(table=[[lookup, lookyloo]])

!druidPlan
{
  "queryType" : "scan",
  "dataSource" : {
    "type" : "join",
    "left" : {
      "type" : "table",
      "name" : "foo"
    },
    "right" : {
      "type" : "lookup",
      "lookup" : "lookyloo"
    },
    "rightPrefix" : "j0.",
    "condition" : "(\"dim1\" == \"j0.k\")",
    "joinType" : "INNER"
  },
  "intervals" : {
    "type" : "intervals",
    "intervals" : [ "-146136543-09-08T08:23:32.096Z/146140482-04-24T15:36:27.903Z" ]
  },
  "resultFormat" : "compactedList",
  "filter" : {
    "type" : "null",
    "column" : "dim2"
  },
  "columns" : [ "dim1", "j0.v" ],
  "columnTypes" : [ "STRING", "STRING" ],
  "granularity" : {
    "type" : "all"
  },
  "legacy" : false
}
!nativePlan
!set plannerStrategy DECOUPLED
!use druidtest://?numMergeBuffers=3

SELECT dim1, l.v from druid.foo f inner join lookup.lookyloo l on f.dim1 = l.k where f.dim2 is null;
J	DruidProject(dim1=[$0], v=[$3], druid=[logical])
J      DruidJoin(condition=[=($0, $2)], joinType=[inner])
LS        DruidAggregate
		    DruidFilter(condition=[IS NULL($1)])
		      DruidProject(dim1=[$1], dim2=[$2], druid=[logical])
		        DruidTableScan(table=[[druid, foo]], druid=[logical])
RS	    DruidTableScan(table=[[lookup, lookyloo]], druid=[logical])





LogicalProject(dim1=[$1], v=[$9])
  LogicalFilter(condition=[IS NULL($2)])
J   LogicalJoin(condition=[=($1, $8)], joinType=[inner])
S     DruidAggregate
        LogicalTableScan(table=[[druid, foo]])
      LogicalTableScan(table=[[lookup, lookyloo]])

scan
	join
		gby
			T
		T2



!druidPlan
{
  "queryType" : "scan",
  "dataSource" : {
    "type" : "join",
    "left" : {
      "type" : "query",
      "query" : {
        "queryType" : "scan",
        "dataSource" : {
          "type" : "table",
          "name" : "foo"
        },
        "intervals" : {
          "type" : "intervals",
          "intervals" : [ "-146136543-09-08T08:23:32.096Z/146140482-04-24T15:36:27.903Z" ]
        },
        "resultFormat" : "compactedList",
        "filter" : {
          "type" : "null",
          "column" : "dim2"
        },
        "columns" : [ "dim1", "dim2" ],
        "columnTypes" : [ "STRING", "STRING" ],
        "granularity" : {
          "type" : "all"
        },
        "legacy" : false
      }
    },
    "right" : {
      "type" : "lookup",
      "lookup" : "lookyloo"
    },
    "rightPrefix" : "j0.",
    "condition" : "(\"dim1\" == \"j0.k\")",
    "joinType" : "INNER"
  },
  "intervals" : {
    "type" : "intervals",
    "intervals" : [ "-146136543-09-08T08:23:32.096Z/146140482-04-24T15:36:27.903Z" ]
  },
  "resultFormat" : "compactedList",
  "columns" : [ "dim1", "j0.v" ],
  "columnTypes" : [ "STRING", "STRING" ],
  "granularity" : {
    "type" : "all"
  },
  "legacy" : false
}
!nativePlan
