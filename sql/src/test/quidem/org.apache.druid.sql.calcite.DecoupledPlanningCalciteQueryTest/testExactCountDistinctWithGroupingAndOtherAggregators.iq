# testExactCountDistinctWithGroupingAndOtherAggregators case-crc:046d1e3e
!set sqlQueryId dummy
!set sqlCurrentTimestamp 2000-01-01T00:00:00Z
!set defaultTimeout 300000
!set maxScatterGatherBytes 9223372036854775807
!set plannerStrategy DECOUPLED
!set debug true
!set outputformat mysql
!use druidtest:///
SELECT dim2, SUM(cnt), COUNT(distinct dim1) FROM druid.foo GROUP BY dim2;
+------+--------+--------+
| dim2 | EXPR$1 | EXPR$2 |
+------+--------+--------+
|      |      1 |      1 |
| a    |      2 |      2 |
| abc  |      1 |      1 |
|      |      2 |      2 |
+------+--------+--------+
(4 rows)

!ok
LogicalAggregate(group=[{2}], EXPR$1=[SUM($4)], EXPR$2=[COUNT(DISTINCT $1)])
  LogicalTableScan(table=[[druid, foo]])

!logicalPlan
DruidAggregate(group=[{2}], EXPR$1=[SUM($4)], EXPR$2=[COUNT(DISTINCT $1)], druid=[logical])
  DruidTableScan(table=[[druid, foo]], druid=[logical])

!druidPlan
{
  "queryType" : "groupBy",
  "dataSource" : {
    "type" : "table",
    "name" : "foo"
  },
  "intervals" : {
    "type" : "intervals",
    "intervals" : [ "-146136543-09-08T08:23:32.096Z/146140482-04-24T15:36:27.903Z" ]
  },
  "granularity" : {
    "type" : "all"
  },
  "dimensions" : [ {
    "type" : "default",
    "dimension" : "dim2",
    "outputName" : "d0",
    "outputType" : "STRING"
  } ],
  "aggregations" : [ {
    "type" : "longSum",
    "name" : "a0",
    "fieldName" : "cnt"
  }, {
    "type" : "cardinality",
    "name" : "a1",
    "fields" : [ {
      "type" : "default",
      "dimension" : "dim1",
      "outputName" : "dim1",
      "outputType" : "STRING"
    } ],
    "byRow" : false,
    "round" : true
  } ],
  "limitSpec" : {
    "type" : "NoopLimitSpec"
  }
}
!nativePlan
