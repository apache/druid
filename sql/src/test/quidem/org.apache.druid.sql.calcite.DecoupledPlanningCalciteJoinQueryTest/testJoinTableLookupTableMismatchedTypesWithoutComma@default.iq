# testJoinTableLookupTableMismatchedTypesWithoutComma@default case-crc:7765d2be
# quidem testcase reason: EQUIV_PLAN_CAST_MATERIALIZED_EARLIER
!set debug true
!set defaultTimeout 300000
!set maxScatterGatherBytes 9223372036854775807
!set plannerStrategy DECOUPLED
!set sqlCurrentTimestamp 2000-01-01T00:00:00Z
!set sqlQueryId dummy
!set outputformat mysql
!use druidtest:///
SELECT COUNT(*)
FROM foo
INNER JOIN lookup.lookyloo l ON foo.cnt = l.k
INNER JOIN numfoo ON l.k = numfoo.cnt
;
+--------+
| EXPR$0 |
+--------+
|      0 |
+--------+
(1 row)

!ok
LogicalAggregate(group=[{}], EXPR$0=[COUNT()])
  LogicalJoin(condition=[=($0, $1)], joinType=[inner])
    LogicalProject(k0=[CAST($1):BIGINT])
      LogicalJoin(condition=[=($0, $2)], joinType=[inner])
        LogicalProject(cnt=[$4])
          LogicalTableScan(table=[[druid, foo]])
        LogicalProject(k=[$0], k0=[CAST($0):BIGINT])
          LogicalTableScan(table=[[lookup, lookyloo]])
    LogicalProject(cnt=[$13])
      LogicalTableScan(table=[[druid, numfoo]])

!logicalPlan
DruidAggregate(group=[{}], EXPR$0=[COUNT()], druid=[logical])
  DruidJoin(condition=[=($0, $1)], joinType=[inner])
    DruidProject(k0=[CAST($1):BIGINT], druid=[logical])
      DruidJoin(condition=[=($0, $2)], joinType=[inner])
        DruidProject(cnt=[$4], druid=[logical])
          DruidTableScan(table=[[druid, foo]], druid=[logical])
        DruidProject(k=[$0], k0=[CAST($0):BIGINT], druid=[logical])
          DruidTableScan(table=[[lookup, lookyloo]], druid=[logical])
    DruidProject(cnt=[$13], druid=[logical])
      DruidTableScan(table=[[druid, numfoo]], druid=[logical])

!druidPlan
!nativePlan
