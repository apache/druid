# testInnerJoinSubqueryWithSelectorFilter@all_disabled case-crc:ab8e838b
# quidem testcase reason: FILTER_PUSHED_DOWN_FROM_JOIN_CAN_BE_MORE
!set debug true
!set defaultTimeout 300000
!set enableJoinFilterRewrite false
!set enableJoinFilterRewriteValueColumnFilters false
!set enableRewriteJoinToFilter false
!set maxScatterGatherBytes 9223372036854775807
!set plannerStrategy DECOUPLED
!set sqlCurrentTimestamp 2000-01-01T00:00:00Z
!set sqlQueryId dummy
!set outputformat mysql
!use druidtest:///
SELECT dim1, l1.k FROM foo INNER JOIN (select k || '' as k from lookup.lookyloo group by 1) l1 ON foo.dim1 = l1.k and l1.k = 'abc';
+------+-----+
| dim1 | k   |
+------+-----+
| abc  | abc |
+------+-----+
(1 row)

!ok
LogicalJoin(condition=[=($0, $1)], joinType=[inner])
  LogicalProject(dim1=[$1])
    LogicalTableScan(table=[[druid, foo]])
  LogicalFilter(condition=[=($0, 'abc')])
    LogicalAggregate(group=[{0}])
      LogicalProject(k=[||($0, '')])
        LogicalTableScan(table=[[lookup, lookyloo]])

!logicalPlan
DruidJoin(condition=[=($0, $1)], joinType=[inner])
  DruidProject(dim1=[$1], druid=[logical])
    DruidTableScan(table=[[druid, foo]], druid=[logical])
  DruidFilter(condition=[=($0, 'abc')])
    DruidAggregate(group=[{0}], druid=[logical])
      DruidProject(k=[||($0, '')], druid=[logical])
        DruidTableScan(table=[[lookup, lookyloo]], druid=[logical])

!druidPlan
!nativePlan
