# testVirtualColumnOnMVFilterMultiJoinExpression@default case-crc:0f7e2c53
# quidem testcase reason: DEFINETLY_WORSE_PLAN
!set debug true
!set defaultTimeout 300000
!set maxScatterGatherBytes 9223372036854775807
!set plannerStrategy DECOUPLED
!set sqlCurrentTimestamp 2000-01-01T00:00:00Z
!set sqlQueryId dummy
!set outputformat mysql
!use druidtest:///
SELECT foo1.dim3, foo2.dim3 FROM druid.numfoo as foo1 INNER JOIN (SELECT foo3.dim3 FROM druid.numfoo as foo3 INNER JOIN druid.numfoo as foo4    ON MV_FILTER_ONLY(foo3.dim3, ARRAY['a']) = MV_FILTER_ONLY(foo4.dim3, ARRAY['a'])) as foo2 ON MV_FILTER_ONLY(foo1.dim3, ARRAY['a']) = MV_FILTER_ONLY(foo2.dim3, ARRAY['a'])
;
+-----------+-----------+
| dim3      | dim3      |
+-----------+-----------+
| ["a","b"] | ["a","b"] |
+-----------+-----------+
(1 row)

!ok
LogicalProject(dim3=[$0], dim30=[$2])
  LogicalJoin(condition=[=($1, $3)], joinType=[inner])
    LogicalProject(dim3=[$3], $f17=[MV_FILTER_ONLY($3, ARRAY('a'))])
      LogicalTableScan(table=[[druid, numfoo]])
    LogicalProject(dim3=[$0], $f1=[MV_FILTER_ONLY($0, ARRAY('a'))])
      LogicalJoin(condition=[=($1, $2)], joinType=[inner])
        LogicalProject(dim3=[$3], $f17=[MV_FILTER_ONLY($3, ARRAY('a'))])
          LogicalTableScan(table=[[druid, numfoo]])
        LogicalProject($f17=[MV_FILTER_ONLY($3, ARRAY('a'))])
          LogicalTableScan(table=[[druid, numfoo]])

!logicalPlan
DruidProject(dim3=[$0], dim30=[$2], druid=[logical])
  DruidJoin(condition=[=($1, $3)], joinType=[inner])
    DruidProject(dim3=[$3], $f17=[MV_FILTER_ONLY($3, ARRAY('a'))], druid=[logical])
      DruidTableScan(table=[[druid, numfoo]], druid=[logical])
    DruidProject(dim3=[$0], $f1=[MV_FILTER_ONLY($0, ARRAY('a'))], druid=[logical])
      DruidJoin(condition=[=($1, $2)], joinType=[inner])
        DruidProject(dim3=[$3], $f17=[MV_FILTER_ONLY($3, ARRAY('a'))], druid=[logical])
          DruidTableScan(table=[[druid, numfoo]], druid=[logical])
        DruidProject($f17=[MV_FILTER_ONLY($3, ARRAY('a'))], druid=[logical])
          DruidTableScan(table=[[druid, numfoo]], druid=[logical])

!druidPlan
!nativePlan
