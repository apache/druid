# testCommaJoinTableLookupTableMismatchedTypes@filter-on-value-column_disabled case-crc:98c3c89c
# quidem testcase reason: IRRELEVANT_SCANQUERY
!set debug true
!set defaultTimeout 300000
!set enableJoinFilterRewrite true
!set enableJoinFilterRewriteValueColumnFilters false
!set enableRewriteJoinToFilter true
!set maxScatterGatherBytes 9223372036854775807
!set plannerStrategy DECOUPLED
!set sqlCurrentTimestamp 2000-01-01T00:00:00Z
!set sqlQueryId dummy
!set outputformat mysql
!use druidtest:///
SELECT COUNT(*)
FROM foo, lookup.lookyloo l, numfoo
WHERE foo.cnt = l.k AND l.k = numfoo.cnt
;
+--------+
| EXPR$0 |
+--------+
|      0 |
+--------+
(1 row)

!ok
LogicalAggregate(group=[{}], EXPR$0=[COUNT()])
  LogicalJoin(condition=[=($2, $3)], joinType=[inner])
    LogicalFilter(condition=[=($0, CAST($1):BIGINT)])
      LogicalProject(cnt=[$0], k=[$1], k0=[CAST($1):BIGINT])
        LogicalJoin(condition=[true], joinType=[inner])
          LogicalProject(cnt=[$4])
            LogicalTableScan(table=[[druid, foo]])
          LogicalProject(k=[$0])
            LogicalTableScan(table=[[lookup, lookyloo]])
    LogicalProject(cnt=[$13])
      LogicalTableScan(table=[[druid, numfoo]])

!logicalPlan
DruidAggregate(group=[{}], EXPR$0=[COUNT()], druid=[logical])
  DruidJoin(condition=[=($2, $3)], joinType=[inner])
    DruidFilter(condition=[=($0, CAST($1):BIGINT)])
      DruidProject(cnt=[$0], k=[$1], k0=[CAST($1):BIGINT], druid=[logical])
        DruidJoin(condition=[true], joinType=[inner])
          DruidProject(cnt=[$4], druid=[logical])
            DruidTableScan(table=[[druid, foo]], druid=[logical])
          DruidProject(k=[$0], druid=[logical])
            DruidTableScan(table=[[lookup, lookyloo]], druid=[logical])
    DruidProject(cnt=[$13], druid=[logical])
      DruidTableScan(table=[[druid, numfoo]], druid=[logical])

!druidPlan
!nativePlan
