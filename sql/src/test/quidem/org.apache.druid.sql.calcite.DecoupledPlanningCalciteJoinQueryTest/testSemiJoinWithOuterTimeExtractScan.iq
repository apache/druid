# testSemiJoinWithOuterTimeExtractScan case-crc:f91c4c1d
# quidem testcase reason: SLIGHTLY_WORSE_FILTER_PUSHED_TO_JOIN_OPERAND
!set debug true
!set defaultTimeout 300000
!set maxScatterGatherBytes 9223372036854775807
!set plannerStrategy DECOUPLED
!set sqlCurrentTimestamp 2000-01-01T00:00:00Z
!set sqlQueryId dummy
!set outputformat mysql
!use druidtest:///
SELECT dim1, EXTRACT(MONTH FROM __time) FROM druid.foo
 WHERE dim2 IN (
   SELECT dim2
   FROM druid.foo
   WHERE dim1 = 'def'
 ) AND dim1 <> '';
+------+--------+
| dim1 | EXPR$1 |
+------+--------+
| def  |      1 |
+------+--------+
(1 row)

!ok
LogicalProject(dim1=[$1], EXPR$1=[EXTRACT(FLAG(MONTH), $0)])
  LogicalJoin(condition=[=($2, $3)], joinType=[inner])
    LogicalFilter(condition=[<>($1, '')])
      LogicalProject(__time=[$0], dim1=[$1], dim2=[$2])
        LogicalTableScan(table=[[druid, foo]])
    LogicalAggregate(group=[{2}])
      LogicalFilter(condition=[=($1, 'def')])
        LogicalTableScan(table=[[druid, foo]])

!logicalPlan
DruidProject(dim1=[$1], EXPR$1=[EXTRACT(FLAG(MONTH), $0)], druid=[logical])
  DruidJoin(condition=[=($2, $3)], joinType=[inner])
    DruidFilter(condition=[<>($1, '')])
      DruidProject(__time=[$0], dim1=[$1], dim2=[$2], druid=[logical])
        DruidTableScan(table=[[druid, foo]], druid=[logical])
    DruidAggregate(group=[{2}], druid=[logical])
      DruidFilter(condition=[=($1, 'def')])
        DruidTableScan(table=[[druid, foo]], druid=[logical])

!druidPlan
!nativePlan
