# testExactTopNOnInnerJoinWithLimit@NullHandling=sql case-crc:1b8b1878
# quidem testcase reason: EQUIV_PLAN
!set debug true
!set defaultTimeout 300000
!set maxScatterGatherBytes 9223372036854775807
!set plannerStrategy DECOUPLED
!set sqlCurrentTimestamp 2000-01-01T00:00:00Z
!set sqlQueryId dummy
!set useApproximateTopN false
!set outputformat mysql
!use druidtest:///?minTopNThreshold=1
select f1."dim4", sum("m1") from numfoo f1 inner join (
  select "dim4" from numfoo where dim4 <> 'a' group by 1
) f2 on f1."dim4" = f2."dim4" group by 1 limit 1;
+------+--------+
| dim4 | EXPR$1 |
+------+--------+
| b    |   15.0 |
+------+--------+
(1 row)

!ok
LogicalSort(fetch=[1])
  LogicalAggregate(group=[{0}], EXPR$1=[SUM($1)])
    LogicalJoin(condition=[=($0, $2)], joinType=[inner])
      LogicalProject(dim4=[$4], m1=[$14])
        LogicalTableScan(table=[[druid, numfoo]])
      LogicalAggregate(group=[{4}])
        LogicalFilter(condition=[<>($4, 'a')])
          LogicalTableScan(table=[[druid, numfoo]])

!logicalPlan
DruidSort(fetch=[1], druid=[logical])
  DruidAggregate(group=[{0}], EXPR$1=[SUM($1)], druid=[logical])
    DruidJoin(condition=[=($0, $2)], joinType=[inner])
      DruidProject(dim4=[$4], m1=[$14], druid=[logical])
        DruidTableScan(table=[[druid, numfoo]], druid=[logical])
      DruidAggregate(group=[{4}], druid=[logical])
        DruidFilter(condition=[<>($4, 'a')])
          DruidTableScan(table=[[druid, numfoo]], druid=[logical])

!druidPlan
!nativePlan
