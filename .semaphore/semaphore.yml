version: v1.0
name: Apache Druid
agent:
  machine:
    type: s1-prod-ubuntu20-04-amd64-1

blocks:
  - name: "Install"
    task:
      env_vars: &env_vars
        - name: MVN
          value: "mvn -B"
        - name: MAVEN_OPTS
          value: "-Dmaven.repo.local=.m2"
        - name: MAVEN_SKIP
          value: >
            -Danimal.sniffer.skip=true
            -Dcheckstyle.skip=true
            -Ddruid.console.skip=true
            -Denforcer.skip=true
            -Dforbiddenapis.skip=true
            -Dmaven.javadoc.skip=true
            -Dpmd.skip=true
            -Dspotbugs.skip=true

        - name: MAVEN_SKIP_TESTS
          value: "-DskipTests -Djacoco.skip=true"
      prologue:
        commands:
          - echo $SEMAPHORE_WORKFLOW_ID
          - sem-version java 17
          - checkout
      jobs:
        - name: "Install"
          commands:
            - cache restore
            - >
              MAVEN_OPTS="${MAVEN_OPTS} -Xmx3000m" ${MVN} clean install
              -q -ff ${MAVEN_SKIP} ${MAVEN_SKIP_TESTS} -T1C
            - cache store

  - name: "Tests"
    task:
      env_vars: *env_vars
      prologue:
        commands:
          - echo $SEMAPHORE_WORKFLOW_ID
          - sem-version java 17
          - checkout
          - cache restore
      jobs:
        - name: "animal sniffer checks"
          commands:
            - ${MVN} test-compile ${MAVEN_SKIP} ${MAVEN_SKIP_TESTS}
            - ${MVN} animal-sniffer:check --fail-at-end

        - name: "checkstyle"
          commands:
            - ${MVN} checkstyle:checkstyle --fail-at-end

        - name: "enforcer checks"
          commands:
            - ${MVN} enforcer:enforce --fail-at-end

        - name: "forbidden api checks"
          commands:
            - ${MVN} test-compile ${MAVEN_SKIP} ${MAVEN_SKIP_TESTS}
            - ${MVN} forbiddenapis:check forbiddenapis:testCheck --fail-at-end

        - name: "pmd checks"
          commands:
            - ${MVN} pmd:check --fail-at-end  # TODO: consider adding pmd:cpd-check

        - name: "spotbugs checks"
          commands:
            - ${MVN} spotbugs:check --fail-at-end -pl '!benchmarks'

        - name: "analyze dependencies"
          commands:
            - >
              ${MVN} ${MAVEN_SKIP} dependency:analyze -DoutputXML=true -DignoreNonCompile=true -DfailOnWarning=true --fail-at-end || { echo "

              The dependency analysis has found a dependency that is either:
              1) Used and undeclared: These are available as a transitive dependency but should be explicitly
              added to the POM to ensure the dependency version. The XML to add the dependencies to the POM is
              shown above.
              2) Unused and declared: These are not needed and removing them from the POM will speed up the build
              and reduce the artifact size. The dependencies to remove are shown above.
              If there are false positive dependency analysis warnings, they can be suppressed:
              https://maven.apache.org/plugins/maven-dependency-plugin/analyze-mojo.html#usedDependencies
              https://maven.apache.org/plugins/maven-dependency-plugin/examples/exclude-dependencies-from-dependency-analysis.html
              For more information, refer to:
              https://maven.apache.org/plugins/maven-dependency-plugin/analyze-mojo.html
              " && false; }

        - name: "Confluent Extensions"
          env_vars:
            - name: MAVEN_PROJECTS
              value: extensions-contrib/confluent-extensions
          commands: &run_tests
            - >
              MAVEN_OPTS="${MAVEN_OPTS} -Xmx1g" ${MVN} test -pl ${MAVEN_PROJECTS}
              ${MAVEN_SKIP} -Dremoteresources.skip=true

        - name: "Server"
          env_vars:
            - name: MAVEN_PROJECTS
              value: server
          commands: *run_tests

        - name: "Processing"
          env_vars:
            - name: MAVEN_PROJECTS
              value: processing
          commands: *run_tests

        - name: "Indexing Service"
          env_vars:
            - name: MAVEN_PROJECTS
              value: indexing-service
          commands: *run_tests

        - name: "Kafka Indexing Service"
          env_vars:
            - name: MAVEN_PROJECTS
              value: extensions-core/kafka-indexing-service
          commands: *run_tests

        - name: "Other Tests"
          env_vars:
            - name: MAVEN_PROJECTS
              value: '!server,!processing,!indexing-service,!extensions-core/kafka-indexing-service,!extensions-contrib/confluent-extensions,!integration-tests-ex/cases'
          commands: *run_tests
