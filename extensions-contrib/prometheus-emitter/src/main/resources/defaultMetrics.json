
{
  "query/time" : { "dimensions" : ["service", "dataSource", "type"], "type" : "timer", "conversionFactor": 1000.0, "help":  "Seconds taken to complete a query."},
  "query/bytes" : { "dimensions" : ["service", "dataSource", "type"], "type" : "count", "help":  "Number of bytes returned in query response."},
  "query/node/time" : { "dimensions" : ["service", "server"], "type" : "timer", "conversionFactor": 1000.0, "help": "Seconds taken to query individual historical/realtime processes."},
  "query/node/ttfb" : { "dimensions" : ["service", "server"], "type" : "timer", "help":  "Time to first byte. Seconds elapsed until Broker starts receiving the response from individual historical/realtime processes."},
  "query/node/bytes" : { "dimensions" : ["service", "server"], "type" : "count", "help": "Number of bytes returned from querying individual historical/realtime processes."},
  "query/node/backpressure": { "dimensions" : ["service", "server"], "type" : "timer", "help": "Seconds that the channel to this process has spent suspended due to backpressure."},
  "query/intervalChunk/time" : { "dimensions" : ["service"], "type" : "timer", "conversionFactor": 1000.0, "help": "Only emitted if interval chunking is enabled. Milliseconds required to query an interval chunk. This metric is deprecated and will be removed in the future because interval chunking is deprecated."},

  "query/segment/time" : { "dimensions" : ["service"], "type" : "timer", "conversionFactor": 1000.0, "help": "Seconds taken to query individual segment. Includes time to page in the segment from disk."},
  "query/wait/time" : { "dimensions" : ["service"], "type" : "timer", "conversionFactor": 1000.0, "help": "Seconds spent waiting for a segment to be scanned."},
  "segment/scan/pending" : { "dimensions" : ["service"], "type" : "gauge", "help": "Number of segments in queue waiting to be scanned."},
  "query/segmentAndCache/time" : { "dimensions" : ["service"], "type" : "timer", "conversionFactor": 1000.0, "help": "Seconds taken to query individual segment or hit the cache (if it is enabled on the Historical process)."},
  "query/cpu/time" : { "dimensions" : ["service", "dataSource", "type"], "type" : "timer", "conversionFactor": "1000000", "help": "Seconds of CPU time taken to complete a query"},

  "query/count" : { "dimensions" : ["service"], "type" : "count", "help": "Number of total queries" },
  "query/success/count" : { "dimensions" : ["service"], "type" : "count", "help": "Number of queries successfully processed"},
  "query/failed/count" : { "dimensions" : ["service"], "type" : "count", "help": "Number of failed queries"},
  "query/interrupted/count" : { "dimensions" : ["service"], "type" : "count", "help": "Number of queries interrupted due to cancellation or timeout"},

  "jetty/numOpenConnections": { "dimensions" : ["service"], "type" : "gauge","help": "number of jetty connections " },
  "query/cache/delta/numEntries" : { "dimensions" : ["service"], "type" : "count", "help": "Number of entries in cache"},
  "query/cache/delta/sizeBytes" : { "dimensions" : ["service"], "type" : "count", "help": "Size of cache in bytes."},
  "query/cache/delta/hits" : { "dimensions" : ["service"], "type" : "count", "help": "Number of cache hits."},
  "query/cache/delta/misses" : { "dimensions" : ["service"], "type" : "count", "help": "Number of cache misses."},
  "query/cache/delta/evictions" : { "dimensions" : ["service"], "type" : "count", "help": "Number of cache evictions."},
  "query/cache/delta/hitRate" : { "dimensions" : ["service"], "type" : "count","help": "Cache hit rate."},
  "query/cache/delta/averageBytes" : { "dimensions" : ["service"], "type" : "count", "help": "Average size of record in bytes"},
  "query/cache/delta/timeouts" : { "dimensions" : ["service"], "type" : "count", "help": "Number of cache timeouts"},
  "query/cache/delta/errors" : { "dimensions" : ["service"], "type" : "count", "help": "Number of cache errors."},

  "query/cache/total/numEntries" : { "dimensions" : ["service"], "type" : "gauge","help": "Total number of entries in cache" },
  "query/cache/total/sizeBytes" : { "dimensions" : ["service"], "type" : "gauge", "help": "Total size of cache in bytes."},
  "query/cache/total/hits" : { "dimensions" : ["service"], "type" : "gauge", "help": "Total number of cache hits."},
  "query/cache/total/misses" : { "dimensions" : ["service"], "type" : "gauge", "help": "Total number of cache misses." },
  "query/cache/total/evictions" : { "dimensions" : ["service"], "type" : "gauge", "help": "Total number of cache evictions."},
  "query/cache/total/hitRate" : { "dimensions" : ["service"], "type" : "gauge", "help": "Total cache hit rate"},
  "query/cache/total/averageBytes" : { "dimensions" : ["service"], "type" : "gauge", "help": "Total average record size in bytes"},
  "query/cache/total/timeouts" : { "dimensions" : ["service"], "type" : "gauge", "help": "Total number of cache timeouts"},
  "query/cache/total/errors" : { "dimensions" : ["service"], "type" : "gauge", "help": "Total number of cache errors" },

  "ingest/events/thrownAway" : { "dimensions" : ["service", "dataSource"], "type" : "count", "help": "Number of events rejected because they are outside the windowPeriod."},
  "ingest/events/unparseable" : { "dimensions" : ["service", "dataSource"], "type" : "count", "help": "Number of events rejected because the events are unparseable." },
  "ingest/events/duplicate" : { "dimensions" : ["service", "dataSource"], "type" : "count", "help": "Number of events rejected because the events are duplicated."},
  "ingest/events/processed" : { "dimensions" : ["service", "dataSource"], "type" : "count", "help": "Number of events successfully processed per emission period." },
  "ingest/events/messageGap" : { "dimensions" : ["service", "dataSource"], "type" : "gauge", "help": "Time gap between the data time in event and current system time."},
  "ingest/rows/output" : { "dimensions" : ["service", "dataSource"], "type" : "count", "help": "Number of Druid rows persisted."},
  "ingest/persists/count" : { "dimensions" : ["service", "dataSource"], "type" : "count", "help": "Number of times persist occurred." },
  "ingest/persists/time" : { "dimensions" : ["service", "dataSource"], "type" : "timer", "conversionFactor": 1000.0, "help": "Seconds spent doing intermediate persist."},
  "ingest/persists/cpu" : { "dimensions" : ["service", "dataSource"], "type" : "timer", "conversionFactor": 1000000000.0, "help": "Cpu time in Seconds spent on doing intermediate persist." },
  "ingest/persists/backPressure" : { "dimensions" : ["service", "dataSource"], "type" : "gauge", "help": "Seconds spent creating persist tasks and blocking waiting for them to finish." },
  "ingest/persists/failed" : { "dimensions" : ["service", "dataSource"], "type" : "count", "help": "Number of persists that failed." },
  "ingest/handoff/failed" : { "dimensions" : ["service", "dataSource"], "type" : "count", "help": "Number of handoffs that failed." },
  "ingest/merge/time" : { "dimensions" : ["service", "dataSource"], "type" : "timer", "conversionFactor": 1000.0, "help": "Seconds spent merging intermediate segments" },
  "ingest/merge/cpu" : { "dimensions" : ["service", "dataSource"], "type" : "timer", "conversionFactor": 1000000000.0, "help": "Cpu time in Seconds spent on merging intermediate segments."},

  "ingest/kafka/lag" : { "dimensions" : ["service", "dataSource"], "type" : "gauge", "help": "Total lag between the offsets consumed by the Kafka indexing tasks and latest offsets in Kafka brokers across all partitions. Minimum emission period for this metric is a minute."},
  "ingest/kafka/maxLag" : { "dimensions" : ["service", "dataSource"], "type" : "gauge", "help": "Max lag between the offsets consumed by the Kafka indexing tasks and latest offsets in Kafka brokers across all partitions. Minimum emission period for this metric is a minute."},
  "ingest/kafka/avgLag" : { "dimensions" : ["service", "dataSource"], "type" : "gauge", "help": "Average lag between the offsets consumed by the Kafka indexing tasks and latest offsets in Kafka brokers across all partitions. Minimum emission period for this metric is a minute."},

  "task/success/count" : { "dimensions" : ["service", "dataSource"], "type" : "count", "help": "Number of successful tasks per emission period. This metric is only available if the TaskCountStatsMonitor module is included."},
  "task/failed/count" : { "dimensions" : ["service", "dataSource"], "type" : "count", "help": "Number of failed tasks per emission period. This metric is only available if the TaskCountStatsMonitor module is included."},
  "task/running/count" : { "dimensions" : ["service", "dataSource"], "type" : "count", "help": "Number of current running tasks. This metric is only available if the TaskCountStatsMonitor module is included."},
  "task/pending/count" : { "dimensions" : ["service", "dataSource"], "type" : "count", "help": "Number of current pending tasks. This metric is only available if the TaskCountStatsMonitor module is included."},
  "task/waiting/count" : { "dimensions" : ["service", "dataSource"], "type" : "count", "help":  "Number of current waiting tasks. This metric is only available if the TaskCountStatsMonitor module is included."},
  "task/run/time" : { "dimensions" : ["service", "dataSource", "taskType"], "type" : "timer", "conversionFactor": 1000.0, "help": "Milliseconds taken to run a task."},

  "segment/added/bytes" : { "dimensions" : ["service", "dataSource", "taskType"], "type" : "count", "help": "Size in bytes of new segments created." },
  "segment/moved/bytes" : { "dimensions" : ["service", "dataSource", "taskType"], "type" : "count", "help": "Size in bytes of segments moved/archived via the Move Task." },
  "segment/nuked/bytes" : { "dimensions" : ["service", "dataSource", "taskType"], "type" : "count", "help": "Size in bytes of segments deleted via the Kill Task." },

  "segment/assigned/count" : { "dimensions" : ["service", "tier"], "type" : "count", "help": "Number of segments assigned to be loaded in the cluster."},
  "segment/moved/count" : { "dimensions" : ["service", "tier"], "type" : "count", "help": "Number of segments moved in the cluster." },
  "segment/dropped/count" : { "dimensions" : ["service", "tier"], "type" : "count", "help": "Number of segments dropped due to being overshadowed." },
  "segment/deleted/count" : { "dimensions" : ["service", "tier"], "type" : "count", "help": "Number of segments dropped due to rules."},
  "segment/unneeded/count" : { "dimensions" : ["service", "tier"], "type" : "count", "help": "Number of segments dropped due to being marked as unused."},
  "segment/unavailable/count" : { "dimensions" : ["service", "dataSource"], "type" : "gauge", "help": "Number of segments (not including replicas) left to load until segments that should be loaded in the cluster are available for queries."},
  "segment/underReplicated/count" : { "dimensions" : ["service", "dataSource", "tier"], "type" : "gauge", "help": "Number of segments (including replicas) left to load until segments that should be loaded in the cluster are available for queries."},
  "segment/cost/raw" : { "dimensions" : ["service", "tier"], "type" : "count", "help": "Used in cost balancing. The raw cost of hosting segments."},
  "segment/cost/normalization" : { "dimensions" : ["service", "tier"], "type" : "count", "help": "Used in cost balancing. The normalization of hosting segments."},
  "segment/cost/normalized" : { "dimensions" : ["service", "tier"], "type" : "count", "help": "Used in cost balancing. The normalized cost of hosting segments."},
  "segment/loadQueue/size" : { "dimensions" : ["service", "server"], "type" : "gauge", "help": "Size in bytes of segments to load."},
  "segment/loadQueue/failed" : { "dimensions" : ["service", "server"], "type" : "gauge", "help": "Number of segments that failed to load."},
  "segment/loadQueue/count" : { "dimensions" : ["service", "server"], "type" : "gauge", "help": "Number of segments to load."},
  "segment/dropQueue/count" : { "dimensions" : ["service", "server"], "type" : "gauge", "help": "Number of segments to drop."},
  "segment/size" : { "dimensions" : ["service", "dataSource"], "type" : "gauge", "help": "Size in bytes of available segments."},
  "segment/overShadowed/count" : { "dimensions" : ["service"], "type" : "gauge", "help": "Number of overShadowed segments."},

  "segment/max" : { "dimensions" : ["service"], "type" : "gauge", "help": "Maximum byte limit available for segments."},
  "segment/used" : { "dimensions" : ["service", "dataSource", "tier", "priority"], "type" : "gauge", "help": "Bytes used for served segments."},
  "segment/usedPercent" : { "dimensions" : ["service", "dataSource", "tier", "priority"], "type" : "gauge", "help": "Percentage of space used by served segments."},
  "segment/pendingDelete" : { "dimensions" : ["service"], "type" : "gauge", "help": "On-disk size in bytes of segments that are waiting to be cleared out"},

  "jvm/pool/committed" : { "dimensions" : ["service", "poolKind", "poolName"], "type" : "gauge", "help": "Committed pool."},
  "jvm/pool/init" : { "dimensions" : ["service", "poolKind", "poolName"], "type" : "gauge", "help": "Initial pool."},
  "jvm/pool/max" : { "dimensions" : ["service", "poolKind", "poolName"], "type" : "gauge", "help": "Max pool."},
  "jvm/pool/used" : { "dimensions" : ["service", "poolKind", "poolName"], "type" : "gauge", "help": "Pool used."},
  "jvm/bufferpool/count" : { "dimensions" : ["service", "bufferpoolName"], "type" : "gauge", "help": "bufferpool count"},
  "jvm/bufferpool/used" : { "dimensions" : ["service", "bufferpoolName"], "type" : "gauge", "help": "bufferpool used"},
  "jvm/bufferpool/capacity" : { "dimensions" : ["service", "bufferpoolName"], "type" : "gauge", "help": "bufferpool capacity"},
  "jvm/mem/init" : { "dimensions" : ["service", "memKind"], "type" : "gauge", "help":  "Initial memory"},
  "jvm/mem/max" : { "dimensions" : ["service", "memKind"], "type" : "gauge", "help": "Max memory"},
  "jvm/mem/used" : { "dimensions" : ["service", "memKind"], "type" : "gauge", "help": "Used memory"},
  "jvm/mem/committed" : { "dimensions" : ["service", "memKind"], "type" : "gauge", "help": "Committed memory"},
  "jvm/gc/count" : { "dimensions" : ["service", "gcName"], "type" : "count", "help": "Garbage collection count"},
  "jvm/gc/cpu" : { "dimensions" : ["service", "gcName"], "type" : "count", "help":  "Count of CPU time in Nanoseconds spent on garbage collection. Note: `jvm/gc/cpu` represents the total time over multiple GC cycles; divide by `jvm/gc/count` to get the mean GC time per cycle."},

  "ingest/events/buffered" : { "dimensions" : ["service", "serviceName", "bufferCapacity"], "type" : "gauge", "help": "Number of events queued in the EventReceiverFirehose's buffer"},

  "sys/swap/free" : { "dimensions" : ["service"], "type" : "gauge", "help": "Free swap"},
  "sys/swap/max" : { "dimensions" : ["service"], "type" : "gauge", "help": "Max swap"},
  "sys/swap/pageIn" : { "dimensions" : ["service"], "type" : "gauge", "help": "Paged in swap"},
  "sys/swap/pageOut" : { "dimensions" : ["service"], "type" : "gauge", "help": "Paged out swap"},
  "sys/disk/write/count" : { "dimensions" : ["service", "fsDevName"], "type" : "count", "help": "Writes to disk."},
  "sys/disk/read/count" : { "dimensions" : ["service", "fsDevName"], "type" : "count", "help": "Reads from disk."},
  "sys/disk/write/size" : { "dimensions" : ["service", "fsDevName"], "type" : "count", "help":  "Bytes written to disk. Can we used to determine how much paging is occurring with regards to segments."},
  "sys/disk/read/size" : { "dimensions" : ["service", "fsDevName"], "type" : "count", "help": "Bytes read from disk. Can we used to determine how much paging is occurring with regards to segments."},
  "sys/net/write/size" : { "dimensions" : ["service"], "type" : "count", "help": "Bytes written to the network."},
  "sys/net/read/size" : { "dimensions" : ["service"], "type" : "count", "help":  "Bytes read from the network."},
  "sys/fs/used" : { "dimensions" : ["service", "fsDevName", "fsDirName", "fsTypeName", "fsSysTypeName", "fsOptions"], "type" : "gauge", "help": "Filesystem bytes used."},
  "sys/fs/max" : { "dimensions" : ["service", "fsDevName", "fsDirName", "fsTypeName", "fsSysTypeName", "fsOptions"], "type" : "gauge", "help": "Filesystesm bytes max."},
  "sys/mem/used" : { "dimensions" : ["service"], "type" : "gauge", "help": "Memory used."},
  "sys/mem/max" : { "dimensions" : ["service"], "type" : "gauge", "help": "Memory max"},
  "sys/storage/used" : { "dimensions" : ["service", "fsDirName"], "type" : "gauge", "help": "Disk space used."},
  "sys/cpu" : { "dimensions" : ["service", "cpuName", "cpuTime"], "type" : "gauge", "help": "CPU used"},

  "coordinator_segment/count" : { "dimensions" : ["service", "dataSource"], "type" : "gauge", "help": "Number of served segments."},
  "historical_segment/count" : { "dimensions" : ["service", "dataSource", "tier", "priority"], "type" : "gauge", "help": "Number of served segments."}
}