name: Static Checks CI
on:
  pull_request:
    branches:
      - master
      - /^\d+\.\d+\.\d+(-\S*)?$/ # release branches

env:
  MVN: mvn -B
  MAVEN_SKIP: -P skip-static-checks -Dweb.console.skip=true -Dmaven.javadoc.skip=true
  MAVEN_SKIP_TESTS: -P skip-tests

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/setup-java@v3
        with:
          distribution: 'zulu'
          java-version: '8'
          cache: 'maven'

      - name: animal sniffer checks
        run: ${MVN} animal-sniffer:check --fail-at-end

      - name: checkstyle
        run: ${MVN} checkstyle:checkstyle --fail-at-end

      - name: enforcer checks
        run: ${MVN} enforcer:enforce --fail-at-end

      - name: forbidden api checks
        run: ${MVN} forbiddenapis:check forbiddenapis:testCheck --fail-at-end

      - name: pmd checks
        run: ${MVN} pmd:check --fail-at-end  # TODO: consider adding pmd:cpd-check

      - name: spotbugs checks
        run: ${MVN} spotbugs:check --fail-at-end -pl '!benchmarks'

      - name: license checks
        run: |
          ./.github/scripts/setup_generate_license.sh
          ${MVN} apache-rat:check -Prat --fail-at-end
          -Dorg.slf4j.simpleLogger.log.org.apache.maven.cli.transfer.Slf4jMavenTransferListener=warn
          -Drat.consoleOutput=true
          # Generate dependency reports and checks they are valid. When running on Travis CI, 2 cores are available
          # (https://docs.travis-ci.com/user/reference/overview/#virtualisation-environment-vs-operating-system).
          mkdir -p target
          distribution/bin/generate-license-dependency-reports.py . target --clean-maven-artifact-transfer --parallel 2
          distribution/bin/check-licenses.py licenses.yaml target/license-reports

      - name: script checks
        # who watches the watchers?
        run: ./check_test_suite_test.py

      - name: analyze dependencies
        run: |-
          MAVEN_OPTS='-Xmx3000m' ${MVN} ${MAVEN_SKIP} dependency:analyze -DoutputXML=true -DignoreNonCompile=true -DfailOnWarning=true \
          || ./.github/scripts/display_dependency_analysis_error_message.sh

      - name: analyze hadoop 3 dependencies
        run: |-
          MAVEN_OPTS='-Xmx3000m' ${MVN} ${MAVEN_SKIP} dependency:analyze -DoutputXML=true -DignoreNonCompile=true -DfailOnWarning=true -Phadoop3 \
          || ./.github/scripts/display_dependency_analysis_error_message.sh

      - name: intellij inspections
        run: |
          ./check_test_suite.py && travis_terminate 0 || docker run --rm
          -v $(pwd):/project
          -v ~/.m2:/home/inspect/.m2
          ccaominh/intellij-inspect:1.0.0
          /project/pom.xml
          /project/.idea/inspectionProfiles/Druid.xml
          --levels ERROR
          --scope JavaInspectionsScope

      - uses: actions/setup-java@v3
        with:
          distribution: 'zulu'
          java-version: '11'

      - name: (openjdk11) strict compilation
        # errorprone requires JDK 11
        # Strict compilation requires more than 2 GB
        run: |
          ./check_test_suite.py && travis_terminate 0 || MAVEN_OPTS='-Xmx3000m' ${MVN} clean -DstrictCompile compile test-compile --fail-at-end
          ${MAVEN_SKIP} ${MAVEN_SKIP_TESTS}
